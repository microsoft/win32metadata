parameters:
- name: "PipelineType"
  type: string
  default: "PullRequest"
- name: "RepoDirectory"
  type: string
  default: "win32metadata"
- name: BuildConfiguration
  type: string
  default: Release

stages:
- stage: build_docs
  displayName: "Build API docs"
  jobs:
  - job: build_docs
    displayName: Build API docs
    variables:
      ob_outputDirectory: '$(Build.ArtifactStagingDirectory)'
      ob_artifactBaseName: 'ApiDocs'
      ob_sdl_binskim_break: true # https://aka.ms/obpipelines/sdl
    pool:
      type: windows
    steps:
    - template: win32metadata-checkout.yml
      parameters:
        RepoDirectory: ${{ parameters.RepoDirectory }}
    - task: UseDotNet@2
      displayName: ‚öô Install .NET SDK
      inputs:
        packageType: sdk
        useGlobalJson: true

    # ESRP Authenticode sign package DLLs
    - task: UseDotNet@2
      displayName: ‚öô Install .NET Core 2.1.x
      inputs:
        packageType: runtime
        version: 2.1.x
    - powershell: dotnet tool update --global nbgv
      displayName: ‚öô Install nbgv
    - script: dotnet build -c ${{ parameters.BuildConfiguration }}
      displayName: üè≠ dotnet build
      workingDirectory: ${{ parameters.RepoDirectory }}/apidocs
    # - task: EsrpCodeSigning@1
    #   displayName: ‚úí Assembly sign
    #   inputs:
    #     ConnectedServiceName: Xlang Code Signing
    #     FolderPath: $(System.DefaultWorkingDirectory)/bin/${{parameters.BuildConfiguration}}/netstandard2.0
    #     Pattern: '*.dll'
    #     signConfigType: inlineSignParams
    #     inlineOperation: |
    #       [
    #         {
    #           "keyCode": "CP-230012",
    #           "operationSetCode": "SigntoolSign",
    #           "parameters": [
    #             {
    #               "parameterName": "OpusName",
    #               "parameterValue": "Microsoft"
    #             },
    #             {
    #               "parameterName": "OpusInfo",
    #               "parameterValue": "http://www.microsoft.com"
    #             },
    #             {
    #               "parameterName": "PageHash",
    #               "parameterValue": "/NPH"
    #             },
    #             {
    #               "parameterName": "FileDigest",
    #               "parameterValue": "/fd sha256"
    #             },
    #             {
    #               "parameterName": "TimeStamp",
    #               "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
    #             }
    #           ],
    #           "toolName": "signtool.exe",
    #           "toolVersion": "6.2.9304.0"
    #         }
    #       ]
    #     SessionTimeout: 60
    #     MaxConcurrency: 50
    #     MaxRetryAttempts: 5
    #   condition: and(succeeded(), eq(variables['SignFiles'], 'true'), ne(variables['Build.Reason'], 'PullRequest'))
    - script: dotnet pack Microsoft.Windows.SDK.Win32Docs --no-build -c ${{ parameters.BuildConfiguration }} -p:BuildProjectReferences=false
      displayName: üì¶ dotnet pack
      workingDirectory: ${{ parameters.RepoDirectory }}/apidocs
    # - task: EsrpCodeSigning@1
    #   displayName: ‚úí NuGet sign
    #   inputs:
    #     ConnectedServiceName: Xlang Code Signing
    #     FolderPath: $(System.DefaultWorkingDirectory)/bin/Packages/${{parameters.BuildConfiguration}}/NuGet
    #     Pattern: '*.nupkg'
    #     signConfigType: inlineSignParams
    #     inlineOperation: |
    #       [
    #         {
    #           "KeyCode" : "CP-401405",
    #           "OperationCode" : "NuGetSign",
    #           "Parameters" : {},
    #           "ToolName" : "sign",
    #           "ToolVersion" : "1.0"
    #         },
    #         {
    #           "KeyCode" : "CP-401405",
    #           "OperationCode" : "NuGetVerify",
    #           "Parameters" : {},
    #           "ToolName" : "sign",
    #           "ToolVersion" : "1.0"
    #         }
    #       ]
    #     SessionTimeout: 60
    #     MaxConcurrency: 50
    #     MaxRetryAttempts: 5
    #   condition: and(succeeded(), eq(variables['SignFiles'], 'true'), ne(variables['Build.Reason'], 'PullRequest'))

    - task: CopyFiles@2
      displayName: üì¢ Stage package for publishing
      inputs:
        Contents: |
          bin/Packages/${{parameters.BuildConfiguration}}/NuGet
        TargetFolder: '$(Build.ArtifactStagingDirectory)/ApiDocsNuGetPackages'

    - task: CopyFiles@2
      displayName: üì¢ Stage metadata for publishing
      inputs:
        Contents: |
          bin/${{parameters.BuildConfiguration}}/netstandard2.0/documentationMappings.rsp
        TargetFolder: '$(Build.ArtifactStagingDirectory)/ApiDocsMetadata'

    #   # There's a problem on microsoft.visualstudio.com that requires the guid instead of NuGetCommand@2
    #   # Don't publish if we're using pre-generated source
    # - task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2
    #   displayName: üì§ NuGet push
    #   inputs:
    #     command: push
    #     packagesToPush: $(System.DefaultWorkingDirectory)/bin/Packages/${{parameters.BuildConfiguration}}/NuGet/*.nupkg
    #     publishVstsFeed: c1408dcb-1833-4ae4-9af5-1a891a12cc3c
    #     allowPackageConflicts: true
    #   condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
