[
  {
    "Name": "IDWritePixelSnapping",
    "Methods": [
      "HRESULT IsPixelSnappingDisabled(void*, Int*)",
      "HRESULT GetCurrentTransform(void*, DWRITE_MATRIX*)",
      "HRESULT GetPixelsPerDip(void*, Single*)"
    ]
  },
  {
    "Name": "IDWritePixelSnapping",
    "Methods": [
      "HRESULT IsPixelSnappingDisabled(void*, Int*)",
      "HRESULT GetCurrentTransform(void*, DWRITE_MATRIX*)",
      "HRESULT GetPixelsPerDip(void*, Single*)"
    ]
  },
  {
    "Name": "IDWriteFontFileEnumerator",
    "Methods": [
      "HRESULT MoveNext(Int*)",
      "HRESULT GetCurrentFontFile(IDWriteFontFile**)"
    ]
  },
  {
    "Name": "IDWriteFontFileEnumerator",
    "Methods": [
      "HRESULT MoveNext(Int*)",
      "HRESULT GetCurrentFontFile(IDWriteFontFile**)"
    ]
  },
  {
    "Name": "IDWriteFontFace2",
    "Methods": [
      "Int IsColorFont()",
      "UInt GetColorPaletteCount()",
      "UInt GetPaletteEntryCount()",
      "HRESULT GetPaletteEntries(UInt, UInt, UInt, _D3DCOLORVALUE*)",
      "HRESULT GetRecommendedRenderingMode(Single, Single, Single, DWRITE_MATRIX*, Int, DWRITE_OUTLINE_THRESHOLD, DWRITE_MEASURING_MODE, IDWriteRenderingParams*, DWRITE_RENDERING_MODE*, DWRITE_GRID_FIT_MODE*)"
    ]
  },
  {
    "Name": "IDWriteFontFace2",
    "Methods": [
      "Int IsColorFont()",
      "UInt GetColorPaletteCount()",
      "UInt GetPaletteEntryCount()",
      "HRESULT GetPaletteEntries(UInt, UInt, UInt, _D3DCOLORVALUE*)",
      "HRESULT GetRecommendedRenderingMode(Single, Single, Single, DWRITE_MATRIX*, Int, DWRITE_OUTLINE_THRESHOLD, DWRITE_MEASURING_MODE, IDWriteRenderingParams*, DWRITE_RENDERING_MODE*, DWRITE_GRID_FIT_MODE*)"
    ]
  },
  {
    "Name": "IDWriteBitmapRenderTarget",
    "Methods": [
      "HRESULT DrawGlyphRun(Single, Single, DWRITE_MEASURING_MODE, DWRITE_GLYPH_RUN*, IDWriteRenderingParams*, UInt, tagRECT*)",
      "HDC__* GetMemoryDC()",
      "Single GetPixelsPerDip()",
      "HRESULT SetPixelsPerDip(Single)",
      "HRESULT GetCurrentTransform(DWRITE_MATRIX*)",
      "HRESULT SetCurrentTransform(DWRITE_MATRIX*)",
      "HRESULT GetSize(tagSIZE*)",
      "HRESULT Resize(UInt, UInt)"
    ]
  },
  {
    "Name": "IDWriteBitmapRenderTarget",
    "Methods": [
      "HRESULT DrawGlyphRun(Single, Single, DWRITE_MEASURING_MODE, DWRITE_GLYPH_RUN*, IDWriteRenderingParams*, UInt, tagRECT*)",
      "HDC__* GetMemoryDC()",
      "Single GetPixelsPerDip()",
      "HRESULT SetPixelsPerDip(Single)",
      "HRESULT GetCurrentTransform(DWRITE_MATRIX*)",
      "HRESULT SetCurrentTransform(DWRITE_MATRIX*)",
      "HRESULT GetSize(tagSIZE*)",
      "HRESULT Resize(UInt, UInt)"
    ]
  },
  {
    "Name": "IDWriteFont2",
    "Methods": [
      "Int IsColorFont()"
    ]
  },
  {
    "Name": "IDWriteFont2",
    "Methods": [
      "Int IsColorFont()"
    ]
  },
  {
    "Name": "IDWriteTextAnalysisSink",
    "Methods": [
      "HRESULT SetScriptAnalysis(UInt, UInt, DWRITE_SCRIPT_ANALYSIS*)",
      "HRESULT SetLineBreakpoints(UInt, UInt, DWRITE_LINE_BREAKPOINT*)",
      "HRESULT SetBidiLevel(UInt, UInt, UByte, UByte)",
      "HRESULT SetNumberSubstitution(UInt, UInt, IDWriteNumberSubstitution*)"
    ]
  },
  {
    "Name": "IDWriteTextAnalysisSink",
    "Methods": [
      "HRESULT SetScriptAnalysis(UInt, UInt, DWRITE_SCRIPT_ANALYSIS*)",
      "HRESULT SetLineBreakpoints(UInt, UInt, DWRITE_LINE_BREAKPOINT*)",
      "HRESULT SetBidiLevel(UInt, UInt, UByte, UByte)",
      "HRESULT SetNumberSubstitution(UInt, UInt, IDWriteNumberSubstitution*)"
    ]
  },
  {
    "Name": "IDWriteFontFace1",
    "Methods": [
      "void GetMetrics(DWRITE_FONT_METRICS1*)",
      "HRESULT GetGdiCompatibleMetrics(Single, Single, DWRITE_MATRIX*, DWRITE_FONT_METRICS1*)",
      "void GetCaretMetrics(DWRITE_CARET_METRICS*)",
      "HRESULT GetUnicodeRanges(UInt, DWRITE_UNICODE_RANGE*, UInt*)",
      "Int IsMonospacedFont()",
      "HRESULT GetDesignGlyphAdvances(UInt, UShort*, Int*, Int)",
      "HRESULT GetGdiCompatibleGlyphAdvances(Single, Single, DWRITE_MATRIX*, Int, Int, UInt, UShort*, Int*)",
      "HRESULT GetKerningPairAdjustments(UInt, UShort*, Int*)",
      "Int HasKerningPairs()",
      "HRESULT GetRecommendedRenderingMode(Single, Single, Single, DWRITE_MATRIX*, Int, DWRITE_OUTLINE_THRESHOLD, DWRITE_MEASURING_MODE, DWRITE_RENDERING_MODE*)",
      "HRESULT GetVerticalGlyphVariants(UInt, UShort*, UShort*)",
      "Int HasVerticalGlyphVariants()"
    ]
  },
  {
    "Name": "IDWriteFontFace1",
    "Methods": [
      "void GetMetrics(DWRITE_FONT_METRICS1*)",
      "HRESULT GetGdiCompatibleMetrics(Single, Single, DWRITE_MATRIX*, DWRITE_FONT_METRICS1*)",
      "void GetCaretMetrics(DWRITE_CARET_METRICS*)",
      "HRESULT GetUnicodeRanges(UInt, DWRITE_UNICODE_RANGE*, UInt*)",
      "Int IsMonospacedFont()",
      "HRESULT GetDesignGlyphAdvances(UInt, UShort*, Int*, Int)",
      "HRESULT GetGdiCompatibleGlyphAdvances(Single, Single, DWRITE_MATRIX*, Int, Int, UInt, UShort*, Int*)",
      "HRESULT GetKerningPairAdjustments(UInt, UShort*, Int*)",
      "Int HasKerningPairs()",
      "HRESULT GetRecommendedRenderingMode(Single, Single, Single, DWRITE_MATRIX*, Int, DWRITE_OUTLINE_THRESHOLD, DWRITE_MEASURING_MODE, DWRITE_RENDERING_MODE*)",
      "HRESULT GetVerticalGlyphVariants(UInt, UShort*, UShort*)",
      "Int HasVerticalGlyphVariants()"
    ]
  },
  {
    "Name": "IDWriteTextRenderer",
    "Methods": [
      "HRESULT DrawGlyphRun(void*, Single, Single, DWRITE_MEASURING_MODE, DWRITE_GLYPH_RUN*, DWRITE_GLYPH_RUN_DESCRIPTION*, IUnknown*)",
      "HRESULT DrawUnderline(void*, Single, Single, DWRITE_UNDERLINE*, IUnknown*)",
      "HRESULT DrawStrikethrough(void*, Single, Single, DWRITE_STRIKETHROUGH*, IUnknown*)",
      "HRESULT DrawInlineObject(void*, Single, Single, IDWriteInlineObject*, Int, Int, IUnknown*)"
    ]
  },
  {
    "Name": "IDWriteTextRenderer",
    "Methods": [
      "HRESULT DrawGlyphRun(void*, Single, Single, DWRITE_MEASURING_MODE, DWRITE_GLYPH_RUN*, DWRITE_GLYPH_RUN_DESCRIPTION*, IUnknown*)",
      "HRESULT DrawUnderline(void*, Single, Single, DWRITE_UNDERLINE*, IUnknown*)",
      "HRESULT DrawStrikethrough(void*, Single, Single, DWRITE_STRIKETHROUGH*, IUnknown*)",
      "HRESULT DrawInlineObject(void*, Single, Single, IDWriteInlineObject*, Int, Int, IUnknown*)"
    ]
  },
  {
    "Name": "IDWriteStringList",
    "Methods": [
      "UInt GetCount()",
      "HRESULT GetLocaleNameLength(UInt, UInt*)",
      "HRESULT GetLocaleName(UInt, UShort*, UInt)",
      "HRESULT GetStringLength(UInt, UInt*)",
      "HRESULT GetString(UInt, UShort*, UInt)"
    ]
  },
  {
    "Name": "IDWriteStringList",
    "Methods": [
      "UInt GetCount()",
      "HRESULT GetLocaleNameLength(UInt, UInt*)",
      "HRESULT GetLocaleName(UInt, UShort*, UInt)",
      "HRESULT GetStringLength(UInt, UInt*)",
      "HRESULT GetString(UInt, UShort*, UInt)"
    ]
  },
  {
    "Name": "IDWriteFontFace3",
    "Methods": [
      "HRESULT GetFontFaceReference(IDWriteFontFaceReference**)",
      "void GetPanose(DWRITE_PANOSE*)",
      "DWRITE_FONT_WEIGHT GetWeight()",
      "DWRITE_FONT_STRETCH GetStretch()",
      "DWRITE_FONT_STYLE GetStyle()",
      "HRESULT GetFamilyNames(IDWriteLocalizedStrings**)",
      "HRESULT GetFaceNames(IDWriteLocalizedStrings**)",
      "HRESULT GetInformationalStrings(DWRITE_INFORMATIONAL_STRING_ID, IDWriteLocalizedStrings**, Int*)",
      "Int HasCharacter(UInt)",
      "HRESULT GetRecommendedRenderingMode(Single, Single, Single, DWRITE_MATRIX*, Int, DWRITE_OUTLINE_THRESHOLD, DWRITE_MEASURING_MODE, IDWriteRenderingParams*, DWRITE_RENDERING_MODE1*, DWRITE_GRID_FIT_MODE*)",
      "Int IsCharacterLocal(UInt)",
      "Int IsGlyphLocal(UShort)",
      "HRESULT AreCharactersLocal(UShort*, UInt, Int, Int*)",
      "HRESULT AreGlyphsLocal(UShort*, UInt, Int, Int*)"
    ]
  },
  {
    "Name": "IDWriteFontFace3",
    "Methods": [
      "HRESULT GetFontFaceReference(IDWriteFontFaceReference**)",
      "void GetPanose(DWRITE_PANOSE*)",
      "DWRITE_FONT_WEIGHT GetWeight()",
      "DWRITE_FONT_STRETCH GetStretch()",
      "DWRITE_FONT_STYLE GetStyle()",
      "HRESULT GetFamilyNames(IDWriteLocalizedStrings**)",
      "HRESULT GetFaceNames(IDWriteLocalizedStrings**)",
      "HRESULT GetInformationalStrings(DWRITE_INFORMATIONAL_STRING_ID, IDWriteLocalizedStrings**, Int*)",
      "Int HasCharacter(UInt)",
      "HRESULT GetRecommendedRenderingMode(Single, Single, Single, DWRITE_MATRIX*, Int, DWRITE_OUTLINE_THRESHOLD, DWRITE_MEASURING_MODE, IDWriteRenderingParams*, DWRITE_RENDERING_MODE1*, DWRITE_GRID_FIT_MODE*)",
      "Int IsCharacterLocal(UInt)",
      "Int IsGlyphLocal(UShort)",
      "HRESULT AreCharactersLocal(UShort*, UInt, Int, Int*)",
      "HRESULT AreGlyphsLocal(UShort*, UInt, Int, Int*)"
    ]
  },
  {
    "Name": "IDWriteFactory",
    "Methods": [
      "HRESULT GetSystemFontCollection(IDWriteFontCollection**, Int)",
      "HRESULT CreateCustomFontCollection(IDWriteFontCollectionLoader*, void*, UInt, IDWriteFontCollection**)",
      "HRESULT RegisterFontCollectionLoader(IDWriteFontCollectionLoader*)",
      "HRESULT UnregisterFontCollectionLoader(IDWriteFontCollectionLoader*)",
      "HRESULT CreateFontFileReference(UShort*, _FILETIME*, IDWriteFontFile**)",
      "HRESULT CreateCustomFontFileReference(void*, UInt, IDWriteFontFileLoader*, IDWriteFontFile**)",
      "HRESULT CreateFontFace(DWRITE_FONT_FACE_TYPE, UInt, IDWriteFontFile**, UInt, DWRITE_FONT_SIMULATIONS, IDWriteFontFace**)",
      "HRESULT CreateRenderingParams(IDWriteRenderingParams**)",
      "HRESULT CreateMonitorRenderingParams(HMONITOR__*, IDWriteRenderingParams**)",
      "HRESULT CreateCustomRenderingParams(Single, Single, Single, DWRITE_PIXEL_GEOMETRY, DWRITE_RENDERING_MODE, IDWriteRenderingParams**)",
      "HRESULT RegisterFontFileLoader(IDWriteFontFileLoader*)",
      "HRESULT UnregisterFontFileLoader(IDWriteFontFileLoader*)",
      "HRESULT CreateTextFormat(UShort*, IDWriteFontCollection*, DWRITE_FONT_WEIGHT, DWRITE_FONT_STYLE, DWRITE_FONT_STRETCH, Single, UShort*, IDWriteTextFormat**)",
      "HRESULT CreateTypography(IDWriteTypography**)",
      "HRESULT GetGdiInterop(IDWriteGdiInterop**)",
      "HRESULT CreateTextLayout(UShort*, UInt, IDWriteTextFormat*, Single, Single, IDWriteTextLayout**)",
      "HRESULT CreateGdiCompatibleTextLayout(UShort*, UInt, IDWriteTextFormat*, Single, Single, Single, DWRITE_MATRIX*, Int, IDWriteTextLayout**)",
      "HRESULT CreateEllipsisTrimmingSign(IDWriteTextFormat*, IDWriteInlineObject**)",
      "HRESULT CreateTextAnalyzer(IDWriteTextAnalyzer**)",
      "HRESULT CreateNumberSubstitution(DWRITE_NUMBER_SUBSTITUTION_METHOD, UShort*, Int, IDWriteNumberSubstitution**)",
      "HRESULT CreateGlyphRunAnalysis(DWRITE_GLYPH_RUN*, Single, DWRITE_MATRIX*, DWRITE_RENDERING_MODE, DWRITE_MEASURING_MODE, Single, Single, IDWriteGlyphRunAnalysis**)"
    ]
  },
  {
    "Name": "IDWriteFactory",
    "Methods": [
      "HRESULT GetSystemFontCollection(IDWriteFontCollection**, Int)",
      "HRESULT CreateCustomFontCollection(IDWriteFontCollectionLoader*, void*, UInt, IDWriteFontCollection**)",
      "HRESULT RegisterFontCollectionLoader(IDWriteFontCollectionLoader*)",
      "HRESULT UnregisterFontCollectionLoader(IDWriteFontCollectionLoader*)",
      "HRESULT CreateFontFileReference(UShort*, _FILETIME*, IDWriteFontFile**)",
      "HRESULT CreateCustomFontFileReference(void*, UInt, IDWriteFontFileLoader*, IDWriteFontFile**)",
      "HRESULT CreateFontFace(DWRITE_FONT_FACE_TYPE, UInt, IDWriteFontFile**, UInt, DWRITE_FONT_SIMULATIONS, IDWriteFontFace**)",
      "HRESULT CreateRenderingParams(IDWriteRenderingParams**)",
      "HRESULT CreateMonitorRenderingParams(HMONITOR__*, IDWriteRenderingParams**)",
      "HRESULT CreateCustomRenderingParams(Single, Single, Single, DWRITE_PIXEL_GEOMETRY, DWRITE_RENDERING_MODE, IDWriteRenderingParams**)",
      "HRESULT RegisterFontFileLoader(IDWriteFontFileLoader*)",
      "HRESULT UnregisterFontFileLoader(IDWriteFontFileLoader*)",
      "HRESULT CreateTextFormat(UShort*, IDWriteFontCollection*, DWRITE_FONT_WEIGHT, DWRITE_FONT_STYLE, DWRITE_FONT_STRETCH, Single, UShort*, IDWriteTextFormat**)",
      "HRESULT CreateTypography(IDWriteTypography**)",
      "HRESULT GetGdiInterop(IDWriteGdiInterop**)",
      "HRESULT CreateTextLayout(UShort*, UInt, IDWriteTextFormat*, Single, Single, IDWriteTextLayout**)",
      "HRESULT CreateGdiCompatibleTextLayout(UShort*, UInt, IDWriteTextFormat*, Single, Single, Single, DWRITE_MATRIX*, Int, IDWriteTextLayout**)",
      "HRESULT CreateEllipsisTrimmingSign(IDWriteTextFormat*, IDWriteInlineObject**)",
      "HRESULT CreateTextAnalyzer(IDWriteTextAnalyzer**)",
      "HRESULT CreateNumberSubstitution(DWRITE_NUMBER_SUBSTITUTION_METHOD, UShort*, Int, IDWriteNumberSubstitution**)",
      "HRESULT CreateGlyphRunAnalysis(DWRITE_GLYPH_RUN*, Single, DWRITE_MATRIX*, DWRITE_RENDERING_MODE, DWRITE_MEASURING_MODE, Single, Single, IDWriteGlyphRunAnalysis**)"
    ]
  },
  {
    "Name": "IDCompositionFilterEffect",
    "Methods": [
      "HRESULT SetInput(UInt, IUnknown*, UInt)"
    ]
  },
  {
    "Name": "IDCompositionFilterEffect",
    "Methods": [
      "HRESULT SetInput(UInt, IUnknown*, UInt)"
    ]
  },
  {
    "Name": "IDWriteFontFamily",
    "Methods": [
      "HRESULT GetFamilyNames(IDWriteLocalizedStrings**)",
      "HRESULT GetFirstMatchingFont(DWRITE_FONT_WEIGHT, DWRITE_FONT_STRETCH, DWRITE_FONT_STYLE, IDWriteFont**)",
      "HRESULT GetMatchingFonts(DWRITE_FONT_WEIGHT, DWRITE_FONT_STRETCH, DWRITE_FONT_STYLE, IDWriteFontList**)"
    ]
  },
  {
    "Name": "IDWriteFontFamily",
    "Methods": [
      "HRESULT GetFamilyNames(IDWriteLocalizedStrings**)",
      "HRESULT GetFirstMatchingFont(DWRITE_FONT_WEIGHT, DWRITE_FONT_STRETCH, DWRITE_FONT_STYLE, IDWriteFont**)",
      "HRESULT GetMatchingFonts(DWRITE_FONT_WEIGHT, DWRITE_FONT_STRETCH, DWRITE_FONT_STYLE, IDWriteFontList**)"
    ]
  },
  {
    "Name": "IDWriteFontCollectionLoader",
    "Methods": [
      "HRESULT CreateEnumeratorFromKey(IDWriteFactory*, void*, UInt, IDWriteFontFileEnumerator**)"
    ]
  },
  {
    "Name": "IDWriteFontCollectionLoader",
    "Methods": [
      "HRESULT CreateEnumeratorFromKey(IDWriteFactory*, void*, UInt, IDWriteFontFileEnumerator**)"
    ]
  },
  {
    "Name": "ID2D1Factory",
    "Methods": [
      "HRESULT ReloadSystemMetrics()",
      "void GetDesktopDpi(Single*, Single*)",
      "HRESULT CreateRectangleGeometry(D2D_RECT_F*, ID2D1RectangleGeometry**)",
      "HRESULT CreateRoundedRectangleGeometry(D2D1_ROUNDED_RECT*, ID2D1RoundedRectangleGeometry**)",
      "HRESULT CreateEllipseGeometry(D2D1_ELLIPSE*, ID2D1EllipseGeometry**)",
      "HRESULT CreateGeometryGroup(D2D1_FILL_MODE, ID2D1Geometry**, UInt, ID2D1GeometryGroup**)",
      "HRESULT CreateTransformedGeometry(ID2D1Geometry*, D2D_MATRIX_3X2_F*, ID2D1TransformedGeometry**)",
      "HRESULT CreatePathGeometry(ID2D1PathGeometry**)",
      "HRESULT CreateStrokeStyle(D2D1_STROKE_STYLE_PROPERTIES*, Single*, UInt, ID2D1StrokeStyle**)",
      "HRESULT CreateDrawingStateBlock(D2D1_DRAWING_STATE_DESCRIPTION*, IDWriteRenderingParams*, ID2D1DrawingStateBlock**)",
      "HRESULT CreateWicBitmapRenderTarget(IWICBitmap*, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget**)",
      "HRESULT CreateHwndRenderTarget(D2D1_RENDER_TARGET_PROPERTIES*, D2D1_HWND_RENDER_TARGET_PROPERTIES*, ID2D1HwndRenderTarget**)",
      "HRESULT CreateDxgiSurfaceRenderTarget(IDXGISurface*, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget**)",
      "HRESULT CreateDCRenderTarget(D2D1_RENDER_TARGET_PROPERTIES*, ID2D1DCRenderTarget**)"
    ]
  },
  {
    "Name": "ID2D1Factory",
    "Methods": [
      "HRESULT ReloadSystemMetrics()",
      "void GetDesktopDpi(Single*, Single*)",
      "HRESULT CreateRectangleGeometry(D2D_RECT_F*, ID2D1RectangleGeometry**)",
      "HRESULT CreateRoundedRectangleGeometry(D2D1_ROUNDED_RECT*, ID2D1RoundedRectangleGeometry**)",
      "HRESULT CreateEllipseGeometry(D2D1_ELLIPSE*, ID2D1EllipseGeometry**)",
      "HRESULT CreateGeometryGroup(D2D1_FILL_MODE, ID2D1Geometry**, UInt, ID2D1GeometryGroup**)",
      "HRESULT CreateTransformedGeometry(ID2D1Geometry*, D2D_MATRIX_3X2_F*, ID2D1TransformedGeometry**)",
      "HRESULT CreatePathGeometry(ID2D1PathGeometry**)",
      "HRESULT CreateStrokeStyle(D2D1_STROKE_STYLE_PROPERTIES*, Single*, UInt, ID2D1StrokeStyle**)",
      "HRESULT CreateDrawingStateBlock(D2D1_DRAWING_STATE_DESCRIPTION*, IDWriteRenderingParams*, ID2D1DrawingStateBlock**)",
      "HRESULT CreateWicBitmapRenderTarget(IWICBitmap*, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget**)",
      "HRESULT CreateHwndRenderTarget(D2D1_RENDER_TARGET_PROPERTIES*, D2D1_HWND_RENDER_TARGET_PROPERTIES*, ID2D1HwndRenderTarget**)",
      "HRESULT CreateDxgiSurfaceRenderTarget(IDXGISurface*, D2D1_RENDER_TARGET_PROPERTIES*, ID2D1RenderTarget**)",
      "HRESULT CreateDCRenderTarget(D2D1_RENDER_TARGET_PROPERTIES*, ID2D1DCRenderTarget**)"
    ]
  },
  {
    "Name": "ID2D1SvgAttribute",
    "Methods": [
      "void GetElement(ID2D1SvgElement**)",
      "HRESULT Clone(ID2D1SvgAttribute**)"
    ]
  },
  {
    "Name": "ID2D1SvgAttribute",
    "Methods": [
      "void GetElement(ID2D1SvgElement**)",
      "HRESULT Clone(ID2D1SvgAttribute**)"
    ]
  },
  {
    "Name": "ID2D1SvgStrokeDashArray",
    "Methods": [
      "HRESULT RemoveDashesAtEnd(UInt)",
      "HRESULT UpdateDashes(D2D1_SVG_LENGTH*, UInt, UInt)",
      "HRESULT UpdateDashes(Single*, UInt, UInt)",
      "HRESULT GetDashes(D2D1_SVG_LENGTH*, UInt, UInt)",
      "HRESULT GetDashes(Single*, UInt, UInt)",
      "UInt GetDashesCount()"
    ]
  },
  {
    "Name": "ID2D1SvgStrokeDashArray",
    "Methods": [
      "HRESULT RemoveDashesAtEnd(UInt)",
      "HRESULT UpdateDashes(D2D1_SVG_LENGTH*, UInt, UInt)",
      "HRESULT UpdateDashes(Single*, UInt, UInt)",
      "HRESULT GetDashes(D2D1_SVG_LENGTH*, UInt, UInt)",
      "HRESULT GetDashes(Single*, UInt, UInt)",
      "UInt GetDashesCount()"
    ]
  },
  {
    "Name": "ID2D1BitmapBrush",
    "Methods": [
      "void SetExtendModeX(D2D1_EXTEND_MODE)",
      "void SetExtendModeY(D2D1_EXTEND_MODE)",
      "void SetInterpolationMode(D2D1_BITMAP_INTERPOLATION_MODE)",
      "void SetBitmap(ID2D1Bitmap*)",
      "D2D1_EXTEND_MODE GetExtendModeX()",
      "D2D1_EXTEND_MODE GetExtendModeY()",
      "D2D1_BITMAP_INTERPOLATION_MODE GetInterpolationMode()",
      "void GetBitmap(ID2D1Bitmap**)"
    ]
  },
  {
    "Name": "ID2D1BitmapBrush",
    "Methods": [
      "void SetExtendModeX(D2D1_EXTEND_MODE)",
      "void SetExtendModeY(D2D1_EXTEND_MODE)",
      "void SetInterpolationMode(D2D1_BITMAP_INTERPOLATION_MODE)",
      "void SetBitmap(ID2D1Bitmap*)",
      "D2D1_EXTEND_MODE GetExtendModeX()",
      "D2D1_EXTEND_MODE GetExtendModeY()",
      "D2D1_BITMAP_INTERPOLATION_MODE GetInterpolationMode()",
      "void GetBitmap(ID2D1Bitmap**)"
    ]
  },
  {
    "Name": "IDWriteFontList",
    "Methods": [
      "HRESULT GetFontCollection(IDWriteFontCollection**)",
      "UInt GetFontCount()",
      "HRESULT GetFont(UInt, IDWriteFont**)"
    ]
  },
  {
    "Name": "IDWriteFontList",
    "Methods": [
      "HRESULT GetFontCollection(IDWriteFontCollection**)",
      "UInt GetFontCount()",
      "HRESULT GetFont(UInt, IDWriteFont**)"
    ]
  },
  {
    "Name": "IDWriteGdiInterop",
    "Methods": [
      "HRESULT CreateFontFromLOGFONT(tagLOGFONTW*, IDWriteFont**)",
      "HRESULT ConvertFontToLOGFONT(IDWriteFont*, tagLOGFONTW*, Int*)",
      "HRESULT ConvertFontFaceToLOGFONT(IDWriteFontFace*, tagLOGFONTW*)",
      "HRESULT CreateFontFaceFromHdc(HDC__*, IDWriteFontFace**)",
      "HRESULT CreateBitmapRenderTarget(HDC__*, UInt, UInt, IDWriteBitmapRenderTarget**)"
    ]
  },
  {
    "Name": "IDWriteGdiInterop",
    "Methods": [
      "HRESULT CreateFontFromLOGFONT(tagLOGFONTW*, IDWriteFont**)",
      "HRESULT ConvertFontToLOGFONT(IDWriteFont*, tagLOGFONTW*, Int*)",
      "HRESULT ConvertFontFaceToLOGFONT(IDWriteFontFace*, tagLOGFONTW*)",
      "HRESULT CreateFontFaceFromHdc(HDC__*, IDWriteFontFace**)",
      "HRESULT CreateBitmapRenderTarget(HDC__*, UInt, UInt, IDWriteBitmapRenderTarget**)"
    ]
  },
  {
    "Name": "ISequentialStream",
    "Methods": [
      "HRESULT Read(void*, UInt, UInt*)",
      "HRESULT Write(void*, UInt, UInt*)"
    ]
  },
  {
    "Name": "ISequentialStream",
    "Methods": [
      "HRESULT Read(void*, UInt, UInt*)",
      "HRESULT Write(void*, UInt, UInt*)"
    ]
  },
  {
    "Name": "ID2D1RoundedRectangleGeometry",
    "Methods": [
      "void GetRoundedRect(D2D1_ROUNDED_RECT*)"
    ]
  },
  {
    "Name": "ID2D1RoundedRectangleGeometry",
    "Methods": [
      "void GetRoundedRect(D2D1_ROUNDED_RECT*)"
    ]
  },
  {
    "Name": "ID2D1RectangleGeometry",
    "Methods": [
      "void GetRect(D2D_RECT_F*)"
    ]
  },
  {
    "Name": "ID2D1RectangleGeometry",
    "Methods": [
      "void GetRect(D2D_RECT_F*)"
    ]
  },
  {
    "Name": "ID2D1RadialGradientBrush",
    "Methods": [
      "void SetCenter(D2D_POINT_2F)",
      "void SetGradientOriginOffset(D2D_POINT_2F)",
      "void SetRadiusX(Single)",
      "void SetRadiusY(Single)",
      "D2D_POINT_2F GetCenter()",
      "D2D_POINT_2F GetGradientOriginOffset()",
      "Single GetRadiusX()",
      "Single GetRadiusY()",
      "void GetGradientStopCollection(ID2D1GradientStopCollection**)"
    ]
  },
  {
    "Name": "ID2D1RadialGradientBrush",
    "Methods": [
      "void SetCenter(D2D_POINT_2F)",
      "void SetGradientOriginOffset(D2D_POINT_2F)",
      "void SetRadiusX(Single)",
      "void SetRadiusY(Single)",
      "D2D_POINT_2F GetCenter()",
      "D2D_POINT_2F GetGradientOriginOffset()",
      "Single GetRadiusX()",
      "Single GetRadiusY()",
      "void GetGradientStopCollection(ID2D1GradientStopCollection**)"
    ]
  },
  {
    "Name": "ID2D1Geometry",
    "Methods": [
      "HRESULT GetBounds(D2D_MATRIX_3X2_F*, D2D_RECT_F*)",
      "HRESULT GetWidenedBounds(Single, ID2D1StrokeStyle*, D2D_MATRIX_3X2_F*, Single, D2D_RECT_F*)",
      "HRESULT StrokeContainsPoint(D2D_POINT_2F, Single, ID2D1StrokeStyle*, D2D_MATRIX_3X2_F*, Single, Int*)",
      "HRESULT FillContainsPoint(D2D_POINT_2F, D2D_MATRIX_3X2_F*, Single, Int*)",
      "HRESULT CompareWithGeometry(ID2D1Geometry*, D2D_MATRIX_3X2_F*, Single, D2D1_GEOMETRY_RELATION*)",
      "HRESULT Simplify(D2D1_GEOMETRY_SIMPLIFICATION_OPTION, D2D_MATRIX_3X2_F*, Single, ID2D1SimplifiedGeometrySink*)",
      "HRESULT Tessellate(D2D_MATRIX_3X2_F*, Single, ID2D1TessellationSink*)",
      "HRESULT CombineWithGeometry(ID2D1Geometry*, D2D1_COMBINE_MODE, D2D_MATRIX_3X2_F*, Single, ID2D1SimplifiedGeometrySink*)",
      "HRESULT Outline(D2D_MATRIX_3X2_F*, Single, ID2D1SimplifiedGeometrySink*)",
      "HRESULT ComputeArea(D2D_MATRIX_3X2_F*, Single, Single*)",
      "HRESULT ComputeLength(D2D_MATRIX_3X2_F*, Single, Single*)",
      "HRESULT ComputePointAtLength(Single, D2D_MATRIX_3X2_F*, Single, D2D_POINT_2F*, D2D_POINT_2F*)",
      "HRESULT Widen(Single, ID2D1StrokeStyle*, D2D_MATRIX_3X2_F*, Single, ID2D1SimplifiedGeometrySink*)"
    ]
  },
  {
    "Name": "ID2D1Geometry",
    "Methods": [
      "HRESULT GetBounds(D2D_MATRIX_3X2_F*, D2D_RECT_F*)",
      "HRESULT GetWidenedBounds(Single, ID2D1StrokeStyle*, D2D_MATRIX_3X2_F*, Single, D2D_RECT_F*)",
      "HRESULT StrokeContainsPoint(D2D_POINT_2F, Single, ID2D1StrokeStyle*, D2D_MATRIX_3X2_F*, Single, Int*)",
      "HRESULT FillContainsPoint(D2D_POINT_2F, D2D_MATRIX_3X2_F*, Single, Int*)",
      "HRESULT CompareWithGeometry(ID2D1Geometry*, D2D_MATRIX_3X2_F*, Single, D2D1_GEOMETRY_RELATION*)",
      "HRESULT Simplify(D2D1_GEOMETRY_SIMPLIFICATION_OPTION, D2D_MATRIX_3X2_F*, Single, ID2D1SimplifiedGeometrySink*)",
      "HRESULT Tessellate(D2D_MATRIX_3X2_F*, Single, ID2D1TessellationSink*)",
      "HRESULT CombineWithGeometry(ID2D1Geometry*, D2D1_COMBINE_MODE, D2D_MATRIX_3X2_F*, Single, ID2D1SimplifiedGeometrySink*)",
      "HRESULT Outline(D2D_MATRIX_3X2_F*, Single, ID2D1SimplifiedGeometrySink*)",
      "HRESULT ComputeArea(D2D_MATRIX_3X2_F*, Single, Single*)",
      "HRESULT ComputeLength(D2D_MATRIX_3X2_F*, Single, Single*)",
      "HRESULT ComputePointAtLength(Single, D2D_MATRIX_3X2_F*, Single, D2D_POINT_2F*, D2D_POINT_2F*)",
      "HRESULT Widen(Single, ID2D1StrokeStyle*, D2D_MATRIX_3X2_F*, Single, ID2D1SimplifiedGeometrySink*)"
    ]
  },
  {
    "Name": "ID2D1SvgPointCollection",
    "Methods": [
      "HRESULT RemovePointsAtEnd(UInt)",
      "HRESULT UpdatePoints(D2D_POINT_2F*, UInt, UInt)",
      "HRESULT GetPoints(D2D_POINT_2F*, UInt, UInt)",
      "UInt GetPointsCount()"
    ]
  },
  {
    "Name": "ID2D1SvgPointCollection",
    "Methods": [
      "HRESULT RemovePointsAtEnd(UInt)",
      "HRESULT UpdatePoints(D2D_POINT_2F*, UInt, UInt)",
      "HRESULT GetPoints(D2D_POINT_2F*, UInt, UInt)",
      "UInt GetPointsCount()"
    ]
  },
  {
    "Name": "ID2D1BitmapRenderTarget",
    "Methods": [
      "HRESULT GetBitmap(ID2D1Bitmap**)"
    ]
  },
  {
    "Name": "ID2D1BitmapRenderTarget",
    "Methods": [
      "HRESULT GetBitmap(ID2D1Bitmap**)"
    ]
  },
  {
    "Name": "IDWriteFontFileStream",
    "Methods": [
      "HRESULT ReadFileFragment(void**, ULong, ULong, void**)",
      "void ReleaseFileFragment(void*)",
      "HRESULT GetFileSize(ULong*)",
      "HRESULT GetLastWriteTime(ULong*)"
    ]
  },
  {
    "Name": "IDWriteFontFileStream",
    "Methods": [
      "HRESULT ReadFileFragment(void**, ULong, ULong, void**)",
      "void ReleaseFileFragment(void*)",
      "HRESULT GetFileSize(ULong*)",
      "HRESULT GetLastWriteTime(ULong*)"
    ]
  },
  {
    "Name": "ID2D1HwndRenderTarget",
    "Methods": [
      "D2D1_WINDOW_STATE CheckWindowState()",
      "HRESULT Resize(D2D_SIZE_U*)",
      "HWND__* GetHwnd()"
    ]
  },
  {
    "Name": "ID2D1HwndRenderTarget",
    "Methods": [
      "D2D1_WINDOW_STATE CheckWindowState()",
      "HRESULT Resize(D2D_SIZE_U*)",
      "HWND__* GetHwnd()"
    ]
  },
  {
    "Name": "ID2D1SimplifiedGeometrySink",
    "Methods": [
      "void SetFillMode(D2D1_FILL_MODE)",
      "void SetSegmentFlags(D2D1_PATH_SEGMENT)",
      "void BeginFigure(D2D_POINT_2F, D2D1_FIGURE_BEGIN)",
      "void AddLines(D2D_POINT_2F*, UInt)",
      "void AddBeziers(D2D1_BEZIER_SEGMENT*, UInt)",
      "void EndFigure(D2D1_FIGURE_END)",
      "HRESULT Close()"
    ]
  },
  {
    "Name": "ID2D1SimplifiedGeometrySink",
    "Methods": [
      "void SetFillMode(D2D1_FILL_MODE)",
      "void SetSegmentFlags(D2D1_PATH_SEGMENT)",
      "void BeginFigure(D2D_POINT_2F, D2D1_FIGURE_BEGIN)",
      "void AddLines(D2D_POINT_2F*, UInt)",
      "void AddBeziers(D2D1_BEZIER_SEGMENT*, UInt)",
      "void EndFigure(D2D1_FIGURE_END)",
      "HRESULT Close()"
    ]
  },
  {
    "Name": "ID2D1Layer",
    "Methods": [
      "D2D_SIZE_F GetSize()"
    ]
  },
  {
    "Name": "ID2D1Layer",
    "Methods": [
      "D2D_SIZE_F GetSize()"
    ]
  },
  {
    "Name": "ID2D1Brush",
    "Methods": [
      "void SetOpacity(Single)",
      "void SetTransform(D2D_MATRIX_3X2_F*)",
      "Single GetOpacity()",
      "void GetTransform(D2D_MATRIX_3X2_F*)"
    ]
  },
  {
    "Name": "ID2D1Brush",
    "Methods": [
      "void SetOpacity(Single)",
      "void SetTransform(D2D_MATRIX_3X2_F*)",
      "Single GetOpacity()",
      "void GetTransform(D2D_MATRIX_3X2_F*)"
    ]
  },
  {
    "Name": "IDWriteTextAnalyzer",
    "Methods": [
      "HRESULT AnalyzeScript(IDWriteTextAnalysisSource*, UInt, UInt, IDWriteTextAnalysisSink*)",
      "HRESULT AnalyzeBidi(IDWriteTextAnalysisSource*, UInt, UInt, IDWriteTextAnalysisSink*)",
      "HRESULT AnalyzeNumberSubstitution(IDWriteTextAnalysisSource*, UInt, UInt, IDWriteTextAnalysisSink*)",
      "HRESULT AnalyzeLineBreakpoints(IDWriteTextAnalysisSource*, UInt, UInt, IDWriteTextAnalysisSink*)",
      "HRESULT GetGlyphs(UShort*, UInt, IDWriteFontFace*, Int, Int, DWRITE_SCRIPT_ANALYSIS*, UShort*, IDWriteNumberSubstitution*, DWRITE_TYPOGRAPHIC_FEATURES**, UInt*, UInt, UInt, UShort*, DWRITE_SHAPING_TEXT_PROPERTIES*, UShort*, DWRITE_SHAPING_GLYPH_PROPERTIES*, UInt*)",
      "HRESULT GetGlyphPlacements(UShort*, UShort*, DWRITE_SHAPING_TEXT_PROPERTIES*, UInt, UShort*, DWRITE_SHAPING_GLYPH_PROPERTIES*, UInt, IDWriteFontFace*, Single, Int, Int, DWRITE_SCRIPT_ANALYSIS*, UShort*, DWRITE_TYPOGRAPHIC_FEATURES**, UInt*, UInt, Single*, DWRITE_GLYPH_OFFSET*)",
      "HRESULT GetGdiCompatibleGlyphPlacements(UShort*, UShort*, DWRITE_SHAPING_TEXT_PROPERTIES*, UInt, UShort*, DWRITE_SHAPING_GLYPH_PROPERTIES*, UInt, IDWriteFontFace*, Single, Single, DWRITE_MATRIX*, Int, Int, Int, DWRITE_SCRIPT_ANALYSIS*, UShort*, DWRITE_TYPOGRAPHIC_FEATURES**, UInt*, UInt, Single*, DWRITE_GLYPH_OFFSET*)"
    ]
  },
  {
    "Name": "IDWriteTextAnalyzer",
    "Methods": [
      "HRESULT AnalyzeScript(IDWriteTextAnalysisSource*, UInt, UInt, IDWriteTextAnalysisSink*)",
      "HRESULT AnalyzeBidi(IDWriteTextAnalysisSource*, UInt, UInt, IDWriteTextAnalysisSink*)",
      "HRESULT AnalyzeNumberSubstitution(IDWriteTextAnalysisSource*, UInt, UInt, IDWriteTextAnalysisSink*)",
      "HRESULT AnalyzeLineBreakpoints(IDWriteTextAnalysisSource*, UInt, UInt, IDWriteTextAnalysisSink*)",
      "HRESULT GetGlyphs(UShort*, UInt, IDWriteFontFace*, Int, Int, DWRITE_SCRIPT_ANALYSIS*, UShort*, IDWriteNumberSubstitution*, DWRITE_TYPOGRAPHIC_FEATURES**, UInt*, UInt, UInt, UShort*, DWRITE_SHAPING_TEXT_PROPERTIES*, UShort*, DWRITE_SHAPING_GLYPH_PROPERTIES*, UInt*)",
      "HRESULT GetGlyphPlacements(UShort*, UShort*, DWRITE_SHAPING_TEXT_PROPERTIES*, UInt, UShort*, DWRITE_SHAPING_GLYPH_PROPERTIES*, UInt, IDWriteFontFace*, Single, Int, Int, DWRITE_SCRIPT_ANALYSIS*, UShort*, DWRITE_TYPOGRAPHIC_FEATURES**, UInt*, UInt, Single*, DWRITE_GLYPH_OFFSET*)",
      "HRESULT GetGdiCompatibleGlyphPlacements(UShort*, UShort*, DWRITE_SHAPING_TEXT_PROPERTIES*, UInt, UShort*, DWRITE_SHAPING_GLYPH_PROPERTIES*, UInt, IDWriteFontFace*, Single, Single, DWRITE_MATRIX*, Int, Int, Int, DWRITE_SCRIPT_ANALYSIS*, UShort*, DWRITE_TYPOGRAPHIC_FEATURES**, UInt*, UInt, Single*, DWRITE_GLYPH_OFFSET*)"
    ]
  },
  {
    "Name": "ID2D1GeometrySink",
    "Methods": [
      "void AddLine(D2D_POINT_2F)",
      "void AddBezier(D2D1_BEZIER_SEGMENT*)",
      "void AddQuadraticBezier(D2D1_QUADRATIC_BEZIER_SEGMENT*)",
      "void AddQuadraticBeziers(D2D1_QUADRATIC_BEZIER_SEGMENT*, UInt)",
      "void AddArc(D2D1_ARC_SEGMENT*)"
    ]
  },
  {
    "Name": "ID2D1GeometrySink",
    "Methods": [
      "void AddLine(D2D_POINT_2F)",
      "void AddBezier(D2D1_BEZIER_SEGMENT*)",
      "void AddQuadraticBezier(D2D1_QUADRATIC_BEZIER_SEGMENT*)",
      "void AddQuadraticBeziers(D2D1_QUADRATIC_BEZIER_SEGMENT*, UInt)",
      "void AddArc(D2D1_ARC_SEGMENT*)"
    ]
  },
  {
    "Name": "IDWriteRenderingParams",
    "Methods": [
      "Single GetGamma()",
      "Single GetEnhancedContrast()",
      "Single GetClearTypeLevel()",
      "DWRITE_PIXEL_GEOMETRY GetPixelGeometry()",
      "DWRITE_RENDERING_MODE GetRenderingMode()"
    ]
  },
  {
    "Name": "IDWriteRenderingParams",
    "Methods": [
      "Single GetGamma()",
      "Single GetEnhancedContrast()",
      "Single GetClearTypeLevel()",
      "DWRITE_PIXEL_GEOMETRY GetPixelGeometry()",
      "DWRITE_RENDERING_MODE GetRenderingMode()"
    ]
  },
  {
    "Name": "IDWriteInlineObject",
    "Methods": [
      "HRESULT Draw(void*, IDWriteTextRenderer*, Single, Single, Int, Int, IUnknown*)",
      "HRESULT GetMetrics(DWRITE_INLINE_OBJECT_METRICS*)",
      "HRESULT GetOverhangMetrics(DWRITE_OVERHANG_METRICS*)",
      "HRESULT GetBreakConditions(DWRITE_BREAK_CONDITION*, DWRITE_BREAK_CONDITION*)"
    ]
  },
  {
    "Name": "IDWriteInlineObject",
    "Methods": [
      "HRESULT Draw(void*, IDWriteTextRenderer*, Single, Single, Int, Int, IUnknown*)",
      "HRESULT GetMetrics(DWRITE_INLINE_OBJECT_METRICS*)",
      "HRESULT GetOverhangMetrics(DWRITE_OVERHANG_METRICS*)",
      "HRESULT GetBreakConditions(DWRITE_BREAK_CONDITION*, DWRITE_BREAK_CONDITION*)"
    ]
  },
  {
    "Name": "ID2D1GeometryGroup",
    "Methods": [
      "D2D1_FILL_MODE GetFillMode()",
      "UInt GetSourceGeometryCount()",
      "void GetSourceGeometries(ID2D1Geometry**, UInt)"
    ]
  },
  {
    "Name": "ID2D1GeometryGroup",
    "Methods": [
      "D2D1_FILL_MODE GetFillMode()",
      "UInt GetSourceGeometryCount()",
      "void GetSourceGeometries(ID2D1Geometry**, UInt)"
    ]
  },
  {
    "Name": "ID2D1PathGeometry1",
    "Methods": [
      "HRESULT ComputePointAndSegmentAtLength(Single, UInt, D2D_MATRIX_3X2_F*, Single, D2D1_POINT_DESCRIPTION*)"
    ]
  },
  {
    "Name": "ID2D1PathGeometry1",
    "Methods": [
      "HRESULT ComputePointAndSegmentAtLength(Single, UInt, D2D_MATRIX_3X2_F*, Single, D2D1_POINT_DESCRIPTION*)"
    ]
  },
  {
    "Name": "IDWriteFontFileLoader",
    "Methods": [
      "HRESULT CreateStreamFromKey(void*, UInt, IDWriteFontFileStream**)"
    ]
  },
  {
    "Name": "IDWriteFontFileLoader",
    "Methods": [
      "HRESULT CreateStreamFromKey(void*, UInt, IDWriteFontFileStream**)"
    ]
  },
  {
    "Name": "IDWriteFontSetBuilder",
    "Methods": [
      "HRESULT AddFontFaceReference(IDWriteFontFaceReference*, DWRITE_FONT_PROPERTY*, UInt)",
      "HRESULT AddFontFaceReference(IDWriteFontFaceReference*)",
      "HRESULT AddFontSet(IDWriteFontSet*)",
      "HRESULT CreateFontSet(IDWriteFontSet**)"
    ]
  },
  {
    "Name": "IDWriteFontSetBuilder",
    "Methods": [
      "HRESULT AddFontFaceReference(IDWriteFontFaceReference*, DWRITE_FONT_PROPERTY*, UInt)",
      "HRESULT AddFontFaceReference(IDWriteFontFaceReference*)",
      "HRESULT AddFontSet(IDWriteFontSet*)",
      "HRESULT CreateFontSet(IDWriteFontSet**)"
    ]
  },
  {
    "Name": "ID2D1SvgDocument",
    "Methods": [
      "HRESULT SetViewportSize(D2D_SIZE_F)",
      "D2D_SIZE_F GetViewportSize()",
      "HRESULT SetRoot(ID2D1SvgElement*)",
      "void GetRoot(ID2D1SvgElement**)",
      "HRESULT FindElementById(UShort*, ID2D1SvgElement**)",
      "HRESULT Serialize(IStream*, ID2D1SvgElement*)",
      "HRESULT Deserialize(IStream*, ID2D1SvgElement**)",
      "HRESULT CreatePaint(D2D1_SVG_PAINT_TYPE, _D3DCOLORVALUE*, UShort*, ID2D1SvgPaint**)",
      "HRESULT CreateStrokeDashArray(D2D1_SVG_LENGTH*, UInt, ID2D1SvgStrokeDashArray**)",
      "HRESULT CreatePointCollection(D2D_POINT_2F*, UInt, ID2D1SvgPointCollection**)",
      "HRESULT CreatePathData(Single*, UInt, D2D1_SVG_PATH_COMMAND*, UInt, ID2D1SvgPathData**)"
    ]
  },
  {
    "Name": "ID2D1SvgDocument",
    "Methods": [
      "HRESULT SetViewportSize(D2D_SIZE_F)",
      "D2D_SIZE_F GetViewportSize()",
      "HRESULT SetRoot(ID2D1SvgElement*)",
      "void GetRoot(ID2D1SvgElement**)",
      "HRESULT FindElementById(UShort*, ID2D1SvgElement**)",
      "HRESULT Serialize(IStream*, ID2D1SvgElement*)",
      "HRESULT Deserialize(IStream*, ID2D1SvgElement**)",
      "HRESULT CreatePaint(D2D1_SVG_PAINT_TYPE, _D3DCOLORVALUE*, UShort*, ID2D1SvgPaint**)",
      "HRESULT CreateStrokeDashArray(D2D1_SVG_LENGTH*, UInt, ID2D1SvgStrokeDashArray**)",
      "HRESULT CreatePointCollection(D2D_POINT_2F*, UInt, ID2D1SvgPointCollection**)",
      "HRESULT CreatePathData(Single*, UInt, D2D1_SVG_PATH_COMMAND*, UInt, ID2D1SvgPathData**)"
    ]
  },
  {
    "Name": "ID2D1LinearGradientBrush",
    "Methods": [
      "void SetStartPoint(D2D_POINT_2F)",
      "void SetEndPoint(D2D_POINT_2F)",
      "D2D_POINT_2F GetStartPoint()",
      "D2D_POINT_2F GetEndPoint()",
      "void GetGradientStopCollection(ID2D1GradientStopCollection**)"
    ]
  },
  {
    "Name": "ID2D1LinearGradientBrush",
    "Methods": [
      "void SetStartPoint(D2D_POINT_2F)",
      "void SetEndPoint(D2D_POINT_2F)",
      "D2D_POINT_2F GetStartPoint()",
      "D2D_POINT_2F GetEndPoint()",
      "void GetGradientStopCollection(ID2D1GradientStopCollection**)"
    ]
  },
  {
    "Name": "ID2D1DCRenderTarget",
    "Methods": [
      "HRESULT BindDC(HDC__*, tagRECT*)"
    ]
  },
  {
    "Name": "ID2D1DCRenderTarget",
    "Methods": [
      "HRESULT BindDC(HDC__*, tagRECT*)"
    ]
  },
  {
    "Name": "IStream",
    "Methods": [
      "HRESULT Seek(_LARGE_INTEGER, UInt, _ULARGE_INTEGER*)",
      "HRESULT SetSize(_ULARGE_INTEGER)",
      "HRESULT CopyTo(IStream*, _ULARGE_INTEGER, _ULARGE_INTEGER*, _ULARGE_INTEGER*)",
      "HRESULT Commit(UInt)",
      "HRESULT Revert()",
      "HRESULT LockRegion(_ULARGE_INTEGER, _ULARGE_INTEGER, UInt)",
      "HRESULT UnlockRegion(_ULARGE_INTEGER, _ULARGE_INTEGER, UInt)",
      "HRESULT Stat(tagSTATSTG*, UInt)",
      "HRESULT Clone(IStream**)"
    ]
  },
  {
    "Name": "IStream",
    "Methods": [
      "HRESULT Seek(_LARGE_INTEGER, UInt, _ULARGE_INTEGER*)",
      "HRESULT SetSize(_ULARGE_INTEGER)",
      "HRESULT CopyTo(IStream*, _ULARGE_INTEGER, _ULARGE_INTEGER*, _ULARGE_INTEGER*)",
      "HRESULT Commit(UInt)",
      "HRESULT Revert()",
      "HRESULT LockRegion(_ULARGE_INTEGER, _ULARGE_INTEGER, UInt)",
      "HRESULT UnlockRegion(_ULARGE_INTEGER, _ULARGE_INTEGER, UInt)",
      "HRESULT Stat(tagSTATSTG*, UInt)",
      "HRESULT Clone(IStream**)"
    ]
  },
  {
    "Name": "IDWriteFont1",
    "Methods": [
      "void GetMetrics(DWRITE_FONT_METRICS1*)",
      "void GetPanose(DWRITE_PANOSE*)",
      "HRESULT GetUnicodeRanges(UInt, DWRITE_UNICODE_RANGE*, UInt*)",
      "Int IsMonospacedFont()"
    ]
  },
  {
    "Name": "IDWriteFont1",
    "Methods": [
      "void GetMetrics(DWRITE_FONT_METRICS1*)",
      "void GetPanose(DWRITE_PANOSE*)",
      "HRESULT GetUnicodeRanges(UInt, DWRITE_UNICODE_RANGE*, UInt*)",
      "Int IsMonospacedFont()"
    ]
  },
  {
    "Name": "IDWriteTextAnalysisSource",
    "Methods": [
      "HRESULT GetTextAtPosition(UInt, UShort**, UInt*)",
      "HRESULT GetTextBeforePosition(UInt, UShort**, UInt*)",
      "DWRITE_READING_DIRECTION GetParagraphReadingDirection()",
      "HRESULT GetLocaleName(UInt, UInt*, UShort**)",
      "HRESULT GetNumberSubstitution(UInt, UInt*, IDWriteNumberSubstitution**)"
    ]
  },
  {
    "Name": "IDWriteTextAnalysisSource",
    "Methods": [
      "HRESULT GetTextAtPosition(UInt, UShort**, UInt*)",
      "HRESULT GetTextBeforePosition(UInt, UShort**, UInt*)",
      "DWRITE_READING_DIRECTION GetParagraphReadingDirection()",
      "HRESULT GetLocaleName(UInt, UInt*, UShort**)",
      "HRESULT GetNumberSubstitution(UInt, UInt*, IDWriteNumberSubstitution**)"
    ]
  },
  {
    "Name": "ID2D1TransformedGeometry",
    "Methods": [
      "void GetSourceGeometry(ID2D1Geometry**)",
      "void GetTransform(D2D_MATRIX_3X2_F*)"
    ]
  },
  {
    "Name": "ID2D1TransformedGeometry",
    "Methods": [
      "void GetSourceGeometry(ID2D1Geometry**)",
      "void GetTransform(D2D_MATRIX_3X2_F*)"
    ]
  },
  {
    "Name": "ID2D1Mesh",
    "Methods": [
      "HRESULT Open(ID2D1TessellationSink**)"
    ]
  },
  {
    "Name": "ID2D1Mesh",
    "Methods": [
      "HRESULT Open(ID2D1TessellationSink**)"
    ]
  },
  {
    "Name": "ID2D1StrokeStyle",
    "Methods": [
      "D2D1_CAP_STYLE GetStartCap()",
      "D2D1_CAP_STYLE GetEndCap()",
      "D2D1_CAP_STYLE GetDashCap()",
      "Single GetMiterLimit()",
      "D2D1_LINE_JOIN GetLineJoin()",
      "Single GetDashOffset()",
      "D2D1_DASH_STYLE GetDashStyle()",
      "UInt GetDashesCount()",
      "void GetDashes(Single*, UInt)"
    ]
  },
  {
    "Name": "ID2D1StrokeStyle",
    "Methods": [
      "D2D1_CAP_STYLE GetStartCap()",
      "D2D1_CAP_STYLE GetEndCap()",
      "D2D1_CAP_STYLE GetDashCap()",
      "Single GetMiterLimit()",
      "D2D1_LINE_JOIN GetLineJoin()",
      "Single GetDashOffset()",
      "D2D1_DASH_STYLE GetDashStyle()",
      "UInt GetDashesCount()",
      "void GetDashes(Single*, UInt)"
    ]
  },
  {
    "Name": "IDWriteFontFace",
    "Methods": [
      "DWRITE_FONT_FACE_TYPE GetType()",
      "HRESULT GetFiles(UInt*, IDWriteFontFile**)",
      "UInt GetIndex()",
      "DWRITE_FONT_SIMULATIONS GetSimulations()",
      "Int IsSymbolFont()",
      "void GetMetrics(DWRITE_FONT_METRICS*)",
      "UShort GetGlyphCount()",
      "HRESULT GetDesignGlyphMetrics(UShort*, UInt, DWRITE_GLYPH_METRICS*, Int)",
      "HRESULT GetGlyphIndicesW(UInt*, UInt, UShort*)",
      "HRESULT TryGetFontTable(UInt, void**, UInt*, void**, Int*)",
      "void ReleaseFontTable(void*)",
      "HRESULT GetGlyphRunOutline(Single, UShort*, Single*, DWRITE_GLYPH_OFFSET*, UInt, Int, Int, ID2D1SimplifiedGeometrySink*)",
      "HRESULT GetRecommendedRenderingMode(Single, Single, DWRITE_MEASURING_MODE, IDWriteRenderingParams*, DWRITE_RENDERING_MODE*)",
      "HRESULT GetGdiCompatibleMetrics(Single, Single, DWRITE_MATRIX*, DWRITE_FONT_METRICS*)",
      "HRESULT GetGdiCompatibleGlyphMetrics(Single, Single, DWRITE_MATRIX*, Int, UShort*, UInt, DWRITE_GLYPH_METRICS*, Int)"
    ]
  },
  {
    "Name": "IDWriteFontFace",
    "Methods": [
      "DWRITE_FONT_FACE_TYPE GetType()",
      "HRESULT GetFiles(UInt*, IDWriteFontFile**)",
      "UInt GetIndex()",
      "DWRITE_FONT_SIMULATIONS GetSimulations()",
      "Int IsSymbolFont()",
      "void GetMetrics(DWRITE_FONT_METRICS*)",
      "UShort GetGlyphCount()",
      "HRESULT GetDesignGlyphMetrics(UShort*, UInt, DWRITE_GLYPH_METRICS*, Int)",
      "HRESULT GetGlyphIndicesW(UInt*, UInt, UShort*)",
      "HRESULT TryGetFontTable(UInt, void**, UInt*, void**, Int*)",
      "void ReleaseFontTable(void*)",
      "HRESULT GetGlyphRunOutline(Single, UShort*, Single*, DWRITE_GLYPH_OFFSET*, UInt, Int, Int, ID2D1SimplifiedGeometrySink*)",
      "HRESULT GetRecommendedRenderingMode(Single, Single, DWRITE_MEASURING_MODE, IDWriteRenderingParams*, DWRITE_RENDERING_MODE*)",
      "HRESULT GetGdiCompatibleMetrics(Single, Single, DWRITE_MATRIX*, DWRITE_FONT_METRICS*)",
      "HRESULT GetGdiCompatibleGlyphMetrics(Single, Single, DWRITE_MATRIX*, Int, UShort*, UInt, DWRITE_GLYPH_METRICS*, Int)"
    ]
  },
  {
    "Name": "IDCompositionAnimation",
    "Methods": [
      "HRESULT Reset()",
      "HRESULT SetAbsoluteBeginTime(_LARGE_INTEGER)",
      "HRESULT AddCubic(Double, Single, Single, Single, Single)",
      "HRESULT AddSinusoidal(Double, Single, Single, Single, Single)",
      "HRESULT AddRepeat(Double, Double)",
      "HRESULT End(Double, Single)"
    ]
  },
  {
    "Name": "IDCompositionAnimation",
    "Methods": [
      "HRESULT Reset()",
      "HRESULT SetAbsoluteBeginTime(_LARGE_INTEGER)",
      "HRESULT AddCubic(Double, Single, Single, Single, Single)",
      "HRESULT AddSinusoidal(Double, Single, Single, Single, Single)",
      "HRESULT AddRepeat(Double, Double)",
      "HRESULT End(Double, Single)"
    ]
  },
  {
    "Name": "ID2D1SolidColorBrush",
    "Methods": [
      "void SetColor(_D3DCOLORVALUE*)",
      "_D3DCOLORVALUE GetColor()"
    ]
  },
  {
    "Name": "ID2D1SolidColorBrush",
    "Methods": [
      "void SetColor(_D3DCOLORVALUE*)",
      "_D3DCOLORVALUE GetColor()"
    ]
  },
  {
    "Name": "ID2D1GradientStopCollection",
    "Methods": [
      "UInt GetGradientStopCount()",
      "void GetGradientStops(D2D1_GRADIENT_STOP*, UInt)",
      "D2D1_GAMMA GetColorInterpolationGamma()",
      "D2D1_EXTEND_MODE GetExtendMode()"
    ]
  },
  {
    "Name": "ID2D1GradientStopCollection",
    "Methods": [
      "UInt GetGradientStopCount()",
      "void GetGradientStops(D2D1_GRADIENT_STOP*, UInt)",
      "D2D1_GAMMA GetColorInterpolationGamma()",
      "D2D1_EXTEND_MODE GetExtendMode()"
    ]
  },
  {
    "Name": "IDWriteFactory3",
    "Methods": [
      "HRESULT CreateGlyphRunAnalysis(DWRITE_GLYPH_RUN*, DWRITE_MATRIX*, DWRITE_RENDERING_MODE1, DWRITE_MEASURING_MODE, DWRITE_GRID_FIT_MODE, DWRITE_TEXT_ANTIALIAS_MODE, Single, Single, IDWriteGlyphRunAnalysis**)",
      "HRESULT CreateCustomRenderingParams(Single, Single, Single, Single, DWRITE_PIXEL_GEOMETRY, DWRITE_RENDERING_MODE1, DWRITE_GRID_FIT_MODE, IDWriteRenderingParams3**)",
      "HRESULT CreateFontFaceReference(IDWriteFontFile*, UInt, DWRITE_FONT_SIMULATIONS, IDWriteFontFaceReference**)",
      "HRESULT CreateFontFaceReference(UShort*, _FILETIME*, UInt, DWRITE_FONT_SIMULATIONS, IDWriteFontFaceReference**)",
      "HRESULT GetSystemFontSet(IDWriteFontSet**)",
      "HRESULT CreateFontSetBuilder(IDWriteFontSetBuilder**)",
      "HRESULT CreateFontCollectionFromFontSet(IDWriteFontSet*, IDWriteFontCollection1**)",
      "HRESULT GetSystemFontCollection(Int, IDWriteFontCollection1**, Int)",
      "HRESULT GetFontDownloadQueue(IDWriteFontDownloadQueue**)"
    ]
  },
  {
    "Name": "IDWriteFactory3",
    "Methods": [
      "HRESULT CreateGlyphRunAnalysis(DWRITE_GLYPH_RUN*, DWRITE_MATRIX*, DWRITE_RENDERING_MODE1, DWRITE_MEASURING_MODE, DWRITE_GRID_FIT_MODE, DWRITE_TEXT_ANTIALIAS_MODE, Single, Single, IDWriteGlyphRunAnalysis**)",
      "HRESULT CreateCustomRenderingParams(Single, Single, Single, Single, DWRITE_PIXEL_GEOMETRY, DWRITE_RENDERING_MODE1, DWRITE_GRID_FIT_MODE, IDWriteRenderingParams3**)",
      "HRESULT CreateFontFaceReference(IDWriteFontFile*, UInt, DWRITE_FONT_SIMULATIONS, IDWriteFontFaceReference**)",
      "HRESULT CreateFontFaceReference(UShort*, _FILETIME*, UInt, DWRITE_FONT_SIMULATIONS, IDWriteFontFaceReference**)",
      "HRESULT GetSystemFontSet(IDWriteFontSet**)",
      "HRESULT CreateFontSetBuilder(IDWriteFontSetBuilder**)",
      "HRESULT CreateFontCollectionFromFontSet(IDWriteFontSet*, IDWriteFontCollection1**)",
      "HRESULT GetSystemFontCollection(Int, IDWriteFontCollection1**, Int)",
      "HRESULT GetFontDownloadQueue(IDWriteFontDownloadQueue**)"
    ]
  },
  {
    "Name": "IDWriteTextFormat",
    "Methods": [
      "HRESULT SetTextAlignment(DWRITE_TEXT_ALIGNMENT)",
      "HRESULT SetParagraphAlignment(DWRITE_PARAGRAPH_ALIGNMENT)",
      "HRESULT SetWordWrapping(DWRITE_WORD_WRAPPING)",
      "HRESULT SetReadingDirection(DWRITE_READING_DIRECTION)",
      "HRESULT SetFlowDirection(DWRITE_FLOW_DIRECTION)",
      "HRESULT SetIncrementalTabStop(Single)",
      "HRESULT SetTrimming(DWRITE_TRIMMING*, IDWriteInlineObject*)",
      "HRESULT SetLineSpacing(DWRITE_LINE_SPACING_METHOD, Single, Single)",
      "DWRITE_TEXT_ALIGNMENT GetTextAlignment()",
      "DWRITE_PARAGRAPH_ALIGNMENT GetParagraphAlignment()",
      "DWRITE_WORD_WRAPPING GetWordWrapping()",
      "DWRITE_READING_DIRECTION GetReadingDirection()",
      "DWRITE_FLOW_DIRECTION GetFlowDirection()",
      "Single GetIncrementalTabStop()",
      "HRESULT GetTrimming(DWRITE_TRIMMING*, IDWriteInlineObject**)",
      "HRESULT GetLineSpacing(DWRITE_LINE_SPACING_METHOD*, Single*, Single*)",
      "HRESULT GetFontCollection(IDWriteFontCollection**)",
      "UInt GetFontFamilyNameLength()",
      "HRESULT GetFontFamilyName(UShort*, UInt)",
      "DWRITE_FONT_WEIGHT GetFontWeight()",
      "DWRITE_FONT_STYLE GetFontStyle()",
      "DWRITE_FONT_STRETCH GetFontStretch()",
      "Single GetFontSize()",
      "UInt GetLocaleNameLength()",
      "HRESULT GetLocaleName(UShort*, UInt)"
    ]
  },
  {
    "Name": "IDWriteTextFormat",
    "Methods": [
      "HRESULT SetTextAlignment(DWRITE_TEXT_ALIGNMENT)",
      "HRESULT SetParagraphAlignment(DWRITE_PARAGRAPH_ALIGNMENT)",
      "HRESULT SetWordWrapping(DWRITE_WORD_WRAPPING)",
      "HRESULT SetReadingDirection(DWRITE_READING_DIRECTION)",
      "HRESULT SetFlowDirection(DWRITE_FLOW_DIRECTION)",
      "HRESULT SetIncrementalTabStop(Single)",
      "HRESULT SetTrimming(DWRITE_TRIMMING*, IDWriteInlineObject*)",
      "HRESULT SetLineSpacing(DWRITE_LINE_SPACING_METHOD, Single, Single)",
      "DWRITE_TEXT_ALIGNMENT GetTextAlignment()",
      "DWRITE_PARAGRAPH_ALIGNMENT GetParagraphAlignment()",
      "DWRITE_WORD_WRAPPING GetWordWrapping()",
      "DWRITE_READING_DIRECTION GetReadingDirection()",
      "DWRITE_FLOW_DIRECTION GetFlowDirection()",
      "Single GetIncrementalTabStop()",
      "HRESULT GetTrimming(DWRITE_TRIMMING*, IDWriteInlineObject**)",
      "HRESULT GetLineSpacing(DWRITE_LINE_SPACING_METHOD*, Single*, Single*)",
      "HRESULT GetFontCollection(IDWriteFontCollection**)",
      "UInt GetFontFamilyNameLength()",
      "HRESULT GetFontFamilyName(UShort*, UInt)",
      "DWRITE_FONT_WEIGHT GetFontWeight()",
      "DWRITE_FONT_STYLE GetFontStyle()",
      "DWRITE_FONT_STRETCH GetFontStretch()",
      "Single GetFontSize()",
      "UInt GetLocaleNameLength()",
      "HRESULT GetLocaleName(UShort*, UInt)"
    ]
  },
  {
    "Name": "IDWriteFontFallback",
    "Methods": [
      "HRESULT MapCharacters(IDWriteTextAnalysisSource*, UInt, UInt, IDWriteFontCollection*, UShort*, DWRITE_FONT_WEIGHT, DWRITE_FONT_STYLE, DWRITE_FONT_STRETCH, UInt*, IDWriteFont**, Single*)"
    ]
  },
  {
    "Name": "IDWriteFontFallback",
    "Methods": [
      "HRESULT MapCharacters(IDWriteTextAnalysisSource*, UInt, UInt, IDWriteFontCollection*, UShort*, DWRITE_FONT_WEIGHT, DWRITE_FONT_STYLE, DWRITE_FONT_STRETCH, UInt*, IDWriteFont**, Single*)"
    ]
  },
  {
    "Name": "IDWriteLocalizedStrings",
    "Methods": [
      "UInt GetCount()",
      "HRESULT FindLocaleName(UShort*, UInt*, Int*)",
      "HRESULT GetLocaleNameLength(UInt, UInt*)",
      "HRESULT GetLocaleName(UInt, UShort*, UInt)",
      "HRESULT GetStringLength(UInt, UInt*)",
      "HRESULT GetString(UInt, UShort*, UInt)"
    ]
  },
  {
    "Name": "IDWriteLocalizedStrings",
    "Methods": [
      "UInt GetCount()",
      "HRESULT FindLocaleName(UShort*, UInt*, Int*)",
      "HRESULT GetLocaleNameLength(UInt, UInt*)",
      "HRESULT GetLocaleName(UInt, UShort*, UInt)",
      "HRESULT GetStringLength(UInt, UInt*)",
      "HRESULT GetString(UInt, UShort*, UInt)"
    ]
  },
  {
    "Name": "IDWriteFont3",
    "Methods": [
      "HRESULT CreateFontFace(IDWriteFontFace3**)",
      "Int Equals(IDWriteFont*)",
      "HRESULT GetFontFaceReference(IDWriteFontFaceReference**)",
      "Int HasCharacter(UInt)",
      "DWRITE_LOCALITY GetLocality()"
    ]
  },
  {
    "Name": "IDWriteFont3",
    "Methods": [
      "HRESULT CreateFontFace(IDWriteFontFace3**)",
      "Int Equals(IDWriteFont*)",
      "HRESULT GetFontFaceReference(IDWriteFontFaceReference**)",
      "Int HasCharacter(UInt)",
      "DWRITE_LOCALITY GetLocality()"
    ]
  },
  {
    "Name": "ID2D1TessellationSink",
    "Methods": [
      "void AddTriangles(D2D1_TRIANGLE*, UInt)",
      "HRESULT Close()"
    ]
  },
  {
    "Name": "ID2D1TessellationSink",
    "Methods": [
      "void AddTriangles(D2D1_TRIANGLE*, UInt)",
      "HRESULT Close()"
    ]
  },
  {
    "Name": "IDWriteTextLayout",
    "Methods": [
      "HRESULT SetMaxWidth(Single)",
      "HRESULT SetMaxHeight(Single)",
      "HRESULT SetFontCollection(IDWriteFontCollection*, DWRITE_TEXT_RANGE)",
      "HRESULT SetFontFamilyName(UShort*, DWRITE_TEXT_RANGE)",
      "HRESULT SetFontWeight(DWRITE_FONT_WEIGHT, DWRITE_TEXT_RANGE)",
      "HRESULT SetFontStyle(DWRITE_FONT_STYLE, DWRITE_TEXT_RANGE)",
      "HRESULT SetFontStretch(DWRITE_FONT_STRETCH, DWRITE_TEXT_RANGE)",
      "HRESULT SetFontSize(Single, DWRITE_TEXT_RANGE)",
      "HRESULT SetUnderline(Int, DWRITE_TEXT_RANGE)",
      "HRESULT SetStrikethrough(Int, DWRITE_TEXT_RANGE)",
      "HRESULT SetDrawingEffect(IUnknown*, DWRITE_TEXT_RANGE)",
      "HRESULT SetInlineObject(IDWriteInlineObject*, DWRITE_TEXT_RANGE)",
      "HRESULT SetTypography(IDWriteTypography*, DWRITE_TEXT_RANGE)",
      "HRESULT SetLocaleName(UShort*, DWRITE_TEXT_RANGE)",
      "Single GetMaxWidth()",
      "Single GetMaxHeight()",
      "HRESULT GetFontCollection(UInt, IDWriteFontCollection**, DWRITE_TEXT_RANGE*)",
      "HRESULT GetFontFamilyNameLength(UInt, UInt*, DWRITE_TEXT_RANGE*)",
      "HRESULT GetFontFamilyName(UInt, UShort*, UInt, DWRITE_TEXT_RANGE*)",
      "HRESULT GetFontWeight(UInt, DWRITE_FONT_WEIGHT*, DWRITE_TEXT_RANGE*)",
      "HRESULT GetFontStyle(UInt, DWRITE_FONT_STYLE*, DWRITE_TEXT_RANGE*)",
      "HRESULT GetFontStretch(UInt, DWRITE_FONT_STRETCH*, DWRITE_TEXT_RANGE*)",
      "HRESULT GetFontSize(UInt, Single*, DWRITE_TEXT_RANGE*)",
      "HRESULT GetUnderline(UInt, Int*, DWRITE_TEXT_RANGE*)",
      "HRESULT GetStrikethrough(UInt, Int*, DWRITE_TEXT_RANGE*)",
      "HRESULT GetDrawingEffect(UInt, IUnknown**, DWRITE_TEXT_RANGE*)",
      "HRESULT GetInlineObject(UInt, IDWriteInlineObject**, DWRITE_TEXT_RANGE*)",
      "HRESULT GetTypography(UInt, IDWriteTypography**, DWRITE_TEXT_RANGE*)",
      "HRESULT GetLocaleNameLength(UInt, UInt*, DWRITE_TEXT_RANGE*)",
      "HRESULT GetLocaleName(UInt, UShort*, UInt, DWRITE_TEXT_RANGE*)",
      "HRESULT Draw(void*, IDWriteTextRenderer*, Single, Single)",
      "HRESULT GetLineMetrics(DWRITE_LINE_METRICS*, UInt, UInt*)",
      "HRESULT GetMetrics(DWRITE_TEXT_METRICS*)",
      "HRESULT GetOverhangMetrics(DWRITE_OVERHANG_METRICS*)",
      "HRESULT GetClusterMetrics(DWRITE_CLUSTER_METRICS*, UInt, UInt*)",
      "HRESULT DetermineMinWidth(Single*)",
      "HRESULT HitTestPoint(Single, Single, Int*, Int*, DWRITE_HIT_TEST_METRICS*)",
      "HRESULT HitTestTextPosition(UInt, Int, Single*, Single*, DWRITE_HIT_TEST_METRICS*)",
      "HRESULT HitTestTextRange(UInt, UInt, Single, Single, DWRITE_HIT_TEST_METRICS*, UInt, UInt*)"
    ]
  },
  {
    "Name": "IDWriteTextLayout",
    "Methods": [
      "HRESULT SetMaxWidth(Single)",
      "HRESULT SetMaxHeight(Single)",
      "HRESULT SetFontCollection(IDWriteFontCollection*, DWRITE_TEXT_RANGE)",
      "HRESULT SetFontFamilyName(UShort*, DWRITE_TEXT_RANGE)",
      "HRESULT SetFontWeight(DWRITE_FONT_WEIGHT, DWRITE_TEXT_RANGE)",
      "HRESULT SetFontStyle(DWRITE_FONT_STYLE, DWRITE_TEXT_RANGE)",
      "HRESULT SetFontStretch(DWRITE_FONT_STRETCH, DWRITE_TEXT_RANGE)",
      "HRESULT SetFontSize(Single, DWRITE_TEXT_RANGE)",
      "HRESULT SetUnderline(Int, DWRITE_TEXT_RANGE)",
      "HRESULT SetStrikethrough(Int, DWRITE_TEXT_RANGE)",
      "HRESULT SetDrawingEffect(IUnknown*, DWRITE_TEXT_RANGE)",
      "HRESULT SetInlineObject(IDWriteInlineObject*, DWRITE_TEXT_RANGE)",
      "HRESULT SetTypography(IDWriteTypography*, DWRITE_TEXT_RANGE)",
      "HRESULT SetLocaleName(UShort*, DWRITE_TEXT_RANGE)",
      "Single GetMaxWidth()",
      "Single GetMaxHeight()",
      "HRESULT GetFontCollection(UInt, IDWriteFontCollection**, DWRITE_TEXT_RANGE*)",
      "HRESULT GetFontFamilyNameLength(UInt, UInt*, DWRITE_TEXT_RANGE*)",
      "HRESULT GetFontFamilyName(UInt, UShort*, UInt, DWRITE_TEXT_RANGE*)",
      "HRESULT GetFontWeight(UInt, DWRITE_FONT_WEIGHT*, DWRITE_TEXT_RANGE*)",
      "HRESULT GetFontStyle(UInt, DWRITE_FONT_STYLE*, DWRITE_TEXT_RANGE*)",
      "HRESULT GetFontStretch(UInt, DWRITE_FONT_STRETCH*, DWRITE_TEXT_RANGE*)",
      "HRESULT GetFontSize(UInt, Single*, DWRITE_TEXT_RANGE*)",
      "HRESULT GetUnderline(UInt, Int*, DWRITE_TEXT_RANGE*)",
      "HRESULT GetStrikethrough(UInt, Int*, DWRITE_TEXT_RANGE*)",
      "HRESULT GetDrawingEffect(UInt, IUnknown**, DWRITE_TEXT_RANGE*)",
      "HRESULT GetInlineObject(UInt, IDWriteInlineObject**, DWRITE_TEXT_RANGE*)",
      "HRESULT GetTypography(UInt, IDWriteTypography**, DWRITE_TEXT_RANGE*)",
      "HRESULT GetLocaleNameLength(UInt, UInt*, DWRITE_TEXT_RANGE*)",
      "HRESULT GetLocaleName(UInt, UShort*, UInt, DWRITE_TEXT_RANGE*)",
      "HRESULT Draw(void*, IDWriteTextRenderer*, Single, Single)",
      "HRESULT GetLineMetrics(DWRITE_LINE_METRICS*, UInt, UInt*)",
      "HRESULT GetMetrics(DWRITE_TEXT_METRICS*)",
      "HRESULT GetOverhangMetrics(DWRITE_OVERHANG_METRICS*)",
      "HRESULT GetClusterMetrics(DWRITE_CLUSTER_METRICS*, UInt, UInt*)",
      "HRESULT DetermineMinWidth(Single*)",
      "HRESULT HitTestPoint(Single, Single, Int*, Int*, DWRITE_HIT_TEST_METRICS*)",
      "HRESULT HitTestTextPosition(UInt, Int, Single*, Single*, DWRITE_HIT_TEST_METRICS*)",
      "HRESULT HitTestTextRange(UInt, UInt, Single, Single, DWRITE_HIT_TEST_METRICS*, UInt, UInt*)"
    ]
  },
  {
    "Name": "ID2D1EllipseGeometry",
    "Methods": [
      "void GetEllipse(D2D1_ELLIPSE*)"
    ]
  },
  {
    "Name": "ID2D1EllipseGeometry",
    "Methods": [
      "void GetEllipse(D2D1_ELLIPSE*)"
    ]
  },
  {
    "Name": "IDCompositionGaussianBlurEffect",
    "Methods": [
      "HRESULT SetStandardDeviation(IDCompositionAnimation*)",
      "HRESULT SetStandardDeviation(Single)",
      "HRESULT SetBorderMode(D2D1_BORDER_MODE)"
    ]
  },
  {
    "Name": "IDCompositionGaussianBlurEffect",
    "Methods": [
      "HRESULT SetStandardDeviation(IDCompositionAnimation*)",
      "HRESULT SetStandardDeviation(Single)",
      "HRESULT SetBorderMode(D2D1_BORDER_MODE)"
    ]
  },
  {
    "Name": "IUnknown",
    "Methods": [
      "HRESULT QueryInterface(Guid*, void**)",
      "UInt AddRef()",
      "UInt Release()"
    ]
  },
  {
    "Name": "IUnknown",
    "Methods": [
      "HRESULT QueryInterface(Guid*, void**)",
      "UInt AddRef()",
      "UInt Release()"
    ]
  },
  {
    "Name": "IDWriteFontSet",
    "Methods": [
      "UInt GetFontCount()",
      "HRESULT GetFontFaceReference(UInt, IDWriteFontFaceReference**)",
      "HRESULT FindFontFaceReference(IDWriteFontFaceReference*, UInt*, Int*)",
      "HRESULT FindFontFace(IDWriteFontFace*, UInt*, Int*)",
      "HRESULT GetPropertyValues(DWRITE_FONT_PROPERTY_ID, IDWriteStringList**)",
      "HRESULT GetPropertyValues(DWRITE_FONT_PROPERTY_ID, UShort*, IDWriteStringList**)",
      "HRESULT GetPropertyValues(UInt, DWRITE_FONT_PROPERTY_ID, Int*, IDWriteLocalizedStrings**)",
      "HRESULT GetPropertyOccurrenceCount(DWRITE_FONT_PROPERTY*, UInt*)",
      "HRESULT GetMatchingFonts(UShort*, DWRITE_FONT_WEIGHT, DWRITE_FONT_STRETCH, DWRITE_FONT_STYLE, IDWriteFontSet**)",
      "HRESULT GetMatchingFonts(DWRITE_FONT_PROPERTY*, UInt, IDWriteFontSet**)"
    ]
  },
  {
    "Name": "IDWriteFontSet",
    "Methods": [
      "UInt GetFontCount()",
      "HRESULT GetFontFaceReference(UInt, IDWriteFontFaceReference**)",
      "HRESULT FindFontFaceReference(IDWriteFontFaceReference*, UInt*, Int*)",
      "HRESULT FindFontFace(IDWriteFontFace*, UInt*, Int*)",
      "HRESULT GetPropertyValues(DWRITE_FONT_PROPERTY_ID, IDWriteStringList**)",
      "HRESULT GetPropertyValues(DWRITE_FONT_PROPERTY_ID, UShort*, IDWriteStringList**)",
      "HRESULT GetPropertyValues(UInt, DWRITE_FONT_PROPERTY_ID, Int*, IDWriteLocalizedStrings**)",
      "HRESULT GetPropertyOccurrenceCount(DWRITE_FONT_PROPERTY*, UInt*)",
      "HRESULT GetMatchingFonts(UShort*, DWRITE_FONT_WEIGHT, DWRITE_FONT_STRETCH, DWRITE_FONT_STYLE, IDWriteFontSet**)",
      "HRESULT GetMatchingFonts(DWRITE_FONT_PROPERTY*, UInt, IDWriteFontSet**)"
    ]
  },
  {
    "Name": "ID2D1SvgPathData",
    "Methods": [
      "HRESULT RemoveSegmentDataAtEnd(UInt)",
      "HRESULT UpdateSegmentData(Single*, UInt, UInt)",
      "HRESULT GetSegmentData(Single*, UInt, UInt)",
      "UInt GetSegmentDataCount()",
      "HRESULT RemoveCommandsAtEnd(UInt)",
      "HRESULT UpdateCommands(D2D1_SVG_PATH_COMMAND*, UInt, UInt)",
      "HRESULT GetCommands(D2D1_SVG_PATH_COMMAND*, UInt, UInt)",
      "UInt GetCommandsCount()",
      "HRESULT CreatePathGeometry(D2D1_FILL_MODE, ID2D1PathGeometry1**)"
    ]
  },
  {
    "Name": "ID2D1SvgPathData",
    "Methods": [
      "HRESULT RemoveSegmentDataAtEnd(UInt)",
      "HRESULT UpdateSegmentData(Single*, UInt, UInt)",
      "HRESULT GetSegmentData(Single*, UInt, UInt)",
      "UInt GetSegmentDataCount()",
      "HRESULT RemoveCommandsAtEnd(UInt)",
      "HRESULT UpdateCommands(D2D1_SVG_PATH_COMMAND*, UInt, UInt)",
      "HRESULT GetCommands(D2D1_SVG_PATH_COMMAND*, UInt, UInt)",
      "UInt GetCommandsCount()",
      "HRESULT CreatePathGeometry(D2D1_FILL_MODE, ID2D1PathGeometry1**)"
    ]
  },
  {
    "Name": "IDWriteFactory1",
    "Methods": [
      "HRESULT GetEudcFontCollection(IDWriteFontCollection**, Int)",
      "HRESULT CreateCustomRenderingParams(Single, Single, Single, Single, DWRITE_PIXEL_GEOMETRY, DWRITE_RENDERING_MODE, IDWriteRenderingParams1**)"
    ]
  },
  {
    "Name": "IDWriteFactory1",
    "Methods": [
      "HRESULT GetEudcFontCollection(IDWriteFontCollection**, Int)",
      "HRESULT CreateCustomRenderingParams(Single, Single, Single, Single, DWRITE_PIXEL_GEOMETRY, DWRITE_RENDERING_MODE, IDWriteRenderingParams1**)"
    ]
  },
  {
    "Name": "IDXGISurface",
    "Methods": [
      "HRESULT GetDesc(DXGI_SURFACE_DESC*)",
      "HRESULT Map(DXGI_MAPPED_RECT*, UInt)",
      "HRESULT Unmap()"
    ]
  },
  {
    "Name": "IDXGISurface",
    "Methods": [
      "HRESULT GetDesc(DXGI_SURFACE_DESC*)",
      "HRESULT Map(DXGI_MAPPED_RECT*, UInt)",
      "HRESULT Unmap()"
    ]
  },
  {
    "Name": "IDWriteGlyphRunAnalysis",
    "Methods": [
      "HRESULT GetAlphaTextureBounds(DWRITE_TEXTURE_TYPE, tagRECT*)",
      "HRESULT CreateAlphaTexture(DWRITE_TEXTURE_TYPE, tagRECT*, UByte*, UInt)",
      "HRESULT GetAlphaBlendParams(IDWriteRenderingParams*, Single*, Single*, Single*)"
    ]
  },
  {
    "Name": "IDWriteGlyphRunAnalysis",
    "Methods": [
      "HRESULT GetAlphaTextureBounds(DWRITE_TEXTURE_TYPE, tagRECT*)",
      "HRESULT CreateAlphaTexture(DWRITE_TEXTURE_TYPE, tagRECT*, UByte*, UInt)",
      "HRESULT GetAlphaBlendParams(IDWriteRenderingParams*, Single*, Single*, Single*)"
    ]
  },
  {
    "Name": "ID2D1Resource",
    "Methods": [
      "void GetFactory(ID2D1Factory**)"
    ]
  },
  {
    "Name": "ID2D1Resource",
    "Methods": [
      "void GetFactory(ID2D1Factory**)"
    ]
  },
  {
    "Name": "ID2D1SvgPaint",
    "Methods": [
      "HRESULT SetPaintType(D2D1_SVG_PAINT_TYPE)",
      "D2D1_SVG_PAINT_TYPE GetPaintType()",
      "HRESULT SetColor(_D3DCOLORVALUE*)",
      "void GetColor(_D3DCOLORVALUE*)",
      "HRESULT SetId(UShort*)",
      "HRESULT GetId(UShort*, UInt)",
      "UInt GetIdLength()"
    ]
  },
  {
    "Name": "ID2D1SvgPaint",
    "Methods": [
      "HRESULT SetPaintType(D2D1_SVG_PAINT_TYPE)",
      "D2D1_SVG_PAINT_TYPE GetPaintType()",
      "HRESULT SetColor(_D3DCOLORVALUE*)",
      "void GetColor(_D3DCOLORVALUE*)",
      "HRESULT SetId(UShort*)",
      "HRESULT GetId(UShort*, UInt)",
      "UInt GetIdLength()"
    ]
  },
  {
    "Name": "ID2D1PathGeometry",
    "Methods": [
      "HRESULT Open(ID2D1GeometrySink**)",
      "HRESULT Stream(ID2D1GeometrySink*)",
      "HRESULT GetSegmentCount(UInt*)",
      "HRESULT GetFigureCount(UInt*)"
    ]
  },
  {
    "Name": "ID2D1PathGeometry",
    "Methods": [
      "HRESULT Open(ID2D1GeometrySink**)",
      "HRESULT Stream(ID2D1GeometrySink*)",
      "HRESULT GetSegmentCount(UInt*)",
      "HRESULT GetFigureCount(UInt*)"
    ]
  },
  {
    "Name": "IDWriteFontDownloadListener",
    "Methods": [
      "void DownloadCompleted(IDWriteFontDownloadQueue*, IUnknown*, HRESULT)"
    ]
  },
  {
    "Name": "IDWriteFontDownloadListener",
    "Methods": [
      "void DownloadCompleted(IDWriteFontDownloadQueue*, IUnknown*, HRESULT)"
    ]
  },
  {
    "Name": "IDWriteRenderingParams3",
    "Methods": [
      "DWRITE_RENDERING_MODE1 GetRenderingMode1()"
    ]
  },
  {
    "Name": "IDWriteRenderingParams3",
    "Methods": [
      "DWRITE_RENDERING_MODE1 GetRenderingMode1()"
    ]
  },
  {
    "Name": "ID2D1Bitmap",
    "Methods": [
      "D2D_SIZE_F GetSize()",
      "D2D_SIZE_U GetPixelSize()",
      "D2D1_PIXEL_FORMAT GetPixelFormat()",
      "void GetDpi(Single*, Single*)",
      "HRESULT CopyFromBitmap(D2D_POINT_2U*, ID2D1Bitmap*, D2D_RECT_U*)",
      "HRESULT CopyFromRenderTarget(D2D_POINT_2U*, ID2D1RenderTarget*, D2D_RECT_U*)",
      "HRESULT CopyFromMemory(D2D_RECT_U*, void*, UInt)"
    ]
  },
  {
    "Name": "ID2D1Bitmap",
    "Methods": [
      "D2D_SIZE_F GetSize()",
      "D2D_SIZE_U GetPixelSize()",
      "D2D1_PIXEL_FORMAT GetPixelFormat()",
      "void GetDpi(Single*, Single*)",
      "HRESULT CopyFromBitmap(D2D_POINT_2U*, ID2D1Bitmap*, D2D_RECT_U*)",
      "HRESULT CopyFromRenderTarget(D2D_POINT_2U*, ID2D1RenderTarget*, D2D_RECT_U*)",
      "HRESULT CopyFromMemory(D2D_RECT_U*, void*, UInt)"
    ]
  },
  {
    "Name": "ID2D1DrawingStateBlock",
    "Methods": [
      "void GetDescription(D2D1_DRAWING_STATE_DESCRIPTION*)",
      "void SetDescription(D2D1_DRAWING_STATE_DESCRIPTION*)",
      "void SetTextRenderingParams(IDWriteRenderingParams*)",
      "void GetTextRenderingParams(IDWriteRenderingParams**)"
    ]
  },
  {
    "Name": "ID2D1DrawingStateBlock",
    "Methods": [
      "void GetDescription(D2D1_DRAWING_STATE_DESCRIPTION*)",
      "void SetDescription(D2D1_DRAWING_STATE_DESCRIPTION*)",
      "void SetTextRenderingParams(IDWriteRenderingParams*)",
      "void GetTextRenderingParams(IDWriteRenderingParams**)"
    ]
  },
  {
    "Name": "IDXGIDeviceSubObject",
    "Methods": [
      "HRESULT GetDevice(Guid*, void**)"
    ]
  },
  {
    "Name": "IDXGIDeviceSubObject",
    "Methods": [
      "HRESULT GetDevice(Guid*, void**)"
    ]
  },
  {
    "Name": "IDWriteTypography",
    "Methods": [
      "HRESULT AddFontFeature(DWRITE_FONT_FEATURE)",
      "UInt GetFontFeatureCount()",
      "HRESULT GetFontFeature(UInt, DWRITE_FONT_FEATURE*)"
    ]
  },
  {
    "Name": "IDWriteTypography",
    "Methods": [
      "HRESULT AddFontFeature(DWRITE_FONT_FEATURE)",
      "UInt GetFontFeatureCount()",
      "HRESULT GetFontFeature(UInt, DWRITE_FONT_FEATURE*)"
    ]
  },
  {
    "Name": "IDWriteFontFamily1",
    "Methods": [
      "DWRITE_LOCALITY GetFontLocality(UInt)",
      "HRESULT GetFont(UInt, IDWriteFont3**)",
      "HRESULT GetFontFaceReference(UInt, IDWriteFontFaceReference**)"
    ]
  },
  {
    "Name": "IDWriteFontFamily1",
    "Methods": [
      "DWRITE_LOCALITY GetFontLocality(UInt)",
      "HRESULT GetFont(UInt, IDWriteFont3**)",
      "HRESULT GetFontFaceReference(UInt, IDWriteFontFaceReference**)"
    ]
  },
  {
    "Name": "IDWriteFontFaceReference",
    "Methods": [
      "HRESULT CreateFontFace(IDWriteFontFace3**)",
      "HRESULT CreateFontFaceWithSimulations(DWRITE_FONT_SIMULATIONS, IDWriteFontFace3**)",
      "Int Equals(IDWriteFontFaceReference*)",
      "UInt GetFontFaceIndex()",
      "DWRITE_FONT_SIMULATIONS GetSimulations()",
      "HRESULT GetFontFile(IDWriteFontFile**)",
      "ULong GetLocalFileSize()",
      "ULong GetFileSize()",
      "HRESULT GetFileTime(_FILETIME*)",
      "DWRITE_LOCALITY GetLocality()",
      "HRESULT EnqueueFontDownloadRequest()",
      "HRESULT EnqueueCharacterDownloadRequest(UShort*, UInt)",
      "HRESULT EnqueueGlyphDownloadRequest(UShort*, UInt)",
      "HRESULT EnqueueFileFragmentDownloadRequest(ULong, ULong)"
    ]
  },
  {
    "Name": "IDWriteFontFaceReference",
    "Methods": [
      "HRESULT CreateFontFace(IDWriteFontFace3**)",
      "HRESULT CreateFontFaceWithSimulations(DWRITE_FONT_SIMULATIONS, IDWriteFontFace3**)",
      "Int Equals(IDWriteFontFaceReference*)",
      "UInt GetFontFaceIndex()",
      "DWRITE_FONT_SIMULATIONS GetSimulations()",
      "HRESULT GetFontFile(IDWriteFontFile**)",
      "ULong GetLocalFileSize()",
      "ULong GetFileSize()",
      "HRESULT GetFileTime(_FILETIME*)",
      "DWRITE_LOCALITY GetLocality()",
      "HRESULT EnqueueFontDownloadRequest()",
      "HRESULT EnqueueCharacterDownloadRequest(UShort*, UInt)",
      "HRESULT EnqueueGlyphDownloadRequest(UShort*, UInt)",
      "HRESULT EnqueueFileFragmentDownloadRequest(ULong, ULong)"
    ]
  },
  {
    "Name": "ID2D1RenderTarget",
    "Methods": [
      "HRESULT CreateBitmap(D2D_SIZE_U, void*, UInt, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap**)",
      "HRESULT CreateBitmapFromWicBitmap(IWICBitmapSource*, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap**)",
      "HRESULT CreateSharedBitmap(Guid*, void*, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap**)",
      "HRESULT CreateBitmapBrush(ID2D1Bitmap*, D2D1_BITMAP_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush**)",
      "HRESULT CreateSolidColorBrush(_D3DCOLORVALUE*, D2D1_BRUSH_PROPERTIES*, ID2D1SolidColorBrush**)",
      "HRESULT CreateGradientStopCollection(D2D1_GRADIENT_STOP*, UInt, D2D1_GAMMA, D2D1_EXTEND_MODE, ID2D1GradientStopCollection**)",
      "HRESULT CreateLinearGradientBrush(D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection*, ID2D1LinearGradientBrush**)",
      "HRESULT CreateRadialGradientBrush(D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection*, ID2D1RadialGradientBrush**)",
      "HRESULT CreateCompatibleRenderTarget(D2D_SIZE_F*, D2D_SIZE_U*, D2D1_PIXEL_FORMAT*, D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS, ID2D1BitmapRenderTarget**)",
      "HRESULT CreateLayer(D2D_SIZE_F*, ID2D1Layer**)",
      "HRESULT CreateMesh(ID2D1Mesh**)",
      "void DrawLine(D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush*, Single, ID2D1StrokeStyle*)",
      "void DrawRectangle(D2D_RECT_F*, ID2D1Brush*, Single, ID2D1StrokeStyle*)",
      "void FillRectangle(D2D_RECT_F*, ID2D1Brush*)",
      "void DrawRoundedRectangle(D2D1_ROUNDED_RECT*, ID2D1Brush*, Single, ID2D1StrokeStyle*)",
      "void FillRoundedRectangle(D2D1_ROUNDED_RECT*, ID2D1Brush*)",
      "void DrawEllipse(D2D1_ELLIPSE*, ID2D1Brush*, Single, ID2D1StrokeStyle*)",
      "void FillEllipse(D2D1_ELLIPSE*, ID2D1Brush*)",
      "void DrawGeometry(ID2D1Geometry*, ID2D1Brush*, Single, ID2D1StrokeStyle*)",
      "void FillGeometry(ID2D1Geometry*, ID2D1Brush*, ID2D1Brush*)",
      "void FillMesh(ID2D1Mesh*, ID2D1Brush*)",
      "void FillOpacityMask(ID2D1Bitmap*, ID2D1Brush*, D2D1_OPACITY_MASK_CONTENT, D2D_RECT_F*, D2D_RECT_F*)",
      "void DrawBitmap(ID2D1Bitmap*, D2D_RECT_F*, Single, D2D1_BITMAP_INTERPOLATION_MODE, D2D_RECT_F*)",
      "void DrawTextW(UShort*, UInt, IDWriteTextFormat*, D2D_RECT_F*, ID2D1Brush*, D2D1_DRAW_TEXT_OPTIONS, DWRITE_MEASURING_MODE)",
      "void DrawTextLayout(D2D_POINT_2F, IDWriteTextLayout*, ID2D1Brush*, D2D1_DRAW_TEXT_OPTIONS)",
      "void DrawGlyphRun(D2D_POINT_2F, DWRITE_GLYPH_RUN*, ID2D1Brush*, DWRITE_MEASURING_MODE)",
      "void SetTransform(D2D_MATRIX_3X2_F*)",
      "void GetTransform(D2D_MATRIX_3X2_F*)",
      "void SetAntialiasMode(D2D1_ANTIALIAS_MODE)",
      "D2D1_ANTIALIAS_MODE GetAntialiasMode()",
      "void SetTextAntialiasMode(D2D1_TEXT_ANTIALIAS_MODE)",
      "D2D1_TEXT_ANTIALIAS_MODE GetTextAntialiasMode()",
      "void SetTextRenderingParams(IDWriteRenderingParams*)",
      "void GetTextRenderingParams(IDWriteRenderingParams**)",
      "void SetTags(ULong, ULong)",
      "void GetTags(ULong*, ULong*)",
      "void PushLayer(D2D1_LAYER_PARAMETERS*, ID2D1Layer*)",
      "void PopLayer()",
      "HRESULT Flush(ULong*, ULong*)",
      "void SaveDrawingState(ID2D1DrawingStateBlock*)",
      "void RestoreDrawingState(ID2D1DrawingStateBlock*)",
      "void PushAxisAlignedClip(D2D_RECT_F*, D2D1_ANTIALIAS_MODE)",
      "void PopAxisAlignedClip()",
      "void Clear(_D3DCOLORVALUE*)",
      "void BeginDraw()",
      "HRESULT EndDraw(ULong*, ULong*)",
      "D2D1_PIXEL_FORMAT GetPixelFormat()",
      "void SetDpi(Single, Single)",
      "void GetDpi(Single*, Single*)",
      "D2D_SIZE_F GetSize()",
      "D2D_SIZE_U GetPixelSize()",
      "UInt GetMaximumBitmapSize()",
      "Int IsSupported(D2D1_RENDER_TARGET_PROPERTIES*)"
    ]
  },
  {
    "Name": "ID2D1RenderTarget",
    "Methods": [
      "HRESULT CreateBitmap(D2D_SIZE_U, void*, UInt, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap**)",
      "HRESULT CreateBitmapFromWicBitmap(IWICBitmapSource*, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap**)",
      "HRESULT CreateSharedBitmap(Guid*, void*, D2D1_BITMAP_PROPERTIES*, ID2D1Bitmap**)",
      "HRESULT CreateBitmapBrush(ID2D1Bitmap*, D2D1_BITMAP_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1BitmapBrush**)",
      "HRESULT CreateSolidColorBrush(_D3DCOLORVALUE*, D2D1_BRUSH_PROPERTIES*, ID2D1SolidColorBrush**)",
      "HRESULT CreateGradientStopCollection(D2D1_GRADIENT_STOP*, UInt, D2D1_GAMMA, D2D1_EXTEND_MODE, ID2D1GradientStopCollection**)",
      "HRESULT CreateLinearGradientBrush(D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection*, ID2D1LinearGradientBrush**)",
      "HRESULT CreateRadialGradientBrush(D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES*, D2D1_BRUSH_PROPERTIES*, ID2D1GradientStopCollection*, ID2D1RadialGradientBrush**)",
      "HRESULT CreateCompatibleRenderTarget(D2D_SIZE_F*, D2D_SIZE_U*, D2D1_PIXEL_FORMAT*, D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS, ID2D1BitmapRenderTarget**)",
      "HRESULT CreateLayer(D2D_SIZE_F*, ID2D1Layer**)",
      "HRESULT CreateMesh(ID2D1Mesh**)",
      "void DrawLine(D2D_POINT_2F, D2D_POINT_2F, ID2D1Brush*, Single, ID2D1StrokeStyle*)",
      "void DrawRectangle(D2D_RECT_F*, ID2D1Brush*, Single, ID2D1StrokeStyle*)",
      "void FillRectangle(D2D_RECT_F*, ID2D1Brush*)",
      "void DrawRoundedRectangle(D2D1_ROUNDED_RECT*, ID2D1Brush*, Single, ID2D1StrokeStyle*)",
      "void FillRoundedRectangle(D2D1_ROUNDED_RECT*, ID2D1Brush*)",
      "void DrawEllipse(D2D1_ELLIPSE*, ID2D1Brush*, Single, ID2D1StrokeStyle*)",
      "void FillEllipse(D2D1_ELLIPSE*, ID2D1Brush*)",
      "void DrawGeometry(ID2D1Geometry*, ID2D1Brush*, Single, ID2D1StrokeStyle*)",
      "void FillGeometry(ID2D1Geometry*, ID2D1Brush*, ID2D1Brush*)",
      "void FillMesh(ID2D1Mesh*, ID2D1Brush*)",
      "void FillOpacityMask(ID2D1Bitmap*, ID2D1Brush*, D2D1_OPACITY_MASK_CONTENT, D2D_RECT_F*, D2D_RECT_F*)",
      "void DrawBitmap(ID2D1Bitmap*, D2D_RECT_F*, Single, D2D1_BITMAP_INTERPOLATION_MODE, D2D_RECT_F*)",
      "void DrawTextW(UShort*, UInt, IDWriteTextFormat*, D2D_RECT_F*, ID2D1Brush*, D2D1_DRAW_TEXT_OPTIONS, DWRITE_MEASURING_MODE)",
      "void DrawTextLayout(D2D_POINT_2F, IDWriteTextLayout*, ID2D1Brush*, D2D1_DRAW_TEXT_OPTIONS)",
      "void DrawGlyphRun(D2D_POINT_2F, DWRITE_GLYPH_RUN*, ID2D1Brush*, DWRITE_MEASURING_MODE)",
      "void SetTransform(D2D_MATRIX_3X2_F*)",
      "void GetTransform(D2D_MATRIX_3X2_F*)",
      "void SetAntialiasMode(D2D1_ANTIALIAS_MODE)",
      "D2D1_ANTIALIAS_MODE GetAntialiasMode()",
      "void SetTextAntialiasMode(D2D1_TEXT_ANTIALIAS_MODE)",
      "D2D1_TEXT_ANTIALIAS_MODE GetTextAntialiasMode()",
      "void SetTextRenderingParams(IDWriteRenderingParams*)",
      "void GetTextRenderingParams(IDWriteRenderingParams**)",
      "void SetTags(ULong, ULong)",
      "void GetTags(ULong*, ULong*)",
      "void PushLayer(D2D1_LAYER_PARAMETERS*, ID2D1Layer*)",
      "void PopLayer()",
      "HRESULT Flush(ULong*, ULong*)",
      "void SaveDrawingState(ID2D1DrawingStateBlock*)",
      "void RestoreDrawingState(ID2D1DrawingStateBlock*)",
      "void PushAxisAlignedClip(D2D_RECT_F*, D2D1_ANTIALIAS_MODE)",
      "void PopAxisAlignedClip()",
      "void Clear(_D3DCOLORVALUE*)",
      "void BeginDraw()",
      "HRESULT EndDraw(ULong*, ULong*)",
      "D2D1_PIXEL_FORMAT GetPixelFormat()",
      "void SetDpi(Single, Single)",
      "void GetDpi(Single*, Single*)",
      "D2D_SIZE_F GetSize()",
      "D2D_SIZE_U GetPixelSize()",
      "UInt GetMaximumBitmapSize()",
      "Int IsSupported(D2D1_RENDER_TARGET_PROPERTIES*)"
    ]
  },
  {
    "Name": "IDWriteColorGlyphRunEnumerator",
    "Methods": [
      "HRESULT MoveNext(Int*)",
      "HRESULT GetCurrentRun(DWRITE_COLOR_GLYPH_RUN**)"
    ]
  },
  {
    "Name": "IDWriteColorGlyphRunEnumerator",
    "Methods": [
      "HRESULT MoveNext(Int*)",
      "HRESULT GetCurrentRun(DWRITE_COLOR_GLYPH_RUN**)"
    ]
  },
  {
    "Name": "IDWriteRenderingParams1",
    "Methods": [
      "Single GetGrayscaleEnhancedContrast()"
    ]
  },
  {
    "Name": "IDWriteRenderingParams1",
    "Methods": [
      "Single GetGrayscaleEnhancedContrast()"
    ]
  },
  {
    "Name": "IDWriteFontCollection",
    "Methods": [
      "UInt GetFontFamilyCount()",
      "HRESULT GetFontFamily(UInt, IDWriteFontFamily**)",
      "HRESULT FindFamilyName(UShort*, UInt*, Int*)",
      "HRESULT GetFontFromFontFace(IDWriteFontFace*, IDWriteFont**)"
    ]
  },
  {
    "Name": "IDWriteFontCollection",
    "Methods": [
      "UInt GetFontFamilyCount()",
      "HRESULT GetFontFamily(UInt, IDWriteFontFamily**)",
      "HRESULT FindFamilyName(UShort*, UInt*, Int*)",
      "HRESULT GetFontFromFontFace(IDWriteFontFace*, IDWriteFont**)"
    ]
  },
  {
    "Name": "ID2D1SvgElement",
    "Methods": [
      "void GetDocument(ID2D1SvgDocument**)",
      "HRESULT GetTagName(UShort*, UInt)",
      "UInt GetTagNameLength()",
      "Int IsTextContent()",
      "void GetParent(ID2D1SvgElement**)",
      "Int HasChildren()",
      "void GetFirstChild(ID2D1SvgElement**)",
      "void GetLastChild(ID2D1SvgElement**)",
      "HRESULT GetPreviousChild(ID2D1SvgElement*, ID2D1SvgElement**)",
      "HRESULT GetNextChild(ID2D1SvgElement*, ID2D1SvgElement**)",
      "HRESULT InsertChildBefore(ID2D1SvgElement*, ID2D1SvgElement*)",
      "HRESULT AppendChild(ID2D1SvgElement*)",
      "HRESULT ReplaceChild(ID2D1SvgElement*, ID2D1SvgElement*)",
      "HRESULT RemoveChild(ID2D1SvgElement*)",
      "HRESULT CreateChild(UShort*, ID2D1SvgElement**)",
      "Int IsAttributeSpecified(UShort*, Int*)",
      "UInt GetSpecifiedAttributeCount()",
      "HRESULT GetSpecifiedAttributeName(UInt, UShort*, UInt, Int*)",
      "HRESULT GetSpecifiedAttributeNameLength(UInt, UInt*, Int*)",
      "HRESULT RemoveAttribute(UShort*)",
      "HRESULT SetTextValue(UShort*, UInt)",
      "HRESULT GetTextValue(UShort*, UInt)",
      "UInt GetTextValueLength()",
      "HRESULT SetAttributeValue(UShort*, ID2D1SvgAttribute*)",
      "HRESULT SetAttributeValue(UShort*, D2D1_SVG_ATTRIBUTE_POD_TYPE, void*, UInt)",
      "HRESULT SetAttributeValue(UShort*, D2D1_SVG_ATTRIBUTE_STRING_TYPE, UShort*)",
      "HRESULT GetAttributeValue(UShort*, Guid*, void**)",
      "HRESULT GetAttributeValue(UShort*, D2D1_SVG_ATTRIBUTE_POD_TYPE, void*, UInt)",
      "HRESULT GetAttributeValue(UShort*, D2D1_SVG_ATTRIBUTE_STRING_TYPE, UShort*, UInt)",
      "HRESULT GetAttributeValueLength(UShort*, D2D1_SVG_ATTRIBUTE_STRING_TYPE, UInt*)"
    ]
  },
  {
    "Name": "ID2D1SvgElement",
    "Methods": [
      "void GetDocument(ID2D1SvgDocument**)",
      "HRESULT GetTagName(UShort*, UInt)",
      "UInt GetTagNameLength()",
      "Int IsTextContent()",
      "void GetParent(ID2D1SvgElement**)",
      "Int HasChildren()",
      "void GetFirstChild(ID2D1SvgElement**)",
      "void GetLastChild(ID2D1SvgElement**)",
      "HRESULT GetPreviousChild(ID2D1SvgElement*, ID2D1SvgElement**)",
      "HRESULT GetNextChild(ID2D1SvgElement*, ID2D1SvgElement**)",
      "HRESULT InsertChildBefore(ID2D1SvgElement*, ID2D1SvgElement*)",
      "HRESULT AppendChild(ID2D1SvgElement*)",
      "HRESULT ReplaceChild(ID2D1SvgElement*, ID2D1SvgElement*)",
      "HRESULT RemoveChild(ID2D1SvgElement*)",
      "HRESULT CreateChild(UShort*, ID2D1SvgElement**)",
      "Int IsAttributeSpecified(UShort*, Int*)",
      "UInt GetSpecifiedAttributeCount()",
      "HRESULT GetSpecifiedAttributeName(UInt, UShort*, UInt, Int*)",
      "HRESULT GetSpecifiedAttributeNameLength(UInt, UInt*, Int*)",
      "HRESULT RemoveAttribute(UShort*)",
      "HRESULT SetTextValue(UShort*, UInt)",
      "HRESULT GetTextValue(UShort*, UInt)",
      "UInt GetTextValueLength()",
      "HRESULT SetAttributeValue(UShort*, ID2D1SvgAttribute*)",
      "HRESULT SetAttributeValue(UShort*, D2D1_SVG_ATTRIBUTE_POD_TYPE, void*, UInt)",
      "HRESULT SetAttributeValue(UShort*, D2D1_SVG_ATTRIBUTE_STRING_TYPE, UShort*)",
      "HRESULT GetAttributeValue(UShort*, Guid*, void**)",
      "HRESULT GetAttributeValue(UShort*, D2D1_SVG_ATTRIBUTE_POD_TYPE, void*, UInt)",
      "HRESULT GetAttributeValue(UShort*, D2D1_SVG_ATTRIBUTE_STRING_TYPE, UShort*, UInt)",
      "HRESULT GetAttributeValueLength(UShort*, D2D1_SVG_ATTRIBUTE_STRING_TYPE, UInt*)"
    ]
  },
  {
    "Name": "IDWriteFontFallbackBuilder",
    "Methods": [
      "HRESULT AddMapping(DWRITE_UNICODE_RANGE*, UInt, UShort**, UInt, IDWriteFontCollection*, UShort*, UShort*, Single)",
      "HRESULT AddMappings(IDWriteFontFallback*)",
      "HRESULT CreateFontFallback(IDWriteFontFallback**)"
    ]
  },
  {
    "Name": "IDWriteFontFallbackBuilder",
    "Methods": [
      "HRESULT AddMapping(DWRITE_UNICODE_RANGE*, UInt, UShort**, UInt, IDWriteFontCollection*, UShort*, UShort*, Single)",
      "HRESULT AddMappings(IDWriteFontFallback*)",
      "HRESULT CreateFontFallback(IDWriteFontFallback**)"
    ]
  },
  {
    "Name": "IDXGIObject",
    "Methods": [
      "HRESULT SetPrivateData(Guid*, UInt, void*)",
      "HRESULT SetPrivateDataInterface(Guid*, IUnknown*)",
      "HRESULT GetPrivateData(Guid*, UInt*, void*)",
      "HRESULT GetParent(Guid*, void**)"
    ]
  },
  {
    "Name": "IDXGIObject",
    "Methods": [
      "HRESULT SetPrivateData(Guid*, UInt, void*)",
      "HRESULT SetPrivateDataInterface(Guid*, IUnknown*)",
      "HRESULT GetPrivateData(Guid*, UInt*, void*)",
      "HRESULT GetParent(Guid*, void**)"
    ]
  },
  {
    "Name": "IDWriteFontFile",
    "Methods": [
      "HRESULT GetReferenceKey(void**, UInt*)",
      "HRESULT GetLoader(IDWriteFontFileLoader**)",
      "HRESULT Analyze(Int*, DWRITE_FONT_FILE_TYPE*, DWRITE_FONT_FACE_TYPE*, UInt*)"
    ]
  },
  {
    "Name": "IDWriteFontFile",
    "Methods": [
      "HRESULT GetReferenceKey(void**, UInt*)",
      "HRESULT GetLoader(IDWriteFontFileLoader**)",
      "HRESULT Analyze(Int*, DWRITE_FONT_FILE_TYPE*, DWRITE_FONT_FACE_TYPE*, UInt*)"
    ]
  },
  {
    "Name": "IDWriteFont",
    "Methods": [
      "HRESULT GetFontFamily(IDWriteFontFamily**)",
      "DWRITE_FONT_WEIGHT GetWeight()",
      "DWRITE_FONT_STRETCH GetStretch()",
      "DWRITE_FONT_STYLE GetStyle()",
      "Int IsSymbolFont()",
      "HRESULT GetFaceNames(IDWriteLocalizedStrings**)",
      "HRESULT GetInformationalStrings(DWRITE_INFORMATIONAL_STRING_ID, IDWriteLocalizedStrings**, Int*)",
      "DWRITE_FONT_SIMULATIONS GetSimulations()",
      "void GetMetrics(DWRITE_FONT_METRICS*)",
      "HRESULT HasCharacter(UInt, Int*)",
      "HRESULT CreateFontFace(IDWriteFontFace**)"
    ]
  },
  {
    "Name": "IDWriteFont",
    "Methods": [
      "HRESULT GetFontFamily(IDWriteFontFamily**)",
      "DWRITE_FONT_WEIGHT GetWeight()",
      "DWRITE_FONT_STRETCH GetStretch()",
      "DWRITE_FONT_STYLE GetStyle()",
      "Int IsSymbolFont()",
      "HRESULT GetFaceNames(IDWriteLocalizedStrings**)",
      "HRESULT GetInformationalStrings(DWRITE_INFORMATIONAL_STRING_ID, IDWriteLocalizedStrings**, Int*)",
      "DWRITE_FONT_SIMULATIONS GetSimulations()",
      "void GetMetrics(DWRITE_FONT_METRICS*)",
      "HRESULT HasCharacter(UInt, Int*)",
      "HRESULT CreateFontFace(IDWriteFontFace**)"
    ]
  },
  {
    "Name": "IDWriteFontCollection1",
    "Methods": [
      "HRESULT GetFontSet(IDWriteFontSet**)",
      "HRESULT GetFontFamily(UInt, IDWriteFontFamily1**)"
    ]
  },
  {
    "Name": "IDWriteFontCollection1",
    "Methods": [
      "HRESULT GetFontSet(IDWriteFontSet**)",
      "HRESULT GetFontFamily(UInt, IDWriteFontFamily1**)"
    ]
  },
  {
    "Name": "IDWriteFactory2",
    "Methods": [
      "HRESULT GetSystemFontFallback(IDWriteFontFallback**)",
      "HRESULT CreateFontFallbackBuilder(IDWriteFontFallbackBuilder**)",
      "HRESULT TranslateColorGlyphRun(Single, Single, DWRITE_GLYPH_RUN*, DWRITE_GLYPH_RUN_DESCRIPTION*, DWRITE_MEASURING_MODE, DWRITE_MATRIX*, UInt, IDWriteColorGlyphRunEnumerator**)",
      "HRESULT CreateCustomRenderingParams(Single, Single, Single, Single, DWRITE_PIXEL_GEOMETRY, DWRITE_RENDERING_MODE, DWRITE_GRID_FIT_MODE, IDWriteRenderingParams2**)",
      "HRESULT CreateGlyphRunAnalysis(DWRITE_GLYPH_RUN*, DWRITE_MATRIX*, DWRITE_RENDERING_MODE, DWRITE_MEASURING_MODE, DWRITE_GRID_FIT_MODE, DWRITE_TEXT_ANTIALIAS_MODE, Single, Single, IDWriteGlyphRunAnalysis**)"
    ]
  },
  {
    "Name": "IDWriteFactory2",
    "Methods": [
      "HRESULT GetSystemFontFallback(IDWriteFontFallback**)",
      "HRESULT CreateFontFallbackBuilder(IDWriteFontFallbackBuilder**)",
      "HRESULT TranslateColorGlyphRun(Single, Single, DWRITE_GLYPH_RUN*, DWRITE_GLYPH_RUN_DESCRIPTION*, DWRITE_MEASURING_MODE, DWRITE_MATRIX*, UInt, IDWriteColorGlyphRunEnumerator**)",
      "HRESULT CreateCustomRenderingParams(Single, Single, Single, Single, DWRITE_PIXEL_GEOMETRY, DWRITE_RENDERING_MODE, DWRITE_GRID_FIT_MODE, IDWriteRenderingParams2**)",
      "HRESULT CreateGlyphRunAnalysis(DWRITE_GLYPH_RUN*, DWRITE_MATRIX*, DWRITE_RENDERING_MODE, DWRITE_MEASURING_MODE, DWRITE_GRID_FIT_MODE, DWRITE_TEXT_ANTIALIAS_MODE, Single, Single, IDWriteGlyphRunAnalysis**)"
    ]
  },
  {
    "Name": "IDCompositionVisual",
    "Methods": [
      "HRESULT SetOffsetX(IDCompositionAnimation*)",
      "HRESULT SetOffsetX(Single)",
      "HRESULT SetOffsetY(IDCompositionAnimation*)",
      "HRESULT SetOffsetY(Single)",
      "HRESULT SetTransform(IDCompositionTransform*)",
      "HRESULT SetTransform(D2D_MATRIX_3X2_F*)",
      "HRESULT SetTransformParent(IDCompositionVisual*)",
      "HRESULT SetEffect(IDCompositionEffect*)",
      "HRESULT SetBitmapInterpolationMode(DCOMPOSITION_BITMAP_INTERPOLATION_MODE)",
      "HRESULT SetBorderMode(DCOMPOSITION_BORDER_MODE)",
      "HRESULT SetClip(IDCompositionClip*)",
      "HRESULT SetClip(D2D_RECT_F*)",
      "HRESULT SetContent(IUnknown*)",
      "HRESULT AddVisual(IDCompositionVisual*, Int, IDCompositionVisual*)",
      "HRESULT RemoveVisual(IDCompositionVisual*)",
      "HRESULT RemoveAllVisuals()",
      "HRESULT SetCompositeMode(DCOMPOSITION_COMPOSITE_MODE)"
    ]
  },
  {
    "Name": "IDCompositionVisual",
    "Methods": [
      "HRESULT SetOffsetX(IDCompositionAnimation*)",
      "HRESULT SetOffsetX(Single)",
      "HRESULT SetOffsetY(IDCompositionAnimation*)",
      "HRESULT SetOffsetY(Single)",
      "HRESULT SetTransform(IDCompositionTransform*)",
      "HRESULT SetTransform(D2D_MATRIX_3X2_F*)",
      "HRESULT SetTransformParent(IDCompositionVisual*)",
      "HRESULT SetEffect(IDCompositionEffect*)",
      "HRESULT SetBitmapInterpolationMode(DCOMPOSITION_BITMAP_INTERPOLATION_MODE)",
      "HRESULT SetBorderMode(DCOMPOSITION_BORDER_MODE)",
      "HRESULT SetClip(IDCompositionClip*)",
      "HRESULT SetClip(D2D_RECT_F*)",
      "HRESULT SetContent(IUnknown*)",
      "HRESULT AddVisual(IDCompositionVisual*, Int, IDCompositionVisual*)",
      "HRESULT RemoveVisual(IDCompositionVisual*)",
      "HRESULT RemoveAllVisuals()",
      "HRESULT SetCompositeMode(DCOMPOSITION_COMPOSITE_MODE)"
    ]
  },
  {
    "Name": "IDWriteRenderingParams2",
    "Methods": [
      "DWRITE_GRID_FIT_MODE GetGridFitMode()"
    ]
  },
  {
    "Name": "IDWriteRenderingParams2",
    "Methods": [
      "DWRITE_GRID_FIT_MODE GetGridFitMode()"
    ]
  },
  {
    "Name": "IDWriteFontDownloadQueue",
    "Methods": [
      "HRESULT AddListener(IDWriteFontDownloadListener*, UInt*)",
      "HRESULT RemoveListener(UInt)",
      "Int IsEmpty()",
      "HRESULT BeginDownload(IUnknown*)",
      "HRESULT CancelDownload()",
      "ULong GetGenerationCount()"
    ]
  },
  {
    "Name": "IDWriteFontDownloadQueue",
    "Methods": [
      "HRESULT AddListener(IDWriteFontDownloadListener*, UInt*)",
      "HRESULT RemoveListener(UInt)",
      "Int IsEmpty()",
      "HRESULT BeginDownload(IUnknown*)",
      "HRESULT CancelDownload()",
      "ULong GetGenerationCount()"
    ]
  },
  {
    "Name": "IPDBError",
    "Methods": [
      "Int QueryLastError(UShort*, UInt)",
      "void SetLastError(Int, UShort*)",
      "void Destroy()"
    ]
  },
  {
    "Name": "IPDBError",
    "Methods": [
      "Int QueryLastError(UShort*, UInt)",
      "void SetLastError(Int, UShort*)",
      "void Destroy()"
    ]
  }
]