using System;
using Windows.Win32.Foundation;
using Windows.Win32.Interop;
using Windows.Win32.System.PropertiesSystem; // For PROPERTYKEY
using Windows.Win32.System.SystemServices;
using static Windows.Win32.Foundation.Apis; // Various constants
using static Windows.Win32.System.Diagnostics.Debug.WIN32_ERROR;
using static Windows.Win32.System.SystemServices.Apis; // Various constants
using static Windows.Win32.Media.Multimedia.Apis; // Various constants
using static Windows.Win32.Media.Audio.CoreAudio.Apis; // Various constants
using static Windows.Win32.Graphics.DirectShow.Apis; // Various constants
using static Windows.Win32.UI.WindowsAndMessaging.Apis; // For WM_USER
using static Windows.Win32.Storage.FileSystem.FILE_ACCESS_FLAGS; // For FILE_* constants
using static Windows.Win32.System.Diagnostics.Debug.FACILITY_CODE; // For MAKE_HRESULT constants


using static Windows.Win32.Security.Cryptography.Core.Apis;

namespace Windows.Win32.Security.Cryptography.Core
{
    [Flags]
    public enum BCRYPT_OPERATION : uint
    {
        BCRYPT_CIPHER_OPERATION = 1,
        BCRYPT_HASH_OPERATION = 2,
        BCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION = 4,
        BCRYPT_SECRET_AGREEMENT_OPERATION = 8,
        BCRYPT_SIGNATURE_OPERATION = 16,
        BCRYPT_RNG_OPERATION = 32,
    }

    [Flags]
    public enum NCRYPT_OPERATION : uint
    {
        NCRYPT_CIPHER_OPERATION = 1,
        NCRYPT_HASH_OPERATION = 2,
        NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION = 4,
        NCRYPT_SECRET_AGREEMENT_OPERATION = 8,
        NCRYPT_SIGNATURE_OPERATION = 16,
    }

    [Flags]
    public enum CERT_FIND_FLAGS : uint
    {
        CERT_FIND_ANY = (CERT_COMPARE_ANY << CERT_COMPARE_SHIFT),
        CERT_FIND_CERT_ID = (CERT_COMPARE_CERT_ID << CERT_COMPARE_SHIFT),
        CERT_FIND_CTL_USAGE = CERT_FIND_ENHKEY_USAGE,
        CERT_FIND_ENHKEY_USAGE = (CERT_COMPARE_ENHKEY_USAGE << CERT_COMPARE_SHIFT),
        CERT_FIND_EXISTING = (CERT_COMPARE_EXISTING << CERT_COMPARE_SHIFT),
        CERT_FIND_HASH = CERT_FIND_SHA1_HASH,
        CERT_FIND_HAS_PRIVATE_KEY = (CERT_COMPARE_HAS_PRIVATE_KEY << CERT_COMPARE_SHIFT),
        CERT_FIND_ISSUER_ATTR = (CERT_COMPARE_ATTR << CERT_COMPARE_SHIFT |                                  CERT_INFO_ISSUER_FLAG),
        CERT_FIND_ISSUER_NAME = (CERT_COMPARE_NAME << CERT_COMPARE_SHIFT |                                  CERT_INFO_ISSUER_FLAG),
        CERT_FIND_ISSUER_OF = (CERT_COMPARE_ISSUER_OF << CERT_COMPARE_SHIFT),
        CERT_FIND_ISSUER_STR = CERT_FIND_ISSUER_STR_W,
        CERT_FIND_KEY_IDENTIFIER = (CERT_COMPARE_KEY_IDENTIFIER << CERT_COMPARE_SHIFT),
        CERT_FIND_KEY_SPEC = (CERT_COMPARE_KEY_SPEC << CERT_COMPARE_SHIFT),
        CERT_FIND_MD5_HASH = (CERT_COMPARE_MD5_HASH << CERT_COMPARE_SHIFT),
        CERT_FIND_PROPERTY = (CERT_COMPARE_PROPERTY << CERT_COMPARE_SHIFT),
        CERT_FIND_PUBLIC_KEY = (CERT_COMPARE_PUBLIC_KEY << CERT_COMPARE_SHIFT),
        CERT_FIND_SHA1_HASH = (CERT_COMPARE_SHA1_HASH << CERT_COMPARE_SHIFT),
        CERT_FIND_SIGNATURE_HASH = (CERT_COMPARE_SIGNATURE_HASH << CERT_COMPARE_SHIFT),
        CERT_FIND_SUBJECT_ATTR = (CERT_COMPARE_ATTR << CERT_COMPARE_SHIFT |                                  CERT_INFO_SUBJECT_FLAG),
        CERT_FIND_SUBJECT_CERT = (CERT_COMPARE_SUBJECT_CERT << CERT_COMPARE_SHIFT),
        CERT_FIND_SUBJECT_NAME = (CERT_COMPARE_NAME << CERT_COMPARE_SHIFT |                                  CERT_INFO_SUBJECT_FLAG),
        CERT_FIND_SUBJECT_STR = CERT_FIND_SUBJECT_STR_W,
        CERT_FIND_CROSS_CERT_DIST_POINTS = (CERT_COMPARE_CROSS_CERT_DIST_POINTS << CERT_COMPARE_SHIFT),
        CERT_FIND_PUBKEY_MD5_HASH = (CERT_COMPARE_PUBKEY_MD5_HASH << CERT_COMPARE_SHIFT),
        CERT_FIND_SUBJECT_STR_A = (CERT_COMPARE_NAME_STR_A << CERT_COMPARE_SHIFT |                                  CERT_INFO_SUBJECT_FLAG),
        CERT_FIND_SUBJECT_STR_W = (CERT_COMPARE_NAME_STR_W << CERT_COMPARE_SHIFT |                                  CERT_INFO_SUBJECT_FLAG),
        CERT_FIND_ISSUER_STR_A = (CERT_COMPARE_NAME_STR_A << CERT_COMPARE_SHIFT |                                  CERT_INFO_ISSUER_FLAG),
        CERT_FIND_ISSUER_STR_W = (CERT_COMPARE_NAME_STR_W << CERT_COMPARE_SHIFT |                                  CERT_INFO_ISSUER_FLAG),
        CERT_FIND_SUBJECT_INFO_ACCESS = (CERT_COMPARE_SUBJECT_INFO_ACCESS << CERT_COMPARE_SHIFT),
        CERT_FIND_HASH_STR = (CERT_COMPARE_HASH_STR << CERT_COMPARE_SHIFT),
        CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG = 0x1,
        CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG = 0x2,
        CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG = 0x4,
        CERT_FIND_NO_ENHKEY_USAGE_FLAG = 0x8,
        CERT_FIND_OR_ENHKEY_USAGE_FLAG = 0x10,
        CERT_FIND_VALID_ENHKEY_USAGE_FLAG = 0x20,
        CERT_FIND_OPTIONAL_CTL_USAGE_FLAG = CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG,
        CERT_FIND_EXT_ONLY_CTL_USAGE_FLAG = CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG,
        CERT_FIND_PROP_ONLY_CTL_USAGE_FLAG = CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG,
        CERT_FIND_NO_CTL_USAGE_FLAG = CERT_FIND_NO_ENHKEY_USAGE_FLAG,
        CERT_FIND_OR_CTL_USAGE_FLAG = CERT_FIND_OR_ENHKEY_USAGE_FLAG,
        CERT_FIND_VALID_CTL_USAGE_FLAG = CERT_FIND_VALID_ENHKEY_USAGE_FLAG,
    }

    public enum CERT_QUERY_OBJECT_TYPE : uint
    {
        CERT_QUERY_OBJECT_FILE = 0x00000001,
        CERT_QUERY_OBJECT_BLOB = 0x00000002,
    }

    public enum CERT_QUERY_CONTENT_TYPE : uint
    {
        CERT_QUERY_CONTENT_CERT = 1,
        CERT_QUERY_CONTENT_CTL = 2,
        CERT_QUERY_CONTENT_CRL = 3,
        CERT_QUERY_CONTENT_SERIALIZED_STORE = 4,
        CERT_QUERY_CONTENT_SERIALIZED_CERT = 5,
        CERT_QUERY_CONTENT_SERIALIZED_CTL = 6,
        CERT_QUERY_CONTENT_SERIALIZED_CRL = 7,
        CERT_QUERY_CONTENT_PKCS7_SIGNED = 8,
        CERT_QUERY_CONTENT_PKCS7_UNSIGNED = 9,
        CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED = 10,
        CERT_QUERY_CONTENT_PKCS10 = 11,
        CERT_QUERY_CONTENT_PFX = 12,
        CERT_QUERY_CONTENT_CERT_PAIR = 13,
        CERT_QUERY_CONTENT_PFX_AND_LOAD = 14,
    }

    public enum CERT_QUERY_CONTENT_TYPE_FLAGS : uint
    {
        CERT_QUERY_CONTENT_FLAG_CERT = ( 1 << (int)CERT_QUERY_CONTENT_TYPE.CERT_QUERY_CONTENT_CERT),
        CERT_QUERY_CONTENT_FLAG_CTL = ( 1 << (int)CERT_QUERY_CONTENT_TYPE.CERT_QUERY_CONTENT_CTL),
        CERT_QUERY_CONTENT_FLAG_CRL = ( 1 << (int)CERT_QUERY_CONTENT_TYPE.CERT_QUERY_CONTENT_CRL),
        CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE = ( 1 << (int)CERT_QUERY_CONTENT_TYPE.CERT_QUERY_CONTENT_SERIALIZED_STORE),
        CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT = ( 1 << (int)CERT_QUERY_CONTENT_TYPE.CERT_QUERY_CONTENT_SERIALIZED_CERT),
        CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL = ( 1 << (int)CERT_QUERY_CONTENT_TYPE.CERT_QUERY_CONTENT_SERIALIZED_CTL),
        CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL = ( 1 << (int)CERT_QUERY_CONTENT_TYPE.CERT_QUERY_CONTENT_SERIALIZED_CRL),
        CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED = ( 1 << (int)CERT_QUERY_CONTENT_TYPE.CERT_QUERY_CONTENT_PKCS7_SIGNED),
        CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED = ( 1 << (int)CERT_QUERY_CONTENT_TYPE.CERT_QUERY_CONTENT_PKCS7_UNSIGNED),
        CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED = ( 1 << (int)CERT_QUERY_CONTENT_TYPE.CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED),
        CERT_QUERY_CONTENT_FLAG_PKCS10 = ( 1 << (int)CERT_QUERY_CONTENT_TYPE.CERT_QUERY_CONTENT_PKCS10),
        CERT_QUERY_CONTENT_FLAG_PFX = ( 1 << (int)CERT_QUERY_CONTENT_TYPE.CERT_QUERY_CONTENT_PFX),
        CERT_QUERY_CONTENT_FLAG_CERT_PAIR = ( 1 << (int)CERT_QUERY_CONTENT_TYPE.CERT_QUERY_CONTENT_CERT_PAIR),
        CERT_QUERY_CONTENT_FLAG_PFX_AND_LOAD = ( 1 << (int)CERT_QUERY_CONTENT_TYPE.CERT_QUERY_CONTENT_PFX_AND_LOAD),
        CERT_QUERY_CONTENT_FLAG_ALL = (CERT_QUERY_CONTENT_FLAG_CERT | CERT_QUERY_CONTENT_FLAG_CTL | CERT_QUERY_CONTENT_FLAG_CRL | CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE | CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT | CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL | CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL | CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED | CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED | CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED | CERT_QUERY_CONTENT_FLAG_PKCS10 | CERT_QUERY_CONTENT_FLAG_PFX | CERT_QUERY_CONTENT_FLAG_CERT_PAIR),
        CERT_QUERY_CONTENT_FLAG_ALL_ISSUER_CERT = (CERT_QUERY_CONTENT_FLAG_CERT | CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE | CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT | CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED | CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED),
    }

    public enum CERT_QUERY_FORMAT_TYPE : uint
    {
        CERT_QUERY_FORMAT_BINARY = 1,
        CERT_QUERY_FORMAT_BASE64_ENCODED = 2,
        CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED = 3,
    }

    public enum CERT_QUERY_FORMAT_TYPE_FLAGS : uint
    {
        CERT_QUERY_FORMAT_FLAG_BINARY = ( 1 << (int)CERT_QUERY_FORMAT_TYPE.CERT_QUERY_FORMAT_BINARY),
        CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED = ( 1 << (int)CERT_QUERY_FORMAT_TYPE.CERT_QUERY_FORMAT_BASE64_ENCODED),
        CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED = ( 1 << (int)CERT_QUERY_FORMAT_TYPE.CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED),
        CERT_QUERY_FORMAT_FLAG_ALL = (CERT_QUERY_FORMAT_FLAG_BINARY | CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED | CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED),
    }

    public enum CERT_QUERY_ENCODING_TYPE : uint
    {
        X509_ASN_ENCODING = 0x00000001,
        PKCS_7_ASN_ENCODING = 0x00010000,
    }

    public enum CERT_STRING_TYPE : uint
    {
        CERT_SIMPLE_NAME_STR = 1,
        CERT_OID_NAME_STR = 2,
        CERT_X500_NAME_STR = 3,
    }

    public enum BCRYPT_TABLE : uint
    {
        CRYPT_LOCAL = 0x00000001,
        CRYPT_DOMAIN = 0x00000002,
    }

    public enum CERT_KEY_SPEC : uint
    {
        AT_KEYEXCHANGE = 1,
        AT_SIGNATURE = 2,
        CERT_NCRYPT_KEY_SPEC = 4294967295,
    }

    public enum BCRYPT_INTERFACE : uint
    {
        BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE = 0x00000003,
        BCRYPT_CIPHER_INTERFACE = 0x00000001,
        BCRYPT_HASH_INTERFACE = 0x00000002,
        BCRYPT_RNG_INTERFACE = 0x00000006,
        BCRYPT_SECRET_AGREEMENT_INTERFACE = 0x00000004,
        BCRYPT_SIGNATURE_INTERFACE = 0x00000005,
        NCRYPT_KEY_STORAGE_INTERFACE = 0x00010001,
        NCRYPT_SCHANNEL_INTERFACE = 0x00010002,
        NCRYPT_SCHANNEL_SIGNATURE_INTERFACE = 0x00010003,
    }

    [Flags]
    public enum CRYPTUI_WIZ_FLAGS : uint
    {
        CRYPTUI_WIZ_NO_UI = 1,
        CRYPTUI_WIZ_IGNORE_NO_UI_FLAG_FOR_CSPS = 2,
        CRYPTUI_WIZ_NO_UI_EXCEPT_CSP = 3,
        CRYPTUI_WIZ_IMPORT_ALLOW_CERT = 131072,
        CRYPTUI_WIZ_IMPORT_ALLOW_CRL = 262144,
        CRYPTUI_WIZ_IMPORT_ALLOW_CTL = 524288,
        CRYPTUI_WIZ_IMPORT_NO_CHANGE_DEST_STORE = 65536,
        CRYPTUI_WIZ_IMPORT_TO_LOCALMACHINE = 1048576,
        CRYPTUI_WIZ_IMPORT_TO_CURRENTUSER = 2097152,
        CRYPTUI_WIZ_IMPORT_REMOTE_DEST_STORE = 4194304,
        CRYPTUI_WIZ_EXPORT_PRIVATE_KEY = 256,
        CRYPTUI_WIZ_EXPORT_NO_DELETE_PRIVATE_KEY = 512,
    }

    [Flags]
    public enum NCRYPT_FLAGS : uint
    {
        BCRYPT_PAD_NONE = 0x00000001,
        BCRYPT_PAD_OAEP = 0x00000004,
        BCRYPT_PAD_PKCS1 = 0x00000002,
        BCRYPT_PAD_PSS = 0x00000008,
        NCRYPT_SILENT_FLAG = 0x00000040,
        NCRYPT_NO_PADDING_FLAG = 0x00000001,
        NCRYPT_PAD_OAEP_FLAG = 0x00000004,
        NCRYPT_PAD_PKCS1_FLAG = 0x00000002,
        NCRYPT_REGISTER_NOTIFY_FLAG = 1,
        NCRYPT_UNREGISTER_NOTIFY_FLAG = 2,
        NCRYPT_MACHINE_KEY_FLAG = 32,
        NCRYPT_UNPROTECT_NO_DECRYPT = 0x00000001,
        NCRYPT_OVERWRITE_KEY_FLAG = 0x00000080,
        NCRYPT_NO_KEY_VALIDATION = BCRYPT_NO_KEY_VALIDATION,
        NCRYPT_WRITE_KEY_TO_LEGACY_STORE_FLAG = 0x00000200,
        NCRYPT_PAD_PSS_FLAG = 0x00000008,
        NCRYPT_PERSIST_FLAG = 0x80000000,
        NCRYPT_PERSIST_ONLY_FLAG = 0x40000000,
    }

    public enum CRYPT_STRING : uint
    {
        CRYPT_STRING_BASE64HEADER = 0,
        CRYPT_STRING_BASE64 = 1,
        CRYPT_STRING_BINARY = 2,
        CRYPT_STRING_BASE64REQUESTHEADER = 3,
        CRYPT_STRING_HEX = 4,
        CRYPT_STRING_HEXASCII = 5,
        CRYPT_STRING_BASE64X509CRLHEADER = 9,
        CRYPT_STRING_HEXADDR = 10,
        CRYPT_STRING_HEXASCIIADDR = 11,
        CRYPT_STRING_HEXRAW = 12,
        CRYPT_STRING_STRICT = 536870912,
        CRYPT_STRING_BASE64_ANY = 6,
        CRYPT_STRING_ANY = 7,
        CRYPT_STRING_HEX_ANY = 8,
    }

    [Flags]
    public enum CRYPT_IMPORT_PUBLIC_KEY_FLAGS : uint
    {
        CRYPT_OID_INFO_PUBKEY_SIGN_KEY_FLAG = 0x80000000,
        CRYPT_OID_INFO_PUBKEY_ENCRYPT_KEY_FLAG = 0x40000000,
    }

    public enum CRYPT_XML_FLAGS : uint
    {
        CRYPT_XML_FLAG_DISABLE_EXTENSIONS = 268435456,
        CRYPT_XML_FLAG_NO_SERIALIZE = 2147483648,
        CRYPT_XML_SIGN_ADD_KEYVALUE = 1,
    }

    [Flags]
    public enum CRYPT_ENCODE_OBJECT_FLAGS : uint
    {
        CRYPT_ENCODE_ALLOC_FLAG = 0x8000,
        CRYPT_ENCODE_ENABLE_PUNYCODE_FLAG = 0x20000,
        CRYPT_UNICODE_NAME_ENCODE_DISABLE_CHECK_TYPE_FLAG = CERT_RDN_DISABLE_CHECK_TYPE_FLAG,
        CRYPT_UNICODE_NAME_ENCODE_ENABLE_T61_UNICODE_FLAG = CERT_RDN_ENABLE_T61_UNICODE_FLAG,
        CRYPT_UNICODE_NAME_ENCODE_ENABLE_UTF8_UNICODE_FLAG = CERT_RDN_ENABLE_UTF8_UNICODE_FLAG,
    }

    public enum CRYPT_OBJECT_LOCATOR_RELEASE_REASON : uint
    {
        CRYPT_OBJECT_LOCATOR_RELEASE_SYSTEM_SHUTDOWN = 1,
        CRYPT_OBJECT_LOCATOR_RELEASE_SERVICE_STOP = 2,
        CRYPT_OBJECT_LOCATOR_RELEASE_PROCESS_EXIT = 3,
        CRYPT_OBJECT_LOCATOR_RELEASE_DLL_UNLOAD = 4,
    }

    [Flags]
    public enum CRYPT_ACQUIRE_FLAGS : uint
    {
        CRYPT_ACQUIRE_CACHE_FLAG = 0x00000001,
        CRYPT_ACQUIRE_COMPARE_KEY_FLAG = 0x00000004,
        CRYPT_ACQUIRE_NO_HEALING = 0x00000008,
        CRYPT_ACQUIRE_SILENT_FLAG = 0x00000040,
        CRYPT_ACQUIRE_USE_PROV_INFO_FLAG = 0x00000002,
    }

    [Flags]
    public enum CRYPT_GET_URL_FLAGS : uint
    {
        CRYPT_GET_URL_FROM_PROPERTY = 0x00000001,
        CRYPT_GET_URL_FROM_EXTENSION = 0x00000002,
        CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE = 0x00000004,
        CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE = 0x00000008,
    }

    public enum CERT_STORE_SAVE_AS : uint
    {
        CERT_STORE_SAVE_AS_PKCS7 = 2,
        CERT_STORE_SAVE_AS_STORE = 1,
    }

    public enum BCRYPT_QUERY_PROVIDER_MODE : uint
    {
        CRYPT_ANY = 0x00000004,
        CRYPT_UM = 0x00000001,
        CRYPT_KM = 0x00000002,
        CRYPT_MM = 0x00000003,
    }

    [Flags]
    public enum CERT_FIND_CHAIN_IN_STORE_FLAGS : uint
    {
        CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG = 0x0001,
        CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG = 0x0002,
        CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG = 0x8000,
        CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG = 0x0004,
        CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG = 0x0008,
        CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG = 0x4000,
    }

    public enum CERT_CONTROL_STORE_FLAGS : uint
    {
        CERT_STORE_CTRL_COMMIT_FORCE_FLAG = 0x1,
        CERT_STORE_CTRL_COMMIT_CLEAR_FLAG = 0x2,
        CERT_STORE_CTRL_INHIBIT_DUPLICATE_HANDLE_FLAG = 0x1,
    }

    [Flags]
    public enum BCRYPT_OPEN_ALGORITHM_PROVIDER_FLAGS : uint
    {
        BCRYPT_ALG_HANDLE_HMAC_FLAG = 0x00000008,
        BCRYPT_PROV_DISPATCH = 0x00000001,
        BCRYPT_HASH_REUSABLE_FLAG = 0x00000020,
    }

    public enum CERT_STORE_SAVE_TO : uint
    {
        CERT_STORE_SAVE_TO_FILE = 1,
        CERT_STORE_SAVE_TO_FILENAME = 4,
        CERT_STORE_SAVE_TO_FILENAME_A = 3,
        CERT_STORE_SAVE_TO_FILENAME_W = 4,
        CERT_STORE_SAVE_TO_MEMORY = 2,
    }

    public enum CRYPT_SET_PROV_PARAM_ID : uint
    {
        PP_CLIENT_HWND = 1,
        PP_DELETEKEY = 24,
        PP_KEYEXCHANGE_ALG = 14,
        PP_KEYEXCHANGE_PIN = 32,
        PP_KEYEXCHANGE_KEYSIZE = 12,
        PP_KEYSET_SEC_DESCR = 8,
        PP_PIN_PROMPT_STRING = 44,
        PP_ROOT_CERTSTORE = 46,
        PP_SIGNATURE_ALG = 15,
        PP_SIGNATURE_PIN = 33,
        PP_SIGNATURE_KEYSIZE = 13,
        PP_UI_PROMPT = 21,
        PP_USE_HARDWARE_RNG = 38,
        PP_USER_CERTSTORE = 42,
        PP_SECURE_KEYEXCHANGE_PIN = 47,
        PP_SECURE_SIGNATURE_PIN = 48,
        PP_SMARTCARD_READER = 43,
    }

    public enum CRYPT_KEY_PARAM_ID : uint
    {
        KP_ALGID = 7,
        KP_CERTIFICATE = 26,
        KP_PERMISSIONS = 6,
        KP_SALT = 2,
        KP_SALT_EX = 10,
        KP_BLOCKLEN = 8,
        KP_GET_USE_COUNT = 42,
        KP_KEYLEN = 9,
    }

    [Flags]
    public enum CRYPT_KEY_FLAGS : uint
    {
        CRYPT_EXPORTABLE = 1,
        CRYPT_USER_PROTECTED = 2,
        CRYPT_ARCHIVABLE = 0x00004000,
        CRYPT_CREATE_IV = 0x00000200,
        CRYPT_CREATE_SALT = 0x00000004,
        CRYPT_DATA_KEY = 0x00000800,
        CRYPT_FORCE_KEY_PROTECTION_HIGH = 0x00008000,
        CRYPT_KEK = 0x00000400,
        CRYPT_INITIATOR = 0x00000040,
        CRYPT_NO_SALT = 0x00000010,
        CRYPT_ONLINE = 0x00000080,
        CRYPT_PREGEN = 0x00000040,
        CRYPT_RECIPIENT = 0x00000010,
        CRYPT_SF = 0x00000100,
        CRYPT_SGCKEY = 0x00002000,
        CRYPT_VOLATILE = 0x00001000,
        CRYPT_MACHINE_KEYSET = 32,
        CRYPT_USER_KEYSET = 4096,
        PKCS12_PREFER_CNG_KSP = 256,
        PKCS12_ALWAYS_CNG_KSP = 0x00000200,
        PKCS12_ALLOW_OVERWRITE_KEY = 0x00004000,
        PKCS12_NO_PERSIST_KEY = 32768,
        PKCS12_INCLUDE_EXTENDED_PROPERTIES = 16,
        CRYPT_OAEP = 64,
        CRYPT_BLOB_VER3 = 128,
        CRYPT_DESTROYKEY = 4,
        CRYPT_SSL2_FALLBACK = 2,
        CRYPT_Y_ONLY = 1,
        CRYPT_IPSEC_HMAC_KEY = 0x00000100,
        CERT_SET_KEY_PROV_HANDLE_PROP_ID = 0x00000001,
        CERT_SET_KEY_CONTEXT_PROP_ID = 0x00000001,
    }

    public enum CRYPT_MSG_TYPE : uint
    {
        CMSG_DATA = 1,
        CMSG_SIGNED = 2,
        CMSG_ENVELOPED = 3,
        CMSG_SIGNED_AND_ENVELOPED = 4,
        CMSG_HASHED = 5,
    }

    public enum CERT_OPEN_STORE_FLAGS : uint
    {
        CERT_STORE_BACKUP_RESTORE_FLAG = 0x00000800,
        CERT_STORE_CREATE_NEW_FLAG = 0x00002000,
        CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG = 0x00000004,
        CERT_STORE_DELETE_FLAG = 0x00000010,
        CERT_STORE_ENUM_ARCHIVED_FLAG = 0x00000200,
        CERT_STORE_MAXIMUM_ALLOWED_FLAG = 0x00001000,
        CERT_STORE_NO_CRYPT_RELEASE_FLAG = 0x00000001,
        CERT_STORE_OPEN_EXISTING_FLAG = 0x00004000,
        CERT_STORE_READONLY_FLAG = 0x00008000,
        CERT_STORE_SET_LOCALIZED_NAME_FLAG = 0x00000002,
        CERT_STORE_SHARE_CONTEXT_FLAG = 0x00000080,
        CERT_STORE_UPDATE_KEYID_FLAG = 0x00000400,
    }

    [Flags]
    public enum CRYPT_DEFAULT_CONTEXT_FLAGS : uint
    {
        CRYPT_DEFAULT_CONTEXT_AUTO_RELEASE_FLAG = 0x00000001,
        CRYPT_DEFAULT_CONTEXT_PROCESS_FLAG = 0x00000002,
    }

    public enum CRYPT_VERIFY_CERT_FLAGS : uint
    {
        CRYPT_VERIFY_CERT_SIGN_DISABLE_MD2_MD4_FLAG = 1,
        CRYPT_VERIFY_CERT_SIGN_SET_STRONG_PROPERTIES_FLAG = 2,
        CRYPT_VERIFY_CERT_SIGN_RETURN_STRONG_PROPERTIES_FLAG = 4,
    }

    public enum CRYPT_SET_HASH_PARAM : uint
    {
        HP_HMAC_INFO = 0x0005,
        HP_HASHVAL = 0x0002,
    }

    public enum CERT_SYSTEM_STORE_FLAGS : uint
    {
        CERT_SYSTEM_STORE_LOCATION_MASK = 0x00FF0000,
        CERT_SYSTEM_STORE_RELOCATE_FLAG = 0x80000000,
    }

    [Flags]
    public enum CERT_CREATE_SELFSIGN_FLAGS : uint
    {
        CERT_CREATE_SELFSIGN_NO_KEY_INFO = 2,
        CERT_CREATE_SELFSIGN_NO_SIGN = 1,
    }

    public enum CRYPT_DEFAULT_CONTEXT_TYPE : uint
    {
        CRYPT_DEFAULT_CONTEXT_CERT_SIGN_OID = 1,
        CRYPT_DEFAULT_CONTEXT_MULTI_CERT_SIGN_OID = 2,
    }

    [Flags]
    public enum BCRYPT_RESOLVE_PROVIDERS_FLAGS : uint
    {
        CRYPT_ALL_FUNCTIONS = 1,
        CRYPT_ALL_PROVIDERS = 2,
    }

    public enum CERT_FIND_TYPE : uint
    {
        CTL_FIND_ANY = 0,
        CTL_FIND_SHA1_HASH = 1,
        CTL_FIND_MD5_HASH = 2,
        CTL_FIND_USAGE = 3,
        CTL_FIND_SAME_USAGE_FLAG = 0x1,
        CTL_FIND_EXISTING = 5,
        CTL_FIND_SUBJECT = 4,
    }

    public enum CRYPT_FIND_FLAGS : uint
    {
        CRYPT_FIND_USER_KEYSET_FLAG = 0x00000001,
        CRYPT_FIND_MACHINE_KEYSET_FLAG = 0x00000002,
        CRYPT_FIND_SILENT_KEYSET_FLAG = 0x00000040,
    }

    [Flags]
    public enum CRYPTUI_VIEWCERTIFICATE_FLAGS : uint
    {
        CRYPTUI_HIDE_HIERARCHYPAGE = 0x00000001,
        CRYPTUI_HIDE_DETAILPAGE = 0x00000002,
        CRYPTUI_DISABLE_EDITPROPERTIES = 0x00000004,
        CRYPTUI_ENABLE_EDITPROPERTIES = 0x00000008,
        CRYPTUI_DISABLE_ADDTOSTORE = 0x00000010,
        CRYPTUI_ENABLE_ADDTOSTORE = 0x00000020,
        CRYPTUI_ACCEPT_DECLINE_STYLE = 0x00000040,
        CRYPTUI_IGNORE_UNTRUSTED_ROOT = 0x00000080,
        CRYPTUI_DONT_OPEN_STORES = 0x00000100,
        CRYPTUI_ONLY_OPEN_ROOT_STORE = 0x00000200,
        CRYPTUI_WARN_UNTRUSTED_ROOT = 0x00000400,
        CRYPTUI_ENABLE_REVOCATION_CHECKING = 0x00000800,
        CRYPTUI_WARN_REMOTE_TRUST = 0x00001000,
        CRYPTUI_DISABLE_EXPORT = 0x00002000,
        CRYPTUI_ENABLE_REVOCATION_CHECK_END_CERT = 0x00004000,
        CRYPTUI_ENABLE_REVOCATION_CHECK_CHAIN = 0x00008000,
        CRYPTUI_ENABLE_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT = CRYPTUI_ENABLE_REVOCATION_CHECKING,
        CRYPTUI_DISABLE_HTMLLINK = 0x00010000,
        CRYPTUI_DISABLE_ISSUERSTATEMENT = 0x00020000,
        CRYPTUI_CACHE_ONLY_URL_RETRIEVAL = 0x00040000,
    }

    [Flags]
    public enum CRYPT_IMAGE_REF_FLAGS : uint
    {
        CRYPT_MIN_DEPENDENCIES = 0x00000001,
        CRYPT_PROCESS_ISOLATE = 0x00010000,
    }

    public enum CERT_REVOCATION_STATUS_REASON : uint
    {
        CRL_REASON_UNSPECIFIED = 0,
        CRL_REASON_KEY_COMPROMISE = 1,
        CRL_REASON_CA_COMPROMISE = 2,
        CRL_REASON_AFFILIATION_CHANGED = 3,
        CRL_REASON_SUPERSEDED = 4,
        CRL_REASON_CESSATION_OF_OPERATION = 5,
        CRL_REASON_CERTIFICATE_HOLD = 6,
        CRL_REASON_REMOVE_FROM_CRL = 8,
    }

    [Flags]
    public enum CERT_ROOT_PROGRAM_FLAGS : uint
    {
        CERT_ROOT_PROGRAM_FLAG_LSC = 64,
        CERT_ROOT_PROGRAM_FLAG_ORG = 128,
        CERT_ROOT_PROGRAM_FLAG_SUBJECT_LOGO = 32,
    }

    public enum CRYPT_XML_KEY_VALUE_TYPE : uint
    {
        CRYPT_XML_KEY_VALUE_TYPE_DSA = 1,
        CRYPT_XML_KEY_VALUE_TYPE_RSA = 2,
        CRYPT_XML_KEY_VALUE_TYPE_ECDSA = 3,
        CRYPT_XML_KEY_VALUE_TYPE_CUSTOM = 4,
    }

    public enum CERT_LOGOTYPE_CHOICE : uint
    {
        CERT_LOGOTYPE_NO_IMAGE_RESOLUTION_CHOICE = 0,
        CERT_LOGOTYPE_BITS_IMAGE_RESOLUTION_CHOICE = 1,
        CERT_LOGOTYPE_TABLE_SIZE_IMAGE_RESOLUTION_CHOICE = 2,
    }

    [Flags]
    public enum CERT_SELECT_STRUCT_FLAGS : uint
    {
        CSS_HIDE_PROPERTIES = 0x00000001,
        CSS_ENABLEHOOK = 0x00000002,
        CSS_ALLOWMULTISELECT = 0x00000004,
        CSS_SHOW_HELP = 0x00000010,
        CSS_ENABLETEMPLATE = 0x00000020,
        CSS_ENABLETEMPLATEHANDLE = 0x00000040,
    }

    public enum CMSG_KEY_AGREE_OPTION : uint
    {
        CMSG_KEY_AGREE_EPHEMERAL_KEY_CHOICE = 1,
        CMSG_KEY_AGREE_STATIC_KEY_CHOICE = 2,
    }

    public enum CRYPTUI_WIZ_IMPORT_SUBJECT_OPTION : uint
    {
        CRYPTUI_WIZ_IMPORT_SUBJECT_FILE = 1,
        CRYPTUI_WIZ_IMPORT_SUBJECT_CERT_CONTEXT = 2,
        CRYPTUI_WIZ_IMPORT_SUBJECT_CTL_CONTEXT = 3,
        CRYPTUI_WIZ_IMPORT_SUBJECT_CRL_CONTEXT = 4,
        CRYPTUI_WIZ_IMPORT_SUBJECT_CERT_STORE = 5,
    }

    public enum CERT_LOGOTYPE_OPTION : uint
    {
        CERT_LOGOTYPE_DIRECT_INFO_CHOICE = 1,
        CERT_LOGOTYPE_INDIRECT_INFO_CHOICE = 2,
    }

    [Flags]
    public enum CERT_STORE_PROV_FLAGS : uint
    {
        CERT_STORE_PROV_EXTERNAL_FLAG = 0x1,
        CERT_STORE_PROV_DELETED_FLAG = 0x2,
        CERT_STORE_PROV_NO_PERSIST_FLAG = 0x4,
        CERT_STORE_PROV_SYSTEM_STORE_FLAG = 0x8,
        CERT_STORE_PROV_LM_SYSTEM_STORE_FLAG = 0x10,
    }

    public enum CMSG_KEY_AGREE_ORIGINATOR : uint
    {
        CMSG_KEY_AGREE_ORIGINATOR_CERT = 1,
        CMSG_KEY_AGREE_ORIGINATOR_PUBLIC_KEY = 2,
    }

    public enum CRYPTUI_WIZ_DIGITAL_SIGN_SUBJECT : uint
    {
        CRYPTUI_WIZ_DIGITAL_SIGN_SUBJECT_BLOB = 0x02,
        CRYPTUI_WIZ_DIGITAL_SIGN_SUBJECT_FILE = 0x01,
        CRYPTUI_WIZ_DIGITAL_SIGN_SUBJECT_NONE = 0,
    }

    [Flags]
    public enum CRYPT_CONTEXT_CONFIG_FLAGS : uint
    {
        CRYPT_EXCLUSIVE = 0x00000001,
        CRYPT_OVERRIDE = 0x00010000,
    }

    public enum BCRYPT_DSA_MAGIC : uint
    {
        BCRYPT_DSA_PUBLIC_MAGIC = 1112560452,
        BCRYPT_DSA_PRIVATE_MAGIC = 1448104772,
    }

    public enum CRYPTUI_WIZ_DIGITAL_SIGN : uint
    {
        CRYPTUI_WIZ_DIGITAL_SIGN_CERT = 0x01,
        CRYPTUI_WIZ_DIGITAL_SIGN_STORE = 0x02,
        CRYPTUI_WIZ_DIGITAL_SIGN_PVK = 0x03,
        CRYPTUI_WIZ_DIGITAL_SIGN_NONE = 0,
    }

    public enum CRYPT_XML_X509DATA_TYPE : uint
    {
        CRYPT_XML_X509DATA_TYPE_ISSUER_SERIAL = 1,
        CRYPT_XML_X509DATA_TYPE_SKI = 2,
        CRYPT_XML_X509DATA_TYPE_SUBJECT_NAME = 3,
        CRYPT_XML_X509DATA_TYPE_CERTIFICATE = 4,
        CRYPT_XML_X509DATA_TYPE_CRL = 5,
        CRYPT_XML_X509DATA_TYPE_CUSTOM = 6,
    }

    public enum CERT_BIOMETRIC_DATA_TYPE : uint
    {
        CERT_BIOMETRIC_PREDEFINED_DATA_CHOICE = 1,
        CERT_BIOMETRIC_OID_DATA_CHOICE = 2,
    }

    public enum CERT_CHAIN_POLICY_FLAGS : uint
    {
        CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG = 0x00000001,
        CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG = 0x00000002,
        CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG = 0x00000004,
        CERT_CHAIN_POLICY_IGNORE_ALL_NOT_TIME_VALID_FLAGS = (     CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG                |     CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG            |     CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG                     ),
        CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG = 0x00000008,
        CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG = 0x00000010,
        CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG = 0x00000020,
        CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG = 0x00000040,
        CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG = 0x00000080,
        CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG = 0x00000100,
        CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG = 0x00000200,
        CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG = 0x00000400,
        CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG = 0x00000800,
        CERT_CHAIN_POLICY_IGNORE_ALL_REV_UNKNOWN_FLAGS = (     CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG         |     CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG  |     CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG          |     CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG              ),
        CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG = 0x00008000,
        CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG = 0x00004000,
        CERT_CHAIN_POLICY_IGNORE_NOT_SUPPORTED_CRITICAL_EXT_FLAG = 0x00002000,
        CERT_CHAIN_POLICY_IGNORE_PEER_TRUST_FLAG = 0x00001000,
    }

    [Flags]
    public enum CERT_STRONG_SIGN_FLAGS : uint
    {
        CERT_STRONG_SIGN_ENABLE_CRL_CHECK = 1,
        CERT_STRONG_SIGN_ENABLE_OCSP_CHECK = 2,
    }

    public enum CERT_LOGOTYPE_IMAGE_INFO_TYPE : uint
    {
        CERT_LOGOTYPE_GRAY_SCALE_IMAGE_INFO_CHOICE = 1,
        CERT_LOGOTYPE_COLOR_IMAGE_INFO_CHOICE = 2,
    }

    public enum CRYPT_XML_STATUS_INFO_STATUS : uint
    {
        CRYPT_XML_STATUS_INTERNAL_REFERENCE = 1,
        CRYPT_XML_STATUS_KEY_AVAILABLE = 2,
        CRYPT_XML_STATUS_DIGESTING = 4,
        CRYPT_XML_STATUS_DIGEST_VALID = 8,
        CRYPT_XML_STATUS_SIGNATURE_VALID = 65536,
        CRYPT_XML_STATUS_OPENED_TO_ENCODE = 2147483648,
    }

    [Flags]
    public enum CRYPT_XML_TRANSFORM_FLAGS : uint
    {
        CRYPT_XML_TRANSFORM_ON_STREAM = 1,
        CRYPT_XML_TRANSFORM_ON_NODESET = 2,
        CRYPT_XML_TRANSFORM_URI_QUERY_STRING = 3,
    }

    public enum CRYPT_XML_GROUP_ID : uint
    {
        CRYPT_XML_GROUP_ID_HASH_________ = 1,
        CRYPT_XML_GROUP_ID_SIGN_________ = 2,
    }

    public enum CRYPTUI_WIZ_EXPORT_SUBJECT : uint
    {
        CRYPTUI_WIZ_EXPORT_CERT_CONTEXT = 1,
        CRYPTUI_WIZ_EXPORT_CTL_CONTEXT = 2,
        CRYPTUI_WIZ_EXPORT_CRL_CONTEXT = 3,
        CRYPTUI_WIZ_EXPORT_CERT_STORE = 4,
        CRYPTUI_WIZ_EXPORT_CERT_STORE_CERTIFICATES_ONLY = 5,
    }

    public enum CERT_SELECT_CRITERIA_TYPE : uint
    {
        CERT_SELECT_BY_ENHKEY_USAGE = 1,
        CERT_SELECT_BY_KEY_USAGE = 2,
        CERT_SELECT_BY_POLICY_OID = 3,
        CERT_SELECT_BY_PROV_NAME = 4,
        CERT_SELECT_BY_EXTENSION = 5,
        CERT_SELECT_BY_SUBJECT_HOST_NAME = 6,
        CERT_SELECT_BY_ISSUER_ATTR = 7,
        CERT_SELECT_BY_SUBJECT_ATTR = 8,
        CERT_SELECT_BY_ISSUER_NAME = 9,
        CERT_SELECT_BY_PUBLIC_KEY = 10,
        CERT_SELECT_BY_TLS_SIGNATURES = 11,
    }

    public enum CRYPTUI_WIZ_DIGITAL_SIGN_SIG_TYPE : uint
    {
        CRYPTUI_WIZ_DIGITAL_SIGN_COMMERCIAL = 0x0001,
        CRYPTUI_WIZ_DIGITAL_SIGN_INDIVIDUAL = 0x0002,
    }

    public enum BCRYPT_RSAKEY_BLOB_MAGIC : uint
    {
        BCRYPT_RSAPUBLIC_MAGIC = 0x31415352,
        BCRYPT_RSAPRIVATE_MAGIC = 0x32415352,
        BCRYPT_RSAFULLPRIVATE_MAGIC = 0x33415352,
    }

    public enum CRYPT_XML_KEYINFO_TYPE : uint
    {
        CRYPT_XML_KEYINFO_TYPE_KEYNAME = 1,
        CRYPT_XML_KEYINFO_TYPE_KEYVALUE = 2,
        CRYPT_XML_KEYINFO_TYPE_RETRIEVAL = 3,
        CRYPT_XML_KEYINFO_TYPE_X509DATA = 4,
        CRYPT_XML_KEYINFO_TYPE_CUSTOM = 5,
    }

    public enum CRYPT_TIMESTAMP_VERSION : uint
    {
        TIMESTAMP_VERSION = 1,
    }

    public enum CRYPTUI_WIZ_DIGITAL_SIGN_PVK_OPTION : uint
    {
        CRYPTUI_WIZ_DIGITAL_SIGN_PVK_FILE = 0x01,
        CRYPTUI_WIZ_DIGITAL_SIGN_PVK_PROV = 0x02,
    }

    public enum CERT_ID_OPTION : uint
    {
        CERT_ID_ISSUER_SERIAL_NUMBER = 1,
        CERT_ID_KEY_IDENTIFIER = 2,
        CERT_ID_SHA1_HASH = 3,
    }

    public enum HTTPSPOLICY_CALLBACK_DATA_AUTH_TYPE : uint
    {
        AUTHTYPE_CLIENT = 1,
        AUTHTYPE_SERVER = 2,
    }

    public enum CRYPTUI_WIZ_EXPORT_FORMAT : uint
    {
        CRYPTUI_WIZ_EXPORT_FORMAT_DER = 1,
        CRYPTUI_WIZ_EXPORT_FORMAT_PFX = 2,
        CRYPTUI_WIZ_EXPORT_FORMAT_PKCS7 = 3,
        CRYPTUI_WIZ_EXPORT_FORMAT_BASE64 = 4,
        CRYPTUI_WIZ_EXPORT_FORMAT_CRL = 6,
        CRYPTUI_WIZ_EXPORT_FORMAT_CTL = 7,
    }

    public enum BCRYPT_DH_KEY_BLOB_MAGIC : uint
    {
        BCRYPT_DH_PUBLIC_MAGIC = 1112557636,
        BCRYPT_DH_PRIVATE_MAGIC = 1448101956,
    }

    public enum CRYPTUI_WIZ_DIGITAL_ADDITIONAL_CERT_CHOICE : uint
    {
        CRYPTUI_WIZ_DIGITAL_SIGN_ADD_CHAIN = 0x00000001,
        CRYPTUI_WIZ_DIGITAL_SIGN_ADD_CHAIN_NO_ROOT = 0x00000002,
        CRYPTUI_WIZ_DIGITAL_SIGN_ADD_NONE = 0,
    }

    public enum CRYPT_XML_STATUS_ERROR_STATUS : uint
    {
        CRYPT_XML_STATUS_ERROR_NOT_RESOLVED = 1,
        CRYPT_XML_STATUS_ERROR_DIGEST_INVALID = 2,
        CRYPT_XML_STATUS_ERROR_NOT_SUPPORTED_ALGORITHM = 5,
        CRYPT_XML_STATUS_ERROR_NOT_SUPPORTED_TRANSFORM = 8,
        CRYPT_XML_STATUS_ERROR_SIGNATURE_INVALID = 65536,
        CRYPT_XML_STATUS_ERROR_KEYINFO_NOT_PARSED = 131072,
    }

    public enum CRYPT_TIMESTAMP_RESPONSE_STATUS : uint
    {
        TIMESTAMP_STATUS_GRANTED = 0,
        TIMESTAMP_STATUS_GRANTED_WITH_MODS = 1,
        TIMESTAMP_STATUS_REJECTED = 2,
        TIMESTAMP_STATUS_WAITING = 3,
        TIMESTAMP_STATUS_REVOCATION_WARNING = 4,
        TIMESTAMP_STATUS_REVOKED = 5,
    }

    public enum NCRYPT_ALGORITHM_NAME_CLASS : uint
    {
        NCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE = 3,
        NCRYPT_SECRET_AGREEMENT_INTERFACE = 4,
        NCRYPT_SIGNATURE_INTERFACE = 5,
    }

    public enum CTL_MODIFY_REQUEST_OPERATION : uint
    {
        CTL_MODIFY_REQUEST_ADD_TRUSTED = 3,
        CTL_MODIFY_REQUEST_ADD_NOT_TRUSTED = 1,
        CTL_MODIFY_REQUEST_REMOVE = 2,
    }

}
