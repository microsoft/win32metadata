
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif /*COM_NO_WINDOWS_H*/
#ifndef __windows2Esystem_h__
#define __windows2Esystem_h__
#ifndef __windows2Esystem_p_h__
#define __windows2Esystem_p_h__


#pragma once

//
// Deprecated attribute support
//

#pragma push_macro("DEPRECATED")
#undef DEPRECATED

#if !defined(DISABLE_WINRT_DEPRECATION)
#if defined(__cplusplus)
#if __cplusplus >= 201402
#define DEPRECATED(x) [[deprecated(x)]]
#define DEPRECATEDENUMERATOR(x) [[deprecated(x)]]
#elif defined(_MSC_VER)
#if _MSC_VER >= 1900
#define DEPRECATED(x) [[deprecated(x)]]
#define DEPRECATEDENUMERATOR(x) [[deprecated(x)]]
#else
#define DEPRECATED(x) __declspec(deprecated(x))
#define DEPRECATEDENUMERATOR(x)
#endif // _MSC_VER >= 1900
#else // Not Standard C++ or MSVC, ignore the construct.
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif  // C++ deprecation
#else // C - disable deprecation
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif
#else // Deprecation is disabled
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif  /* DEPRECATED */

// Disable Deprecation for this header, MIDL verifies that cross-type access is acceptable
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#else
#pragma warning(push)
#pragma warning(disable: 4996)
#endif

// Ensure that the setting of the /ns_prefix command line switch is consistent for all headers.
// If you get an error from the compiler indicating "warning C4005: 'CHECK_NS_PREFIX_STATE': macro redefinition", this
// indicates that you have included two different headers with different settings for the /ns_prefix MIDL command line switch
#if !defined(DISABLE_NS_PREFIX_CHECKS)
#define CHECK_NS_PREFIX_STATE "always"
#endif // !defined(DISABLE_NS_PREFIX_CHECKS)


#pragma push_macro("MIDL_CONST_ID")
#undef MIDL_CONST_ID
#define MIDL_CONST_ID const __declspec(selectany)


//  API Contract Inclusion Definitions
#if !defined(SPECIFIC_API_CONTRACT_DEFINITIONS)
#if !defined(WINDOWS_APPLICATIONMODEL_FULLTRUSTAPPCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_FULLTRUSTAPPCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_FULLTRUSTAPPCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_STARTUPTASKCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_STARTUPTASKCONTRACT_VERSION 0x30000
#endif // defined(WINDOWS_APPLICATIONMODEL_STARTUPTASKCONTRACT_VERSION)

#if !defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)
#define WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION 0x40000
#endif // defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)

#if !defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)
#define WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION 0xa0000
#endif // defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)

#if !defined(WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION)
#define WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION 0x70000
#endif // defined(WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION)

#if !defined(WINDOWS_UI_VIEWMANAGEMENT_VIEWMANAGEMENTVIEWSCALINGCONTRACT_VERSION)
#define WINDOWS_UI_VIEWMANAGEMENT_VIEWMANAGEMENTVIEWSCALINGCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_UI_VIEWMANAGEMENT_VIEWMANAGEMENTVIEWSCALINGCONTRACT_VERSION)

#endif // defined(SPECIFIC_API_CONTRACT_DEFINITIONS)


// Header files for imported files
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "windowscontracts.h"
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.h"
#include "Windows.Storage.h"
#include "Windows.Storage.Search.h"
#include "Windows.Storage.Streams.h"
#include "Windows.System.Diagnostics.h"
#include "Windows.System.RemoteSystems.h"
#include "Windows.UI.Popups.h"
#include "Windows.UI.ViewManagement.h"
// Importing Collections header
#include <windows.foundation.collections.h>

#if defined(__cplusplus) && !defined(CINTERFACE)
/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueueHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IDispatcherQueueHandler;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIDispatcherQueueHandler ABI::Windows::System::IDispatcherQueueHandler

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueueHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppActivationResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppActivationResult_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppActivationResult;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppActivationResult ABI::Windows::System::IAppActivationResult

#endif // ____x_ABI_CWindows_CSystem_CIAppActivationResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppDiagnosticInfo;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo ABI::Windows::System::IAppDiagnosticInfo

#endif // ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppDiagnosticInfo2;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2 ABI::Windows::System::IAppDiagnosticInfo2

#endif // ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppDiagnosticInfo3;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3 ABI::Windows::System::IAppDiagnosticInfo3

#endif // ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppDiagnosticInfoStatics;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics ABI::Windows::System::IAppDiagnosticInfoStatics

#endif // ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppDiagnosticInfoStatics2;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2 ABI::Windows::System::IAppDiagnosticInfoStatics2

#endif // ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppDiagnosticInfoWatcher;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher ABI::Windows::System::IAppDiagnosticInfoWatcher

#endif // ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppDiagnosticInfoWatcherEventArgs;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs ABI::Windows::System::IAppDiagnosticInfoWatcherEventArgs

#endif // ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppExecutionStateChangeResult;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult ABI::Windows::System::IAppExecutionStateChangeResult

#endif // ____x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppMemoryReport_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppMemoryReport_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppMemoryReport;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppMemoryReport ABI::Windows::System::IAppMemoryReport

#endif // ____x_ABI_CWindows_CSystem_CIAppMemoryReport_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppMemoryReport2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppMemoryReport2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppMemoryReport2;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppMemoryReport2 ABI::Windows::System::IAppMemoryReport2

#endif // ____x_ABI_CWindows_CSystem_CIAppMemoryReport2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppMemoryUsageLimitChangingEventArgs;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs ABI::Windows::System::IAppMemoryUsageLimitChangingEventArgs

#endif // ____x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppResourceGroupBackgroundTaskReport;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport ABI::Windows::System::IAppResourceGroupBackgroundTaskReport

#endif // ____x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppResourceGroupInfo;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo ABI::Windows::System::IAppResourceGroupInfo

#endif // ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppResourceGroupInfo2;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2 ABI::Windows::System::IAppResourceGroupInfo2

#endif // ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppResourceGroupInfoWatcher;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher ABI::Windows::System::IAppResourceGroupInfoWatcher

#endif // ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppResourceGroupInfoWatcherEventArgs;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs ABI::Windows::System::IAppResourceGroupInfoWatcherEventArgs

#endif // ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs ABI::Windows::System::IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs

#endif // ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppResourceGroupMemoryReport;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport ABI::Windows::System::IAppResourceGroupMemoryReport

#endif // ____x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppResourceGroupStateReport;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport ABI::Windows::System::IAppResourceGroupStateReport

#endif // ____x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppUriHandlerHost_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerHost_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppUriHandlerHost;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppUriHandlerHost ABI::Windows::System::IAppUriHandlerHost

#endif // ____x_ABI_CWindows_CSystem_CIAppUriHandlerHost_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppUriHandlerHostFactory;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory ABI::Windows::System::IAppUriHandlerHostFactory

#endif // ____x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppUriHandlerRegistration;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration ABI::Windows::System::IAppUriHandlerRegistration

#endif // ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppUriHandlerRegistrationManager;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager ABI::Windows::System::IAppUriHandlerRegistrationManager

#endif // ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IAppUriHandlerRegistrationManagerStatics;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics ABI::Windows::System::IAppUriHandlerRegistrationManagerStatics

#endif // ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IDateTimeSettingsStatics;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics ABI::Windows::System::IDateTimeSettingsStatics

#endif // ____x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueue_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IDispatcherQueue;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIDispatcherQueue ABI::Windows::System::IDispatcherQueue

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueue2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueue2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IDispatcherQueue2;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIDispatcherQueue2 ABI::Windows::System::IDispatcherQueue2

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueue2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueueController_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueController_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IDispatcherQueueController;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIDispatcherQueueController ABI::Windows::System::IDispatcherQueueController

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueueController_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IDispatcherQueueControllerStatics;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics ABI::Windows::System::IDispatcherQueueControllerStatics

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IDispatcherQueueShutdownStartingEventArgs;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs ABI::Windows::System::IDispatcherQueueShutdownStartingEventArgs

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IDispatcherQueueStatics;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIDispatcherQueueStatics ABI::Windows::System::IDispatcherQueueStatics

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IDispatcherQueueTimer;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer ABI::Windows::System::IDispatcherQueueTimer

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIFolderLauncherOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIFolderLauncherOptions_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IFolderLauncherOptions;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIFolderLauncherOptions ABI::Windows::System::IFolderLauncherOptions

#endif // ____x_ABI_CWindows_CSystem_CIFolderLauncherOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IKnownUserPropertiesStatics;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics ABI::Windows::System::IKnownUserPropertiesStatics

#endif // ____x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILaunchUriResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILaunchUriResult_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface ILaunchUriResult;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CILaunchUriResult ABI::Windows::System::ILaunchUriResult

#endif // ____x_ABI_CWindows_CSystem_CILaunchUriResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherOptions_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface ILauncherOptions;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CILauncherOptions ABI::Windows::System::ILauncherOptions

#endif // ____x_ABI_CWindows_CSystem_CILauncherOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherOptions2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherOptions2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface ILauncherOptions2;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CILauncherOptions2 ABI::Windows::System::ILauncherOptions2

#endif // ____x_ABI_CWindows_CSystem_CILauncherOptions2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherOptions3_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherOptions3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface ILauncherOptions3;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CILauncherOptions3 ABI::Windows::System::ILauncherOptions3

#endif // ____x_ABI_CWindows_CSystem_CILauncherOptions3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherOptions4_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherOptions4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface ILauncherOptions4;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CILauncherOptions4 ABI::Windows::System::ILauncherOptions4

#endif // ____x_ABI_CWindows_CSystem_CILauncherOptions4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface ILauncherStatics;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CILauncherStatics ABI::Windows::System::ILauncherStatics

#endif // ____x_ABI_CWindows_CSystem_CILauncherStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherStatics2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface ILauncherStatics2;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CILauncherStatics2 ABI::Windows::System::ILauncherStatics2

#endif // ____x_ABI_CWindows_CSystem_CILauncherStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherStatics3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface ILauncherStatics3;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CILauncherStatics3 ABI::Windows::System::ILauncherStatics3

#endif // ____x_ABI_CWindows_CSystem_CILauncherStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherStatics4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface ILauncherStatics4;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CILauncherStatics4 ABI::Windows::System::ILauncherStatics4

#endif // ____x_ABI_CWindows_CSystem_CILauncherStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherStatics5_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface ILauncherStatics5;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CILauncherStatics5 ABI::Windows::System::ILauncherStatics5

#endif // ____x_ABI_CWindows_CSystem_CILauncherStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherUIOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherUIOptions_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface ILauncherUIOptions;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CILauncherUIOptions ABI::Windows::System::ILauncherUIOptions

#endif // ____x_ABI_CWindows_CSystem_CILauncherUIOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherViewOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherViewOptions_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface ILauncherViewOptions;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CILauncherViewOptions ABI::Windows::System::ILauncherViewOptions

#endif // ____x_ABI_CWindows_CSystem_CILauncherViewOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IMemoryManagerStatics;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics ABI::Windows::System::IMemoryManagerStatics

#endif // ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IMemoryManagerStatics2;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics2 ABI::Windows::System::IMemoryManagerStatics2

#endif // ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IMemoryManagerStatics3;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics3 ABI::Windows::System::IMemoryManagerStatics3

#endif // ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IMemoryManagerStatics4;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics4 ABI::Windows::System::IMemoryManagerStatics4

#endif // ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIProcessLauncherOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIProcessLauncherOptions_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IProcessLauncherOptions;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIProcessLauncherOptions ABI::Windows::System::IProcessLauncherOptions

#endif // ____x_ABI_CWindows_CSystem_CIProcessLauncherOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIProcessLauncherResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIProcessLauncherResult_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IProcessLauncherResult;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIProcessLauncherResult ABI::Windows::System::IProcessLauncherResult

#endif // ____x_ABI_CWindows_CSystem_CIProcessLauncherResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIProcessLauncherStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIProcessLauncherStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IProcessLauncherStatics;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIProcessLauncherStatics ABI::Windows::System::IProcessLauncherStatics

#endif // ____x_ABI_CWindows_CSystem_CIProcessLauncherStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIProcessMemoryReport_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIProcessMemoryReport_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IProcessMemoryReport;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIProcessMemoryReport ABI::Windows::System::IProcessMemoryReport

#endif // ____x_ABI_CWindows_CSystem_CIProcessMemoryReport_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IProtocolForResultsOperation;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIProtocolForResultsOperation ABI::Windows::System::IProtocolForResultsOperation

#endif // ____x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IRemoteLauncherOptions;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIRemoteLauncherOptions ABI::Windows::System::IRemoteLauncherOptions

#endif // ____x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IRemoteLauncherStatics;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIRemoteLauncherStatics ABI::Windows::System::IRemoteLauncherStatics

#endif // ____x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIShutdownManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIShutdownManagerStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IShutdownManagerStatics;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics ABI::Windows::System::IShutdownManagerStatics

#endif // ____x_ABI_CWindows_CSystem_CIShutdownManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IShutdownManagerStatics2;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics2 ABI::Windows::System::IShutdownManagerStatics2

#endif // ____x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface ITimeZoneSettingsStatics;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics ABI::Windows::System::ITimeZoneSettingsStatics

#endif // ____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface ITimeZoneSettingsStatics2;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2 ABI::Windows::System::ITimeZoneSettingsStatics2

#endif // ____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IUser;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIUser ABI::Windows::System::IUser

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IUserAuthenticationStatusChangeDeferral;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral ABI::Windows::System::IUserAuthenticationStatusChangeDeferral

#endif // ____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IUserAuthenticationStatusChangingEventArgs;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs ABI::Windows::System::IUserAuthenticationStatusChangingEventArgs

#endif // ____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IUserChangedEventArgs;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIUserChangedEventArgs ABI::Windows::System::IUserChangedEventArgs

#endif // ____x_ABI_CWindows_CSystem_CIUserChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IUserChangedEventArgs2;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIUserChangedEventArgs2 ABI::Windows::System::IUserChangedEventArgs2

#endif // ____x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IUserDeviceAssociationChangedEventArgs;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs ABI::Windows::System::IUserDeviceAssociationChangedEventArgs

#endif // ____x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IUserDeviceAssociationStatics;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics ABI::Windows::System::IUserDeviceAssociationStatics

#endif // ____x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserPicker_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserPicker_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IUserPicker;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIUserPicker ABI::Windows::System::IUserPicker

#endif // ____x_ABI_CWindows_CSystem_CIUserPicker_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserPickerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserPickerStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IUserPickerStatics;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIUserPickerStatics ABI::Windows::System::IUserPickerStatics

#endif // ____x_ABI_CWindows_CSystem_CIUserPickerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IUserStatics;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIUserStatics ABI::Windows::System::IUserStatics

#endif // ____x_ABI_CWindows_CSystem_CIUserStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserWatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserWatcher_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IUserWatcher;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIUserWatcher ABI::Windows::System::IUserWatcher

#endif // ____x_ABI_CWindows_CSystem_CIUserWatcher_FWD_DEFINED__

// Parameterized interface forward declarations (C++)

// Collection interface definitions

#ifndef DEF___FIAsyncOperation_1_boolean_USE
#define DEF___FIAsyncOperation_1_boolean_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("cdb5efb3-5788-509d-9be1-71ccb8a3362a"))
IAsyncOperation<bool> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<bool, boolean>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Boolean>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<bool> __FIAsyncOperation_1_boolean_t;
#define __FIAsyncOperation_1_boolean ABI::Windows::Foundation::__FIAsyncOperation_1_boolean_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_boolean_USE */



#ifndef DEF___FIAsyncOperationCompletedHandler_1_boolean_USE
#define DEF___FIAsyncOperationCompletedHandler_1_boolean_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c1d3d1a2-ae17-5a5f-b5a2-bdcc8844889a"))
IAsyncOperationCompletedHandler<bool> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<bool, boolean>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Boolean>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<bool> __FIAsyncOperationCompletedHandler_1_boolean_t;
#define __FIAsyncOperationCompletedHandler_1_boolean ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_boolean_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_boolean_USE */



#ifndef DEF___FIAsyncOperation_1_IInspectable_USE
#define DEF___FIAsyncOperation_1_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("abf53c57-ee50-5342-b52a-26e3b8cc024f"))
IAsyncOperation<IInspectable*> : IAsyncOperation_impl<IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<IInspectable*> __FIAsyncOperation_1_IInspectable_t;
#define __FIAsyncOperation_1_IInspectable ABI::Windows::Foundation::__FIAsyncOperation_1_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_IInspectable_USE */



#ifndef DEF___FIAsyncOperationCompletedHandler_1_IInspectable_USE
#define DEF___FIAsyncOperationCompletedHandler_1_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("3f08262e-a2e1-5134-9297-e9211f481a2d"))
IAsyncOperationCompletedHandler<IInspectable*> : IAsyncOperationCompletedHandler_impl<IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<IInspectable*> __FIAsyncOperationCompletedHandler_1_IInspectable_t;
#define __FIAsyncOperationCompletedHandler_1_IInspectable ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_IInspectable_USE */


#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Collections {
                interface IPropertySet;
            } /* Collections */
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet ABI::Windows::Foundation::Collections::IPropertySet

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1___F__CIPropertySet_USE
#define DEF___FIAsyncOperation_1___F__CIPropertySet_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("490b0686-afd7-5037-9647-d8fe248f182c"))
IAsyncOperation<ABI::Windows::Foundation::Collections::IPropertySet*> : IAsyncOperation_impl<ABI::Windows::Foundation::Collections::IPropertySet*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IPropertySet>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::Foundation::Collections::IPropertySet*> __FIAsyncOperation_1___F__CIPropertySet_t;
#define __FIAsyncOperation_1___F__CIPropertySet ABI::Windows::Foundation::__FIAsyncOperation_1___F__CIPropertySet_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1___F__CIPropertySet_USE */

#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1___F__CIPropertySet_USE
#define DEF___FIAsyncOperationCompletedHandler_1___F__CIPropertySet_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("5075a55f-68ba-56f2-97e6-9b1cbfa2c5f2"))
IAsyncOperationCompletedHandler<ABI::Windows::Foundation::Collections::IPropertySet*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Collections::IPropertySet*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IPropertySet>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::Foundation::Collections::IPropertySet*> __FIAsyncOperationCompletedHandler_1___F__CIPropertySet_t;
#define __FIAsyncOperationCompletedHandler_1___F__CIPropertySet ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1___F__CIPropertySet_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1___F__CIPropertySet_USE */

#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            class AppInfo;
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CApplicationModel_CIAppInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIAppInfo_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            interface IAppInfo;
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CApplicationModel_CIAppInfo ABI::Windows::ApplicationModel::IAppInfo

#endif // ____x_ABI_CWindows_CApplicationModel_CIAppInfo_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CApplicationModel__CAppInfo_USE
#define DEF___FIIterator_1_Windows__CApplicationModel__CAppInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("69cec62c-41eb-5d69-a475-29ee22323dd8"))
IIterator<ABI::Windows::ApplicationModel::AppInfo*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::ApplicationModel::AppInfo*, ABI::Windows::ApplicationModel::IAppInfo*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.ApplicationModel.AppInfo>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::ApplicationModel::AppInfo*> __FIIterator_1_Windows__CApplicationModel__CAppInfo_t;
#define __FIIterator_1_Windows__CApplicationModel__CAppInfo ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CApplicationModel__CAppInfo_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CApplicationModel__CAppInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CApplicationModel__CAppInfo_USE
#define DEF___FIIterable_1_Windows__CApplicationModel__CAppInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("63d0bffe-0e34-55b3-83d5-314caff2b137"))
IIterable<ABI::Windows::ApplicationModel::AppInfo*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::ApplicationModel::AppInfo*, ABI::Windows::ApplicationModel::IAppInfo*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.ApplicationModel.AppInfo>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::ApplicationModel::AppInfo*> __FIIterable_1_Windows__CApplicationModel__CAppInfo_t;
#define __FIIterable_1_Windows__CApplicationModel__CAppInfo ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CApplicationModel__CAppInfo_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CApplicationModel__CAppInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CApplicationModel__CAppInfo_USE
#define DEF___FIVectorView_1_Windows__CApplicationModel__CAppInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8246ed12-33e8-52b3-a5c5-19779de9999e"))
IVectorView<ABI::Windows::ApplicationModel::AppInfo*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::ApplicationModel::AppInfo*, ABI::Windows::ApplicationModel::IAppInfo*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.AppInfo>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::ApplicationModel::AppInfo*> __FIVectorView_1_Windows__CApplicationModel__CAppInfo_t;
#define __FIVectorView_1_Windows__CApplicationModel__CAppInfo ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CApplicationModel__CAppInfo_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CApplicationModel__CAppInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_USE
#define DEF___FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("07543d91-8610-5152-b0e4-43d6e4cdd0cb"))
IAsyncOperation<__FIVectorView_1_Windows__CApplicationModel__CAppInfo*> : IAsyncOperation_impl<__FIVectorView_1_Windows__CApplicationModel__CAppInfo*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.AppInfo>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<__FIVectorView_1_Windows__CApplicationModel__CAppInfo*> __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_t;
#define __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo ABI::Windows::Foundation::__FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_USE
#define DEF___FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("07f25b6f-f054-5649-a5ce-b348ddc618b6"))
IAsyncOperationCompletedHandler<__FIVectorView_1_Windows__CApplicationModel__CAppInfo*> : IAsyncOperationCompletedHandler_impl<__FIVectorView_1_Windows__CApplicationModel__CAppInfo*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.AppInfo>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<__FIVectorView_1_Windows__CApplicationModel__CAppInfo*> __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_t;
#define __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace System {
            class User;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CSystem__CUser_USE
#define DEF___FIIterator_1_Windows__CSystem__CUser_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("326fe162-582b-5659-b8a4-68ff0f525745"))
IIterator<ABI::Windows::System::User*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::User*, ABI::Windows::System::IUser*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.System.User>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::System::User*> __FIIterator_1_Windows__CSystem__CUser_t;
#define __FIIterator_1_Windows__CSystem__CUser ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CSystem__CUser_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CSystem__CUser_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CSystem__CUser_USE
#define DEF___FIIterable_1_Windows__CSystem__CUser_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d1bacd1f-0376-5823-8c29-1d45b9f4c191"))
IIterable<ABI::Windows::System::User*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::User*, ABI::Windows::System::IUser*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.System.User>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::System::User*> __FIIterable_1_Windows__CSystem__CUser_t;
#define __FIIterable_1_Windows__CSystem__CUser ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CSystem__CUser_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CSystem__CUser_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CSystem__CUser_USE
#define DEF___FIVectorView_1_Windows__CSystem__CUser_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8cbd762a-1222-5ee5-b745-489e7a42c6ec"))
IVectorView<ABI::Windows::System::User*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::User*, ABI::Windows::System::IUser*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.System.User>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::System::User*> __FIVectorView_1_Windows__CSystem__CUser_t;
#define __FIVectorView_1_Windows__CSystem__CUser ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CSystem__CUser_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CSystem__CUser_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser_USE
#define DEF___FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("e44ea1df-bb85-5a8c-bddc-c8e960c355c9"))
IAsyncOperation<__FIVectorView_1_Windows__CSystem__CUser*> : IAsyncOperation_impl<__FIVectorView_1_Windows__CSystem__CUser*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.System.User>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<__FIVectorView_1_Windows__CSystem__CUser*> __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser_t;
#define __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser ABI::Windows::Foundation::__FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser_USE
#define DEF___FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("09870533-f7cb-569c-b797-dcb48debd709"))
IAsyncOperationCompletedHandler<__FIVectorView_1_Windows__CSystem__CUser*> : IAsyncOperationCompletedHandler_impl<__FIVectorView_1_Windows__CSystem__CUser*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVectorView`1<Windows.System.User>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<__FIVectorView_1_Windows__CSystem__CUser*> __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser_t;
#define __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace System {
            class AppDiagnosticInfo;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FIIterator_1_Windows__CSystem__CAppDiagnosticInfo_USE
#define DEF___FIIterator_1_Windows__CSystem__CAppDiagnosticInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("183f1e4a-2224-5fe4-b064-68869c53e361"))
IIterator<ABI::Windows::System::AppDiagnosticInfo*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppDiagnosticInfo*, ABI::Windows::System::IAppDiagnosticInfo*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.System.AppDiagnosticInfo>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::System::AppDiagnosticInfo*> __FIIterator_1_Windows__CSystem__CAppDiagnosticInfo_t;
#define __FIIterator_1_Windows__CSystem__CAppDiagnosticInfo ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CSystem__CAppDiagnosticInfo_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CSystem__CAppDiagnosticInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FIIterable_1_Windows__CSystem__CAppDiagnosticInfo_USE
#define DEF___FIIterable_1_Windows__CSystem__CAppDiagnosticInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8118de8f-3ae3-55e1-80a8-25453cdba894"))
IIterable<ABI::Windows::System::AppDiagnosticInfo*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppDiagnosticInfo*, ABI::Windows::System::IAppDiagnosticInfo*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.System.AppDiagnosticInfo>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::System::AppDiagnosticInfo*> __FIIterable_1_Windows__CSystem__CAppDiagnosticInfo_t;
#define __FIIterable_1_Windows__CSystem__CAppDiagnosticInfo ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CSystem__CAppDiagnosticInfo_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CSystem__CAppDiagnosticInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo_USE
#define DEF___FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b0c2c7a4-78ba-50fd-84fe-00e02a6c1d42"))
IVectorView<ABI::Windows::System::AppDiagnosticInfo*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppDiagnosticInfo*, ABI::Windows::System::IAppDiagnosticInfo*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.System.AppDiagnosticInfo>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::System::AppDiagnosticInfo*> __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo_t;
#define __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_USE
#define DEF___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("9cffa2c3-7eeb-599c-b94d-c794b11f807f"))
IVector<ABI::Windows::System::AppDiagnosticInfo*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppDiagnosticInfo*, ABI::Windows::System::IAppDiagnosticInfo*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.System.AppDiagnosticInfo>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::System::AppDiagnosticInfo*> __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_t;
#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CSystem__CAppDiagnosticInfo_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_USE
#define DEF___FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("d6a9d3b9-f63c-59be-a096-3e9557c41182"))
IAsyncOperation<__FIVector_1_Windows__CSystem__CAppDiagnosticInfo*> : IAsyncOperation_impl<__FIVector_1_Windows__CSystem__CAppDiagnosticInfo*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVector`1<Windows.System.AppDiagnosticInfo>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<__FIVector_1_Windows__CSystem__CAppDiagnosticInfo*> __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_t;
#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo ABI::Windows::Foundation::__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_USE
#define DEF___FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("cc3f5f7e-4160-567f-a0f6-aa9aeb187af3"))
IAsyncOperationCompletedHandler<__FIVector_1_Windows__CSystem__CAppDiagnosticInfo*> : IAsyncOperationCompletedHandler_impl<__FIVector_1_Windows__CSystem__CAppDiagnosticInfo*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVector`1<Windows.System.AppDiagnosticInfo>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<__FIVector_1_Windows__CSystem__CAppDiagnosticInfo*> __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_t;
#define __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

namespace ABI {
    namespace Windows {
        namespace System {
            class AppUriHandlerHost;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

#ifndef DEF___FIIterator_1_Windows__CSystem__CAppUriHandlerHost_USE
#define DEF___FIIterator_1_Windows__CSystem__CAppUriHandlerHost_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("66078237-a994-50de-b1ea-338d7cf89a2c"))
IIterator<ABI::Windows::System::AppUriHandlerHost*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppUriHandlerHost*, ABI::Windows::System::IAppUriHandlerHost*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.System.AppUriHandlerHost>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::System::AppUriHandlerHost*> __FIIterator_1_Windows__CSystem__CAppUriHandlerHost_t;
#define __FIIterator_1_Windows__CSystem__CAppUriHandlerHost ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CSystem__CAppUriHandlerHost_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CSystem__CAppUriHandlerHost_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

#ifndef DEF___FIIterable_1_Windows__CSystem__CAppUriHandlerHost_USE
#define DEF___FIIterable_1_Windows__CSystem__CAppUriHandlerHost_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f6e575bd-eab7-5981-ba01-49ff976ca186"))
IIterable<ABI::Windows::System::AppUriHandlerHost*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppUriHandlerHost*, ABI::Windows::System::IAppUriHandlerHost*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.System.AppUriHandlerHost>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::System::AppUriHandlerHost*> __FIIterable_1_Windows__CSystem__CAppUriHandlerHost_t;
#define __FIIterable_1_Windows__CSystem__CAppUriHandlerHost ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CSystem__CAppUriHandlerHost_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CSystem__CAppUriHandlerHost_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

#ifndef DEF___FIVectorView_1_Windows__CSystem__CAppUriHandlerHost_USE
#define DEF___FIVectorView_1_Windows__CSystem__CAppUriHandlerHost_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b5b07811-1c9e-5f97-bb56-17c80b1b1a45"))
IVectorView<ABI::Windows::System::AppUriHandlerHost*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppUriHandlerHost*, ABI::Windows::System::IAppUriHandlerHost*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.System.AppUriHandlerHost>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::System::AppUriHandlerHost*> __FIVectorView_1_Windows__CSystem__CAppUriHandlerHost_t;
#define __FIVectorView_1_Windows__CSystem__CAppUriHandlerHost ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CSystem__CAppUriHandlerHost_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CSystem__CAppUriHandlerHost_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

#ifndef DEF___FIVector_1_Windows__CSystem__CAppUriHandlerHost_USE
#define DEF___FIVector_1_Windows__CSystem__CAppUriHandlerHost_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4a226614-2197-526a-a9ff-03025d18e322"))
IVector<ABI::Windows::System::AppUriHandlerHost*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppUriHandlerHost*, ABI::Windows::System::IAppUriHandlerHost*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.System.AppUriHandlerHost>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::System::AppUriHandlerHost*> __FIVector_1_Windows__CSystem__CAppUriHandlerHost_t;
#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CSystem__CAppUriHandlerHost_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CSystem__CAppUriHandlerHost_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

#ifndef DEF___FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_USE
#define DEF___FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a87e4877-f690-5883-b2bd-9e3c2ab66413"))
IAsyncOperation<__FIVector_1_Windows__CSystem__CAppUriHandlerHost*> : IAsyncOperation_impl<__FIVector_1_Windows__CSystem__CAppUriHandlerHost*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVector`1<Windows.System.AppUriHandlerHost>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<__FIVector_1_Windows__CSystem__CAppUriHandlerHost*> __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_t;
#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost ABI::Windows::Foundation::__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

#ifndef DEF___FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_USE
#define DEF___FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("d725228c-1dcd-5748-a84a-e5b03c41e397"))
IAsyncOperationCompletedHandler<__FIVector_1_Windows__CSystem__CAppUriHandlerHost*> : IAsyncOperationCompletedHandler_impl<__FIVector_1_Windows__CSystem__CAppUriHandlerHost*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVector`1<Windows.System.AppUriHandlerHost>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<__FIVector_1_Windows__CSystem__CAppUriHandlerHost*> __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_t;
#define __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace Streams {
                interface IRandomAccessStreamReference;
            } /* Streams */
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference ABI::Windows::Storage::Streams::IRandomAccessStreamReference

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_USE
#define DEF___FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("65178d50-e6a2-5d16-b244-65e9725e5a0c"))
IAsyncOperation<ABI::Windows::Storage::Streams::IRandomAccessStreamReference*> : IAsyncOperation_impl<ABI::Windows::Storage::Streams::IRandomAccessStreamReference*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Storage.Streams.IRandomAccessStreamReference>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::Storage::Streams::IRandomAccessStreamReference*> __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_t;
#define __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("60847289-ea0b-5df6-89df-f2c62cba9693"))
IAsyncOperationCompletedHandler<ABI::Windows::Storage::Streams::IRandomAccessStreamReference*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Storage::Streams::IRandomAccessStreamReference*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Storage.Streams.IRandomAccessStreamReference>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::Storage::Streams::IRandomAccessStreamReference*> __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace System {
            class AppActivationResult;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

#ifndef DEF___FIAsyncOperation_1_Windows__CSystem__CAppActivationResult_USE
#define DEF___FIAsyncOperation_1_Windows__CSystem__CAppActivationResult_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("b6f373b8-bd4d-50bf-82b4-5b1d452a5f83"))
IAsyncOperation<ABI::Windows::System::AppActivationResult*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppActivationResult*, ABI::Windows::System::IAppActivationResult*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.System.AppActivationResult>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::System::AppActivationResult*> __FIAsyncOperation_1_Windows__CSystem__CAppActivationResult_t;
#define __FIAsyncOperation_1_Windows__CSystem__CAppActivationResult ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CSystem__CAppActivationResult_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CSystem__CAppActivationResult_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("966e2307-d529-50ea-9872-8dfb35cfeffd"))
IAsyncOperationCompletedHandler<ABI::Windows::System::AppActivationResult*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppActivationResult*, ABI::Windows::System::IAppActivationResult*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.System.AppActivationResult>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::System::AppActivationResult*> __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

namespace ABI {
    namespace Windows {
        namespace System {
            class AppExecutionStateChangeResult;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

#ifndef DEF___FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult_USE
#define DEF___FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c251cc22-aba9-59b8-bf87-20677fc4924e"))
IAsyncOperation<ABI::Windows::System::AppExecutionStateChangeResult*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppExecutionStateChangeResult*, ABI::Windows::System::IAppExecutionStateChangeResult*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.System.AppExecutionStateChangeResult>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::System::AppExecutionStateChangeResult*> __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult_t;
#define __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c162b59a-bdd2-5e4d-a309-b476eb97b823"))
IAsyncOperationCompletedHandler<ABI::Windows::System::AppExecutionStateChangeResult*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppExecutionStateChangeResult*, ABI::Windows::System::IAppExecutionStateChangeResult*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.System.AppExecutionStateChangeResult>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::System::AppExecutionStateChangeResult*> __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum AutoUpdateTimeZoneStatus : int AutoUpdateTimeZoneStatus;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x50000

#ifndef DEF___FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_USE
#define DEF___FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("b69475ac-a5d4-53d7-a53a-bb01b69620fa"))
IAsyncOperation<enum ABI::Windows::System::AutoUpdateTimeZoneStatus> : IAsyncOperation_impl<enum ABI::Windows::System::AutoUpdateTimeZoneStatus>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.System.AutoUpdateTimeZoneStatus>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<enum ABI::Windows::System::AutoUpdateTimeZoneStatus> __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_t;
#define __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_USE */

#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x50000

#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x50000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c2b7624c-9f35-5074-8021-0633184899a7"))
IAsyncOperationCompletedHandler<enum ABI::Windows::System::AutoUpdateTimeZoneStatus> : IAsyncOperationCompletedHandler_impl<enum ABI::Windows::System::AutoUpdateTimeZoneStatus>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.System.AutoUpdateTimeZoneStatus>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<enum ABI::Windows::System::AutoUpdateTimeZoneStatus> __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_USE */

#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x50000

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum DiagnosticAccessStatus : int DiagnosticAccessStatus;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus_USE
#define DEF___FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("61c11bbe-2618-588a-a7ca-f60691272324"))
IAsyncOperation<enum ABI::Windows::System::DiagnosticAccessStatus> : IAsyncOperation_impl<enum ABI::Windows::System::DiagnosticAccessStatus>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.System.DiagnosticAccessStatus>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<enum ABI::Windows::System::DiagnosticAccessStatus> __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus_t;
#define __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("5d1302d7-5497-5a92-bf43-eb8b50679aab"))
IAsyncOperationCompletedHandler<enum ABI::Windows::System::DiagnosticAccessStatus> : IAsyncOperationCompletedHandler_impl<enum ABI::Windows::System::DiagnosticAccessStatus>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.System.DiagnosticAccessStatus>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<enum ABI::Windows::System::DiagnosticAccessStatus> __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum LaunchQuerySupportStatus : int LaunchQuerySupportStatus;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus_USE
#define DEF___FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("e7539992-2220-5d2d-82c4-3d44f8750d91"))
IAsyncOperation<enum ABI::Windows::System::LaunchQuerySupportStatus> : IAsyncOperation_impl<enum ABI::Windows::System::LaunchQuerySupportStatus>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.System.LaunchQuerySupportStatus>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<enum ABI::Windows::System::LaunchQuerySupportStatus> __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus_t;
#define __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("198cac52-abcd-5529-933f-071cc93fd635"))
IAsyncOperationCompletedHandler<enum ABI::Windows::System::LaunchQuerySupportStatus> : IAsyncOperationCompletedHandler_impl<enum ABI::Windows::System::LaunchQuerySupportStatus>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.System.LaunchQuerySupportStatus>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<enum ABI::Windows::System::LaunchQuerySupportStatus> __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace System {
            class LaunchUriResult;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult_USE
#define DEF___FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("7f97fc15-1cd6-54b7-a290-acb60dba81a1"))
IAsyncOperation<ABI::Windows::System::LaunchUriResult*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::LaunchUriResult*, ABI::Windows::System::ILaunchUriResult*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.System.LaunchUriResult>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::System::LaunchUriResult*> __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult_t;
#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("70a97bf8-e0a5-59bb-9174-812a131d85a0"))
IAsyncOperationCompletedHandler<ABI::Windows::System::LaunchUriResult*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::LaunchUriResult*, ABI::Windows::System::ILaunchUriResult*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.System.LaunchUriResult>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::System::LaunchUriResult*> __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum LaunchUriStatus : int LaunchUriStatus;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus_USE
#define DEF___FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("ab3d721b-a4f3-5861-b034-030b15233c52"))
IAsyncOperation<enum ABI::Windows::System::LaunchUriStatus> : IAsyncOperation_impl<enum ABI::Windows::System::LaunchUriStatus>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.System.LaunchUriStatus>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<enum ABI::Windows::System::LaunchUriStatus> __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus_t;
#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("520aa58e-40d6-5a57-a6dc-cb5faea5cca5"))
IAsyncOperationCompletedHandler<enum ABI::Windows::System::LaunchUriStatus> : IAsyncOperationCompletedHandler_impl<enum ABI::Windows::System::LaunchUriStatus>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.System.LaunchUriStatus>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<enum ABI::Windows::System::LaunchUriStatus> __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace System {
            class ProcessLauncherResult;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000

#ifndef DEF___FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult_USE
#define DEF___FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("e6827240-7a8d-51be-8d21-e093268ccc15"))
IAsyncOperation<ABI::Windows::System::ProcessLauncherResult*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::ProcessLauncherResult*, ABI::Windows::System::IProcessLauncherResult*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.System.ProcessLauncherResult>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::System::ProcessLauncherResult*> __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult_t;
#define __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult_USE */

#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000

#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("8d787ee6-07e4-5dce-8fe5-b503a1f6368c"))
IAsyncOperationCompletedHandler<ABI::Windows::System::ProcessLauncherResult*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::ProcessLauncherResult*, ABI::Windows::System::IProcessLauncherResult*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.System.ProcessLauncherResult>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::System::ProcessLauncherResult*> __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult_USE */

#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum RemoteLaunchUriStatus : int RemoteLaunchUriStatus;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus_USE
#define DEF___FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("bb70e5cd-62c2-5f78-ac8d-f4b973981da4"))
IAsyncOperation<enum ABI::Windows::System::RemoteLaunchUriStatus> : IAsyncOperation_impl<enum ABI::Windows::System::RemoteLaunchUriStatus>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.System.RemoteLaunchUriStatus>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<enum ABI::Windows::System::RemoteLaunchUriStatus> __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus_t;
#define __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("3f8f4b1b-cd54-543c-817f-2630487f1878"))
IAsyncOperationCompletedHandler<enum ABI::Windows::System::RemoteLaunchUriStatus> : IAsyncOperationCompletedHandler_impl<enum ABI::Windows::System::RemoteLaunchUriStatus>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.System.RemoteLaunchUriStatus>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<enum ABI::Windows::System::RemoteLaunchUriStatus> __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1_Windows__CSystem__CUser_USE
#define DEF___FIAsyncOperation_1_Windows__CSystem__CUser_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a895d2f9-2399-5104-a532-5ba44ab4b165"))
IAsyncOperation<ABI::Windows::System::User*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::User*, ABI::Windows::System::IUser*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.System.User>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::System::User*> __FIAsyncOperation_1_Windows__CSystem__CUser_t;
#define __FIAsyncOperation_1_Windows__CSystem__CUser ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CSystem__CUser_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CSystem__CUser_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("f913e3a2-d1c5-5308-becf-4c2d8167824a"))
IAsyncOperationCompletedHandler<ABI::Windows::System::User*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::User*, ABI::Windows::System::IUser*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.System.User>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::System::User*> __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#ifndef DEF___FIIterator_1_HSTRING_USE
#define DEF___FIIterator_1_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8c304ebb-6615-50a4-8829-879ecd443236"))
IIterator<HSTRING> : IIterator_impl<HSTRING>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<String>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<HSTRING> __FIIterator_1_HSTRING_t;
#define __FIIterator_1_HSTRING ABI::Windows::Foundation::Collections::__FIIterator_1_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_HSTRING_USE */



#ifndef DEF___FIIterable_1_HSTRING_USE
#define DEF___FIIterable_1_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e2fcc7c1-3bfc-5a0b-b2b0-72e769d1cb7e"))
IIterable<HSTRING> : IIterable_impl<HSTRING>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<String>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<HSTRING> __FIIterable_1_HSTRING_t;
#define __FIIterable_1_HSTRING ABI::Windows::Foundation::Collections::__FIIterable_1_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_HSTRING_USE */


#ifndef ____x_ABI_CWindows_CStorage_CIStorageItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageItem_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            interface IStorageItem;
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CIStorageItem ABI::Windows::Storage::IStorageItem

#endif // ____x_ABI_CWindows_CStorage_CIStorageItem_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CStorage__CIStorageItem_USE
#define DEF___FIIterator_1_Windows__CStorage__CIStorageItem_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("05b487c2-3830-5d3c-98da-25fa11542dbd"))
IIterator<ABI::Windows::Storage::IStorageItem*> : IIterator_impl<ABI::Windows::Storage::IStorageItem*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Storage.IStorageItem>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Storage::IStorageItem*> __FIIterator_1_Windows__CStorage__CIStorageItem_t;
#define __FIIterator_1_Windows__CStorage__CIStorageItem ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CStorage__CIStorageItem_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CStorage__CIStorageItem_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CStorage__CIStorageItem_USE
#define DEF___FIIterable_1_Windows__CStorage__CIStorageItem_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bb8b8418-65d1-544b-b083-6d172f568c73"))
IIterable<ABI::Windows::Storage::IStorageItem*> : IIterable_impl<ABI::Windows::Storage::IStorageItem*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Storage.IStorageItem>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Storage::IStorageItem*> __FIIterable_1_Windows__CStorage__CIStorageItem_t;
#define __FIIterable_1_Windows__CStorage__CIStorageItem ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CStorage__CIStorageItem_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CStorage__CIStorageItem_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace System {
            class AppResourceGroupBackgroundTaskReport;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_USE
#define DEF___FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("00c2180a-08e5-5eed-a08d-56a356cc004f"))
IIterator<ABI::Windows::System::AppResourceGroupBackgroundTaskReport*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppResourceGroupBackgroundTaskReport*, ABI::Windows::System::IAppResourceGroupBackgroundTaskReport*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.System.AppResourceGroupBackgroundTaskReport>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::System::AppResourceGroupBackgroundTaskReport*> __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_t;
#define __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_USE
#define DEF___FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3e7dcbca-1804-5672-ad3b-58d944bb044c"))
IIterable<ABI::Windows::System::AppResourceGroupBackgroundTaskReport*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppResourceGroupBackgroundTaskReport*, ABI::Windows::System::IAppResourceGroupBackgroundTaskReport*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.System.AppResourceGroupBackgroundTaskReport>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::System::AppResourceGroupBackgroundTaskReport*> __FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_t;
#define __FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

namespace ABI {
    namespace Windows {
        namespace System {
            class AppResourceGroupInfo;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIIterator_1_Windows__CSystem__CAppResourceGroupInfo_USE
#define DEF___FIIterator_1_Windows__CSystem__CAppResourceGroupInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e44d5851-e4bc-50b9-a898-6903137d8a99"))
IIterator<ABI::Windows::System::AppResourceGroupInfo*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppResourceGroupInfo*, ABI::Windows::System::IAppResourceGroupInfo*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.System.AppResourceGroupInfo>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::System::AppResourceGroupInfo*> __FIIterator_1_Windows__CSystem__CAppResourceGroupInfo_t;
#define __FIIterator_1_Windows__CSystem__CAppResourceGroupInfo ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CSystem__CAppResourceGroupInfo_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CSystem__CAppResourceGroupInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIIterable_1_Windows__CSystem__CAppResourceGroupInfo_USE
#define DEF___FIIterable_1_Windows__CSystem__CAppResourceGroupInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8b640948-c0d3-5b7e-a99c-5956190d5408"))
IIterable<ABI::Windows::System::AppResourceGroupInfo*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppResourceGroupInfo*, ABI::Windows::System::IAppResourceGroupInfo*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.System.AppResourceGroupInfo>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::System::AppResourceGroupInfo*> __FIIterable_1_Windows__CSystem__CAppResourceGroupInfo_t;
#define __FIIterable_1_Windows__CSystem__CAppResourceGroupInfo ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CSystem__CAppResourceGroupInfo_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CSystem__CAppResourceGroupInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

namespace ABI {
    namespace Windows {
        namespace System {
            namespace Diagnostics {
                class ProcessDiagnosticInfo;
            } /* Diagnostics */
        } /* System */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            namespace Diagnostics {
                interface IProcessDiagnosticInfo;
            } /* Diagnostics */
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo ABI::Windows::System::Diagnostics::IProcessDiagnosticInfo

#endif // ____x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_USE
#define DEF___FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a89b4418-4c3b-5f49-b957-785697c99abf"))
IIterator<ABI::Windows::System::Diagnostics::ProcessDiagnosticInfo*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::Diagnostics::ProcessDiagnosticInfo*, ABI::Windows::System::Diagnostics::IProcessDiagnosticInfo*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.System.Diagnostics.ProcessDiagnosticInfo>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::System::Diagnostics::ProcessDiagnosticInfo*> __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_t;
#define __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_USE
#define DEF___FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("97b73627-b296-5076-b8cd-6bd8a240e966"))
IIterable<ABI::Windows::System::Diagnostics::ProcessDiagnosticInfo*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::Diagnostics::ProcessDiagnosticInfo*, ABI::Windows::System::Diagnostics::IProcessDiagnosticInfo*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.System.Diagnostics.ProcessDiagnosticInfo>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::System::Diagnostics::ProcessDiagnosticInfo*> __FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_t;
#define __FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum UserWatcherUpdateKind : int UserWatcherUpdateKind;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

#ifndef DEF___FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind_USE
#define DEF___FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("99011e6c-3047-5bca-b932-e1d1eb8a937f"))
IIterator<enum ABI::Windows::System::UserWatcherUpdateKind> : IIterator_impl<enum ABI::Windows::System::UserWatcherUpdateKind>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.System.UserWatcherUpdateKind>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<enum ABI::Windows::System::UserWatcherUpdateKind> __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind_t;
#define __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

#ifndef DEF___FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind_USE
#define DEF___FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("89342b56-eb84-54e7-98c1-baee448bdced"))
IIterable<enum ABI::Windows::System::UserWatcherUpdateKind> : IIterable_impl<enum ABI::Windows::System::UserWatcherUpdateKind>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.System.UserWatcherUpdateKind>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<enum ABI::Windows::System::UserWatcherUpdateKind> __FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind_t;
#define __FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000


#ifndef DEF___FIVectorView_1_HSTRING_USE
#define DEF___FIVectorView_1_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("2f13c006-a03a-5f69-b090-75a43e33423e"))
IVectorView<HSTRING> : IVectorView_impl<HSTRING>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<String>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<HSTRING> __FIVectorView_1_HSTRING_t;
#define __FIVectorView_1_HSTRING ABI::Windows::Foundation::Collections::__FIVectorView_1_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_HSTRING_USE */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CStorage__CIStorageItem_USE
#define DEF___FIVectorView_1_Windows__CStorage__CIStorageItem_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("85575a41-06cb-58d0-b98a-7c8f06e6e9d7"))
IVectorView<ABI::Windows::Storage::IStorageItem*> : IVectorView_impl<ABI::Windows::Storage::IStorageItem*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Storage.IStorageItem>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Storage::IStorageItem*> __FIVectorView_1_Windows__CStorage__CIStorageItem_t;
#define __FIVectorView_1_Windows__CStorage__CIStorageItem ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CStorage__CIStorageItem_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CStorage__CIStorageItem_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_USE
#define DEF___FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4e917da3-45ab-51c3-b9e1-e7d4e7a1b4e5"))
IVectorView<ABI::Windows::System::AppResourceGroupBackgroundTaskReport*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppResourceGroupBackgroundTaskReport*, ABI::Windows::System::IAppResourceGroupBackgroundTaskReport*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.System.AppResourceGroupBackgroundTaskReport>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::System::AppResourceGroupBackgroundTaskReport*> __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_t;
#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo_USE
#define DEF___FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0480079c-fd03-59e3-aba3-96f9f9206070"))
IVectorView<ABI::Windows::System::AppResourceGroupInfo*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppResourceGroupInfo*, ABI::Windows::System::IAppResourceGroupInfo*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.System.AppResourceGroupInfo>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::System::AppResourceGroupInfo*> __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo_t;
#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_USE
#define DEF___FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("74ab2473-9624-5a06-9025-6d91e622bf8e"))
IVectorView<ABI::Windows::System::Diagnostics::ProcessDiagnosticInfo*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::Diagnostics::ProcessDiagnosticInfo*, ABI::Windows::System::Diagnostics::IProcessDiagnosticInfo*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.System.Diagnostics.ProcessDiagnosticInfo>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::System::Diagnostics::ProcessDiagnosticInfo*> __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_t;
#define __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

#ifndef DEF___FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind_USE
#define DEF___FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("92b358cd-c1ca-5552-9e2e-67e2d6ead4d1"))
IVectorView<enum ABI::Windows::System::UserWatcherUpdateKind> : IVectorView_impl<enum ABI::Windows::System::UserWatcherUpdateKind>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.System.UserWatcherUpdateKind>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<enum ABI::Windows::System::UserWatcherUpdateKind> __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind_t;
#define __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000


#ifndef DEF___FIVector_1_HSTRING_USE
#define DEF___FIVector_1_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("98b9acc1-4b56-532e-ac73-03d5291cca90"))
IVector<HSTRING> : IVector_impl<HSTRING>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<String>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<HSTRING> __FIVector_1_HSTRING_t;
#define __FIVector_1_HSTRING ABI::Windows::Foundation::Collections::__FIVector_1_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_HSTRING_USE */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CStorage__CIStorageItem_USE
#define DEF___FIVector_1_Windows__CStorage__CIStorageItem_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("802508e2-9c2c-5b91-89a8-39bcf7223344"))
IVector<ABI::Windows::Storage::IStorageItem*> : IVector_impl<ABI::Windows::Storage::IStorageItem*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.Storage.IStorageItem>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::Storage::IStorageItem*> __FIVector_1_Windows__CStorage__CIStorageItem_t;
#define __FIVector_1_Windows__CStorage__CIStorageItem ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CStorage__CIStorageItem_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CStorage__CIStorageItem_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_USE
#define DEF___FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("80f1820a-db02-5cb2-a128-5172151d1444"))
IVector<ABI::Windows::System::AppResourceGroupBackgroundTaskReport*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppResourceGroupBackgroundTaskReport*, ABI::Windows::System::IAppResourceGroupBackgroundTaskReport*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.System.AppResourceGroupBackgroundTaskReport>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::System::AppResourceGroupBackgroundTaskReport*> __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_t;
#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIVector_1_Windows__CSystem__CAppResourceGroupInfo_USE
#define DEF___FIVector_1_Windows__CSystem__CAppResourceGroupInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bd7d69a0-0d57-5148-8b23-49a08654f0c7"))
IVector<ABI::Windows::System::AppResourceGroupInfo*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppResourceGroupInfo*, ABI::Windows::System::IAppResourceGroupInfo*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.System.AppResourceGroupInfo>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::System::AppResourceGroupInfo*> __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_t;
#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CSystem__CAppResourceGroupInfo_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CSystem__CAppResourceGroupInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_USE
#define DEF___FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f62e2d01-c1dd-5b60-b5da-16518cba0bb0"))
IVector<ABI::Windows::System::Diagnostics::ProcessDiagnosticInfo*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::Diagnostics::ProcessDiagnosticInfo*, ABI::Windows::System::Diagnostics::IProcessDiagnosticInfo*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.System.Diagnostics.ProcessDiagnosticInfo>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::System::Diagnostics::ProcessDiagnosticInfo*> __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_t;
#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#ifndef DEF___FIEventHandler_1_IInspectable_USE
#define DEF___FIEventHandler_1_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c50898f6-c536-5f47-8583-8b2c2438a13b"))
IEventHandler<IInspectable*> : IEventHandler_impl<IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.EventHandler`1<Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IEventHandler<IInspectable*> __FIEventHandler_1_IInspectable_t;
#define __FIEventHandler_1_IInspectable ABI::Windows::Foundation::__FIEventHandler_1_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIEventHandler_1_IInspectable_USE */


namespace ABI {
    namespace Windows {
        namespace System {
            class AppMemoryUsageLimitChangingEventArgs;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs_USE
#define DEF___FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("6030e7c3-f93f-5e9c-9ba2-9a018d2b09c0"))
IEventHandler<ABI::Windows::System::AppMemoryUsageLimitChangingEventArgs*> : IEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppMemoryUsageLimitChangingEventArgs*, ABI::Windows::System::IAppMemoryUsageLimitChangingEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.EventHandler`1<Windows.System.AppMemoryUsageLimitChangingEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IEventHandler<ABI::Windows::System::AppMemoryUsageLimitChangingEventArgs*> __FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs_t;
#define __FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs ABI::Windows::Foundation::__FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace System {
            class UserDeviceAssociationChangedEventArgs;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs_USE
#define DEF___FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("d3a3d4c5-d8b6-5a0e-88ed-a5499c377be3"))
IEventHandler<ABI::Windows::System::UserDeviceAssociationChangedEventArgs*> : IEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::UserDeviceAssociationChangedEventArgs*, ABI::Windows::System::IUserDeviceAssociationChangedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.EventHandler`1<Windows.System.UserDeviceAssociationChangedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IEventHandler<ABI::Windows::System::UserDeviceAssociationChangedEventArgs*> __FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs_t;
#define __FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs ABI::Windows::Foundation::__FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct Point Point;
        } /* Foundation */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIReference_1_Windows__CFoundation__CPoint_USE
#define DEF___FIReference_1_Windows__CFoundation__CPoint_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("84f14c22-a00a-5272-8d3d-82112e66df00"))
IReference<struct ABI::Windows::Foundation::Point> : IReference_impl<struct ABI::Windows::Foundation::Point>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Windows.Foundation.Point>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<struct ABI::Windows::Foundation::Point> __FIReference_1_Windows__CFoundation__CPoint_t;
#define __FIReference_1_Windows__CFoundation__CPoint ABI::Windows::Foundation::__FIReference_1_Windows__CFoundation__CPoint_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Windows__CFoundation__CPoint_USE */

#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct Rect Rect;
        } /* Foundation */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIReference_1_Windows__CFoundation__CRect_USE
#define DEF___FIReference_1_Windows__CFoundation__CRect_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("80423f11-054f-5eac-afd3-63b6ce15e77b"))
IReference<struct ABI::Windows::Foundation::Rect> : IReference_impl<struct ABI::Windows::Foundation::Rect>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Windows.Foundation.Rect>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<struct ABI::Windows::Foundation::Rect> __FIReference_1_Windows__CFoundation__CRect_t;
#define __FIReference_1_Windows__CFoundation__CRect ABI::Windows::Foundation::__FIReference_1_Windows__CFoundation__CRect_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Windows__CFoundation__CRect_USE */

#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace System {
            class AppDiagnosticInfoWatcher;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("895dee2f-e0f2-5304-a40e-1c67a2c058aa"))
ITypedEventHandler<ABI::Windows::System::AppDiagnosticInfoWatcher*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppDiagnosticInfoWatcher*, ABI::Windows::System::IAppDiagnosticInfoWatcher*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.System.AppDiagnosticInfoWatcher, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::System::AppDiagnosticInfoWatcher*, IInspectable*> __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

namespace ABI {
    namespace Windows {
        namespace System {
            class AppDiagnosticInfoWatcherEventArgs;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("7c8c6f9f-d6bf-5566-b013-39c141e0ff8c"))
ITypedEventHandler<ABI::Windows::System::AppDiagnosticInfoWatcher*, ABI::Windows::System::AppDiagnosticInfoWatcherEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppDiagnosticInfoWatcher*, ABI::Windows::System::IAppDiagnosticInfoWatcher*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppDiagnosticInfoWatcherEventArgs*, ABI::Windows::System::IAppDiagnosticInfoWatcherEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.System.AppDiagnosticInfoWatcher, Windows.System.AppDiagnosticInfoWatcherEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::System::AppDiagnosticInfoWatcher*, ABI::Windows::System::AppDiagnosticInfoWatcherEventArgs*> __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs_t;
#define __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

namespace ABI {
    namespace Windows {
        namespace System {
            class AppResourceGroupInfoWatcher;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("e23a2901-197a-5867-8728-9c9db9498d76"))
ITypedEventHandler<ABI::Windows::System::AppResourceGroupInfoWatcher*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppResourceGroupInfoWatcher*, ABI::Windows::System::IAppResourceGroupInfoWatcher*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.System.AppResourceGroupInfoWatcher, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::System::AppResourceGroupInfoWatcher*, IInspectable*> __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

namespace ABI {
    namespace Windows {
        namespace System {
            class AppResourceGroupInfoWatcherEventArgs;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a7e14bae-c778-5661-a41c-1ac3ac635f79"))
ITypedEventHandler<ABI::Windows::System::AppResourceGroupInfoWatcher*, ABI::Windows::System::AppResourceGroupInfoWatcherEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppResourceGroupInfoWatcher*, ABI::Windows::System::IAppResourceGroupInfoWatcher*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppResourceGroupInfoWatcherEventArgs*, ABI::Windows::System::IAppResourceGroupInfoWatcherEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.System.AppResourceGroupInfoWatcher, Windows.System.AppResourceGroupInfoWatcherEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::System::AppResourceGroupInfoWatcher*, ABI::Windows::System::AppResourceGroupInfoWatcherEventArgs*> __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs_t;
#define __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

namespace ABI {
    namespace Windows {
        namespace System {
            class AppResourceGroupInfoWatcherExecutionStateChangedEventArgs;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("93f9724c-17f8-5df5-a6cf-2f0ab90c0a27"))
ITypedEventHandler<ABI::Windows::System::AppResourceGroupInfoWatcher*, ABI::Windows::System::AppResourceGroupInfoWatcherExecutionStateChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppResourceGroupInfoWatcher*, ABI::Windows::System::IAppResourceGroupInfoWatcher*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::AppResourceGroupInfoWatcherExecutionStateChangedEventArgs*, ABI::Windows::System::IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.System.AppResourceGroupInfoWatcher, Windows.System.AppResourceGroupInfoWatcherExecutionStateChangedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::System::AppResourceGroupInfoWatcher*, ABI::Windows::System::AppResourceGroupInfoWatcherExecutionStateChangedEventArgs*> __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

namespace ABI {
    namespace Windows {
        namespace System {
            class DispatcherQueue;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("fe79f855-2f40-5b88-a0c3-4c042a05dd05"))
ITypedEventHandler<ABI::Windows::System::DispatcherQueue*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::DispatcherQueue*, ABI::Windows::System::IDispatcherQueue*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.System.DispatcherQueue, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::System::DispatcherQueue*, IInspectable*> __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

namespace ABI {
    namespace Windows {
        namespace System {
            class DispatcherQueueShutdownStartingEventArgs;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("b58b5e24-e1c6-528e-9d99-07ec8829dea5"))
ITypedEventHandler<ABI::Windows::System::DispatcherQueue*, ABI::Windows::System::DispatcherQueueShutdownStartingEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::DispatcherQueue*, ABI::Windows::System::IDispatcherQueue*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::DispatcherQueueShutdownStartingEventArgs*, ABI::Windows::System::IDispatcherQueueShutdownStartingEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.System.DispatcherQueue, Windows.System.DispatcherQueueShutdownStartingEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::System::DispatcherQueue*, ABI::Windows::System::DispatcherQueueShutdownStartingEventArgs*> __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs_t;
#define __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

namespace ABI {
    namespace Windows {
        namespace System {
            class DispatcherQueueTimer;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("8b5644c8-8b57-50ce-8933-7ab2cc5a14ef"))
ITypedEventHandler<ABI::Windows::System::DispatcherQueueTimer*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::DispatcherQueueTimer*, ABI::Windows::System::IDispatcherQueueTimer*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.System.DispatcherQueueTimer, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::System::DispatcherQueueTimer*, IInspectable*> __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

namespace ABI {
    namespace Windows {
        namespace System {
            class UserWatcher;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("f155e0ff-dbb5-5c34-ac0c-7e291e3300ab"))
ITypedEventHandler<ABI::Windows::System::UserWatcher*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::UserWatcher*, ABI::Windows::System::IUserWatcher*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.System.UserWatcher, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::System::UserWatcher*, IInspectable*> __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace System {
            class UserAuthenticationStatusChangingEventArgs;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("9ec3d9d5-b413-51df-8c64-640e3356e351"))
ITypedEventHandler<ABI::Windows::System::UserWatcher*, ABI::Windows::System::UserAuthenticationStatusChangingEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::UserWatcher*, ABI::Windows::System::IUserWatcher*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::UserAuthenticationStatusChangingEventArgs*, ABI::Windows::System::IUserAuthenticationStatusChangingEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.System.UserWatcher, Windows.System.UserAuthenticationStatusChangingEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::System::UserWatcher*, ABI::Windows::System::UserAuthenticationStatusChangingEventArgs*> __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs_t;
#define __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace System {
            class UserChangedEventArgs;
        } /* System */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("eb9d0454-25db-5620-98b8-be4c5d0dbc67"))
ITypedEventHandler<ABI::Windows::System::UserWatcher*, ABI::Windows::System::UserChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::UserWatcher*, ABI::Windows::System::IUserWatcher*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::System::UserChangedEventArgs*, ABI::Windows::System::IUserChangedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.System.UserWatcher, Windows.System.UserChangedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::System::UserWatcher*, ABI::Windows::System::UserChangedEventArgs*> __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Collections {
                class ValueSet;
            } /* Collections */
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct DateTime DateTime;
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            class Deferral;
        } /* Foundation */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IDeferral;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIDeferral ABI::Windows::Foundation::IDeferral

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IAsyncAction;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIAsyncAction ABI::Windows::Foundation::IAsyncAction

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IPropertyValue;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIPropertyValue ABI::Windows::Foundation::IPropertyValue

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct TimeSpan TimeSpan;
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            class Uri;
        } /* Foundation */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IUriRuntimeClass;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIUriRuntimeClass ABI::Windows::Foundation::IUriRuntimeClass

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            interface IStorageFile;
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CIStorageFile ABI::Windows::Storage::IStorageFile

#endif // ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            interface IStorageFolder;
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CIStorageFolder ABI::Windows::Storage::IStorageFolder

#endif // ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace Search {
                class StorageFileQueryResult;
            } /* Search */
        } /* Storage */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CStorage_CSearch_CIStorageFileQueryResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CSearch_CIStorageFileQueryResult_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace Search {
                interface IStorageFileQueryResult;
            } /* Search */
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CSearch_CIStorageFileQueryResult ABI::Windows::Storage::Search::IStorageFileQueryResult

#endif // ____x_ABI_CWindows_CStorage_CSearch_CIStorageFileQueryResult_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Storage {
            class StorageFile;
        } /* Storage */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace Streams {
                interface IInputStream;
            } /* Streams */
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CStreams_CIInputStream ABI::Windows::Storage::Streams::IInputStream

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace Streams {
                interface IOutputStream;
            } /* Streams */
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CStreams_CIOutputStream ABI::Windows::Storage::Streams::IOutputStream

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace System {
            namespace RemoteSystems {
                class RemoteSystemConnectionRequest;
            } /* RemoteSystems */
        } /* System */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            namespace RemoteSystems {
                interface IRemoteSystemConnectionRequest;
            } /* RemoteSystems */
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest ABI::Windows::System::RemoteSystems::IRemoteSystemConnectionRequest

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Popups {
                typedef enum Placement : int Placement;
            } /* Popups */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace ViewManagement {
                typedef enum ViewSizePreference : int ViewSizePreference;
            } /* ViewManagement */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum AppDiagnosticInfoWatcherStatus : int AppDiagnosticInfoWatcherStatus;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum AppMemoryUsageLevel : int AppMemoryUsageLevel;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum AppResourceGroupEnergyQuotaState : int AppResourceGroupEnergyQuotaState;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum AppResourceGroupExecutionState : int AppResourceGroupExecutionState;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum AppResourceGroupInfoWatcherStatus : int AppResourceGroupInfoWatcherStatus;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum DispatcherQueuePriority : int DispatcherQueuePriority;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum LaunchQuerySupportType : int LaunchQuerySupportType;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum PowerState : int PowerState;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum ShutdownKind : int ShutdownKind;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum UserAuthenticationStatus : int UserAuthenticationStatus;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum UserPictureSize : int UserPictureSize;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum UserType : int UserType;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum UserWatcherStatus : int UserWatcherStatus;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            class AppMemoryReport;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            class AppResourceGroupMemoryReport;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            class AppResourceGroupStateReport;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            class AppUriHandlerRegistration;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            class AppUriHandlerRegistrationManager;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            class DispatcherQueueController;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            class FolderLauncherOptions;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            class LauncherOptions;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            class LauncherUIOptions;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            class ProcessLauncherOptions;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            class ProcessMemoryReport;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            class RemoteLauncherOptions;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            class UserAuthenticationStatusChangeDeferral;
        } /* System */
    } /* Windows */
} /* ABI */

/*
 *
 * Struct Windows.System.AppDiagnosticInfoWatcherStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
namespace ABI {
    namespace Windows {
        namespace System {
            enum AppDiagnosticInfoWatcherStatus : int
            {
                AppDiagnosticInfoWatcherStatus_Created = 0,
                AppDiagnosticInfoWatcherStatus_Started = 1,
                AppDiagnosticInfoWatcherStatus_EnumerationCompleted = 2,
                AppDiagnosticInfoWatcherStatus_Stopping = 3,
                AppDiagnosticInfoWatcherStatus_Stopped = 4,
                AppDiagnosticInfoWatcherStatus_Aborted = 5,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Struct Windows.System.AppMemoryUsageLevel
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace System {
            enum AppMemoryUsageLevel : int
            {
                AppMemoryUsageLevel_Low = 0,
                AppMemoryUsageLevel_Medium = 1,
                AppMemoryUsageLevel_High = 2,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
                AppMemoryUsageLevel_OverLimit = 3,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.AppResourceGroupEnergyQuotaState
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
namespace ABI {
    namespace Windows {
        namespace System {
            enum AppResourceGroupEnergyQuotaState : int
            {
                AppResourceGroupEnergyQuotaState_Unknown = 0,
                AppResourceGroupEnergyQuotaState_Over = 1,
                AppResourceGroupEnergyQuotaState_Under = 2,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Struct Windows.System.AppResourceGroupExecutionState
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
namespace ABI {
    namespace Windows {
        namespace System {
            enum AppResourceGroupExecutionState : int
            {
                AppResourceGroupExecutionState_Unknown = 0,
                AppResourceGroupExecutionState_Running = 1,
                AppResourceGroupExecutionState_Suspending = 2,
                AppResourceGroupExecutionState_Suspended = 3,
                AppResourceGroupExecutionState_NotRunning = 4,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Struct Windows.System.AppResourceGroupInfoWatcherStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
namespace ABI {
    namespace Windows {
        namespace System {
            enum AppResourceGroupInfoWatcherStatus : int
            {
                AppResourceGroupInfoWatcherStatus_Created = 0,
                AppResourceGroupInfoWatcherStatus_Started = 1,
                AppResourceGroupInfoWatcherStatus_EnumerationCompleted = 2,
                AppResourceGroupInfoWatcherStatus_Stopping = 3,
                AppResourceGroupInfoWatcherStatus_Stopped = 4,
                AppResourceGroupInfoWatcherStatus_Aborted = 5,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Struct Windows.System.AutoUpdateTimeZoneStatus
 *
 * Introduced to Windows.System.SystemManagementContract in version 5.0
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x50000
namespace ABI {
    namespace Windows {
        namespace System {
            enum AutoUpdateTimeZoneStatus : int
            {
                AutoUpdateTimeZoneStatus_Attempted = 0,
                AutoUpdateTimeZoneStatus_TimedOut = 1,
                AutoUpdateTimeZoneStatus_Failed = 2,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x50000

/*
 *
 * Struct Windows.System.DiagnosticAccessStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
namespace ABI {
    namespace Windows {
        namespace System {
            enum DiagnosticAccessStatus : int
            {
                DiagnosticAccessStatus_Unspecified = 0,
                DiagnosticAccessStatus_Denied = 1,
                DiagnosticAccessStatus_Limited = 2,
                DiagnosticAccessStatus_Allowed = 3,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Struct Windows.System.DispatcherQueuePriority
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
namespace ABI {
    namespace Windows {
        namespace System {
            enum DispatcherQueuePriority : int
            {
                DispatcherQueuePriority_Low = -10,
                DispatcherQueuePriority_Normal = 0,
                DispatcherQueuePriority_High = 10,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Struct Windows.System.LaunchFileStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
namespace ABI {
    namespace Windows {
        namespace System {
            enum LaunchFileStatus : int
            {
                LaunchFileStatus_Success = 0,
                LaunchFileStatus_AppUnavailable = 1,
                LaunchFileStatus_DeniedByPolicy = 2,
                LaunchFileStatus_FileTypeNotSupported = 3,
                LaunchFileStatus_Unknown = 4,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.System.LaunchQuerySupportStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace System {
            enum LaunchQuerySupportStatus : int
            {
                LaunchQuerySupportStatus_Available = 0,
                LaunchQuerySupportStatus_AppNotInstalled = 1,
                LaunchQuerySupportStatus_AppUnavailable = 2,
                LaunchQuerySupportStatus_NotSupported = 3,
                LaunchQuerySupportStatus_Unknown = 4,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.LaunchQuerySupportType
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace System {
            enum LaunchQuerySupportType : int
            {
                LaunchQuerySupportType_Uri = 0,
                LaunchQuerySupportType_UriForResults = 1,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.LaunchUriStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace System {
            enum LaunchUriStatus : int
            {
                LaunchUriStatus_Success = 0,
                LaunchUriStatus_AppUnavailable = 1,
                LaunchUriStatus_ProtocolUnavailable = 2,
                LaunchUriStatus_Unknown = 3,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.PowerState
 *
 * Introduced to Windows.System.SystemManagementContract in version 3.0
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x30000
namespace ABI {
    namespace Windows {
        namespace System {
            enum PowerState : int
            {
                PowerState_ConnectedStandby = 0,
                PowerState_SleepS3 = 1,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.System.ProcessorArchitecture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace System {
            enum ProcessorArchitecture : int
            {
                ProcessorArchitecture_X86 = 0,
                ProcessorArchitecture_Arm = 5,
                ProcessorArchitecture_X64 = 9,
                ProcessorArchitecture_Neutral = 11,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
                ProcessorArchitecture_Arm64 = 12,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
                ProcessorArchitecture_X86OnArm64 = 14,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
                ProcessorArchitecture_Unknown = 65535,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.RemoteLaunchUriStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
namespace ABI {
    namespace Windows {
        namespace System {
            enum RemoteLaunchUriStatus : int
            {
                RemoteLaunchUriStatus_Unknown = 0,
                RemoteLaunchUriStatus_Success = 1,
                RemoteLaunchUriStatus_AppUnavailable = 2,
                RemoteLaunchUriStatus_ProtocolUnavailable = 3,
                RemoteLaunchUriStatus_RemoteSystemUnavailable = 4,
                RemoteLaunchUriStatus_ValueSetTooLarge = 5,
                RemoteLaunchUriStatus_DeniedByLocalSystem = 6,
                RemoteLaunchUriStatus_DeniedByRemoteSystem = 7,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.System.ShutdownKind
 *
 * Introduced to Windows.System.SystemManagementContract in version 1.0
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace System {
            enum ShutdownKind : int
            {
                ShutdownKind_Shutdown = 0,
                ShutdownKind_Restart = 1,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.UserAuthenticationStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace System {
            enum UserAuthenticationStatus : int
            {
                UserAuthenticationStatus_Unauthenticated = 0,
                UserAuthenticationStatus_LocallyAuthenticated = 1,
                UserAuthenticationStatus_RemotelyAuthenticated = 2,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.UserPictureSize
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace System {
            enum UserPictureSize : int
            {
                UserPictureSize_Size64x64 = 0,
                UserPictureSize_Size208x208 = 1,
                UserPictureSize_Size424x424 = 2,
                UserPictureSize_Size1080x1080 = 3,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.UserType
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace System {
            enum UserType : int
            {
                UserType_LocalUser = 0,
                UserType_RemoteUser = 1,
                UserType_LocalGuest = 2,
                UserType_RemoteGuest = 3,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.UserWatcherStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace System {
            enum UserWatcherStatus : int
            {
                UserWatcherStatus_Created = 0,
                UserWatcherStatus_Started = 1,
                UserWatcherStatus_EnumerationCompleted = 2,
                UserWatcherStatus_Stopping = 3,
                UserWatcherStatus_Stopped = 4,
                UserWatcherStatus_Aborted = 5,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.UserWatcherUpdateKind
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 10.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000
namespace ABI {
    namespace Windows {
        namespace System {
            enum UserWatcherUpdateKind : int
            {
                UserWatcherUpdateKind_Properties = 0,
                UserWatcherUpdateKind_Picture = 1,
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

/*
 *
 * Struct Windows.System.VirtualKey
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace System {
            enum VirtualKey : int
            {
                VirtualKey_None = 0,
                VirtualKey_LeftButton = 1,
                VirtualKey_RightButton = 2,
                VirtualKey_Cancel = 3,
                VirtualKey_MiddleButton = 4,
                VirtualKey_XButton1 = 5,
                VirtualKey_XButton2 = 6,
                VirtualKey_Back = 8,
                VirtualKey_Tab = 9,
                VirtualKey_Clear = 12,
                VirtualKey_Enter = 13,
                VirtualKey_Shift = 16,
                VirtualKey_Control = 17,
                VirtualKey_Menu = 18,
                VirtualKey_Pause = 19,
                VirtualKey_CapitalLock = 20,
                VirtualKey_Kana = 21,
                VirtualKey_Hangul = 21,
                VirtualKey_Junja = 23,
                VirtualKey_Final = 24,
                VirtualKey_Hanja = 25,
                VirtualKey_Kanji = 25,
                VirtualKey_Escape = 27,
                VirtualKey_Convert = 28,
                VirtualKey_NonConvert = 29,
                VirtualKey_Accept = 30,
                VirtualKey_ModeChange = 31,
                VirtualKey_Space = 32,
                VirtualKey_PageUp = 33,
                VirtualKey_PageDown = 34,
                VirtualKey_End = 35,
                VirtualKey_Home = 36,
                VirtualKey_Left = 37,
                VirtualKey_Up = 38,
                VirtualKey_Right = 39,
                VirtualKey_Down = 40,
                VirtualKey_Select = 41,
                VirtualKey_Print = 42,
                VirtualKey_Execute = 43,
                VirtualKey_Snapshot = 44,
                VirtualKey_Insert = 45,
                VirtualKey_Delete = 46,
                VirtualKey_Help = 47,
                VirtualKey_Number0 = 48,
                VirtualKey_Number1 = 49,
                VirtualKey_Number2 = 50,
                VirtualKey_Number3 = 51,
                VirtualKey_Number4 = 52,
                VirtualKey_Number5 = 53,
                VirtualKey_Number6 = 54,
                VirtualKey_Number7 = 55,
                VirtualKey_Number8 = 56,
                VirtualKey_Number9 = 57,
                VirtualKey_A = 65,
                VirtualKey_B = 66,
                VirtualKey_C = 67,
                VirtualKey_D = 68,
                VirtualKey_E = 69,
                VirtualKey_F = 70,
                VirtualKey_G = 71,
                VirtualKey_H = 72,
                VirtualKey_I = 73,
                VirtualKey_J = 74,
                VirtualKey_K = 75,
                VirtualKey_L = 76,
                VirtualKey_M = 77,
                VirtualKey_N = 78,
                VirtualKey_O = 79,
                VirtualKey_P = 80,
                VirtualKey_Q = 81,
                VirtualKey_R = 82,
                VirtualKey_S = 83,
                VirtualKey_T = 84,
                VirtualKey_U = 85,
                VirtualKey_V = 86,
                VirtualKey_W = 87,
                VirtualKey_X = 88,
                VirtualKey_Y = 89,
                VirtualKey_Z = 90,
                VirtualKey_LeftWindows = 91,
                VirtualKey_RightWindows = 92,
                VirtualKey_Application = 93,
                VirtualKey_Sleep = 95,
                VirtualKey_NumberPad0 = 96,
                VirtualKey_NumberPad1 = 97,
                VirtualKey_NumberPad2 = 98,
                VirtualKey_NumberPad3 = 99,
                VirtualKey_NumberPad4 = 100,
                VirtualKey_NumberPad5 = 101,
                VirtualKey_NumberPad6 = 102,
                VirtualKey_NumberPad7 = 103,
                VirtualKey_NumberPad8 = 104,
                VirtualKey_NumberPad9 = 105,
                VirtualKey_Multiply = 106,
                VirtualKey_Add = 107,
                VirtualKey_Separator = 108,
                VirtualKey_Subtract = 109,
                VirtualKey_Decimal = 110,
                VirtualKey_Divide = 111,
                VirtualKey_F1 = 112,
                VirtualKey_F2 = 113,
                VirtualKey_F3 = 114,
                VirtualKey_F4 = 115,
                VirtualKey_F5 = 116,
                VirtualKey_F6 = 117,
                VirtualKey_F7 = 118,
                VirtualKey_F8 = 119,
                VirtualKey_F9 = 120,
                VirtualKey_F10 = 121,
                VirtualKey_F11 = 122,
                VirtualKey_F12 = 123,
                VirtualKey_F13 = 124,
                VirtualKey_F14 = 125,
                VirtualKey_F15 = 126,
                VirtualKey_F16 = 127,
                VirtualKey_F17 = 128,
                VirtualKey_F18 = 129,
                VirtualKey_F19 = 130,
                VirtualKey_F20 = 131,
                VirtualKey_F21 = 132,
                VirtualKey_F22 = 133,
                VirtualKey_F23 = 134,
                VirtualKey_F24 = 135,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_NavigationView = 136,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_NavigationMenu = 137,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_NavigationUp = 138,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_NavigationDown = 139,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_NavigationLeft = 140,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_NavigationRight = 141,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_NavigationAccept = 142,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_NavigationCancel = 143,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_NumberKeyLock = 144,
                VirtualKey_Scroll = 145,
                VirtualKey_LeftShift = 160,
                VirtualKey_RightShift = 161,
                VirtualKey_LeftControl = 162,
                VirtualKey_RightControl = 163,
                VirtualKey_LeftMenu = 164,
                VirtualKey_RightMenu = 165,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GoBack = 166,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GoForward = 167,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_Refresh = 168,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_Stop = 169,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_Search = 170,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_Favorites = 171,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GoHome = 172,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadA = 195,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadB = 196,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadX = 197,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadY = 198,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadRightShoulder = 199,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadLeftShoulder = 200,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadLeftTrigger = 201,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadRightTrigger = 202,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadDPadUp = 203,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadDPadDown = 204,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadDPadLeft = 205,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadDPadRight = 206,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadMenu = 207,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadView = 208,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadLeftThumbstickButton = 209,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadRightThumbstickButton = 210,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadLeftThumbstickUp = 211,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadLeftThumbstickDown = 212,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadLeftThumbstickRight = 213,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadLeftThumbstickLeft = 214,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadRightThumbstickUp = 215,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadRightThumbstickDown = 216,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadRightThumbstickRight = 217,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                VirtualKey_GamepadRightThumbstickLeft = 218,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
            };
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.VirtualKeyModifiers
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace System {
            enum VirtualKeyModifiers : unsigned int
            {
                VirtualKeyModifiers_None = 0,
                VirtualKeyModifiers_Control = 0x1,
                VirtualKeyModifiers_Menu = 0x2,
                VirtualKeyModifiers_Shift = 0x4,
                VirtualKeyModifiers_Windows = 0x8,
            };

            DEFINE_ENUM_FLAG_OPERATORS(VirtualKeyModifiers)
        } /* System */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.System.DispatcherQueueHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueHandler_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("dfa2dc9c-1a2d-4917-98f2-939af1d6e0c8")
            IDispatcherQueueHandler : public IUnknown
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Invoke(void) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IDispatcherQueueHandler = _uuidof(IDispatcherQueueHandler);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIDispatcherQueueHandler;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppActivationResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.System.AppActivationResult
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CSystem_CIAppActivationResult_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppActivationResult_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppActivationResult[] = L"Windows.System.IAppActivationResult";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("6b528900-f46e-4eb0-aa6c-38af557cf9ed")
            IAppActivationResult : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_ExtendedError(
                    HRESULT* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_AppResourceGroupInfo(
                    ABI::Windows::System::IAppResourceGroupInfo** value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppActivationResult = _uuidof(IAppActivationResult);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppActivationResult;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppActivationResult_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.System.IAppDiagnosticInfo
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.System.AppDiagnosticInfo
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppDiagnosticInfo[] = L"Windows.System.IAppDiagnosticInfo";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("e348a69a-8889-4ca3-be07-d5ffff5f0804")
            IAppDiagnosticInfo : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_AppInfo(
                    ABI::Windows::ApplicationModel::IAppInfo** value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppDiagnosticInfo = _uuidof(IAppDiagnosticInfo);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppDiagnosticInfo;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.System.IAppDiagnosticInfo2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppDiagnosticInfo
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppDiagnosticInfo2[] = L"Windows.System.IAppDiagnosticInfo2";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("df46fbd7-191a-446c-9473-8fbc2374a354")
            IAppDiagnosticInfo2 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE GetResourceGroups(
                    __FIVector_1_Windows__CSystem__CAppResourceGroupInfo** result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateResourceGroupWatcher(
                    ABI::Windows::System::IAppResourceGroupInfoWatcher** result
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppDiagnosticInfo2 = _uuidof(IAppDiagnosticInfo2);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppDiagnosticInfo3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.System.AppDiagnosticInfo
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppDiagnosticInfo3[] = L"Windows.System.IAppDiagnosticInfo3";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("c895c63d-dd61-4c65-babd-81a10b4f9815")
            IAppDiagnosticInfo3 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE LaunchAsync(
                    __FIAsyncOperation_1_Windows__CSystem__CAppActivationResult** operation
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppDiagnosticInfo3 = _uuidof(IAppDiagnosticInfo3);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.System.IAppDiagnosticInfoStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.System.AppDiagnosticInfo
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppDiagnosticInfoStatics[] = L"Windows.System.IAppDiagnosticInfoStatics";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("ce6925bf-10ca-40c8-a9ca-c5c96501866e")
            IAppDiagnosticInfoStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE RequestInfoAsync(
                    __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo** operation
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppDiagnosticInfoStatics = _uuidof(IAppDiagnosticInfoStatics);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.System.IAppDiagnosticInfoStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppDiagnosticInfo
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppDiagnosticInfoStatics2[] = L"Windows.System.IAppDiagnosticInfoStatics2";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("05b24b86-1000-4c90-bb9f-7235071c50fe")
            IAppDiagnosticInfoStatics2 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateWatcher(
                    ABI::Windows::System::IAppDiagnosticInfoWatcher** watcher
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE RequestAccessAsync(
                    __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE RequestInfoForPackageAsync(
                    HSTRING packageFamilyName,
                    __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE RequestInfoForAppAsync(
                    __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE RequestInfoForAppUserModelId(
                    HSTRING appUserModelId,
                    __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo** operation
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppDiagnosticInfoStatics2 = _uuidof(IAppDiagnosticInfoStatics2);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppDiagnosticInfoWatcher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppDiagnosticInfoWatcher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppDiagnosticInfoWatcher[] = L"Windows.System.IAppDiagnosticInfoWatcher";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("75575070-01d3-489a-9325-52f9cc6ede0a")
            IAppDiagnosticInfoWatcher : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE add_Added(
                    __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_Added(
                    EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_Removed(
                    __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_Removed(
                    EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_EnumerationCompleted(
                    __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_EnumerationCompleted(
                    EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_Stopped(
                    __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_Stopped(
                    EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_Status(
                    ABI::Windows::System::AppDiagnosticInfoWatcherStatus* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Start(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE Stop(void) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppDiagnosticInfoWatcher = _uuidof(IAppDiagnosticInfoWatcher);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppDiagnosticInfoWatcherEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppDiagnosticInfoWatcherEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppDiagnosticInfoWatcherEventArgs[] = L"Windows.System.IAppDiagnosticInfoWatcherEventArgs";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("7017c716-e1da-4c65-99df-046dff5be71a")
            IAppDiagnosticInfoWatcherEventArgs : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_AppDiagnosticInfo(
                    ABI::Windows::System::IAppDiagnosticInfo** value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppDiagnosticInfoWatcherEventArgs = _uuidof(IAppDiagnosticInfoWatcherEventArgs);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppExecutionStateChangeResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.System.AppExecutionStateChangeResult
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppExecutionStateChangeResult[] = L"Windows.System.IAppExecutionStateChangeResult";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("6f039bf0-f91b-4df8-ae77-3033ccb69114")
            IAppExecutionStateChangeResult : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_ExtendedError(
                    HRESULT* value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppExecutionStateChangeResult = _uuidof(IAppExecutionStateChangeResult);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.System.IAppMemoryReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.AppMemoryReport
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIAppMemoryReport_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppMemoryReport_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppMemoryReport[] = L"Windows.System.IAppMemoryReport";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("6d65339b-4d6f-45bc-9c5e-e49b3ff2758d")
            IAppMemoryReport : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_PrivateCommitUsage(
                    UINT64* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_PeakPrivateCommitUsage(
                    UINT64* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_TotalCommitUsage(
                    UINT64* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_TotalCommitLimit(
                    UINT64* value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppMemoryReport = _uuidof(IAppMemoryReport);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppMemoryReport;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppMemoryReport_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IAppMemoryReport2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppMemoryReport
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppMemoryReport2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppMemoryReport2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppMemoryReport2[] = L"Windows.System.IAppMemoryReport2";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("5f7f3738-51b7-42dc-b7ed-79ba46d28857")
            IAppMemoryReport2 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_ExpectedTotalCommitLimit(
                    UINT64* value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppMemoryReport2 = _uuidof(IAppMemoryReport2);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppMemoryReport2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppMemoryReport2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppMemoryUsageLimitChangingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.AppMemoryUsageLimitChangingEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppMemoryUsageLimitChangingEventArgs[] = L"Windows.System.IAppMemoryUsageLimitChangingEventArgs";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("79f86664-feca-4da5-9e40-2bc63efdc979")
            IAppMemoryUsageLimitChangingEventArgs : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_OldLimit(
                    UINT64* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_NewLimit(
                    UINT64* value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppMemoryUsageLimitChangingEventArgs = _uuidof(IAppMemoryUsageLimitChangingEventArgs);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IAppResourceGroupBackgroundTaskReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppResourceGroupBackgroundTaskReport
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppResourceGroupBackgroundTaskReport[] = L"Windows.System.IAppResourceGroupBackgroundTaskReport";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("2566e74e-b05d-40c2-9dc1-1a4f039ea120")
            IAppResourceGroupBackgroundTaskReport : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_TaskId(
                    GUID* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_Name(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_Trigger(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_EntryPoint(
                    HSTRING* value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppResourceGroupBackgroundTaskReport = _uuidof(IAppResourceGroupBackgroundTaskReport);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppResourceGroupInfo
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppResourceGroupInfo
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppResourceGroupInfo[] = L"Windows.System.IAppResourceGroupInfo";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("b913f77a-e807-49f4-845e-7b8bdcfe8ee7")
            IAppResourceGroupInfo : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_InstanceId(
                    GUID* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_IsShared(
                    boolean* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetBackgroundTaskReports(
                    __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport** result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetMemoryReport(
                    ABI::Windows::System::IAppResourceGroupMemoryReport** result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetProcessDiagnosticInfos(
                    __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo** result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetStateReport(
                    ABI::Windows::System::IAppResourceGroupStateReport** result
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppResourceGroupInfo = _uuidof(IAppResourceGroupInfo);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppResourceGroupInfo;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppResourceGroupInfo2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.System.AppResourceGroupInfo
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppResourceGroupInfo2[] = L"Windows.System.IAppResourceGroupInfo2";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("ee9b236d-d305-4d6b-92f7-6afdad72dedc")
            IAppResourceGroupInfo2 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE StartSuspendAsync(
                    __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE StartResumeAsync(
                    __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE StartTerminateAsync(
                    __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult** operation
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppResourceGroupInfo2 = _uuidof(IAppResourceGroupInfo2);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.System.IAppResourceGroupInfoWatcher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppResourceGroupInfoWatcher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppResourceGroupInfoWatcher[] = L"Windows.System.IAppResourceGroupInfoWatcher";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("d9b0a0fd-6e5a-4c72-8b17-09fec4a212bd")
            IAppResourceGroupInfoWatcher : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE add_Added(
                    __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_Added(
                    EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_Removed(
                    __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_Removed(
                    EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_EnumerationCompleted(
                    __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_EnumerationCompleted(
                    EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_Stopped(
                    __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_Stopped(
                    EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_ExecutionStateChanged(
                    __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_ExecutionStateChanged(
                    EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_Status(
                    ABI::Windows::System::AppResourceGroupInfoWatcherStatus* status
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Start(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE Stop(void) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppResourceGroupInfoWatcher = _uuidof(IAppResourceGroupInfoWatcher);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppResourceGroupInfoWatcherEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppResourceGroupInfoWatcherEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppResourceGroupInfoWatcherEventArgs[] = L"Windows.System.IAppResourceGroupInfoWatcherEventArgs";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("7a787637-6302-4d2f-bf89-1c12d0b2a6b9")
            IAppResourceGroupInfoWatcherEventArgs : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_AppDiagnosticInfos(
                    __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo** value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_AppResourceGroupInfo(
                    ABI::Windows::System::IAppResourceGroupInfo** value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppResourceGroupInfoWatcherEventArgs = _uuidof(IAppResourceGroupInfoWatcherEventArgs);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppResourceGroupInfoWatcherExecutionStateChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs[] = L"Windows.System.IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("1bdbedd7-fee6-4fd4-98dd-e92a2cc299f3")
            IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_AppDiagnosticInfos(
                    __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo** value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_AppResourceGroupInfo(
                    ABI::Windows::System::IAppResourceGroupInfo** value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs = _uuidof(IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppResourceGroupMemoryReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppResourceGroupMemoryReport
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppResourceGroupMemoryReport[] = L"Windows.System.IAppResourceGroupMemoryReport";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("2c8c06b1-7db1-4c51-a225-7fae2d49e431")
            IAppResourceGroupMemoryReport : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_CommitUsageLimit(
                    UINT64* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_CommitUsageLevel(
                    ABI::Windows::System::AppMemoryUsageLevel* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_PrivateCommitUsage(
                    UINT64* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_TotalCommitUsage(
                    UINT64* value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppResourceGroupMemoryReport = _uuidof(IAppResourceGroupMemoryReport);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppResourceGroupStateReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppResourceGroupStateReport
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppResourceGroupStateReport[] = L"Windows.System.IAppResourceGroupStateReport";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("52849f18-2f70-4236-ab40-d04db0c7b931")
            IAppResourceGroupStateReport : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_ExecutionState(
                    ABI::Windows::System::AppResourceGroupExecutionState* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_EnergyQuotaState(
                    ABI::Windows::System::AppResourceGroupEnergyQuotaState* value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppResourceGroupStateReport = _uuidof(IAppResourceGroupStateReport);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppUriHandlerHost
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.System.AppUriHandlerHost
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerHost_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerHost_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppUriHandlerHost[] = L"Windows.System.IAppUriHandlerHost";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("5d50cac5-92d2-5409-b56f-7f73e10ea4c3")
            IAppUriHandlerHost : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_Name(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_Name(
                    HSTRING value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppUriHandlerHost = _uuidof(IAppUriHandlerHost);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppUriHandlerHost;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerHost_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.System.IAppUriHandlerHostFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.System.AppUriHandlerHost
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppUriHandlerHostFactory[] = L"Windows.System.IAppUriHandlerHostFactory";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("257c3c96-ce04-5f98-96bb-3ebd3e9275bb")
            IAppUriHandlerHostFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    HSTRING name,
                    ABI::Windows::System::IAppUriHandlerHost** value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppUriHandlerHostFactory = _uuidof(IAppUriHandlerHostFactory);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.System.IAppUriHandlerRegistration
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.System.AppUriHandlerRegistration
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppUriHandlerRegistration[] = L"Windows.System.IAppUriHandlerRegistration";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("6f73aeb1-4569-5c3f-9ba0-99123eea32c3")
            IAppUriHandlerRegistration : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_Name(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_User(
                    ABI::Windows::System::IUser** value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetAppAddedHostsAsync(
                    __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetAppAddedHostsAsync(
                    __FIIterable_1_Windows__CSystem__CAppUriHandlerHost* hosts,
                    ABI::Windows::Foundation::IAsyncAction** operation
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppUriHandlerRegistration = _uuidof(IAppUriHandlerRegistration);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.System.IAppUriHandlerRegistrationManager
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.System.AppUriHandlerRegistrationManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppUriHandlerRegistrationManager[] = L"Windows.System.IAppUriHandlerRegistrationManager";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("e62c9a52-ac94-5750-ac1b-6cfb6f250263")
            IAppUriHandlerRegistrationManager : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_User(
                    ABI::Windows::System::IUser** value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE TryGetRegistration(
                    HSTRING name,
                    ABI::Windows::System::IAppUriHandlerRegistration** result
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppUriHandlerRegistrationManager = _uuidof(IAppUriHandlerRegistrationManager);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.System.IAppUriHandlerRegistrationManagerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.System.AppUriHandlerRegistrationManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppUriHandlerRegistrationManagerStatics[] = L"Windows.System.IAppUriHandlerRegistrationManagerStatics";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("d5cedd9f-5729-5b76-a1d4-0285f295c124")
            IAppUriHandlerRegistrationManagerStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE GetDefault(
                    ABI::Windows::System::IAppUriHandlerRegistrationManager** result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetForUser(
                    ABI::Windows::System::IUser* user,
                    ABI::Windows::System::IAppUriHandlerRegistrationManager** result
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IAppUriHandlerRegistrationManagerStatics = _uuidof(IAppUriHandlerRegistrationManagerStatics);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.System.IDateTimeSettingsStatics
 *
 * Introduced to Windows.System.SystemManagementContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.System.DateTimeSettings
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IDateTimeSettingsStatics[] = L"Windows.System.IDateTimeSettingsStatics";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("5d2150d1-47ee-48ab-a52b-9f1954278d82")
            IDateTimeSettingsStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE SetSystemDateTime(
                    ABI::Windows::Foundation::DateTime utcDateTime
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IDateTimeSettingsStatics = _uuidof(IDateTimeSettingsStatics);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.System.IDispatcherQueue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.DispatcherQueue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IDispatcherQueue[] = L"Windows.System.IDispatcherQueue";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("603e88e4-a338-4ffe-a457-a5cfb9ceb899")
            IDispatcherQueue : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateTimer(
                    ABI::Windows::System::IDispatcherQueueTimer** result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE TryEnqueue(
                    ABI::Windows::System::IDispatcherQueueHandler* callback,
                    boolean* result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE TryEnqueueWithPriority(
                    ABI::Windows::System::DispatcherQueuePriority priority,
                    ABI::Windows::System::IDispatcherQueueHandler* callback,
                    boolean* result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_ShutdownStarting(
                    __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_ShutdownStarting(
                    EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_ShutdownCompleted(
                    __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_ShutdownCompleted(
                    EventRegistrationToken token
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IDispatcherQueue = _uuidof(IDispatcherQueue);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIDispatcherQueue;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IDispatcherQueue2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.System.DispatcherQueue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueue2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueue2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IDispatcherQueue2[] = L"Windows.System.IDispatcherQueue2";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("c822c647-30ef-506e-bd1e-a647ae6675ff")
            IDispatcherQueue2 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_HasThreadAccess(
                    boolean* value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IDispatcherQueue2 = _uuidof(IDispatcherQueue2);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIDispatcherQueue2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueue2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.System.IDispatcherQueueController
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.DispatcherQueueController
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueController_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueController_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IDispatcherQueueController[] = L"Windows.System.IDispatcherQueueController";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("22f34e66-50db-4e36-a98d-61c01b384d20")
            IDispatcherQueueController : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_DispatcherQueue(
                    ABI::Windows::System::IDispatcherQueue** value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE ShutdownQueueAsync(
                    ABI::Windows::Foundation::IAsyncAction** operation
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IDispatcherQueueController = _uuidof(IDispatcherQueueController);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIDispatcherQueueController;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueController_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IDispatcherQueueControllerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.DispatcherQueueController
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IDispatcherQueueControllerStatics[] = L"Windows.System.IDispatcherQueueControllerStatics";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("0a6c98e0-5198-49a2-a313-3f70d1f13c27")
            IDispatcherQueueControllerStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateOnDedicatedThread(
                    ABI::Windows::System::IDispatcherQueueController** result
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IDispatcherQueueControllerStatics = _uuidof(IDispatcherQueueControllerStatics);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IDispatcherQueueShutdownStartingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.DispatcherQueueShutdownStartingEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IDispatcherQueueShutdownStartingEventArgs[] = L"Windows.System.IDispatcherQueueShutdownStartingEventArgs";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("c4724c4c-ff97-40c0-a226-cc0aaa545e89")
            IDispatcherQueueShutdownStartingEventArgs : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE GetDeferral(
                    ABI::Windows::Foundation::IDeferral** result
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IDispatcherQueueShutdownStartingEventArgs = _uuidof(IDispatcherQueueShutdownStartingEventArgs);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IDispatcherQueueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.DispatcherQueue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IDispatcherQueueStatics[] = L"Windows.System.IDispatcherQueueStatics";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("a96d83d7-9371-4517-9245-d0824ac12c74")
            IDispatcherQueueStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE GetForCurrentThread(
                    ABI::Windows::System::IDispatcherQueue** result
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IDispatcherQueueStatics = _uuidof(IDispatcherQueueStatics);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIDispatcherQueueStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IDispatcherQueueTimer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.DispatcherQueueTimer
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IDispatcherQueueTimer[] = L"Windows.System.IDispatcherQueueTimer";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("5feabb1d-a31c-4727-b1ac-37454649d56a")
            IDispatcherQueueTimer : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_Interval(
                    ABI::Windows::Foundation::TimeSpan* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_Interval(
                    ABI::Windows::Foundation::TimeSpan value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_IsRunning(
                    boolean* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_IsRepeating(
                    boolean* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_IsRepeating(
                    boolean value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Start(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE Stop(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_Tick(
                    __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_Tick(
                    EventRegistrationToken token
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IDispatcherQueueTimer = _uuidof(IDispatcherQueueTimer);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIDispatcherQueueTimer;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IFolderLauncherOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.FolderLauncherOptions
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIFolderLauncherOptions_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIFolderLauncherOptions_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IFolderLauncherOptions[] = L"Windows.System.IFolderLauncherOptions";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("bb91c27d-6b87-432a-bd04-776c6f5fb2ab")
            IFolderLauncherOptions : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_ItemsToSelect(
                    __FIVector_1_Windows__CStorage__CIStorageItem** value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IFolderLauncherOptions = _uuidof(IFolderLauncherOptions);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIFolderLauncherOptions;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIFolderLauncherOptions_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IKnownUserPropertiesStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.KnownUserProperties
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IKnownUserPropertiesStatics[] = L"Windows.System.IKnownUserPropertiesStatics";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("7755911a-70c5-48e5-b637-5ba3441e4ee4")
            IKnownUserPropertiesStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_DisplayName(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_FirstName(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_LastName(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_ProviderName(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_AccountName(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_GuestHost(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_PrincipalName(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_DomainName(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_SessionInitiationProtocolUri(
                    HSTRING* value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IKnownUserPropertiesStatics = _uuidof(IKnownUserPropertiesStatics);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.ILaunchUriResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.LaunchUriResult
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CILaunchUriResult_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILaunchUriResult_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILaunchUriResult[] = L"Windows.System.ILaunchUriResult";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("ec27a8df-f6d5-45ca-913a-70a40c5c8221")
            ILaunchUriResult : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_Status(
                    ABI::Windows::System::LaunchUriStatus* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_Result(
                    ABI::Windows::Foundation::Collections::IPropertySet** value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_ILaunchUriResult = _uuidof(ILaunchUriResult);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILaunchUriResult;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILaunchUriResult_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.ILauncherOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.LauncherOptions
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherOptions_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherOptions_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherOptions[] = L"Windows.System.ILauncherOptions";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("bafa21d8-b071-4cd8-853e-341203e557d3")
            ILauncherOptions : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_TreatAsUntrusted(
                    boolean* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_TreatAsUntrusted(
                    boolean value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_DisplayApplicationPicker(
                    boolean* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_DisplayApplicationPicker(
                    boolean value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_UI(
                    ABI::Windows::System::ILauncherUIOptions** value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_PreferredApplicationPackageFamilyName(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_PreferredApplicationPackageFamilyName(
                    HSTRING value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_PreferredApplicationDisplayName(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_PreferredApplicationDisplayName(
                    HSTRING value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_FallbackUri(
                    ABI::Windows::Foundation::IUriRuntimeClass** value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_FallbackUri(
                    ABI::Windows::Foundation::IUriRuntimeClass* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_ContentType(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_ContentType(
                    HSTRING value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_ILauncherOptions = _uuidof(ILauncherOptions);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherOptions;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherOptions_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.ILauncherOptions2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.LauncherOptions
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherOptions2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherOptions2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherOptions2[] = L"Windows.System.ILauncherOptions2";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("3ba08eb4-6e40-4dce-a1a3-2f53950afb49")
            ILauncherOptions2 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_TargetApplicationPackageFamilyName(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_TargetApplicationPackageFamilyName(
                    HSTRING value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_NeighboringFilesQuery(
                    ABI::Windows::Storage::Search::IStorageFileQueryResult** value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_NeighboringFilesQuery(
                    ABI::Windows::Storage::Search::IStorageFileQueryResult* value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_ILauncherOptions2 = _uuidof(ILauncherOptions2);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherOptions2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherOptions2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.ILauncherOptions3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.System.LauncherOptions
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherOptions3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherOptions3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherOptions3[] = L"Windows.System.ILauncherOptions3";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("f0770655-4b63-4e3a-9107-4e687841923a")
            ILauncherOptions3 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_IgnoreAppUriHandlers(
                    boolean* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_IgnoreAppUriHandlers(
                    boolean value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_ILauncherOptions3 = _uuidof(ILauncherOptions3);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherOptions3;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherOptions3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.System.ILauncherOptions4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.System.LauncherOptions
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherOptions4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherOptions4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherOptions4[] = L"Windows.System.ILauncherOptions4";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("ef6fd10e-e6fb-4814-a44e-57e8b9d9a01b")
            ILauncherOptions4 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_LimitPickerToCurrentAppAndAppUriHandlers(
                    boolean* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_LimitPickerToCurrentAppAndAppUriHandlers(
                    boolean value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_ILauncherOptions4 = _uuidof(ILauncherOptions4);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherOptions4;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherOptions4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.System.ILauncherStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.Launcher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherStatics[] = L"Windows.System.ILauncherStatics";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("277151c3-9e3e-42f6-91a4-5dfdeb232451")
            ILauncherStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE LaunchFileAsync(
                    ABI::Windows::Storage::IStorageFile* file,
                    __FIAsyncOperation_1_boolean** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE LaunchFileWithOptionsAsync(
                    ABI::Windows::Storage::IStorageFile* file,
                    ABI::Windows::System::ILauncherOptions* options,
                    __FIAsyncOperation_1_boolean** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE LaunchUriAsync(
                    ABI::Windows::Foundation::IUriRuntimeClass* uri,
                    __FIAsyncOperation_1_boolean** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE LaunchUriWithOptionsAsync(
                    ABI::Windows::Foundation::IUriRuntimeClass* uri,
                    ABI::Windows::System::ILauncherOptions* options,
                    __FIAsyncOperation_1_boolean** operation
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_ILauncherStatics = _uuidof(ILauncherStatics);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.ILauncherStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.Launcher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherStatics2[] = L"Windows.System.ILauncherStatics2";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("59ba2fbb-24cb-4c02-a4c4-8294569d54f1")
            ILauncherStatics2 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE LaunchUriForResultsAsync(
                    ABI::Windows::Foundation::IUriRuntimeClass* uri,
                    ABI::Windows::System::ILauncherOptions* options,
                    __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE LaunchUriForResultsWithDataAsync(
                    ABI::Windows::Foundation::IUriRuntimeClass* uri,
                    ABI::Windows::System::ILauncherOptions* options,
                    ABI::Windows::Foundation::Collections::IPropertySet* inputData,
                    __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE LaunchUriWithDataAsync(
                    ABI::Windows::Foundation::IUriRuntimeClass* uri,
                    ABI::Windows::System::ILauncherOptions* options,
                    ABI::Windows::Foundation::Collections::IPropertySet* inputData,
                    __FIAsyncOperation_1_boolean** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE QueryUriSupportAsync(
                    ABI::Windows::Foundation::IUriRuntimeClass* uri,
                    ABI::Windows::System::LaunchQuerySupportType launchQuerySupportType,
                    __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE QueryUriSupportWithPackageFamilyNameAsync(
                    ABI::Windows::Foundation::IUriRuntimeClass* uri,
                    ABI::Windows::System::LaunchQuerySupportType launchQuerySupportType,
                    HSTRING packageFamilyName,
                    __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE QueryFileSupportAsync(
                    ABI::Windows::Storage::IStorageFile* file,
                    __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE QueryFileSupportWithPackageFamilyNameAsync(
                    ABI::Windows::Storage::IStorageFile* file,
                    HSTRING packageFamilyName,
                    __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE FindUriSchemeHandlersAsync(
                    HSTRING scheme,
                    __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE FindUriSchemeHandlersWithLaunchUriTypeAsync(
                    HSTRING scheme,
                    ABI::Windows::System::LaunchQuerySupportType launchQuerySupportType,
                    __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE FindFileHandlersAsync(
                    HSTRING extension,
                    __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo** operation
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_ILauncherStatics2 = _uuidof(ILauncherStatics2);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherStatics2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.ILauncherStatics3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.Launcher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherStatics3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherStatics3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherStatics3[] = L"Windows.System.ILauncherStatics3";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("234261a8-9db3-4683-aa42-dc6f51d33847")
            ILauncherStatics3 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE LaunchFolderAsync(
                    ABI::Windows::Storage::IStorageFolder* folder,
                    __FIAsyncOperation_1_boolean** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE LaunchFolderWithOptionsAsync(
                    ABI::Windows::Storage::IStorageFolder* folder,
                    ABI::Windows::System::IFolderLauncherOptions* options,
                    __FIAsyncOperation_1_boolean** operation
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_ILauncherStatics3 = _uuidof(ILauncherStatics3);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherStatics3;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherStatics3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.ILauncherStatics4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.System.Launcher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherStatics4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherStatics4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherStatics4[] = L"Windows.System.ILauncherStatics4";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("b9ec819f-b5a5-41c6-b3b3-dd1b3178bcf2")
            ILauncherStatics4 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE QueryAppUriSupportAsync(
                    ABI::Windows::Foundation::IUriRuntimeClass* uri,
                    __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE QueryAppUriSupportWithPackageFamilyNameAsync(
                    ABI::Windows::Foundation::IUriRuntimeClass* uri,
                    HSTRING packageFamilyName,
                    __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE FindAppUriHandlersAsync(
                    ABI::Windows::Foundation::IUriRuntimeClass* uri,
                    __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE LaunchUriForUserAsync(
                    ABI::Windows::System::IUser* user,
                    ABI::Windows::Foundation::IUriRuntimeClass* uri,
                    __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE LaunchUriWithOptionsForUserAsync(
                    ABI::Windows::System::IUser* user,
                    ABI::Windows::Foundation::IUriRuntimeClass* uri,
                    ABI::Windows::System::ILauncherOptions* options,
                    __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE LaunchUriWithDataForUserAsync(
                    ABI::Windows::System::IUser* user,
                    ABI::Windows::Foundation::IUriRuntimeClass* uri,
                    ABI::Windows::System::ILauncherOptions* options,
                    ABI::Windows::Foundation::Collections::IPropertySet* inputData,
                    __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE LaunchUriForResultsForUserAsync(
                    ABI::Windows::System::IUser* user,
                    ABI::Windows::Foundation::IUriRuntimeClass* uri,
                    ABI::Windows::System::ILauncherOptions* options,
                    __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE LaunchUriForResultsWithDataForUserAsync(
                    ABI::Windows::System::IUser* user,
                    ABI::Windows::Foundation::IUriRuntimeClass* uri,
                    ABI::Windows::System::ILauncherOptions* options,
                    ABI::Windows::Foundation::Collections::IPropertySet* inputData,
                    __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult** operation
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_ILauncherStatics4 = _uuidof(ILauncherStatics4);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherStatics4;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherStatics4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.System.ILauncherStatics5
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.System.Launcher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherStatics5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherStatics5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherStatics5[] = L"Windows.System.ILauncherStatics5";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("5b24ef84-d895-5fea-9153-1ac49aed9ba9")
            ILauncherStatics5 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE LaunchFolderPathAsync(
                    HSTRING path,
                    __FIAsyncOperation_1_boolean** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE LaunchFolderPathWithOptionsAsync(
                    HSTRING path,
                    ABI::Windows::System::IFolderLauncherOptions* options,
                    __FIAsyncOperation_1_boolean** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE LaunchFolderPathForUserAsync(
                    ABI::Windows::System::IUser* user,
                    HSTRING path,
                    __FIAsyncOperation_1_boolean** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE LaunchFolderPathWithOptionsForUserAsync(
                    ABI::Windows::System::IUser* user,
                    HSTRING path,
                    ABI::Windows::System::IFolderLauncherOptions* options,
                    __FIAsyncOperation_1_boolean** operation
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_ILauncherStatics5 = _uuidof(ILauncherStatics5);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherStatics5;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherStatics5_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.System.ILauncherUIOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.LauncherUIOptions
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherUIOptions_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherUIOptions_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherUIOptions[] = L"Windows.System.ILauncherUIOptions";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("1b25da6e-8aa6-41e9-8251-4165f5985f49")
            ILauncherUIOptions : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_InvocationPoint(
                    __FIReference_1_Windows__CFoundation__CPoint** value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_InvocationPoint(
                    __FIReference_1_Windows__CFoundation__CPoint* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_SelectionRect(
                    __FIReference_1_Windows__CFoundation__CRect** value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_SelectionRect(
                    __FIReference_1_Windows__CFoundation__CRect* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_PreferredPlacement(
                    ABI::Windows::UI::Popups::Placement* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_PreferredPlacement(
                    ABI::Windows::UI::Popups::Placement value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_ILauncherUIOptions = _uuidof(ILauncherUIOptions);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherUIOptions;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherUIOptions_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.ILauncherViewOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherViewOptions_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherViewOptions_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherViewOptions[] = L"Windows.System.ILauncherViewOptions";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("8a9b29f1-7ca7-49de-9bd3-3c5b7184f616")
            ILauncherViewOptions : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_DesiredRemainingView(
                    ABI::Windows::UI::ViewManagement::ViewSizePreference* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_DesiredRemainingView(
                    ABI::Windows::UI::ViewManagement::ViewSizePreference value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_ILauncherViewOptions = _uuidof(ILauncherViewOptions);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherViewOptions;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherViewOptions_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IMemoryManagerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.MemoryManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIMemoryManagerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IMemoryManagerStatics[] = L"Windows.System.IMemoryManagerStatics";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("5c6c279c-d7ca-4779-9188-4057219ce64c")
            IMemoryManagerStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_AppMemoryUsage(
                    UINT64* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_AppMemoryUsageLimit(
                    UINT64* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_AppMemoryUsageLevel(
                    ABI::Windows::System::AppMemoryUsageLevel* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_AppMemoryUsageIncreased(
                    __FIEventHandler_1_IInspectable* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_AppMemoryUsageIncreased(
                    EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_AppMemoryUsageDecreased(
                    __FIEventHandler_1_IInspectable* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_AppMemoryUsageDecreased(
                    EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_AppMemoryUsageLimitChanging(
                    __FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_AppMemoryUsageLimitChanging(
                    EventRegistrationToken token
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IMemoryManagerStatics = _uuidof(IMemoryManagerStatics);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIMemoryManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIMemoryManagerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IMemoryManagerStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.MemoryManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IMemoryManagerStatics2[] = L"Windows.System.IMemoryManagerStatics2";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("6eee351f-6d62-423f-9479-b01f9c9f7669")
            IMemoryManagerStatics2 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE GetAppMemoryReport(
                    ABI::Windows::System::IAppMemoryReport** memoryReport
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetProcessMemoryReport(
                    ABI::Windows::System::IProcessMemoryReport** memoryReport
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IMemoryManagerStatics2 = _uuidof(IMemoryManagerStatics2);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIMemoryManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IMemoryManagerStatics3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.System.MemoryManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IMemoryManagerStatics3[] = L"Windows.System.IMemoryManagerStatics3";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("149b59ce-92ad-4e35-89eb-50dfb4c0d91c")
            IMemoryManagerStatics3 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE TrySetAppMemoryUsageLimit(
                    UINT64 value,
                    boolean* result
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IMemoryManagerStatics3 = _uuidof(IMemoryManagerStatics3);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIMemoryManagerStatics3;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.System.IMemoryManagerStatics4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.MemoryManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IMemoryManagerStatics4[] = L"Windows.System.IMemoryManagerStatics4";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("c5a94828-e84e-4886-8a0d-44b3190e3b72")
            IMemoryManagerStatics4 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_ExpectedAppMemoryUsageLimit(
                    UINT64* value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IMemoryManagerStatics4 = _uuidof(IMemoryManagerStatics4);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIMemoryManagerStatics4;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IProcessLauncherOptions
 *
 * Introduced to Windows.System.SystemManagementContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.System.ProcessLauncherOptions
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CSystem_CIProcessLauncherOptions_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIProcessLauncherOptions_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IProcessLauncherOptions[] = L"Windows.System.IProcessLauncherOptions";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("3080b9cf-f444-4a83-beaf-a549a0f3229c")
            IProcessLauncherOptions : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_StandardInput(
                    ABI::Windows::Storage::Streams::IInputStream** value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_StandardInput(
                    ABI::Windows::Storage::Streams::IInputStream* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_StandardOutput(
                    ABI::Windows::Storage::Streams::IOutputStream** value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_StandardOutput(
                    ABI::Windows::Storage::Streams::IOutputStream* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_StandardError(
                    ABI::Windows::Storage::Streams::IOutputStream** value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_StandardError(
                    ABI::Windows::Storage::Streams::IOutputStream* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_WorkingDirectory(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_WorkingDirectory(
                    HSTRING value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IProcessLauncherOptions = _uuidof(IProcessLauncherOptions);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIProcessLauncherOptions;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIProcessLauncherOptions_INTERFACE_DEFINED__) */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.System.IProcessLauncherResult
 *
 * Introduced to Windows.System.SystemManagementContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.System.ProcessLauncherResult
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CSystem_CIProcessLauncherResult_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIProcessLauncherResult_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IProcessLauncherResult[] = L"Windows.System.IProcessLauncherResult";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("544c8934-86d8-4991-8e75-ece8a43b6b6d")
            IProcessLauncherResult : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_ExitCode(
                    UINT32* value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IProcessLauncherResult = _uuidof(IProcessLauncherResult);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIProcessLauncherResult;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIProcessLauncherResult_INTERFACE_DEFINED__) */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.System.IProcessLauncherStatics
 *
 * Introduced to Windows.System.SystemManagementContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.System.ProcessLauncher
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CSystem_CIProcessLauncherStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIProcessLauncherStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IProcessLauncherStatics[] = L"Windows.System.IProcessLauncherStatics";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("33ab66e7-2d0e-448b-a6a0-c13c3836d09c")
            IProcessLauncherStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE RunToCompletionAsync(
                    HSTRING fileName,
                    HSTRING args,
                    __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult** asyncOperationResult
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE RunToCompletionAsyncWithOptions(
                    HSTRING fileName,
                    HSTRING args,
                    ABI::Windows::System::IProcessLauncherOptions* options,
                    __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult** asyncOperationResult
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IProcessLauncherStatics = _uuidof(IProcessLauncherStatics);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIProcessLauncherStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIProcessLauncherStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.System.IProcessMemoryReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.ProcessMemoryReport
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIProcessMemoryReport_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIProcessMemoryReport_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IProcessMemoryReport[] = L"Windows.System.IProcessMemoryReport";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("087305a8-9b70-4782-8741-3a982b6ce5e4")
            IProcessMemoryReport : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_PrivateWorkingSetUsage(
                    UINT64* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_TotalWorkingSetUsage(
                    UINT64* value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IProcessMemoryReport = _uuidof(IProcessMemoryReport);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIProcessMemoryReport;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIProcessMemoryReport_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IProtocolForResultsOperation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.ProtocolForResultsOperation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IProtocolForResultsOperation[] = L"Windows.System.IProtocolForResultsOperation";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("d581293a-6de9-4d28-9378-f86782e182bb")
            IProtocolForResultsOperation : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE ReportCompleted(
                    ABI::Windows::Foundation::Collections::IPropertySet* data
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IProtocolForResultsOperation = _uuidof(IProtocolForResultsOperation);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIProtocolForResultsOperation;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IRemoteLauncherOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.System.RemoteLauncherOptions
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IRemoteLauncherOptions[] = L"Windows.System.IRemoteLauncherOptions";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("9e3a2788-2891-4cdf-a2d6-9dff7d02e693")
            IRemoteLauncherOptions : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_FallbackUri(
                    ABI::Windows::Foundation::IUriRuntimeClass** value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_FallbackUri(
                    ABI::Windows::Foundation::IUriRuntimeClass* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_PreferredAppIds(
                    __FIVector_1_HSTRING** value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IRemoteLauncherOptions = _uuidof(IRemoteLauncherOptions);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIRemoteLauncherOptions;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.System.IRemoteLauncherStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.System.RemoteLauncher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IRemoteLauncherStatics[] = L"Windows.System.IRemoteLauncherStatics";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("d7db7a93-a30c-48b7-9f21-051026a4e517")
            IRemoteLauncherStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE LaunchUriAsync(
                    ABI::Windows::System::RemoteSystems::IRemoteSystemConnectionRequest* remoteSystemConnectionRequest,
                    ABI::Windows::Foundation::IUriRuntimeClass* uri,
                    __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE LaunchUriWithOptionsAsync(
                    ABI::Windows::System::RemoteSystems::IRemoteSystemConnectionRequest* remoteSystemConnectionRequest,
                    ABI::Windows::Foundation::IUriRuntimeClass* uri,
                    ABI::Windows::System::IRemoteLauncherOptions* options,
                    __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE LaunchUriWithDataAsync(
                    ABI::Windows::System::RemoteSystems::IRemoteSystemConnectionRequest* remoteSystemConnectionRequest,
                    ABI::Windows::Foundation::IUriRuntimeClass* uri,
                    ABI::Windows::System::IRemoteLauncherOptions* options,
                    ABI::Windows::Foundation::Collections::IPropertySet* inputData,
                    __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus** operation
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IRemoteLauncherStatics = _uuidof(IRemoteLauncherStatics);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIRemoteLauncherStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.System.IShutdownManagerStatics
 *
 * Introduced to Windows.System.SystemManagementContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.ShutdownManager
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIShutdownManagerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIShutdownManagerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IShutdownManagerStatics[] = L"Windows.System.IShutdownManagerStatics";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("72e247ed-dd5b-4d6c-b1d0-c57a7bbb5f94")
            IShutdownManagerStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE BeginShutdown(
                    ABI::Windows::System::ShutdownKind shutdownKind,
                    ABI::Windows::Foundation::TimeSpan timeout
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CancelShutdown(void) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IShutdownManagerStatics = _uuidof(IShutdownManagerStatics);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIShutdownManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIShutdownManagerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IShutdownManagerStatics2
 *
 * Introduced to Windows.System.SystemManagementContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.System.ShutdownManager
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Windows.System.IShutdownManagerStatics
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IShutdownManagerStatics2[] = L"Windows.System.IShutdownManagerStatics2";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("0f69a02f-9c34-43c7-a8c3-70b30a7f7504")
            IShutdownManagerStatics2 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE IsPowerStateSupported(
                    ABI::Windows::System::PowerState powerState,
                    boolean* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE EnterPowerState(
                    ABI::Windows::System::PowerState powerState
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE EnterPowerStateWithTimeSpan(
                    ABI::Windows::System::PowerState powerState,
                    ABI::Windows::Foundation::TimeSpan wakeUpAfter
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IShutdownManagerStatics2 = _uuidof(IShutdownManagerStatics2);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIShutdownManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.System.ITimeZoneSettingsStatics
 *
 * Introduced to Windows.System.SystemManagementContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.TimeZoneSettings
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ITimeZoneSettingsStatics[] = L"Windows.System.ITimeZoneSettingsStatics";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("9b3b2bea-a101-41ae-9fbd-028728bab73d")
            ITimeZoneSettingsStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_CurrentTimeZoneDisplayName(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_SupportedTimeZoneDisplayNames(
                    __FIVectorView_1_HSTRING** value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_CanChangeTimeZone(
                    boolean* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE ChangeTimeZoneByDisplayName(
                    HSTRING timeZoneDisplayName
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_ITimeZoneSettingsStatics = _uuidof(ITimeZoneSettingsStatics);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.ITimeZoneSettingsStatics2
 *
 * Introduced to Windows.System.SystemManagementContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.TimeZoneSettings
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ITimeZoneSettingsStatics2[] = L"Windows.System.ITimeZoneSettingsStatics2";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("555c0db8-39a8-49fa-b4f6-a2c7fc2842ec")
            ITimeZoneSettingsStatics2 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE AutoUpdateTimeZoneAsync(
                    ABI::Windows::Foundation::TimeSpan timeout,
                    __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus** operation
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_ITimeZoneSettingsStatics2 = _uuidof(ITimeZoneSettingsStatics2);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IUser
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.User
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIUser_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUser_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUser[] = L"Windows.System.IUser";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("df9a26c6-e746-4bcd-b5d4-120103c4209b")
            IUser : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_NonRoamableId(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_AuthenticationStatus(
                    ABI::Windows::System::UserAuthenticationStatus* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_Type(
                    ABI::Windows::System::UserType* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetPropertyAsync(
                    HSTRING value,
                    __FIAsyncOperation_1_IInspectable** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetPropertiesAsync(
                    __FIVectorView_1_HSTRING* values,
                    __FIAsyncOperation_1___F__CIPropertySet** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetPictureAsync(
                    ABI::Windows::System::UserPictureSize desiredSize,
                    __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference** operation
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IUser = _uuidof(IUser);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUser;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUser_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IUserAuthenticationStatusChangeDeferral
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.UserAuthenticationStatusChangeDeferral
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserAuthenticationStatusChangeDeferral[] = L"Windows.System.IUserAuthenticationStatusChangeDeferral";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("88b59568-bb30-42fb-a270-e9902e40efa7")
            IUserAuthenticationStatusChangeDeferral : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Complete(void) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IUserAuthenticationStatusChangeDeferral = _uuidof(IUserAuthenticationStatusChangeDeferral);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IUserAuthenticationStatusChangingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.UserAuthenticationStatusChangingEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserAuthenticationStatusChangingEventArgs[] = L"Windows.System.IUserAuthenticationStatusChangingEventArgs";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("8c030f28-a711-4c1e-ab48-04179c15938f")
            IUserAuthenticationStatusChangingEventArgs : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE GetDeferral(
                    ABI::Windows::System::IUserAuthenticationStatusChangeDeferral** result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_User(
                    ABI::Windows::System::IUser** value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_NewStatus(
                    ABI::Windows::System::UserAuthenticationStatus* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_CurrentStatus(
                    ABI::Windows::System::UserAuthenticationStatus* value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IUserAuthenticationStatusChangingEventArgs = _uuidof(IUserAuthenticationStatusChangingEventArgs);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IUserChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.UserChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIUserChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserChangedEventArgs[] = L"Windows.System.IUserChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("086459dc-18c6-48db-bc99-724fb9203ccc")
            IUserChangedEventArgs : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_User(
                    ABI::Windows::System::IUser** value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IUserChangedEventArgs = _uuidof(IUserChangedEventArgs);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IUserChangedEventArgs2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 10.0
 *
 * Interface is a part of the implementation of type Windows.System.UserChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000
#if !defined(____x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserChangedEventArgs2[] = L"Windows.System.IUserChangedEventArgs2";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("6b2ccb44-6f01-560c-97ad-fc7f32ec581f")
            IUserChangedEventArgs2 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_ChangedPropertyKinds(
                    __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind** value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IUserChangedEventArgs2 = _uuidof(IUserChangedEventArgs2);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserChangedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

/*
 *
 * Interface Windows.System.IUserDeviceAssociationChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.System.UserDeviceAssociationChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserDeviceAssociationChangedEventArgs[] = L"Windows.System.IUserDeviceAssociationChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("bd1f6f6c-bb5d-4d7b-a5f0-c8cd11a38d42")
            IUserDeviceAssociationChangedEventArgs : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_DeviceId(
                    HSTRING* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_NewUser(
                    ABI::Windows::System::IUser** value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_OldUser(
                    ABI::Windows::System::IUser** value
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IUserDeviceAssociationChangedEventArgs = _uuidof(IUserDeviceAssociationChangedEventArgs);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.System.IUserDeviceAssociationStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.System.UserDeviceAssociation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserDeviceAssociationStatics[] = L"Windows.System.IUserDeviceAssociationStatics";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("7e491e14-f85a-4c07-8da9-7fe3d0542343")
            IUserDeviceAssociationStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE FindUserFromDeviceId(
                    HSTRING deviceId,
                    ABI::Windows::System::IUser** user
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_UserDeviceAssociationChanged(
                    __FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_UserDeviceAssociationChanged(
                    EventRegistrationToken token
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IUserDeviceAssociationStatics = _uuidof(IUserDeviceAssociationStatics);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.System.IUserPicker
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.System.UserPicker
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CSystem_CIUserPicker_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserPicker_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserPicker[] = L"Windows.System.IUserPicker";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("7d548008-f1e3-4a6c-8ddc-a9bb0f488aed")
            IUserPicker : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_AllowGuestAccounts(
                    boolean* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_AllowGuestAccounts(
                    boolean value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE get_SuggestedSelectedUser(
                    ABI::Windows::System::IUser** value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE put_SuggestedSelectedUser(
                    ABI::Windows::System::IUser* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE PickSingleUserAsync(
                    __FIAsyncOperation_1_Windows__CSystem__CUser** operation
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IUserPicker = _uuidof(IUserPicker);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserPicker;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserPicker_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.System.IUserPickerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.System.UserPicker
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CSystem_CIUserPickerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserPickerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserPickerStatics[] = L"Windows.System.IUserPickerStatics";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("de3290dc-7e73-4df6-a1ae-4d7eca82b40d")
            IUserPickerStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE IsSupported(
                    boolean* result
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IUserPickerStatics = _uuidof(IUserPickerStatics);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserPickerStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserPickerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.System.IUserStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.User
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIUserStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserStatics[] = L"Windows.System.IUserStatics";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("155eb23b-242a-45e0-a2e9-3171fc6a7fdd")
            IUserStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateWatcher(
                    ABI::Windows::System::IUserWatcher** result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE FindAllAsync(
                    __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE FindAllAsyncByType(
                    ABI::Windows::System::UserType type,
                    __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE FindAllAsyncByTypeAndStatus(
                    ABI::Windows::System::UserType type,
                    ABI::Windows::System::UserAuthenticationStatus status,
                    __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser** operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetFromId(
                    HSTRING nonRoamableId,
                    ABI::Windows::System::IUser** result
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IUserStatics = _uuidof(IUserStatics);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IUserWatcher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.UserWatcher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIUserWatcher_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserWatcher_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserWatcher[] = L"Windows.System.IUserWatcher";
namespace ABI {
    namespace Windows {
        namespace System {
            MIDL_INTERFACE("155eb23b-242a-45e0-a2e9-3171fc6a7fbb")
            IUserWatcher : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE get_Status(
                    ABI::Windows::System::UserWatcherStatus* value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Start(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE Stop(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_Added(
                    __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_Added(
                    EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_Removed(
                    __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_Removed(
                    EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_Updated(
                    __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_Updated(
                    EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_AuthenticationStatusChanged(
                    __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_AuthenticationStatusChanged(
                    EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_AuthenticationStatusChanging(
                    __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_AuthenticationStatusChanging(
                    EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_EnumerationCompleted(
                    __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_EnumerationCompleted(
                    EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE add_Stopped(
                    __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable* handler,
                    EventRegistrationToken* token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE remove_Stopped(
                    EventRegistrationToken token
                    ) = 0;
            };

            extern MIDL_CONST_ID IID& IID_IUserWatcher = _uuidof(IUserWatcher);
        } /* System */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserWatcher;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserWatcher_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.AppActivationResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppActivationResult ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_System_AppActivationResult_DEFINED
#define RUNTIMECLASS_Windows_System_AppActivationResult_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppActivationResult[] = L"Windows.System.AppActivationResult";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.System.AppDiagnosticInfo
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IAppDiagnosticInfoStatics interface starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.System.IAppDiagnosticInfoStatics2 interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppDiagnosticInfo ** Default Interface **
 *    Windows.System.IAppDiagnosticInfo2
 *    Windows.System.IAppDiagnosticInfo3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_System_AppDiagnosticInfo_DEFINED
#define RUNTIMECLASS_Windows_System_AppDiagnosticInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppDiagnosticInfo[] = L"Windows.System.AppDiagnosticInfo";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.System.AppDiagnosticInfoWatcher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppDiagnosticInfoWatcher ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_AppDiagnosticInfoWatcher_DEFINED
#define RUNTIMECLASS_Windows_System_AppDiagnosticInfoWatcher_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppDiagnosticInfoWatcher[] = L"Windows.System.AppDiagnosticInfoWatcher";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.AppDiagnosticInfoWatcherEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppDiagnosticInfoWatcherEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_AppDiagnosticInfoWatcherEventArgs_DEFINED
#define RUNTIMECLASS_Windows_System_AppDiagnosticInfoWatcherEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppDiagnosticInfoWatcherEventArgs[] = L"Windows.System.AppDiagnosticInfoWatcherEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.AppExecutionStateChangeResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppExecutionStateChangeResult ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_System_AppExecutionStateChangeResult_DEFINED
#define RUNTIMECLASS_Windows_System_AppExecutionStateChangeResult_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppExecutionStateChangeResult[] = L"Windows.System.AppExecutionStateChangeResult";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.System.AppMemoryReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppMemoryReport ** Default Interface **
 *    Windows.System.IAppMemoryReport2
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_AppMemoryReport_DEFINED
#define RUNTIMECLASS_Windows_System_AppMemoryReport_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppMemoryReport[] = L"Windows.System.AppMemoryReport";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.AppMemoryUsageLimitChangingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppMemoryUsageLimitChangingEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_AppMemoryUsageLimitChangingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_System_AppMemoryUsageLimitChangingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppMemoryUsageLimitChangingEventArgs[] = L"Windows.System.AppMemoryUsageLimitChangingEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.AppResourceGroupBackgroundTaskReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppResourceGroupBackgroundTaskReport ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_AppResourceGroupBackgroundTaskReport_DEFINED
#define RUNTIMECLASS_Windows_System_AppResourceGroupBackgroundTaskReport_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppResourceGroupBackgroundTaskReport[] = L"Windows.System.AppResourceGroupBackgroundTaskReport";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.AppResourceGroupInfo
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppResourceGroupInfo ** Default Interface **
 *    Windows.System.IAppResourceGroupInfo2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_AppResourceGroupInfo_DEFINED
#define RUNTIMECLASS_Windows_System_AppResourceGroupInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppResourceGroupInfo[] = L"Windows.System.AppResourceGroupInfo";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.AppResourceGroupInfoWatcher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppResourceGroupInfoWatcher ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_AppResourceGroupInfoWatcher_DEFINED
#define RUNTIMECLASS_Windows_System_AppResourceGroupInfoWatcher_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppResourceGroupInfoWatcher[] = L"Windows.System.AppResourceGroupInfoWatcher";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.AppResourceGroupInfoWatcherEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppResourceGroupInfoWatcherEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_AppResourceGroupInfoWatcherEventArgs_DEFINED
#define RUNTIMECLASS_Windows_System_AppResourceGroupInfoWatcherEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppResourceGroupInfoWatcherEventArgs[] = L"Windows.System.AppResourceGroupInfoWatcherEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.AppResourceGroupInfoWatcherExecutionStateChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_AppResourceGroupInfoWatcherExecutionStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_System_AppResourceGroupInfoWatcherExecutionStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppResourceGroupInfoWatcherExecutionStateChangedEventArgs[] = L"Windows.System.AppResourceGroupInfoWatcherExecutionStateChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.AppResourceGroupMemoryReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppResourceGroupMemoryReport ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_AppResourceGroupMemoryReport_DEFINED
#define RUNTIMECLASS_Windows_System_AppResourceGroupMemoryReport_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppResourceGroupMemoryReport[] = L"Windows.System.AppResourceGroupMemoryReport";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.AppResourceGroupStateReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppResourceGroupStateReport ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_AppResourceGroupStateReport_DEFINED
#define RUNTIMECLASS_Windows_System_AppResourceGroupStateReport_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppResourceGroupStateReport[] = L"Windows.System.AppResourceGroupStateReport";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.AppUriHandlerHost
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 7.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Type can be activated via the Windows.System.IAppUriHandlerHostFactory interface starting with version 7.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppUriHandlerHost ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_System_AppUriHandlerHost_DEFINED
#define RUNTIMECLASS_Windows_System_AppUriHandlerHost_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppUriHandlerHost[] = L"Windows.System.AppUriHandlerHost";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.System.AppUriHandlerRegistration
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppUriHandlerRegistration ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_System_AppUriHandlerRegistration_DEFINED
#define RUNTIMECLASS_Windows_System_AppUriHandlerRegistration_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppUriHandlerRegistration[] = L"Windows.System.AppUriHandlerRegistration";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.System.AppUriHandlerRegistrationManager
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IAppUriHandlerRegistrationManagerStatics interface starting with version 7.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppUriHandlerRegistrationManager ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_System_AppUriHandlerRegistrationManager_DEFINED
#define RUNTIMECLASS_Windows_System_AppUriHandlerRegistrationManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppUriHandlerRegistrationManager[] = L"Windows.System.AppUriHandlerRegistrationManager";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.System.DateTimeSettings
 *
 * Introduced to Windows.System.SystemManagementContract in version 4.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IDateTimeSettingsStatics interface starting with version 4.0 of the Windows.System.SystemManagementContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_System_DateTimeSettings_DEFINED
#define RUNTIMECLASS_Windows_System_DateTimeSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_DateTimeSettings[] = L"Windows.System.DateTimeSettings";
#endif
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.System.DispatcherQueue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IDispatcherQueueStatics interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IDispatcherQueue ** Default Interface **
 *    Windows.System.IDispatcherQueue2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_DispatcherQueue_DEFINED
#define RUNTIMECLASS_Windows_System_DispatcherQueue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_DispatcherQueue[] = L"Windows.System.DispatcherQueue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.DispatcherQueueController
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IDispatcherQueueControllerStatics interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IDispatcherQueueController ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_DispatcherQueueController_DEFINED
#define RUNTIMECLASS_Windows_System_DispatcherQueueController_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_DispatcherQueueController[] = L"Windows.System.DispatcherQueueController";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.DispatcherQueueShutdownStartingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IDispatcherQueueShutdownStartingEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_DispatcherQueueShutdownStartingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_System_DispatcherQueueShutdownStartingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_DispatcherQueueShutdownStartingEventArgs[] = L"Windows.System.DispatcherQueueShutdownStartingEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.DispatcherQueueTimer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IDispatcherQueueTimer ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_DispatcherQueueTimer_DEFINED
#define RUNTIMECLASS_Windows_System_DispatcherQueueTimer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_DispatcherQueueTimer[] = L"Windows.System.DispatcherQueueTimer";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.FolderLauncherOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IFolderLauncherOptions ** Default Interface **
 *    Windows.System.ILauncherViewOptions
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_FolderLauncherOptions_DEFINED
#define RUNTIMECLASS_Windows_System_FolderLauncherOptions_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_FolderLauncherOptions[] = L"Windows.System.FolderLauncherOptions";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.KnownUserProperties
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IKnownUserPropertiesStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_KnownUserProperties_DEFINED
#define RUNTIMECLASS_Windows_System_KnownUserProperties_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_KnownUserProperties[] = L"Windows.System.KnownUserProperties";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.LaunchUriResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.ILaunchUriResult ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_LaunchUriResult_DEFINED
#define RUNTIMECLASS_Windows_System_LaunchUriResult_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_LaunchUriResult[] = L"Windows.System.LaunchUriResult";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.Launcher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.ILauncherStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.System.ILauncherStatics4 interface starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.System.ILauncherStatics3 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.System.ILauncherStatics2 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.System.ILauncherStatics5 interface starting with version 7.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_Launcher_DEFINED
#define RUNTIMECLASS_Windows_System_Launcher_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_Launcher[] = L"Windows.System.Launcher";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.LauncherOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.ILauncherOptions2
 *    Windows.System.ILauncherOptions ** Default Interface **
 *    Windows.System.ILauncherOptions3
 *    Windows.System.ILauncherOptions4
 *    Windows.System.ILauncherViewOptions
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_LauncherOptions_DEFINED
#define RUNTIMECLASS_Windows_System_LauncherOptions_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_LauncherOptions[] = L"Windows.System.LauncherOptions";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.LauncherUIOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.ILauncherUIOptions ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_LauncherUIOptions_DEFINED
#define RUNTIMECLASS_Windows_System_LauncherUIOptions_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_LauncherUIOptions[] = L"Windows.System.LauncherUIOptions";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.MemoryManager
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IMemoryManagerStatics2 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.System.IMemoryManagerStatics4 interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.System.IMemoryManagerStatics3 interface starting with version 2.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.System.IMemoryManagerStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_MemoryManager_DEFINED
#define RUNTIMECLASS_Windows_System_MemoryManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_MemoryManager[] = L"Windows.System.MemoryManager";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.ProcessLauncher
 *
 * Introduced to Windows.System.SystemManagementContract in version 2.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IProcessLauncherStatics interface starting with version 2.0 of the Windows.System.SystemManagementContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_System_ProcessLauncher_DEFINED
#define RUNTIMECLASS_Windows_System_ProcessLauncher_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_ProcessLauncher[] = L"Windows.System.ProcessLauncher";
#endif
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.System.ProcessLauncherOptions
 *
 * Introduced to Windows.System.SystemManagementContract in version 2.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 2.0 of the Windows.System.SystemManagementContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IProcessLauncherOptions ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_System_ProcessLauncherOptions_DEFINED
#define RUNTIMECLASS_Windows_System_ProcessLauncherOptions_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_ProcessLauncherOptions[] = L"Windows.System.ProcessLauncherOptions";
#endif
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.System.ProcessLauncherResult
 *
 * Introduced to Windows.System.SystemManagementContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IProcessLauncherResult ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_System_ProcessLauncherResult_DEFINED
#define RUNTIMECLASS_Windows_System_ProcessLauncherResult_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_ProcessLauncherResult[] = L"Windows.System.ProcessLauncherResult";
#endif
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.System.ProcessMemoryReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IProcessMemoryReport ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_ProcessMemoryReport_DEFINED
#define RUNTIMECLASS_Windows_System_ProcessMemoryReport_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_ProcessMemoryReport[] = L"Windows.System.ProcessMemoryReport";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.ProtocolForResultsOperation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IProtocolForResultsOperation ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_ProtocolForResultsOperation_DEFINED
#define RUNTIMECLASS_Windows_System_ProtocolForResultsOperation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_ProtocolForResultsOperation[] = L"Windows.System.ProtocolForResultsOperation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.RemoteLauncher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IRemoteLauncherStatics interface starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_System_RemoteLauncher_DEFINED
#define RUNTIMECLASS_Windows_System_RemoteLauncher_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_RemoteLauncher[] = L"Windows.System.RemoteLauncher";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.System.RemoteLauncherOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IRemoteLauncherOptions ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_System_RemoteLauncherOptions_DEFINED
#define RUNTIMECLASS_Windows_System_RemoteLauncherOptions_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_RemoteLauncherOptions[] = L"Windows.System.RemoteLauncherOptions";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.System.ShutdownManager
 *
 * Introduced to Windows.System.SystemManagementContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IShutdownManagerStatics interface starting with version 1.0 of the Windows.System.SystemManagementContract API contract
 *   Static Methods exist on the Windows.System.IShutdownManagerStatics2 interface starting with version 3.0 of the Windows.System.SystemManagementContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_ShutdownManager_DEFINED
#define RUNTIMECLASS_Windows_System_ShutdownManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_ShutdownManager[] = L"Windows.System.ShutdownManager";
#endif
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.TimeZoneSettings
 *
 * Introduced to Windows.System.SystemManagementContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.ITimeZoneSettingsStatics2 interface starting with version 5.0 of the Windows.System.SystemManagementContract API contract
 *   Static Methods exist on the Windows.System.ITimeZoneSettingsStatics interface starting with version 1.0 of the Windows.System.SystemManagementContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_TimeZoneSettings_DEFINED
#define RUNTIMECLASS_Windows_System_TimeZoneSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_TimeZoneSettings[] = L"Windows.System.TimeZoneSettings";
#endif
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.User
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IUserStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IUser ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_User_DEFINED
#define RUNTIMECLASS_Windows_System_User_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_User[] = L"Windows.System.User";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.UserAuthenticationStatusChangeDeferral
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IUserAuthenticationStatusChangeDeferral ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_UserAuthenticationStatusChangeDeferral_DEFINED
#define RUNTIMECLASS_Windows_System_UserAuthenticationStatusChangeDeferral_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_UserAuthenticationStatusChangeDeferral[] = L"Windows.System.UserAuthenticationStatusChangeDeferral";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.UserAuthenticationStatusChangingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IUserAuthenticationStatusChangingEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_UserAuthenticationStatusChangingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_System_UserAuthenticationStatusChangingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_UserAuthenticationStatusChangingEventArgs[] = L"Windows.System.UserAuthenticationStatusChangingEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.UserChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IUserChangedEventArgs ** Default Interface **
 *    Windows.System.IUserChangedEventArgs2
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_UserChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_System_UserChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_UserChangedEventArgs[] = L"Windows.System.UserChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.UserDeviceAssociation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IUserDeviceAssociationStatics interface starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_System_UserDeviceAssociation_DEFINED
#define RUNTIMECLASS_Windows_System_UserDeviceAssociation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_UserDeviceAssociation[] = L"Windows.System.UserDeviceAssociation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.System.UserDeviceAssociationChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IUserDeviceAssociationChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_System_UserDeviceAssociationChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_System_UserDeviceAssociationChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_UserDeviceAssociationChangedEventArgs[] = L"Windows.System.UserDeviceAssociationChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.System.UserPicker
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IUserPickerStatics interface starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IUserPicker ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_System_UserPicker_DEFINED
#define RUNTIMECLASS_Windows_System_UserPicker_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_UserPicker[] = L"Windows.System.UserPicker";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.System.UserWatcher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IUserWatcher ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_UserWatcher_DEFINED
#define RUNTIMECLASS_Windows_System_UserWatcher_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_UserWatcher[] = L"Windows.System.UserWatcher";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#else // !defined(__cplusplus)
/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueueHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIDispatcherQueueHandler __x_ABI_CWindows_CSystem_CIDispatcherQueueHandler;

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueueHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppActivationResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppActivationResult_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppActivationResult __x_ABI_CWindows_CSystem_CIAppActivationResult;

#endif // ____x_ABI_CWindows_CSystem_CIAppActivationResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo;

#endif // ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2 __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2;

#endif // ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3 __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3;

#endif // ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics;

#endif // ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2 __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2;

#endif // ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher;

#endif // ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult __x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult;

#endif // ____x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppMemoryReport_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppMemoryReport_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppMemoryReport __x_ABI_CWindows_CSystem_CIAppMemoryReport;

#endif // ____x_ABI_CWindows_CSystem_CIAppMemoryReport_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppMemoryReport2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppMemoryReport2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppMemoryReport2 __x_ABI_CWindows_CSystem_CIAppMemoryReport2;

#endif // ____x_ABI_CWindows_CSystem_CIAppMemoryReport2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs __x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport;

#endif // ____x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo;

#endif // ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2 __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2;

#endif // ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher;

#endif // ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport __x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport;

#endif // ____x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport __x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport;

#endif // ____x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppUriHandlerHost_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerHost_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppUriHandlerHost __x_ABI_CWindows_CSystem_CIAppUriHandlerHost;

#endif // ____x_ABI_CWindows_CSystem_CIAppUriHandlerHost_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory __x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory;

#endif // ____x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration;

#endif // ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager;

#endif // ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics;

#endif // ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics __x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics;

#endif // ____x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueue_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIDispatcherQueue __x_ABI_CWindows_CSystem_CIDispatcherQueue;

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueue2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueue2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIDispatcherQueue2 __x_ABI_CWindows_CSystem_CIDispatcherQueue2;

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueue2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueueController_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueController_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIDispatcherQueueController __x_ABI_CWindows_CSystem_CIDispatcherQueueController;

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueueController_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics __x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics;

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs __x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIDispatcherQueueStatics __x_ABI_CWindows_CSystem_CIDispatcherQueueStatics;

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer;

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIFolderLauncherOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIFolderLauncherOptions_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIFolderLauncherOptions __x_ABI_CWindows_CSystem_CIFolderLauncherOptions;

#endif // ____x_ABI_CWindows_CSystem_CIFolderLauncherOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics;

#endif // ____x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILaunchUriResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILaunchUriResult_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CILaunchUriResult __x_ABI_CWindows_CSystem_CILaunchUriResult;

#endif // ____x_ABI_CWindows_CSystem_CILaunchUriResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherOptions_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CILauncherOptions __x_ABI_CWindows_CSystem_CILauncherOptions;

#endif // ____x_ABI_CWindows_CSystem_CILauncherOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherOptions2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherOptions2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CILauncherOptions2 __x_ABI_CWindows_CSystem_CILauncherOptions2;

#endif // ____x_ABI_CWindows_CSystem_CILauncherOptions2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherOptions3_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherOptions3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CILauncherOptions3 __x_ABI_CWindows_CSystem_CILauncherOptions3;

#endif // ____x_ABI_CWindows_CSystem_CILauncherOptions3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherOptions4_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherOptions4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CILauncherOptions4 __x_ABI_CWindows_CSystem_CILauncherOptions4;

#endif // ____x_ABI_CWindows_CSystem_CILauncherOptions4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CILauncherStatics __x_ABI_CWindows_CSystem_CILauncherStatics;

#endif // ____x_ABI_CWindows_CSystem_CILauncherStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CILauncherStatics2 __x_ABI_CWindows_CSystem_CILauncherStatics2;

#endif // ____x_ABI_CWindows_CSystem_CILauncherStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherStatics3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CILauncherStatics3 __x_ABI_CWindows_CSystem_CILauncherStatics3;

#endif // ____x_ABI_CWindows_CSystem_CILauncherStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherStatics4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CILauncherStatics4 __x_ABI_CWindows_CSystem_CILauncherStatics4;

#endif // ____x_ABI_CWindows_CSystem_CILauncherStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherStatics5_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CILauncherStatics5 __x_ABI_CWindows_CSystem_CILauncherStatics5;

#endif // ____x_ABI_CWindows_CSystem_CILauncherStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherUIOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherUIOptions_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CILauncherUIOptions __x_ABI_CWindows_CSystem_CILauncherUIOptions;

#endif // ____x_ABI_CWindows_CSystem_CILauncherUIOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CILauncherViewOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CILauncherViewOptions_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CILauncherViewOptions __x_ABI_CWindows_CSystem_CILauncherViewOptions;

#endif // ____x_ABI_CWindows_CSystem_CILauncherViewOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIMemoryManagerStatics __x_ABI_CWindows_CSystem_CIMemoryManagerStatics;

#endif // ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIMemoryManagerStatics2 __x_ABI_CWindows_CSystem_CIMemoryManagerStatics2;

#endif // ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIMemoryManagerStatics3 __x_ABI_CWindows_CSystem_CIMemoryManagerStatics3;

#endif // ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIMemoryManagerStatics4 __x_ABI_CWindows_CSystem_CIMemoryManagerStatics4;

#endif // ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIProcessLauncherOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIProcessLauncherOptions_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIProcessLauncherOptions __x_ABI_CWindows_CSystem_CIProcessLauncherOptions;

#endif // ____x_ABI_CWindows_CSystem_CIProcessLauncherOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIProcessLauncherResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIProcessLauncherResult_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIProcessLauncherResult __x_ABI_CWindows_CSystem_CIProcessLauncherResult;

#endif // ____x_ABI_CWindows_CSystem_CIProcessLauncherResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIProcessLauncherStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIProcessLauncherStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIProcessLauncherStatics __x_ABI_CWindows_CSystem_CIProcessLauncherStatics;

#endif // ____x_ABI_CWindows_CSystem_CIProcessLauncherStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIProcessMemoryReport_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIProcessMemoryReport_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIProcessMemoryReport __x_ABI_CWindows_CSystem_CIProcessMemoryReport;

#endif // ____x_ABI_CWindows_CSystem_CIProcessMemoryReport_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIProtocolForResultsOperation __x_ABI_CWindows_CSystem_CIProtocolForResultsOperation;

#endif // ____x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIRemoteLauncherOptions __x_ABI_CWindows_CSystem_CIRemoteLauncherOptions;

#endif // ____x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIRemoteLauncherStatics __x_ABI_CWindows_CSystem_CIRemoteLauncherStatics;

#endif // ____x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIShutdownManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIShutdownManagerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIShutdownManagerStatics __x_ABI_CWindows_CSystem_CIShutdownManagerStatics;

#endif // ____x_ABI_CWindows_CSystem_CIShutdownManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIShutdownManagerStatics2 __x_ABI_CWindows_CSystem_CIShutdownManagerStatics2;

#endif // ____x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics;

#endif // ____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2 __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2;

#endif // ____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral;

#endif // ____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIUserChangedEventArgs __x_ABI_CWindows_CSystem_CIUserChangedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CIUserChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIUserChangedEventArgs2 __x_ABI_CWindows_CSystem_CIUserChangedEventArgs2;

#endif // ____x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs __x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics __x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics;

#endif // ____x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserPicker_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserPicker_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIUserPicker __x_ABI_CWindows_CSystem_CIUserPicker;

#endif // ____x_ABI_CWindows_CSystem_CIUserPicker_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserPickerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserPickerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIUserPickerStatics __x_ABI_CWindows_CSystem_CIUserPickerStatics;

#endif // ____x_ABI_CWindows_CSystem_CIUserPickerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIUserStatics __x_ABI_CWindows_CSystem_CIUserStatics;

#endif // ____x_ABI_CWindows_CSystem_CIUserStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUserWatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUserWatcher_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIUserWatcher __x_ABI_CWindows_CSystem_CIUserWatcher;

#endif // ____x_ABI_CWindows_CSystem_CIUserWatcher_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __FIAsyncOperationCompletedHandler_1_boolean __FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_boolean __FIAsyncOperation_1_boolean;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_boolean;

typedef struct __FIAsyncOperation_1_booleanVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_boolean* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_boolean* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_boolean* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_boolean* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_boolean* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_boolean* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_boolean* This,
        __FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_boolean* This,
        __FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_boolean* This,
        boolean* result);

    END_INTERFACE
} __FIAsyncOperation_1_booleanVtbl;

interface __FIAsyncOperation_1_boolean
{
    CONST_VTBL struct __FIAsyncOperation_1_booleanVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_boolean_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_boolean_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_boolean_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_boolean_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_boolean_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_boolean_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_boolean_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_boolean_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_boolean_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

#if !defined(____FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_boolean __FIAsyncOperationCompletedHandler_1_boolean;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_boolean;

typedef struct __FIAsyncOperationCompletedHandler_1_booleanVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_boolean* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_boolean* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_boolean* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_boolean* This,
        __FIAsyncOperation_1_boolean* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_booleanVtbl;

interface __FIAsyncOperationCompletedHandler_1_boolean
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_boolean_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_boolean_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_boolean_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_boolean_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_IInspectable __FIAsyncOperationCompletedHandler_1_IInspectable;

#if !defined(____FIAsyncOperation_1_IInspectable_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_IInspectable_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_IInspectable __FIAsyncOperation_1_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_IInspectable;

typedef struct __FIAsyncOperation_1_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_IInspectable* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_IInspectable* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_IInspectable* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_IInspectable* This,
        __FIAsyncOperationCompletedHandler_1_IInspectable* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_IInspectable* This,
        __FIAsyncOperationCompletedHandler_1_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_IInspectable* This,
        IInspectable** result);

    END_INTERFACE
} __FIAsyncOperation_1_IInspectableVtbl;

interface __FIAsyncOperation_1_IInspectable
{
    CONST_VTBL struct __FIAsyncOperation_1_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_IInspectable_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_IInspectable_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_IInspectable_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_IInspectable_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_IInspectable_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_IInspectable_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_IInspectable_INTERFACE_DEFINED__

#if !defined(____FIAsyncOperationCompletedHandler_1_IInspectable_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_IInspectable_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_IInspectable __FIAsyncOperationCompletedHandler_1_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_IInspectable;

typedef struct __FIAsyncOperationCompletedHandler_1_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_IInspectable* This,
        __FIAsyncOperation_1_IInspectable* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_IInspectableVtbl;

interface __FIAsyncOperationCompletedHandler_1_IInspectable
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_IInspectable_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_IInspectable_INTERFACE_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1___F__CIPropertySet __FIAsyncOperationCompletedHandler_1___F__CIPropertySet;

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1___F__CIPropertySet_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1___F__CIPropertySet_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1___F__CIPropertySet __FIAsyncOperation_1___F__CIPropertySet;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1___F__CIPropertySet;

typedef struct __FIAsyncOperation_1___F__CIPropertySetVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1___F__CIPropertySet* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1___F__CIPropertySet* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1___F__CIPropertySet* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1___F__CIPropertySet* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1___F__CIPropertySet* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1___F__CIPropertySet* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1___F__CIPropertySet* This,
        __FIAsyncOperationCompletedHandler_1___F__CIPropertySet* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1___F__CIPropertySet* This,
        __FIAsyncOperationCompletedHandler_1___F__CIPropertySet** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1___F__CIPropertySet* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** result);

    END_INTERFACE
} __FIAsyncOperation_1___F__CIPropertySetVtbl;

interface __FIAsyncOperation_1___F__CIPropertySet
{
    CONST_VTBL struct __FIAsyncOperation_1___F__CIPropertySetVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1___F__CIPropertySet_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1___F__CIPropertySet_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1___F__CIPropertySet_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1___F__CIPropertySet_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1___F__CIPropertySet_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1___F__CIPropertySet_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1___F__CIPropertySet_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1___F__CIPropertySet_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1___F__CIPropertySet_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1___F__CIPropertySet_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1___F__CIPropertySet_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1___F__CIPropertySet_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1___F__CIPropertySet __FIAsyncOperationCompletedHandler_1___F__CIPropertySet;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1___F__CIPropertySet;

typedef struct __FIAsyncOperationCompletedHandler_1___F__CIPropertySetVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1___F__CIPropertySet* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1___F__CIPropertySet* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1___F__CIPropertySet* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1___F__CIPropertySet* This,
        __FIAsyncOperation_1___F__CIPropertySet* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1___F__CIPropertySetVtbl;

interface __FIAsyncOperationCompletedHandler_1___F__CIPropertySet
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1___F__CIPropertySetVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1___F__CIPropertySet_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1___F__CIPropertySet_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1___F__CIPropertySet_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1___F__CIPropertySet_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1___F__CIPropertySet_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CApplicationModel_CIAppInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIAppInfo_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CIAppInfo __x_ABI_CWindows_CApplicationModel_CIAppInfo;

#endif // ____x_ABI_CWindows_CApplicationModel_CIAppInfo_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CApplicationModel__CAppInfo __FIIterator_1_Windows__CApplicationModel__CAppInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CApplicationModel__CAppInfo;

typedef struct __FIIterator_1_Windows__CApplicationModel__CAppInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CApplicationModel__CAppInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CApplicationModel__CAppInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CApplicationModel__CAppInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CApplicationModel__CAppInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CApplicationModel__CAppInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CApplicationModel__CAppInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CApplicationModel__CAppInfo* This,
        __x_ABI_CWindows_CApplicationModel_CIAppInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CApplicationModel__CAppInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CApplicationModel__CAppInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CApplicationModel__CAppInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CIAppInfo** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CApplicationModel__CAppInfoVtbl;

interface __FIIterator_1_Windows__CApplicationModel__CAppInfo
{
    CONST_VTBL struct __FIIterator_1_Windows__CApplicationModel__CAppInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CApplicationModel__CAppInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CApplicationModel__CAppInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CApplicationModel__CAppInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CApplicationModel__CAppInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CApplicationModel__CAppInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CApplicationModel__CAppInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CApplicationModel__CAppInfo_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CApplicationModel__CAppInfo_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CApplicationModel__CAppInfo_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CApplicationModel__CAppInfo_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CApplicationModel__CAppInfo __FIIterable_1_Windows__CApplicationModel__CAppInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CApplicationModel__CAppInfo;

typedef struct __FIIterable_1_Windows__CApplicationModel__CAppInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CApplicationModel__CAppInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CApplicationModel__CAppInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CApplicationModel__CAppInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CApplicationModel__CAppInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CApplicationModel__CAppInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CApplicationModel__CAppInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CApplicationModel__CAppInfo* This,
        __FIIterator_1_Windows__CApplicationModel__CAppInfo** result);

    END_INTERFACE
} __FIIterable_1_Windows__CApplicationModel__CAppInfoVtbl;

interface __FIIterable_1_Windows__CApplicationModel__CAppInfo
{
    CONST_VTBL struct __FIIterable_1_Windows__CApplicationModel__CAppInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CApplicationModel__CAppInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CApplicationModel__CAppInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CApplicationModel__CAppInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CApplicationModel__CAppInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CApplicationModel__CAppInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CApplicationModel__CAppInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CApplicationModel__CAppInfo_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CApplicationModel__CAppInfo __FIVectorView_1_Windows__CApplicationModel__CAppInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CApplicationModel__CAppInfo;

typedef struct __FIVectorView_1_Windows__CApplicationModel__CAppInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CApplicationModel__CAppInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CApplicationModel__CAppInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CApplicationModel__CAppInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CApplicationModel__CAppInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CApplicationModel__CAppInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CApplicationModel__CAppInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CApplicationModel__CAppInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CIAppInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CApplicationModel__CAppInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CApplicationModel__CAppInfo* This,
        __x_ABI_CWindows_CApplicationModel_CIAppInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CApplicationModel__CAppInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CIAppInfo** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CApplicationModel__CAppInfoVtbl;

interface __FIVectorView_1_Windows__CApplicationModel__CAppInfo
{
    CONST_VTBL struct __FIVectorView_1_Windows__CApplicationModel__CAppInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CApplicationModel__CAppInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CApplicationModel__CAppInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CApplicationModel__CAppInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CApplicationModel__CAppInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CApplicationModel__CAppInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CApplicationModel__CAppInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CApplicationModel__CAppInfo_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CApplicationModel__CAppInfo_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CApplicationModel__CAppInfo_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CApplicationModel__CAppInfo_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef interface __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo;

typedef struct __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo* This,
        __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo* This,
        __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo* This,
        __FIVectorView_1_Windows__CApplicationModel__CAppInfo** result);

    END_INTERFACE
} __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfoVtbl;

interface __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo
{
    CONST_VTBL struct __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo;

typedef struct __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo* This,
        __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfoVtbl;

interface __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CSystem__CUser_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CSystem__CUser_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CSystem__CUser __FIIterator_1_Windows__CSystem__CUser;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CSystem__CUser;

typedef struct __FIIterator_1_Windows__CSystem__CUserVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CSystem__CUser* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CSystem__CUser* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CSystem__CUser* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CSystem__CUser* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CSystem__CUser* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CSystem__CUser* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CSystem__CUser* This,
        __x_ABI_CWindows_CSystem_CIUser** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CSystem__CUser* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CSystem__CUser* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CSystem__CUser* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CIUser** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CSystem__CUserVtbl;

interface __FIIterator_1_Windows__CSystem__CUser
{
    CONST_VTBL struct __FIIterator_1_Windows__CSystem__CUserVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CSystem__CUser_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CSystem__CUser_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CSystem__CUser_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CSystem__CUser_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CSystem__CUser_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CSystem__CUser_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CSystem__CUser_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CSystem__CUser_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CSystem__CUser_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CSystem__CUser_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CSystem__CUser_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CSystem__CUser_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CSystem__CUser_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CSystem__CUser __FIIterable_1_Windows__CSystem__CUser;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CSystem__CUser;

typedef struct __FIIterable_1_Windows__CSystem__CUserVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CSystem__CUser* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CSystem__CUser* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CSystem__CUser* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CSystem__CUser* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CSystem__CUser* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CSystem__CUser* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CSystem__CUser* This,
        __FIIterator_1_Windows__CSystem__CUser** result);

    END_INTERFACE
} __FIIterable_1_Windows__CSystem__CUserVtbl;

interface __FIIterable_1_Windows__CSystem__CUser
{
    CONST_VTBL struct __FIIterable_1_Windows__CSystem__CUserVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CSystem__CUser_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CSystem__CUser_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CSystem__CUser_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CSystem__CUser_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CSystem__CUser_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CSystem__CUser_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CSystem__CUser_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CSystem__CUser_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CSystem__CUser_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CSystem__CUser_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CSystem__CUser __FIVectorView_1_Windows__CSystem__CUser;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CSystem__CUser;

typedef struct __FIVectorView_1_Windows__CSystem__CUserVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CSystem__CUser* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CSystem__CUser* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CSystem__CUser* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CSystem__CUser* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CSystem__CUser* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CSystem__CUser* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CSystem__CUser* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CIUser** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CSystem__CUser* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CSystem__CUser* This,
        __x_ABI_CWindows_CSystem_CIUser* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CSystem__CUser* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CIUser** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CSystem__CUserVtbl;

interface __FIVectorView_1_Windows__CSystem__CUser
{
    CONST_VTBL struct __FIVectorView_1_Windows__CSystem__CUserVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CSystem__CUser_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CSystem__CUser_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CSystem__CUser_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CSystem__CUser_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CSystem__CUser_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CSystem__CUser_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CSystem__CUser_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CSystem__CUser_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CSystem__CUser_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CSystem__CUser_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CSystem__CUser_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef interface __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser;

typedef struct __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUserVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser* This,
        __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser* This,
        __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser* This,
        __FIVectorView_1_Windows__CSystem__CUser** result);

    END_INTERFACE
} __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUserVtbl;

interface __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser
{
    CONST_VTBL struct __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUserVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser;

typedef struct __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUserVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser* This,
        __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUserVtbl;

interface __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUserVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1___FIVectorView_1_Windows__CSystem__CUser_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FIIterator_1_Windows__CSystem__CAppDiagnosticInfo_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CSystem__CAppDiagnosticInfo_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CSystem__CAppDiagnosticInfo __FIIterator_1_Windows__CSystem__CAppDiagnosticInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CSystem__CAppDiagnosticInfo;

typedef struct __FIIterator_1_Windows__CSystem__CAppDiagnosticInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CSystem__CAppDiagnosticInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CSystem__CAppDiagnosticInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CSystem__CAppDiagnosticInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CSystem__CAppDiagnosticInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CSystem__CAppDiagnosticInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CSystem__CAppDiagnosticInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CSystem__CAppDiagnosticInfo* This,
        __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CSystem__CAppDiagnosticInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CSystem__CAppDiagnosticInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CSystem__CAppDiagnosticInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CSystem__CAppDiagnosticInfoVtbl;

interface __FIIterator_1_Windows__CSystem__CAppDiagnosticInfo
{
    CONST_VTBL struct __FIIterator_1_Windows__CSystem__CAppDiagnosticInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CSystem__CAppDiagnosticInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CSystem__CAppDiagnosticInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CSystem__CAppDiagnosticInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CSystem__CAppDiagnosticInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CSystem__CAppDiagnosticInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CSystem__CAppDiagnosticInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CSystem__CAppDiagnosticInfo_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CSystem__CAppDiagnosticInfo_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CSystem__CAppDiagnosticInfo_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CSystem__CAppDiagnosticInfo_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CSystem__CAppDiagnosticInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FIIterable_1_Windows__CSystem__CAppDiagnosticInfo_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CSystem__CAppDiagnosticInfo_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CSystem__CAppDiagnosticInfo __FIIterable_1_Windows__CSystem__CAppDiagnosticInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CSystem__CAppDiagnosticInfo;

typedef struct __FIIterable_1_Windows__CSystem__CAppDiagnosticInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CSystem__CAppDiagnosticInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CSystem__CAppDiagnosticInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CSystem__CAppDiagnosticInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CSystem__CAppDiagnosticInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CSystem__CAppDiagnosticInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CSystem__CAppDiagnosticInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CSystem__CAppDiagnosticInfo* This,
        __FIIterator_1_Windows__CSystem__CAppDiagnosticInfo** result);

    END_INTERFACE
} __FIIterable_1_Windows__CSystem__CAppDiagnosticInfoVtbl;

interface __FIIterable_1_Windows__CSystem__CAppDiagnosticInfo
{
    CONST_VTBL struct __FIIterable_1_Windows__CSystem__CAppDiagnosticInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CSystem__CAppDiagnosticInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CSystem__CAppDiagnosticInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CSystem__CAppDiagnosticInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CSystem__CAppDiagnosticInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CSystem__CAppDiagnosticInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CSystem__CAppDiagnosticInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CSystem__CAppDiagnosticInfo_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CSystem__CAppDiagnosticInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo;

typedef struct __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo* This,
        __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfoVtbl;

interface __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo
{
    CONST_VTBL struct __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FIVector_1_Windows__CSystem__CAppDiagnosticInfo_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CSystem__CAppDiagnosticInfo_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CSystem__CAppDiagnosticInfo __FIVector_1_Windows__CSystem__CAppDiagnosticInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CSystem__CAppDiagnosticInfo;

typedef struct __FIVector_1_Windows__CSystem__CAppDiagnosticInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo** items);

    END_INTERFACE
} __FIVector_1_Windows__CSystem__CAppDiagnosticInfoVtbl;

interface __FIVector_1_Windows__CSystem__CAppDiagnosticInfo
{
    CONST_VTBL struct __FIVector_1_Windows__CSystem__CAppDiagnosticInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CSystem__CAppDiagnosticInfo_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CSystem__CAppDiagnosticInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

typedef interface __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo;

typedef struct __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        __FIVector_1_Windows__CSystem__CAppDiagnosticInfo** result);

    END_INTERFACE
} __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfoVtbl;

interface __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo
{
    CONST_VTBL struct __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo;

typedef struct __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo* This,
        __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfoVtbl;

interface __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____FIIterator_1_Windows__CSystem__CAppUriHandlerHost_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CSystem__CAppUriHandlerHost_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CSystem__CAppUriHandlerHost __FIIterator_1_Windows__CSystem__CAppUriHandlerHost;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CSystem__CAppUriHandlerHost;

typedef struct __FIIterator_1_Windows__CSystem__CAppUriHandlerHostVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CSystem__CAppUriHandlerHost* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CSystem__CAppUriHandlerHost* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CSystem__CAppUriHandlerHost* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CSystem__CAppUriHandlerHost* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CSystem__CAppUriHandlerHost* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CSystem__CAppUriHandlerHost* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CSystem__CAppUriHandlerHost* This,
        __x_ABI_CWindows_CSystem_CIAppUriHandlerHost** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CSystem__CAppUriHandlerHost* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CSystem__CAppUriHandlerHost* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CSystem__CAppUriHandlerHost* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CIAppUriHandlerHost** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CSystem__CAppUriHandlerHostVtbl;

interface __FIIterator_1_Windows__CSystem__CAppUriHandlerHost
{
    CONST_VTBL struct __FIIterator_1_Windows__CSystem__CAppUriHandlerHostVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CSystem__CAppUriHandlerHost_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CSystem__CAppUriHandlerHost_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CSystem__CAppUriHandlerHost_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CSystem__CAppUriHandlerHost_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CSystem__CAppUriHandlerHost_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CSystem__CAppUriHandlerHost_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CSystem__CAppUriHandlerHost_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CSystem__CAppUriHandlerHost_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CSystem__CAppUriHandlerHost_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CSystem__CAppUriHandlerHost_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CSystem__CAppUriHandlerHost_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____FIIterable_1_Windows__CSystem__CAppUriHandlerHost_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CSystem__CAppUriHandlerHost_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CSystem__CAppUriHandlerHost __FIIterable_1_Windows__CSystem__CAppUriHandlerHost;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CSystem__CAppUriHandlerHost;

typedef struct __FIIterable_1_Windows__CSystem__CAppUriHandlerHostVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CSystem__CAppUriHandlerHost* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CSystem__CAppUriHandlerHost* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CSystem__CAppUriHandlerHost* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CSystem__CAppUriHandlerHost* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CSystem__CAppUriHandlerHost* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CSystem__CAppUriHandlerHost* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CSystem__CAppUriHandlerHost* This,
        __FIIterator_1_Windows__CSystem__CAppUriHandlerHost** result);

    END_INTERFACE
} __FIIterable_1_Windows__CSystem__CAppUriHandlerHostVtbl;

interface __FIIterable_1_Windows__CSystem__CAppUriHandlerHost
{
    CONST_VTBL struct __FIIterable_1_Windows__CSystem__CAppUriHandlerHostVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CSystem__CAppUriHandlerHost_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CSystem__CAppUriHandlerHost_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CSystem__CAppUriHandlerHost_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CSystem__CAppUriHandlerHost_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CSystem__CAppUriHandlerHost_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CSystem__CAppUriHandlerHost_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CSystem__CAppUriHandlerHost_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CSystem__CAppUriHandlerHost_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____FIVectorView_1_Windows__CSystem__CAppUriHandlerHost_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CSystem__CAppUriHandlerHost_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CSystem__CAppUriHandlerHost __FIVectorView_1_Windows__CSystem__CAppUriHandlerHost;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CSystem__CAppUriHandlerHost;

typedef struct __FIVectorView_1_Windows__CSystem__CAppUriHandlerHostVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CSystem__CAppUriHandlerHost* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CSystem__CAppUriHandlerHost* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CSystem__CAppUriHandlerHost* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CSystem__CAppUriHandlerHost* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CSystem__CAppUriHandlerHost* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CSystem__CAppUriHandlerHost* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CSystem__CAppUriHandlerHost* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CIAppUriHandlerHost** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CSystem__CAppUriHandlerHost* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CSystem__CAppUriHandlerHost* This,
        __x_ABI_CWindows_CSystem_CIAppUriHandlerHost* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CSystem__CAppUriHandlerHost* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CIAppUriHandlerHost** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CSystem__CAppUriHandlerHostVtbl;

interface __FIVectorView_1_Windows__CSystem__CAppUriHandlerHost
{
    CONST_VTBL struct __FIVectorView_1_Windows__CSystem__CAppUriHandlerHostVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CSystem__CAppUriHandlerHost_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CSystem__CAppUriHandlerHost_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CSystem__CAppUriHandlerHost_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CSystem__CAppUriHandlerHost_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CSystem__CAppUriHandlerHost_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CSystem__CAppUriHandlerHost_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CSystem__CAppUriHandlerHost_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CSystem__CAppUriHandlerHost_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CSystem__CAppUriHandlerHost_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CSystem__CAppUriHandlerHost_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CSystem__CAppUriHandlerHost_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____FIVector_1_Windows__CSystem__CAppUriHandlerHost_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CSystem__CAppUriHandlerHost_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CSystem__CAppUriHandlerHost __FIVector_1_Windows__CSystem__CAppUriHandlerHost;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CSystem__CAppUriHandlerHost;

typedef struct __FIVector_1_Windows__CSystem__CAppUriHandlerHostVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CSystem__CAppUriHandlerHost* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CSystem__CAppUriHandlerHost* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CIAppUriHandlerHost** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        __FIVectorView_1_Windows__CSystem__CAppUriHandlerHost** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        __x_ABI_CWindows_CSystem_CIAppUriHandlerHost* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CIAppUriHandlerHost* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CIAppUriHandlerHost* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        __x_ABI_CWindows_CSystem_CIAppUriHandlerHost* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CSystem__CAppUriHandlerHost* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CSystem__CAppUriHandlerHost* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CIAppUriHandlerHost** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CIAppUriHandlerHost** items);

    END_INTERFACE
} __FIVector_1_Windows__CSystem__CAppUriHandlerHostVtbl;

interface __FIVector_1_Windows__CSystem__CAppUriHandlerHost
{
    CONST_VTBL struct __FIVector_1_Windows__CSystem__CAppUriHandlerHostVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CSystem__CAppUriHandlerHost_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CSystem__CAppUriHandlerHost_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

typedef interface __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost;

typedef struct __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHostVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        __FIVector_1_Windows__CSystem__CAppUriHandlerHost** result);

    END_INTERFACE
} __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHostVtbl;

interface __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost
{
    CONST_VTBL struct __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHostVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost;

typedef struct __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHostVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost* This,
        __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHostVtbl;

interface __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHostVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference;

typedef struct __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReferenceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReferenceVtbl;

interface __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReferenceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReferenceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference* This,
        __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReferenceVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReferenceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____FIAsyncOperation_1_Windows__CSystem__CAppActivationResult_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CSystem__CAppActivationResult_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CSystem__CAppActivationResult __FIAsyncOperation_1_Windows__CSystem__CAppActivationResult;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CSystem__CAppActivationResult;

typedef struct __FIAsyncOperation_1_Windows__CSystem__CAppActivationResultVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CSystem__CAppActivationResult* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CSystem__CAppActivationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CSystem__CAppActivationResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CSystem__CAppActivationResult* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CSystem__CAppActivationResult* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CSystem__CAppActivationResult* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CSystem__CAppActivationResult* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CSystem__CAppActivationResult* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CSystem__CAppActivationResult* This,
        __x_ABI_CWindows_CSystem_CIAppActivationResult** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CSystem__CAppActivationResultVtbl;

interface __FIAsyncOperation_1_Windows__CSystem__CAppActivationResult
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CSystem__CAppActivationResultVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CSystem__CAppActivationResult_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CSystem__CAppActivationResult_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CSystem__CAppActivationResult_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CSystem__CAppActivationResult_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CSystem__CAppActivationResult_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CSystem__CAppActivationResult_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CSystem__CAppActivationResult_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CSystem__CAppActivationResult_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CSystem__CAppActivationResult_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CSystem__CAppActivationResult_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResultVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult* This,
        __FIAsyncOperation_1_Windows__CSystem__CAppActivationResult* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResultVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResultVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppActivationResult_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult;

typedef struct __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResultVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult* This,
        __x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResultVtbl;

interface __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResultVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResultVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult* This,
        __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResultVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResultVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAppExecutionStateChangeResult_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

typedef enum __x_ABI_CWindows_CSystem_CAutoUpdateTimeZoneStatus __x_ABI_CWindows_CSystem_CAutoUpdateTimeZoneStatus;

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus;

#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x50000
#if !defined(____FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus;

typedef struct __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatusVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus* This,
        enum __x_ABI_CWindows_CSystem_CAutoUpdateTimeZoneStatus* result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatusVtbl;

interface __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatusVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_INTERFACE_DEFINED__
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x50000

#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x50000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatusVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus* This,
        __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatusVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatusVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CAutoUpdateTimeZoneStatus_INTERFACE_DEFINED__
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x50000

typedef enum __x_ABI_CWindows_CSystem_CDiagnosticAccessStatus __x_ABI_CWindows_CSystem_CDiagnosticAccessStatus;

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus;

typedef struct __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatusVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus* This,
        enum __x_ABI_CWindows_CSystem_CDiagnosticAccessStatus* result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatusVtbl;

interface __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatusVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatusVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus* This,
        __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatusVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatusVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CDiagnosticAccessStatus_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

typedef enum __x_ABI_CWindows_CSystem_CLaunchQuerySupportStatus __x_ABI_CWindows_CSystem_CLaunchQuerySupportStatus;

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus;

typedef struct __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatusVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus* This,
        enum __x_ABI_CWindows_CSystem_CLaunchQuerySupportStatus* result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatusVtbl;

interface __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatusVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatusVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus* This,
        __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatusVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatusVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchQuerySupportStatus_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult;

typedef struct __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResultVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult* This,
        __x_ABI_CWindows_CSystem_CILaunchUriResult** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResultVtbl;

interface __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResultVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResultVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult* This,
        __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResultVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResultVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriResult_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef enum __x_ABI_CWindows_CSystem_CLaunchUriStatus __x_ABI_CWindows_CSystem_CLaunchUriStatus;

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus;

typedef struct __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatusVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus* This,
        enum __x_ABI_CWindows_CSystem_CLaunchUriStatus* result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatusVtbl;

interface __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatusVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatusVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus* This,
        __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatusVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatusVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CLaunchUriStatus_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult;

#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000
#if !defined(____FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult;

typedef struct __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResultVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult* This,
        __x_ABI_CWindows_CSystem_CIProcessLauncherResult** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResultVtbl;

interface __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResultVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult_INTERFACE_DEFINED__
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000

#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResultVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult* This,
        __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResultVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResultVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CProcessLauncherResult_INTERFACE_DEFINED__
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000

typedef enum __x_ABI_CWindows_CSystem_CRemoteLaunchUriStatus __x_ABI_CWindows_CSystem_CRemoteLaunchUriStatus;

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus;

typedef struct __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatusVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus* This,
        enum __x_ABI_CWindows_CSystem_CRemoteLaunchUriStatus* result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatusVtbl;

interface __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatusVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatusVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus* This,
        __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatusVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatusVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CRemoteLaunchUriStatus_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1_Windows__CSystem__CUser_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CSystem__CUser_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CSystem__CUser __FIAsyncOperation_1_Windows__CSystem__CUser;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CSystem__CUser;

typedef struct __FIAsyncOperation_1_Windows__CSystem__CUserVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CSystem__CUser* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CSystem__CUser* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CSystem__CUser* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CSystem__CUser* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CSystem__CUser* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CSystem__CUser* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CSystem__CUser* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CSystem__CUser* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CSystem__CUser* This,
        __x_ABI_CWindows_CSystem_CIUser** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CSystem__CUserVtbl;

interface __FIAsyncOperation_1_Windows__CSystem__CUser
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CSystem__CUserVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CSystem__CUser_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CSystem__CUser_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CSystem__CUser_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CSystem__CUser_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CSystem__CUser_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CSystem__CUser_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CSystem__CUser_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CSystem__CUser_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CSystem__CUser_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CSystem__CUser_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUserVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser* This,
        __FIAsyncOperation_1_Windows__CSystem__CUser* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUserVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUserVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CSystem__CUser_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if !defined(____FIIterator_1_HSTRING_INTERFACE_DEFINED__)
#define ____FIIterator_1_HSTRING_INTERFACE_DEFINED__

typedef interface __FIIterator_1_HSTRING __FIIterator_1_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_HSTRING;

typedef struct __FIIterator_1_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_HSTRINGVtbl;

interface __FIIterator_1_HSTRING
{
    CONST_VTBL struct __FIIterator_1_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_HSTRING_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_HSTRING_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_HSTRING_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_HSTRING_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_HSTRING_INTERFACE_DEFINED__

#if !defined(____FIIterable_1_HSTRING_INTERFACE_DEFINED__)
#define ____FIIterable_1_HSTRING_INTERFACE_DEFINED__

typedef interface __FIIterable_1_HSTRING __FIIterable_1_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_HSTRING;

typedef struct __FIIterable_1_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_HSTRING* This,
        __FIIterator_1_HSTRING** result);

    END_INTERFACE
} __FIIterable_1_HSTRINGVtbl;

interface __FIIterable_1_HSTRING
{
    CONST_VTBL struct __FIIterable_1_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_HSTRING_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_HSTRING_INTERFACE_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageItem_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CIStorageItem __x_ABI_CWindows_CStorage_CIStorageItem;

#endif // ____x_ABI_CWindows_CStorage_CIStorageItem_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CStorage__CIStorageItem_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CStorage__CIStorageItem_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CStorage__CIStorageItem __FIIterator_1_Windows__CStorage__CIStorageItem;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CStorage__CIStorageItem;

typedef struct __FIIterator_1_Windows__CStorage__CIStorageItemVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CStorage__CIStorageItem* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CStorage__CIStorageItem* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CStorage__CIStorageItem* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CStorage__CIStorageItem* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CStorage__CIStorageItem* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CStorage__CIStorageItem* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CStorage__CIStorageItem* This,
        __x_ABI_CWindows_CStorage_CIStorageItem** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CStorage__CIStorageItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CStorage__CIStorageItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CStorage__CIStorageItem* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CIStorageItem** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CStorage__CIStorageItemVtbl;

interface __FIIterator_1_Windows__CStorage__CIStorageItem
{
    CONST_VTBL struct __FIIterator_1_Windows__CStorage__CIStorageItemVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CStorage__CIStorageItem_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CStorage__CIStorageItem_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CStorage__CIStorageItem_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CStorage__CIStorageItem_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CStorage__CIStorageItem_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CStorage__CIStorageItem_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CStorage__CIStorageItem_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CStorage__CIStorageItem_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CStorage__CIStorageItem_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CStorage__CIStorageItem_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CStorage__CIStorageItem_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CStorage__CIStorageItem_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CStorage__CIStorageItem_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CStorage__CIStorageItem __FIIterable_1_Windows__CStorage__CIStorageItem;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CStorage__CIStorageItem;

typedef struct __FIIterable_1_Windows__CStorage__CIStorageItemVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CStorage__CIStorageItem* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CStorage__CIStorageItem* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CStorage__CIStorageItem* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CStorage__CIStorageItem* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CStorage__CIStorageItem* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CStorage__CIStorageItem* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CStorage__CIStorageItem* This,
        __FIIterator_1_Windows__CStorage__CIStorageItem** result);

    END_INTERFACE
} __FIIterable_1_Windows__CStorage__CIStorageItemVtbl;

interface __FIIterable_1_Windows__CStorage__CIStorageItem
{
    CONST_VTBL struct __FIIterable_1_Windows__CStorage__CIStorageItemVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CStorage__CIStorageItem_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CStorage__CIStorageItem_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CStorage__CIStorageItem_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CStorage__CIStorageItem_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CStorage__CIStorageItem_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CStorage__CIStorageItem_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CStorage__CIStorageItem_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CStorage__CIStorageItem_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport;

typedef struct __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReportVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReportVtbl;

interface __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport
{
    CONST_VTBL struct __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReportVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport __FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport;

typedef struct __FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReportVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        __FIIterator_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport** result);

    END_INTERFACE
} __FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReportVtbl;

interface __FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport
{
    CONST_VTBL struct __FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReportVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIIterator_1_Windows__CSystem__CAppResourceGroupInfo_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CSystem__CAppResourceGroupInfo_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CSystem__CAppResourceGroupInfo __FIIterator_1_Windows__CSystem__CAppResourceGroupInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CSystem__CAppResourceGroupInfo;

typedef struct __FIIterator_1_Windows__CSystem__CAppResourceGroupInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CSystem__CAppResourceGroupInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CSystem__CAppResourceGroupInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CSystem__CAppResourceGroupInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CSystem__CAppResourceGroupInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CSystem__CAppResourceGroupInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CSystem__CAppResourceGroupInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CSystem__CAppResourceGroupInfo* This,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CSystem__CAppResourceGroupInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CSystem__CAppResourceGroupInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CSystem__CAppResourceGroupInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CSystem__CAppResourceGroupInfoVtbl;

interface __FIIterator_1_Windows__CSystem__CAppResourceGroupInfo
{
    CONST_VTBL struct __FIIterator_1_Windows__CSystem__CAppResourceGroupInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupInfo_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupInfo_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupInfo_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CSystem__CAppResourceGroupInfo_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CSystem__CAppResourceGroupInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIIterable_1_Windows__CSystem__CAppResourceGroupInfo_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CSystem__CAppResourceGroupInfo_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CSystem__CAppResourceGroupInfo __FIIterable_1_Windows__CSystem__CAppResourceGroupInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CSystem__CAppResourceGroupInfo;

typedef struct __FIIterable_1_Windows__CSystem__CAppResourceGroupInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CSystem__CAppResourceGroupInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CSystem__CAppResourceGroupInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CSystem__CAppResourceGroupInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CSystem__CAppResourceGroupInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CSystem__CAppResourceGroupInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CSystem__CAppResourceGroupInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CSystem__CAppResourceGroupInfo* This,
        __FIIterator_1_Windows__CSystem__CAppResourceGroupInfo** result);

    END_INTERFACE
} __FIIterable_1_Windows__CSystem__CAppResourceGroupInfoVtbl;

interface __FIIterable_1_Windows__CSystem__CAppResourceGroupInfo
{
    CONST_VTBL struct __FIIterable_1_Windows__CSystem__CAppResourceGroupInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CSystem__CAppResourceGroupInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CSystem__CAppResourceGroupInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CSystem__CAppResourceGroupInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CSystem__CAppResourceGroupInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CSystem__CAppResourceGroupInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CSystem__CAppResourceGroupInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CSystem__CAppResourceGroupInfo_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CSystem__CAppResourceGroupInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef ____x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo;

#endif // ____x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo;

typedef struct __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfoVtbl;

interface __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo
{
    CONST_VTBL struct __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo __FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo;

typedef struct __FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        __FIIterator_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo** result);

    END_INTERFACE
} __FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfoVtbl;

interface __FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo
{
    CONST_VTBL struct __FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef enum __x_ABI_CWindows_CSystem_CUserWatcherUpdateKind __x_ABI_CWindows_CSystem_CUserWatcherUpdateKind;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000
#if !defined(____FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind;

typedef struct __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKindVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        enum __x_ABI_CWindows_CSystem_CUserWatcherUpdateKind* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CSystem_CUserWatcherUpdateKind* items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKindVtbl;

interface __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind
{
    CONST_VTBL struct __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKindVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000
#if !defined(____FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind __FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind;

typedef struct __FIIterable_1_Windows__CSystem__CUserWatcherUpdateKindVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        __FIIterator_1_Windows__CSystem__CUserWatcherUpdateKind** result);

    END_INTERFACE
} __FIIterable_1_Windows__CSystem__CUserWatcherUpdateKindVtbl;

interface __FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind
{
    CONST_VTBL struct __FIIterable_1_Windows__CSystem__CUserWatcherUpdateKindVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CSystem__CUserWatcherUpdateKind_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

#if !defined(____FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
#define ____FIVectorView_1_HSTRING_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_HSTRING __FIVectorView_1_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_HSTRING;

typedef struct __FIVectorView_1_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_HSTRINGVtbl;

interface __FIVectorView_1_HSTRING
{
    CONST_VTBL struct __FIVectorView_1_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_HSTRING_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_HSTRING_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_HSTRING_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_HSTRING_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_HSTRING_INTERFACE_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CStorage__CIStorageItem_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CStorage__CIStorageItem_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CStorage__CIStorageItem __FIVectorView_1_Windows__CStorage__CIStorageItem;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CStorage__CIStorageItem;

typedef struct __FIVectorView_1_Windows__CStorage__CIStorageItemVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CStorage__CIStorageItem* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CStorage__CIStorageItem* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CStorage__CIStorageItem* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CStorage__CIStorageItem* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CStorage__CIStorageItem* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CStorage__CIStorageItem* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CStorage__CIStorageItem* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CIStorageItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CStorage__CIStorageItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CStorage__CIStorageItem* This,
        __x_ABI_CWindows_CStorage_CIStorageItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CStorage__CIStorageItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CIStorageItem** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CStorage__CIStorageItemVtbl;

interface __FIVectorView_1_Windows__CStorage__CIStorageItem
{
    CONST_VTBL struct __FIVectorView_1_Windows__CStorage__CIStorageItemVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CStorage__CIStorageItem_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CStorage__CIStorageItem_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CStorage__CIStorageItem_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CStorage__CIStorageItem_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CStorage__CIStorageItem_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CStorage__CIStorageItem_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CStorage__CIStorageItem_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CStorage__CIStorageItem_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CStorage__CIStorageItem_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CStorage__CIStorageItem_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CStorage__CIStorageItem_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport;

typedef struct __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReportVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReportVtbl;

interface __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport
{
    CONST_VTBL struct __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReportVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo;

typedef struct __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo* This,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfoVtbl;

interface __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo
{
    CONST_VTBL struct __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo;

typedef struct __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfoVtbl;

interface __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo
{
    CONST_VTBL struct __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000
#if !defined(____FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind;

typedef struct __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKindVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        UINT32 index,
        enum __x_ABI_CWindows_CSystem_CUserWatcherUpdateKind* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        enum __x_ABI_CWindows_CSystem_CUserWatcherUpdateKind value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CSystem_CUserWatcherUpdateKind* items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKindVtbl;

interface __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind
{
    CONST_VTBL struct __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKindVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

#if !defined(____FIVector_1_HSTRING_INTERFACE_DEFINED__)
#define ____FIVector_1_HSTRING_INTERFACE_DEFINED__

typedef interface __FIVector_1_HSTRING __FIVector_1_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_HSTRING;

typedef struct __FIVector_1_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_HSTRING* This,
        __FIVectorView_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_HSTRING* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_HSTRING* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items);

    END_INTERFACE
} __FIVector_1_HSTRINGVtbl;

interface __FIVector_1_HSTRING
{
    CONST_VTBL struct __FIVector_1_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_HSTRING_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_HSTRING_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_HSTRING_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_HSTRING_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_HSTRING_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_HSTRING_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_HSTRING_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_HSTRING_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_HSTRING_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_HSTRING_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_HSTRING_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_HSTRING_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_HSTRING_INTERFACE_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CStorage__CIStorageItem_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CStorage__CIStorageItem_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CStorage__CIStorageItem __FIVector_1_Windows__CStorage__CIStorageItem;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CStorage__CIStorageItem;

typedef struct __FIVector_1_Windows__CStorage__CIStorageItemVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CStorage__CIStorageItem* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CStorage__CIStorageItem* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CStorage__CIStorageItem* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CStorage__CIStorageItem* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CStorage__CIStorageItem* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CStorage__CIStorageItem* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CStorage__CIStorageItem* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CIStorageItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CStorage__CIStorageItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CStorage__CIStorageItem* This,
        __FIVectorView_1_Windows__CStorage__CIStorageItem** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CStorage__CIStorageItem* This,
        __x_ABI_CWindows_CStorage_CIStorageItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CStorage__CIStorageItem* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CIStorageItem* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CStorage__CIStorageItem* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CIStorageItem* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CStorage__CIStorageItem* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CStorage__CIStorageItem* This,
        __x_ABI_CWindows_CStorage_CIStorageItem* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CStorage__CIStorageItem* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CStorage__CIStorageItem* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CStorage__CIStorageItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CIStorageItem** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CStorage__CIStorageItem* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CIStorageItem** items);

    END_INTERFACE
} __FIVector_1_Windows__CStorage__CIStorageItemVtbl;

interface __FIVector_1_Windows__CStorage__CIStorageItem
{
    CONST_VTBL struct __FIVector_1_Windows__CStorage__CIStorageItemVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CStorage__CIStorageItem_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CStorage__CIStorageItem_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CStorage__CIStorageItem_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CStorage__CIStorageItem_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CStorage__CIStorageItem_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CStorage__CIStorageItem_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CStorage__CIStorageItem_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CStorage__CIStorageItem_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CStorage__CIStorageItem_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CStorage__CIStorageItem_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CStorage__CIStorageItem_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CStorage__CIStorageItem_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CStorage__CIStorageItem_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CStorage__CIStorageItem_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CStorage__CIStorageItem_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CStorage__CIStorageItem_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CStorage__CIStorageItem_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CStorage__CIStorageItem_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CStorage__CIStorageItem_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport;

typedef struct __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReportVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        __FIVectorView_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport** items);

    END_INTERFACE
} __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReportVtbl;

interface __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport
{
    CONST_VTBL struct __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReportVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIVector_1_Windows__CSystem__CAppResourceGroupInfo_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CSystem__CAppResourceGroupInfo_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CSystem__CAppResourceGroupInfo __FIVector_1_Windows__CSystem__CAppResourceGroupInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CSystem__CAppResourceGroupInfo;

typedef struct __FIVector_1_Windows__CSystem__CAppResourceGroupInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CSystem__CAppResourceGroupInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CSystem__CAppResourceGroupInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CSystem__CAppResourceGroupInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CSystem__CAppResourceGroupInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CSystem__CAppResourceGroupInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CSystem__CAppResourceGroupInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CSystem__CAppResourceGroupInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CSystem__CAppResourceGroupInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CSystem__CAppResourceGroupInfo* This,
        __FIVectorView_1_Windows__CSystem__CAppResourceGroupInfo** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CSystem__CAppResourceGroupInfo* This,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CSystem__CAppResourceGroupInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CSystem__CAppResourceGroupInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CSystem__CAppResourceGroupInfo* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CSystem__CAppResourceGroupInfo* This,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CSystem__CAppResourceGroupInfo* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CSystem__CAppResourceGroupInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CSystem__CAppResourceGroupInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CSystem__CAppResourceGroupInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo** items);

    END_INTERFACE
} __FIVector_1_Windows__CSystem__CAppResourceGroupInfoVtbl;

interface __FIVector_1_Windows__CSystem__CAppResourceGroupInfo
{
    CONST_VTBL struct __FIVector_1_Windows__CSystem__CAppResourceGroupInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CSystem__CAppResourceGroupInfo_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CSystem__CAppResourceGroupInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo;

typedef struct __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        __FIVectorView_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo** items);

    END_INTERFACE
} __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfoVtbl;

interface __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo
{
    CONST_VTBL struct __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if !defined(____FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
#define ____FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

typedef interface __FIEventHandler_1_IInspectable __FIEventHandler_1_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIEventHandler_1_IInspectable;

typedef struct __FIEventHandler_1_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIEventHandler_1_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIEventHandler_1_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIEventHandler_1_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIEventHandler_1_IInspectable* This,
        IInspectable* sender,
        IInspectable* args);

    END_INTERFACE
} __FIEventHandler_1_IInspectableVtbl;

interface __FIEventHandler_1_IInspectable
{
    CONST_VTBL struct __FIEventHandler_1_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIEventHandler_1_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIEventHandler_1_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIEventHandler_1_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIEventHandler_1_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs_INTERFACE_DEFINED__)
#define ____FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs_INTERFACE_DEFINED__

typedef interface __FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs __FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs;

typedef struct __FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs* This,
        IInspectable* sender,
        __x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs* args);

    END_INTERFACE
} __FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgsVtbl;

interface __FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs
{
    CONST_VTBL struct __FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs_INTERFACE_DEFINED__)
#define ____FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs __FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs;

typedef struct __FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs* This,
        IInspectable* sender,
        __x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs* args);

    END_INTERFACE
} __FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgsVtbl;

interface __FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs
{
    CONST_VTBL struct __FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000
#if !defined(____FIReference_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__)
#define ____FIReference_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__

typedef interface __FIReference_1_Windows__CFoundation__CPoint __FIReference_1_Windows__CFoundation__CPoint;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Windows__CFoundation__CPoint;

typedef struct __FIReference_1_Windows__CFoundation__CPointVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_Windows__CFoundation__CPoint* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_Windows__CFoundation__CPoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_Windows__CFoundation__CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_Windows__CFoundation__CPoint* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_Windows__CFoundation__CPoint* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_Windows__CFoundation__CPoint* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_Windows__CFoundation__CPoint* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);

    END_INTERFACE
} __FIReference_1_Windows__CFoundation__CPointVtbl;

interface __FIReference_1_Windows__CFoundation__CPoint
{
    CONST_VTBL struct __FIReference_1_Windows__CFoundation__CPointVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_Windows__CFoundation__CPoint_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_Windows__CFoundation__CPoint_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_Windows__CFoundation__CPoint_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_Windows__CFoundation__CPoint_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_Windows__CFoundation__CPoint_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_Windows__CFoundation__CPoint_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_Windows__CFoundation__CPoint_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000
#if !defined(____FIReference_1_Windows__CFoundation__CRect_INTERFACE_DEFINED__)
#define ____FIReference_1_Windows__CFoundation__CRect_INTERFACE_DEFINED__

typedef interface __FIReference_1_Windows__CFoundation__CRect __FIReference_1_Windows__CFoundation__CRect;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Windows__CFoundation__CRect;

typedef struct __FIReference_1_Windows__CFoundation__CRectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_Windows__CFoundation__CRect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_Windows__CFoundation__CRect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_Windows__CFoundation__CRect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_Windows__CFoundation__CRect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_Windows__CFoundation__CRect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_Windows__CFoundation__CRect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_Windows__CFoundation__CRect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* result);

    END_INTERFACE
} __FIReference_1_Windows__CFoundation__CRectVtbl;

interface __FIReference_1_Windows__CFoundation__CRect
{
    CONST_VTBL struct __FIReference_1_Windows__CFoundation__CRectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_Windows__CFoundation__CRect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_Windows__CFoundation__CRect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_Windows__CFoundation__CRect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_Windows__CFoundation__CRect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_Windows__CFoundation__CRect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_Windows__CFoundation__CRect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_Windows__CFoundation__CRect_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_Windows__CFoundation__CRect_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable* This,
        __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs* This,
        __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* sender,
        __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable* This,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs* This,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* sender,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs* This,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* sender,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable* This,
        __x_ABI_CWindows_CSystem_CIDispatcherQueue* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs* This,
        __x_ABI_CWindows_CSystem_CIDispatcherQueue* sender,
        __x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable* This,
        __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable* This,
        __x_ABI_CWindows_CSystem_CIUserWatcher* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs* This,
        __x_ABI_CWindows_CSystem_CIUserWatcher* sender,
        __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs* This,
        __x_ABI_CWindows_CSystem_CIUserWatcher* sender,
        __x_ABI_CWindows_CSystem_CIUserChangedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CIStorageFile __x_ABI_CWindows_CStorage_CIStorageFile;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CIStorageFolder __x_ABI_CWindows_CStorage_CIStorageFolder;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CSearch_CIStorageFileQueryResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CSearch_CIStorageFileQueryResult_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CSearch_CIStorageFileQueryResult __x_ABI_CWindows_CStorage_CSearch_CIStorageFileQueryResult;

#endif // ____x_ABI_CWindows_CStorage_CSearch_CIStorageFileQueryResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CStreams_CIInputStream __x_ABI_CWindows_CStorage_CStreams_CIInputStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CStreams_CIOutputStream __x_ABI_CWindows_CStorage_CStreams_CIOutputStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CPopups_CPlacement __x_ABI_CWindows_CUI_CPopups_CPlacement;

typedef enum __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference;

typedef enum __x_ABI_CWindows_CSystem_CAppDiagnosticInfoWatcherStatus __x_ABI_CWindows_CSystem_CAppDiagnosticInfoWatcherStatus;

typedef enum __x_ABI_CWindows_CSystem_CAppMemoryUsageLevel __x_ABI_CWindows_CSystem_CAppMemoryUsageLevel;

typedef enum __x_ABI_CWindows_CSystem_CAppResourceGroupEnergyQuotaState __x_ABI_CWindows_CSystem_CAppResourceGroupEnergyQuotaState;

typedef enum __x_ABI_CWindows_CSystem_CAppResourceGroupExecutionState __x_ABI_CWindows_CSystem_CAppResourceGroupExecutionState;

typedef enum __x_ABI_CWindows_CSystem_CAppResourceGroupInfoWatcherStatus __x_ABI_CWindows_CSystem_CAppResourceGroupInfoWatcherStatus;

typedef enum __x_ABI_CWindows_CSystem_CDispatcherQueuePriority __x_ABI_CWindows_CSystem_CDispatcherQueuePriority;

typedef enum __x_ABI_CWindows_CSystem_CLaunchQuerySupportType __x_ABI_CWindows_CSystem_CLaunchQuerySupportType;

typedef enum __x_ABI_CWindows_CSystem_CPowerState __x_ABI_CWindows_CSystem_CPowerState;

typedef enum __x_ABI_CWindows_CSystem_CShutdownKind __x_ABI_CWindows_CSystem_CShutdownKind;

typedef enum __x_ABI_CWindows_CSystem_CUserAuthenticationStatus __x_ABI_CWindows_CSystem_CUserAuthenticationStatus;

typedef enum __x_ABI_CWindows_CSystem_CUserPictureSize __x_ABI_CWindows_CSystem_CUserPictureSize;

typedef enum __x_ABI_CWindows_CSystem_CUserType __x_ABI_CWindows_CSystem_CUserType;

typedef enum __x_ABI_CWindows_CSystem_CUserWatcherStatus __x_ABI_CWindows_CSystem_CUserWatcherStatus;

/*
 *
 * Struct Windows.System.AppDiagnosticInfoWatcherStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
enum __x_ABI_CWindows_CSystem_CAppDiagnosticInfoWatcherStatus
{
    AppDiagnosticInfoWatcherStatus_Created = 0,
    AppDiagnosticInfoWatcherStatus_Started = 1,
    AppDiagnosticInfoWatcherStatus_EnumerationCompleted = 2,
    AppDiagnosticInfoWatcherStatus_Stopping = 3,
    AppDiagnosticInfoWatcherStatus_Stopped = 4,
    AppDiagnosticInfoWatcherStatus_Aborted = 5,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Struct Windows.System.AppMemoryUsageLevel
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CSystem_CAppMemoryUsageLevel
{
    AppMemoryUsageLevel_Low = 0,
    AppMemoryUsageLevel_Medium = 1,
    AppMemoryUsageLevel_High = 2,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
    AppMemoryUsageLevel_OverLimit = 3,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.AppResourceGroupEnergyQuotaState
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
enum __x_ABI_CWindows_CSystem_CAppResourceGroupEnergyQuotaState
{
    AppResourceGroupEnergyQuotaState_Unknown = 0,
    AppResourceGroupEnergyQuotaState_Over = 1,
    AppResourceGroupEnergyQuotaState_Under = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Struct Windows.System.AppResourceGroupExecutionState
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
enum __x_ABI_CWindows_CSystem_CAppResourceGroupExecutionState
{
    AppResourceGroupExecutionState_Unknown = 0,
    AppResourceGroupExecutionState_Running = 1,
    AppResourceGroupExecutionState_Suspending = 2,
    AppResourceGroupExecutionState_Suspended = 3,
    AppResourceGroupExecutionState_NotRunning = 4,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Struct Windows.System.AppResourceGroupInfoWatcherStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
enum __x_ABI_CWindows_CSystem_CAppResourceGroupInfoWatcherStatus
{
    AppResourceGroupInfoWatcherStatus_Created = 0,
    AppResourceGroupInfoWatcherStatus_Started = 1,
    AppResourceGroupInfoWatcherStatus_EnumerationCompleted = 2,
    AppResourceGroupInfoWatcherStatus_Stopping = 3,
    AppResourceGroupInfoWatcherStatus_Stopped = 4,
    AppResourceGroupInfoWatcherStatus_Aborted = 5,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Struct Windows.System.AutoUpdateTimeZoneStatus
 *
 * Introduced to Windows.System.SystemManagementContract in version 5.0
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x50000
enum __x_ABI_CWindows_CSystem_CAutoUpdateTimeZoneStatus
{
    AutoUpdateTimeZoneStatus_Attempted = 0,
    AutoUpdateTimeZoneStatus_TimedOut = 1,
    AutoUpdateTimeZoneStatus_Failed = 2,
};
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x50000

/*
 *
 * Struct Windows.System.DiagnosticAccessStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
enum __x_ABI_CWindows_CSystem_CDiagnosticAccessStatus
{
    DiagnosticAccessStatus_Unspecified = 0,
    DiagnosticAccessStatus_Denied = 1,
    DiagnosticAccessStatus_Limited = 2,
    DiagnosticAccessStatus_Allowed = 3,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Struct Windows.System.DispatcherQueuePriority
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
enum __x_ABI_CWindows_CSystem_CDispatcherQueuePriority
{
    DispatcherQueuePriority_Low = -10,
    DispatcherQueuePriority_Normal = 0,
    DispatcherQueuePriority_High = 10,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Struct Windows.System.LaunchFileStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
enum __x_ABI_CWindows_CSystem_CLaunchFileStatus
{
    LaunchFileStatus_Success = 0,
    LaunchFileStatus_AppUnavailable = 1,
    LaunchFileStatus_DeniedByPolicy = 2,
    LaunchFileStatus_FileTypeNotSupported = 3,
    LaunchFileStatus_Unknown = 4,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.System.LaunchQuerySupportStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CSystem_CLaunchQuerySupportStatus
{
    LaunchQuerySupportStatus_Available = 0,
    LaunchQuerySupportStatus_AppNotInstalled = 1,
    LaunchQuerySupportStatus_AppUnavailable = 2,
    LaunchQuerySupportStatus_NotSupported = 3,
    LaunchQuerySupportStatus_Unknown = 4,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.LaunchQuerySupportType
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CSystem_CLaunchQuerySupportType
{
    LaunchQuerySupportType_Uri = 0,
    LaunchQuerySupportType_UriForResults = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.LaunchUriStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CSystem_CLaunchUriStatus
{
    LaunchUriStatus_Success = 0,
    LaunchUriStatus_AppUnavailable = 1,
    LaunchUriStatus_ProtocolUnavailable = 2,
    LaunchUriStatus_Unknown = 3,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.PowerState
 *
 * Introduced to Windows.System.SystemManagementContract in version 3.0
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x30000
enum __x_ABI_CWindows_CSystem_CPowerState
{
    PowerState_ConnectedStandby = 0,
    PowerState_SleepS3 = 1,
};
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.System.ProcessorArchitecture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CSystem_CProcessorArchitecture
{
    ProcessorArchitecture_X86 = 0,
    ProcessorArchitecture_Arm = 5,
    ProcessorArchitecture_X64 = 9,
    ProcessorArchitecture_Neutral = 11,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
    ProcessorArchitecture_Arm64 = 12,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
    ProcessorArchitecture_X86OnArm64 = 14,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
    ProcessorArchitecture_Unknown = 65535,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.RemoteLaunchUriStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
enum __x_ABI_CWindows_CSystem_CRemoteLaunchUriStatus
{
    RemoteLaunchUriStatus_Unknown = 0,
    RemoteLaunchUriStatus_Success = 1,
    RemoteLaunchUriStatus_AppUnavailable = 2,
    RemoteLaunchUriStatus_ProtocolUnavailable = 3,
    RemoteLaunchUriStatus_RemoteSystemUnavailable = 4,
    RemoteLaunchUriStatus_ValueSetTooLarge = 5,
    RemoteLaunchUriStatus_DeniedByLocalSystem = 6,
    RemoteLaunchUriStatus_DeniedByRemoteSystem = 7,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.System.ShutdownKind
 *
 * Introduced to Windows.System.SystemManagementContract in version 1.0
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CSystem_CShutdownKind
{
    ShutdownKind_Shutdown = 0,
    ShutdownKind_Restart = 1,
};
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.UserAuthenticationStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CSystem_CUserAuthenticationStatus
{
    UserAuthenticationStatus_Unauthenticated = 0,
    UserAuthenticationStatus_LocallyAuthenticated = 1,
    UserAuthenticationStatus_RemotelyAuthenticated = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.UserPictureSize
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CSystem_CUserPictureSize
{
    UserPictureSize_Size64x64 = 0,
    UserPictureSize_Size208x208 = 1,
    UserPictureSize_Size424x424 = 2,
    UserPictureSize_Size1080x1080 = 3,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.UserType
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CSystem_CUserType
{
    UserType_LocalUser = 0,
    UserType_RemoteUser = 1,
    UserType_LocalGuest = 2,
    UserType_RemoteGuest = 3,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.UserWatcherStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CSystem_CUserWatcherStatus
{
    UserWatcherStatus_Created = 0,
    UserWatcherStatus_Started = 1,
    UserWatcherStatus_EnumerationCompleted = 2,
    UserWatcherStatus_Stopping = 3,
    UserWatcherStatus_Stopped = 4,
    UserWatcherStatus_Aborted = 5,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.UserWatcherUpdateKind
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 10.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000
enum __x_ABI_CWindows_CSystem_CUserWatcherUpdateKind
{
    UserWatcherUpdateKind_Properties = 0,
    UserWatcherUpdateKind_Picture = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

/*
 *
 * Struct Windows.System.VirtualKey
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CSystem_CVirtualKey
{
    VirtualKey_None = 0,
    VirtualKey_LeftButton = 1,
    VirtualKey_RightButton = 2,
    VirtualKey_Cancel = 3,
    VirtualKey_MiddleButton = 4,
    VirtualKey_XButton1 = 5,
    VirtualKey_XButton2 = 6,
    VirtualKey_Back = 8,
    VirtualKey_Tab = 9,
    VirtualKey_Clear = 12,
    VirtualKey_Enter = 13,
    VirtualKey_Shift = 16,
    VirtualKey_Control = 17,
    VirtualKey_Menu = 18,
    VirtualKey_Pause = 19,
    VirtualKey_CapitalLock = 20,
    VirtualKey_Kana = 21,
    VirtualKey_Hangul = 21,
    VirtualKey_Junja = 23,
    VirtualKey_Final = 24,
    VirtualKey_Hanja = 25,
    VirtualKey_Kanji = 25,
    VirtualKey_Escape = 27,
    VirtualKey_Convert = 28,
    VirtualKey_NonConvert = 29,
    VirtualKey_Accept = 30,
    VirtualKey_ModeChange = 31,
    VirtualKey_Space = 32,
    VirtualKey_PageUp = 33,
    VirtualKey_PageDown = 34,
    VirtualKey_End = 35,
    VirtualKey_Home = 36,
    VirtualKey_Left = 37,
    VirtualKey_Up = 38,
    VirtualKey_Right = 39,
    VirtualKey_Down = 40,
    VirtualKey_Select = 41,
    VirtualKey_Print = 42,
    VirtualKey_Execute = 43,
    VirtualKey_Snapshot = 44,
    VirtualKey_Insert = 45,
    VirtualKey_Delete = 46,
    VirtualKey_Help = 47,
    VirtualKey_Number0 = 48,
    VirtualKey_Number1 = 49,
    VirtualKey_Number2 = 50,
    VirtualKey_Number3 = 51,
    VirtualKey_Number4 = 52,
    VirtualKey_Number5 = 53,
    VirtualKey_Number6 = 54,
    VirtualKey_Number7 = 55,
    VirtualKey_Number8 = 56,
    VirtualKey_Number9 = 57,
    VirtualKey_A = 65,
    VirtualKey_B = 66,
    VirtualKey_C = 67,
    VirtualKey_D = 68,
    VirtualKey_E = 69,
    VirtualKey_F = 70,
    VirtualKey_G = 71,
    VirtualKey_H = 72,
    VirtualKey_I = 73,
    VirtualKey_J = 74,
    VirtualKey_K = 75,
    VirtualKey_L = 76,
    VirtualKey_M = 77,
    VirtualKey_N = 78,
    VirtualKey_O = 79,
    VirtualKey_P = 80,
    VirtualKey_Q = 81,
    VirtualKey_R = 82,
    VirtualKey_S = 83,
    VirtualKey_T = 84,
    VirtualKey_U = 85,
    VirtualKey_V = 86,
    VirtualKey_W = 87,
    VirtualKey_X = 88,
    VirtualKey_Y = 89,
    VirtualKey_Z = 90,
    VirtualKey_LeftWindows = 91,
    VirtualKey_RightWindows = 92,
    VirtualKey_Application = 93,
    VirtualKey_Sleep = 95,
    VirtualKey_NumberPad0 = 96,
    VirtualKey_NumberPad1 = 97,
    VirtualKey_NumberPad2 = 98,
    VirtualKey_NumberPad3 = 99,
    VirtualKey_NumberPad4 = 100,
    VirtualKey_NumberPad5 = 101,
    VirtualKey_NumberPad6 = 102,
    VirtualKey_NumberPad7 = 103,
    VirtualKey_NumberPad8 = 104,
    VirtualKey_NumberPad9 = 105,
    VirtualKey_Multiply = 106,
    VirtualKey_Add = 107,
    VirtualKey_Separator = 108,
    VirtualKey_Subtract = 109,
    VirtualKey_Decimal = 110,
    VirtualKey_Divide = 111,
    VirtualKey_F1 = 112,
    VirtualKey_F2 = 113,
    VirtualKey_F3 = 114,
    VirtualKey_F4 = 115,
    VirtualKey_F5 = 116,
    VirtualKey_F6 = 117,
    VirtualKey_F7 = 118,
    VirtualKey_F8 = 119,
    VirtualKey_F9 = 120,
    VirtualKey_F10 = 121,
    VirtualKey_F11 = 122,
    VirtualKey_F12 = 123,
    VirtualKey_F13 = 124,
    VirtualKey_F14 = 125,
    VirtualKey_F15 = 126,
    VirtualKey_F16 = 127,
    VirtualKey_F17 = 128,
    VirtualKey_F18 = 129,
    VirtualKey_F19 = 130,
    VirtualKey_F20 = 131,
    VirtualKey_F21 = 132,
    VirtualKey_F22 = 133,
    VirtualKey_F23 = 134,
    VirtualKey_F24 = 135,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_NavigationView = 136,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_NavigationMenu = 137,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_NavigationUp = 138,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_NavigationDown = 139,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_NavigationLeft = 140,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_NavigationRight = 141,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_NavigationAccept = 142,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_NavigationCancel = 143,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_NumberKeyLock = 144,
    VirtualKey_Scroll = 145,
    VirtualKey_LeftShift = 160,
    VirtualKey_RightShift = 161,
    VirtualKey_LeftControl = 162,
    VirtualKey_RightControl = 163,
    VirtualKey_LeftMenu = 164,
    VirtualKey_RightMenu = 165,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GoBack = 166,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GoForward = 167,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_Refresh = 168,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_Stop = 169,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_Search = 170,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_Favorites = 171,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GoHome = 172,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadA = 195,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadB = 196,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadX = 197,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadY = 198,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadRightShoulder = 199,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadLeftShoulder = 200,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadLeftTrigger = 201,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadRightTrigger = 202,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadDPadUp = 203,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadDPadDown = 204,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadDPadLeft = 205,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadDPadRight = 206,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadMenu = 207,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadView = 208,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadLeftThumbstickButton = 209,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadRightThumbstickButton = 210,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadLeftThumbstickUp = 211,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadLeftThumbstickDown = 212,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadLeftThumbstickRight = 213,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadLeftThumbstickLeft = 214,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadRightThumbstickUp = 215,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadRightThumbstickDown = 216,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadRightThumbstickRight = 217,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    VirtualKey_GamepadRightThumbstickLeft = 218,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.System.VirtualKeyModifiers
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers
{
    VirtualKeyModifiers_None = 0,
    VirtualKeyModifiers_Control = 0x1,
    VirtualKeyModifiers_Menu = 0x2,
    VirtualKeyModifiers_Shift = 0x4,
    VirtualKeyModifiers_Windows = 0x8,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.System.DispatcherQueueHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueHandler_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CSystem_CIDispatcherQueueHandlerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIDispatcherQueueHandler* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIDispatcherQueueHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIDispatcherQueueHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CSystem_CIDispatcherQueueHandler* This);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIDispatcherQueueHandlerVtbl;

interface __x_ABI_CWindows_CSystem_CIDispatcherQueueHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIDispatcherQueueHandlerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueHandler_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueHandler_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueHandler_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueHandler_Invoke(This) \
    ((This)->lpVtbl->Invoke(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIDispatcherQueueHandler;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppActivationResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.System.AppActivationResult
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CSystem_CIAppActivationResult_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppActivationResult_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppActivationResult[] = L"Windows.System.IAppActivationResult";
typedef struct __x_ABI_CWindows_CSystem_CIAppActivationResultVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppActivationResult* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppActivationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppActivationResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppActivationResult* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppActivationResult* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppActivationResult* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(__x_ABI_CWindows_CSystem_CIAppActivationResult* This,
        HRESULT* value);
    HRESULT (STDMETHODCALLTYPE* get_AppResourceGroupInfo)(__x_ABI_CWindows_CSystem_CIAppActivationResult* This,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo** value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppActivationResultVtbl;

interface __x_ABI_CWindows_CSystem_CIAppActivationResult
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppActivationResultVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppActivationResult_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppActivationResult_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppActivationResult_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppActivationResult_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppActivationResult_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppActivationResult_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppActivationResult_get_ExtendedError(This, value) \
    ((This)->lpVtbl->get_ExtendedError(This, value))

#define __x_ABI_CWindows_CSystem_CIAppActivationResult_get_AppResourceGroupInfo(This, value) \
    ((This)->lpVtbl->get_AppResourceGroupInfo(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppActivationResult;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppActivationResult_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.System.IAppDiagnosticInfo
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.System.AppDiagnosticInfo
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppDiagnosticInfo[] = L"Windows.System.IAppDiagnosticInfo";
typedef struct __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AppInfo)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo* This,
        __x_ABI_CWindows_CApplicationModel_CIAppInfo** value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoVtbl;

interface __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_get_AppInfo(This, value) \
    ((This)->lpVtbl->get_AppInfo(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppDiagnosticInfo;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.System.IAppDiagnosticInfo2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppDiagnosticInfo
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppDiagnosticInfo2[] = L"Windows.System.IAppDiagnosticInfo2";
typedef struct __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetResourceGroups)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2* This,
        __FIVector_1_Windows__CSystem__CAppResourceGroupInfo** result);
    HRESULT (STDMETHODCALLTYPE* CreateResourceGroupWatcher)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2* This,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher** result);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2Vtbl;

interface __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_GetResourceGroups(This, result) \
    ((This)->lpVtbl->GetResourceGroups(This, result))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_CreateResourceGroupWatcher(This, result) \
    ((This)->lpVtbl->CreateResourceGroupWatcher(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppDiagnosticInfo3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.System.AppDiagnosticInfo
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppDiagnosticInfo3[] = L"Windows.System.IAppDiagnosticInfo3";
typedef struct __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* LaunchAsync)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3* This,
        __FIAsyncOperation_1_Windows__CSystem__CAppActivationResult** operation);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3Vtbl;

interface __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_LaunchAsync(This, operation) \
    ((This)->lpVtbl->LaunchAsync(This, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfo3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.System.IAppDiagnosticInfoStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.System.AppDiagnosticInfo
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppDiagnosticInfoStatics[] = L"Windows.System.IAppDiagnosticInfoStatics";
typedef struct __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* RequestInfoAsync)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics* This,
        __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo** operation);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStaticsVtbl;

interface __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_RequestInfoAsync(This, operation) \
    ((This)->lpVtbl->RequestInfoAsync(This, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.System.IAppDiagnosticInfoStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppDiagnosticInfo
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppDiagnosticInfoStatics2[] = L"Windows.System.IAppDiagnosticInfoStatics2";
typedef struct __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateWatcher)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2* This,
        __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher** watcher);
    HRESULT (STDMETHODCALLTYPE* RequestAccessAsync)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2* This,
        __FIAsyncOperation_1_Windows__CSystem__CDiagnosticAccessStatus** operation);
    HRESULT (STDMETHODCALLTYPE* RequestInfoForPackageAsync)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2* This,
        HSTRING packageFamilyName,
        __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo** operation);
    HRESULT (STDMETHODCALLTYPE* RequestInfoForAppAsync)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2* This,
        __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo** operation);
    HRESULT (STDMETHODCALLTYPE* RequestInfoForAppUserModelId)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2* This,
        HSTRING appUserModelId,
        __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppDiagnosticInfo** operation);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2Vtbl;

interface __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_CreateWatcher(This, watcher) \
    ((This)->lpVtbl->CreateWatcher(This, watcher))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_RequestAccessAsync(This, operation) \
    ((This)->lpVtbl->RequestAccessAsync(This, operation))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_RequestInfoForPackageAsync(This, packageFamilyName, operation) \
    ((This)->lpVtbl->RequestInfoForPackageAsync(This, packageFamilyName, operation))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_RequestInfoForAppAsync(This, operation) \
    ((This)->lpVtbl->RequestInfoForAppAsync(This, operation))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_RequestInfoForAppUserModelId(This, appUserModelId, operation) \
    ((This)->lpVtbl->RequestInfoForAppUserModelId(This, appUserModelId, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppDiagnosticInfoWatcher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppDiagnosticInfoWatcher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppDiagnosticInfoWatcher[] = L"Windows.System.IAppDiagnosticInfoWatcher";
typedef struct __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_Added)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* This,
        __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Added)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Removed)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* This,
        __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_Windows__CSystem__CAppDiagnosticInfoWatcherEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Removed)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_EnumerationCompleted)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* This,
        __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_EnumerationCompleted)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Stopped)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* This,
        __FITypedEventHandler_2_Windows__CSystem__CAppDiagnosticInfoWatcher_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Stopped)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* This,
        enum __x_ABI_CWindows_CSystem_CAppDiagnosticInfoWatcherStatus* value);
    HRESULT (STDMETHODCALLTYPE* Start)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher* This);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherVtbl;

interface __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_add_Added(This, handler, token) \
    ((This)->lpVtbl->add_Added(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_remove_Added(This, token) \
    ((This)->lpVtbl->remove_Added(This, token))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_add_Removed(This, handler, token) \
    ((This)->lpVtbl->add_Removed(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_remove_Removed(This, token) \
    ((This)->lpVtbl->remove_Removed(This, token))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_add_EnumerationCompleted(This, handler, token) \
    ((This)->lpVtbl->add_EnumerationCompleted(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_remove_EnumerationCompleted(This, token) \
    ((This)->lpVtbl->remove_EnumerationCompleted(This, token))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_add_Stopped(This, handler, token) \
    ((This)->lpVtbl->add_Stopped(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_remove_Stopped(This, token) \
    ((This)->lpVtbl->remove_Stopped(This, token))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_get_Status(This, value) \
    ((This)->lpVtbl->get_Status(This, value))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_Start(This) \
    ((This)->lpVtbl->Start(This))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_Stop(This) \
    ((This)->lpVtbl->Stop(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcher_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppDiagnosticInfoWatcherEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppDiagnosticInfoWatcherEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppDiagnosticInfoWatcherEventArgs[] = L"Windows.System.IAppDiagnosticInfoWatcherEventArgs";
typedef struct __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AppDiagnosticInfo)(__x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs* This,
        __x_ABI_CWindows_CSystem_CIAppDiagnosticInfo** value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgsVtbl;

interface __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_get_AppDiagnosticInfo(This, value) \
    ((This)->lpVtbl->get_AppDiagnosticInfo(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppDiagnosticInfoWatcherEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppExecutionStateChangeResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.System.AppExecutionStateChangeResult
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppExecutionStateChangeResult[] = L"Windows.System.IAppExecutionStateChangeResult";
typedef struct __x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResultVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(__x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult* This,
        HRESULT* value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResultVtbl;

interface __x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResultVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_get_ExtendedError(This, value) \
    ((This)->lpVtbl->get_ExtendedError(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppExecutionStateChangeResult_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.System.IAppMemoryReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.AppMemoryReport
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIAppMemoryReport_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppMemoryReport_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppMemoryReport[] = L"Windows.System.IAppMemoryReport";
typedef struct __x_ABI_CWindows_CSystem_CIAppMemoryReportVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppMemoryReport* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppMemoryReport* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppMemoryReport* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppMemoryReport* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppMemoryReport* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppMemoryReport* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PrivateCommitUsage)(__x_ABI_CWindows_CSystem_CIAppMemoryReport* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_PeakPrivateCommitUsage)(__x_ABI_CWindows_CSystem_CIAppMemoryReport* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_TotalCommitUsage)(__x_ABI_CWindows_CSystem_CIAppMemoryReport* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_TotalCommitLimit)(__x_ABI_CWindows_CSystem_CIAppMemoryReport* This,
        UINT64* value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppMemoryReportVtbl;

interface __x_ABI_CWindows_CSystem_CIAppMemoryReport
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppMemoryReportVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppMemoryReport_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppMemoryReport_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppMemoryReport_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppMemoryReport_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppMemoryReport_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppMemoryReport_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppMemoryReport_get_PrivateCommitUsage(This, value) \
    ((This)->lpVtbl->get_PrivateCommitUsage(This, value))

#define __x_ABI_CWindows_CSystem_CIAppMemoryReport_get_PeakPrivateCommitUsage(This, value) \
    ((This)->lpVtbl->get_PeakPrivateCommitUsage(This, value))

#define __x_ABI_CWindows_CSystem_CIAppMemoryReport_get_TotalCommitUsage(This, value) \
    ((This)->lpVtbl->get_TotalCommitUsage(This, value))

#define __x_ABI_CWindows_CSystem_CIAppMemoryReport_get_TotalCommitLimit(This, value) \
    ((This)->lpVtbl->get_TotalCommitLimit(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppMemoryReport;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppMemoryReport_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IAppMemoryReport2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppMemoryReport
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppMemoryReport2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppMemoryReport2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppMemoryReport2[] = L"Windows.System.IAppMemoryReport2";
typedef struct __x_ABI_CWindows_CSystem_CIAppMemoryReport2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppMemoryReport2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppMemoryReport2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppMemoryReport2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppMemoryReport2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppMemoryReport2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppMemoryReport2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ExpectedTotalCommitLimit)(__x_ABI_CWindows_CSystem_CIAppMemoryReport2* This,
        UINT64* value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppMemoryReport2Vtbl;

interface __x_ABI_CWindows_CSystem_CIAppMemoryReport2
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppMemoryReport2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppMemoryReport2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppMemoryReport2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppMemoryReport2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppMemoryReport2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppMemoryReport2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppMemoryReport2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppMemoryReport2_get_ExpectedTotalCommitLimit(This, value) \
    ((This)->lpVtbl->get_ExpectedTotalCommitLimit(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppMemoryReport2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppMemoryReport2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppMemoryUsageLimitChangingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.AppMemoryUsageLimitChangingEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppMemoryUsageLimitChangingEventArgs[] = L"Windows.System.IAppMemoryUsageLimitChangingEventArgs";
typedef struct __x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_OldLimit)(__x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_NewLimit)(__x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs* This,
        UINT64* value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgsVtbl;

interface __x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_get_OldLimit(This, value) \
    ((This)->lpVtbl->get_OldLimit(This, value))

#define __x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_get_NewLimit(This, value) \
    ((This)->lpVtbl->get_NewLimit(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppMemoryUsageLimitChangingEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IAppResourceGroupBackgroundTaskReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppResourceGroupBackgroundTaskReport
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppResourceGroupBackgroundTaskReport[] = L"Windows.System.IAppResourceGroupBackgroundTaskReport";
typedef struct __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReportVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TaskId)(__x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Trigger)(__x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_EntryPoint)(__x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport* This,
        HSTRING* value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReportVtbl;

interface __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReportVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_get_TaskId(This, value) \
    ((This)->lpVtbl->get_TaskId(This, value))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_get_Name(This, value) \
    ((This)->lpVtbl->get_Name(This, value))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_get_Trigger(This, value) \
    ((This)->lpVtbl->get_Trigger(This, value))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_get_EntryPoint(This, value) \
    ((This)->lpVtbl->get_EntryPoint(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupBackgroundTaskReport_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppResourceGroupInfo
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppResourceGroupInfo
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppResourceGroupInfo[] = L"Windows.System.IAppResourceGroupInfo";
typedef struct __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_InstanceId)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_IsShared)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* GetBackgroundTaskReports)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo* This,
        __FIVector_1_Windows__CSystem__CAppResourceGroupBackgroundTaskReport** result);
    HRESULT (STDMETHODCALLTYPE* GetMemoryReport)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo* This,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport** result);
    HRESULT (STDMETHODCALLTYPE* GetProcessDiagnosticInfos)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo* This,
        __FIVector_1_Windows__CSystem__CDiagnostics__CProcessDiagnosticInfo** result);
    HRESULT (STDMETHODCALLTYPE* GetStateReport)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo* This,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport** result);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoVtbl;

interface __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_get_InstanceId(This, value) \
    ((This)->lpVtbl->get_InstanceId(This, value))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_get_IsShared(This, value) \
    ((This)->lpVtbl->get_IsShared(This, value))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_GetBackgroundTaskReports(This, result) \
    ((This)->lpVtbl->GetBackgroundTaskReports(This, result))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_GetMemoryReport(This, result) \
    ((This)->lpVtbl->GetMemoryReport(This, result))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_GetProcessDiagnosticInfos(This, result) \
    ((This)->lpVtbl->GetProcessDiagnosticInfos(This, result))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_GetStateReport(This, result) \
    ((This)->lpVtbl->GetStateReport(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppResourceGroupInfo;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppResourceGroupInfo2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.System.AppResourceGroupInfo
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppResourceGroupInfo2[] = L"Windows.System.IAppResourceGroupInfo2";
typedef struct __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* StartSuspendAsync)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2* This,
        __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult** operation);
    HRESULT (STDMETHODCALLTYPE* StartResumeAsync)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2* This,
        __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult** operation);
    HRESULT (STDMETHODCALLTYPE* StartTerminateAsync)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2* This,
        __FIAsyncOperation_1_Windows__CSystem__CAppExecutionStateChangeResult** operation);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2Vtbl;

interface __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_StartSuspendAsync(This, operation) \
    ((This)->lpVtbl->StartSuspendAsync(This, operation))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_StartResumeAsync(This, operation) \
    ((This)->lpVtbl->StartResumeAsync(This, operation))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_StartTerminateAsync(This, operation) \
    ((This)->lpVtbl->StartTerminateAsync(This, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfo2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.System.IAppResourceGroupInfoWatcher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppResourceGroupInfoWatcher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppResourceGroupInfoWatcher[] = L"Windows.System.IAppResourceGroupInfoWatcher";
typedef struct __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_Added)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This,
        __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Added)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Removed)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This,
        __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Removed)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_EnumerationCompleted)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This,
        __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_EnumerationCompleted)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Stopped)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This,
        __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Stopped)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ExecutionStateChanged)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This,
        __FITypedEventHandler_2_Windows__CSystem__CAppResourceGroupInfoWatcher_Windows__CSystem__CAppResourceGroupInfoWatcherExecutionStateChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ExecutionStateChanged)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This,
        enum __x_ABI_CWindows_CSystem_CAppResourceGroupInfoWatcherStatus* status);
    HRESULT (STDMETHODCALLTYPE* Start)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher* This);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherVtbl;

interface __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_add_Added(This, handler, token) \
    ((This)->lpVtbl->add_Added(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_remove_Added(This, token) \
    ((This)->lpVtbl->remove_Added(This, token))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_add_Removed(This, handler, token) \
    ((This)->lpVtbl->add_Removed(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_remove_Removed(This, token) \
    ((This)->lpVtbl->remove_Removed(This, token))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_add_EnumerationCompleted(This, handler, token) \
    ((This)->lpVtbl->add_EnumerationCompleted(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_remove_EnumerationCompleted(This, token) \
    ((This)->lpVtbl->remove_EnumerationCompleted(This, token))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_add_Stopped(This, handler, token) \
    ((This)->lpVtbl->add_Stopped(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_remove_Stopped(This, token) \
    ((This)->lpVtbl->remove_Stopped(This, token))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_add_ExecutionStateChanged(This, handler, token) \
    ((This)->lpVtbl->add_ExecutionStateChanged(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_remove_ExecutionStateChanged(This, token) \
    ((This)->lpVtbl->remove_ExecutionStateChanged(This, token))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_get_Status(This, status) \
    ((This)->lpVtbl->get_Status(This, status))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_Start(This) \
    ((This)->lpVtbl->Start(This))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_Stop(This) \
    ((This)->lpVtbl->Stop(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcher_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppResourceGroupInfoWatcherEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppResourceGroupInfoWatcherEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppResourceGroupInfoWatcherEventArgs[] = L"Windows.System.IAppResourceGroupInfoWatcherEventArgs";
typedef struct __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AppDiagnosticInfos)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs* This,
        __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_AppResourceGroupInfo)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs* This,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo** value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgsVtbl;

interface __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_get_AppDiagnosticInfos(This, value) \
    ((This)->lpVtbl->get_AppDiagnosticInfos(This, value))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_get_AppResourceGroupInfo(This, value) \
    ((This)->lpVtbl->get_AppResourceGroupInfo(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppResourceGroupInfoWatcherExecutionStateChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs[] = L"Windows.System.IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs";
typedef struct __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AppDiagnosticInfos)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs* This,
        __FIVectorView_1_Windows__CSystem__CAppDiagnosticInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_AppResourceGroupInfo)(__x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs* This,
        __x_ABI_CWindows_CSystem_CIAppResourceGroupInfo** value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgsVtbl;

interface __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_get_AppDiagnosticInfos(This, value) \
    ((This)->lpVtbl->get_AppDiagnosticInfos(This, value))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_get_AppResourceGroupInfo(This, value) \
    ((This)->lpVtbl->get_AppResourceGroupInfo(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupInfoWatcherExecutionStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppResourceGroupMemoryReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppResourceGroupMemoryReport
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppResourceGroupMemoryReport[] = L"Windows.System.IAppResourceGroupMemoryReport";
typedef struct __x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReportVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CommitUsageLimit)(__x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_CommitUsageLevel)(__x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport* This,
        enum __x_ABI_CWindows_CSystem_CAppMemoryUsageLevel* value);
    HRESULT (STDMETHODCALLTYPE* get_PrivateCommitUsage)(__x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_TotalCommitUsage)(__x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport* This,
        UINT64* value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReportVtbl;

interface __x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReportVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_get_CommitUsageLimit(This, value) \
    ((This)->lpVtbl->get_CommitUsageLimit(This, value))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_get_CommitUsageLevel(This, value) \
    ((This)->lpVtbl->get_CommitUsageLevel(This, value))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_get_PrivateCommitUsage(This, value) \
    ((This)->lpVtbl->get_PrivateCommitUsage(This, value))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_get_TotalCommitUsage(This, value) \
    ((This)->lpVtbl->get_TotalCommitUsage(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupMemoryReport_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppResourceGroupStateReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.AppResourceGroupStateReport
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppResourceGroupStateReport[] = L"Windows.System.IAppResourceGroupStateReport";
typedef struct __x_ABI_CWindows_CSystem_CIAppResourceGroupStateReportVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ExecutionState)(__x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport* This,
        enum __x_ABI_CWindows_CSystem_CAppResourceGroupExecutionState* value);
    HRESULT (STDMETHODCALLTYPE* get_EnergyQuotaState)(__x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport* This,
        enum __x_ABI_CWindows_CSystem_CAppResourceGroupEnergyQuotaState* value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppResourceGroupStateReportVtbl;

interface __x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppResourceGroupStateReportVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_get_ExecutionState(This, value) \
    ((This)->lpVtbl->get_ExecutionState(This, value))

#define __x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_get_EnergyQuotaState(This, value) \
    ((This)->lpVtbl->get_EnergyQuotaState(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppResourceGroupStateReport_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IAppUriHandlerHost
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.System.AppUriHandlerHost
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerHost_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerHost_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppUriHandlerHost[] = L"Windows.System.IAppUriHandlerHost";
typedef struct __x_ABI_CWindows_CSystem_CIAppUriHandlerHostVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppUriHandlerHost* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppUriHandlerHost* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppUriHandlerHost* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppUriHandlerHost* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppUriHandlerHost* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppUriHandlerHost* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CSystem_CIAppUriHandlerHost* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Name)(__x_ABI_CWindows_CSystem_CIAppUriHandlerHost* This,
        HSTRING value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppUriHandlerHostVtbl;

interface __x_ABI_CWindows_CSystem_CIAppUriHandlerHost
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppUriHandlerHostVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerHost_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerHost_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerHost_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerHost_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerHost_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerHost_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerHost_get_Name(This, value) \
    ((This)->lpVtbl->get_Name(This, value))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerHost_put_Name(This, value) \
    ((This)->lpVtbl->put_Name(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppUriHandlerHost;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerHost_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.System.IAppUriHandlerHostFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.System.AppUriHandlerHost
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppUriHandlerHostFactory[] = L"Windows.System.IAppUriHandlerHostFactory";
typedef struct __x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory* This,
        HSTRING name,
        __x_ABI_CWindows_CSystem_CIAppUriHandlerHost** value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactoryVtbl;

interface __x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_CreateInstance(This, name, value) \
    ((This)->lpVtbl->CreateInstance(This, name, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerHostFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.System.IAppUriHandlerRegistration
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.System.AppUriHandlerRegistration
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppUriHandlerRegistration[] = L"Windows.System.IAppUriHandlerRegistration";
typedef struct __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration* This,
        __x_ABI_CWindows_CSystem_CIUser** value);
    HRESULT (STDMETHODCALLTYPE* GetAppAddedHostsAsync)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration* This,
        __FIAsyncOperation_1___FIVector_1_Windows__CSystem__CAppUriHandlerHost** operation);
    HRESULT (STDMETHODCALLTYPE* SetAppAddedHostsAsync)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration* This,
        __FIIterable_1_Windows__CSystem__CAppUriHandlerHost* hosts,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationVtbl;

interface __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_get_Name(This, value) \
    ((This)->lpVtbl->get_Name(This, value))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_get_User(This, value) \
    ((This)->lpVtbl->get_User(This, value))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_GetAppAddedHostsAsync(This, operation) \
    ((This)->lpVtbl->GetAppAddedHostsAsync(This, operation))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_SetAppAddedHostsAsync(This, hosts, operation) \
    ((This)->lpVtbl->SetAppAddedHostsAsync(This, hosts, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.System.IAppUriHandlerRegistrationManager
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.System.AppUriHandlerRegistrationManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppUriHandlerRegistrationManager[] = L"Windows.System.IAppUriHandlerRegistrationManager";
typedef struct __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager* This,
        __x_ABI_CWindows_CSystem_CIUser** value);
    HRESULT (STDMETHODCALLTYPE* TryGetRegistration)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager* This,
        HSTRING name,
        __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistration** result);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerVtbl;

interface __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_get_User(This, value) \
    ((This)->lpVtbl->get_User(This, value))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_TryGetRegistration(This, name, result) \
    ((This)->lpVtbl->TryGetRegistration(This, name, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.System.IAppUriHandlerRegistrationManagerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.System.AppUriHandlerRegistrationManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IAppUriHandlerRegistrationManagerStatics[] = L"Windows.System.IAppUriHandlerRegistrationManagerStatics";
typedef struct __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics* This,
        __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager** result);
    HRESULT (STDMETHODCALLTYPE* GetForUser)(__x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManager** result);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStaticsVtbl;

interface __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_GetDefault(This, result) \
    ((This)->lpVtbl->GetDefault(This, result))

#define __x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_GetForUser(This, user, result) \
    ((This)->lpVtbl->GetForUser(This, user, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIAppUriHandlerRegistrationManagerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.System.IDateTimeSettingsStatics
 *
 * Introduced to Windows.System.SystemManagementContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.System.DateTimeSettings
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IDateTimeSettingsStatics[] = L"Windows.System.IDateTimeSettingsStatics";
typedef struct __x_ABI_CWindows_CSystem_CIDateTimeSettingsStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SetSystemDateTime)(__x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime utcDateTime);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIDateTimeSettingsStaticsVtbl;

interface __x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIDateTimeSettingsStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_SetSystemDateTime(This, utcDateTime) \
    ((This)->lpVtbl->SetSystemDateTime(This, utcDateTime))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIDateTimeSettingsStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.System.IDispatcherQueue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.DispatcherQueue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IDispatcherQueue[] = L"Windows.System.IDispatcherQueue";
typedef struct __x_ABI_CWindows_CSystem_CIDispatcherQueueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIDispatcherQueue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIDispatcherQueue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIDispatcherQueue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIDispatcherQueue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIDispatcherQueue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIDispatcherQueue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateTimer)(__x_ABI_CWindows_CSystem_CIDispatcherQueue* This,
        __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer** result);
    HRESULT (STDMETHODCALLTYPE* TryEnqueue)(__x_ABI_CWindows_CSystem_CIDispatcherQueue* This,
        __x_ABI_CWindows_CSystem_CIDispatcherQueueHandler* callback,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* TryEnqueueWithPriority)(__x_ABI_CWindows_CSystem_CIDispatcherQueue* This,
        enum __x_ABI_CWindows_CSystem_CDispatcherQueuePriority priority,
        __x_ABI_CWindows_CSystem_CIDispatcherQueueHandler* callback,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* add_ShutdownStarting)(__x_ABI_CWindows_CSystem_CIDispatcherQueue* This,
        __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_Windows__CSystem__CDispatcherQueueShutdownStartingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ShutdownStarting)(__x_ABI_CWindows_CSystem_CIDispatcherQueue* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ShutdownCompleted)(__x_ABI_CWindows_CSystem_CIDispatcherQueue* This,
        __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueue_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ShutdownCompleted)(__x_ABI_CWindows_CSystem_CIDispatcherQueue* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIDispatcherQueueVtbl;

interface __x_ABI_CWindows_CSystem_CIDispatcherQueue
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIDispatcherQueueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue_CreateTimer(This, result) \
    ((This)->lpVtbl->CreateTimer(This, result))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue_TryEnqueue(This, callback, result) \
    ((This)->lpVtbl->TryEnqueue(This, callback, result))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue_TryEnqueueWithPriority(This, priority, callback, result) \
    ((This)->lpVtbl->TryEnqueueWithPriority(This, priority, callback, result))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue_add_ShutdownStarting(This, handler, token) \
    ((This)->lpVtbl->add_ShutdownStarting(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue_remove_ShutdownStarting(This, token) \
    ((This)->lpVtbl->remove_ShutdownStarting(This, token))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue_add_ShutdownCompleted(This, handler, token) \
    ((This)->lpVtbl->add_ShutdownCompleted(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue_remove_ShutdownCompleted(This, token) \
    ((This)->lpVtbl->remove_ShutdownCompleted(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIDispatcherQueue;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IDispatcherQueue2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.System.DispatcherQueue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueue2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueue2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IDispatcherQueue2[] = L"Windows.System.IDispatcherQueue2";
typedef struct __x_ABI_CWindows_CSystem_CIDispatcherQueue2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIDispatcherQueue2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIDispatcherQueue2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIDispatcherQueue2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIDispatcherQueue2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIDispatcherQueue2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIDispatcherQueue2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_HasThreadAccess)(__x_ABI_CWindows_CSystem_CIDispatcherQueue2* This,
        boolean* value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIDispatcherQueue2Vtbl;

interface __x_ABI_CWindows_CSystem_CIDispatcherQueue2
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIDispatcherQueue2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueue2_get_HasThreadAccess(This, value) \
    ((This)->lpVtbl->get_HasThreadAccess(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIDispatcherQueue2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueue2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.System.IDispatcherQueueController
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.DispatcherQueueController
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueController_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueController_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IDispatcherQueueController[] = L"Windows.System.IDispatcherQueueController";
typedef struct __x_ABI_CWindows_CSystem_CIDispatcherQueueControllerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIDispatcherQueueController* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIDispatcherQueueController* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIDispatcherQueueController* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIDispatcherQueueController* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIDispatcherQueueController* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIDispatcherQueueController* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DispatcherQueue)(__x_ABI_CWindows_CSystem_CIDispatcherQueueController* This,
        __x_ABI_CWindows_CSystem_CIDispatcherQueue** value);
    HRESULT (STDMETHODCALLTYPE* ShutdownQueueAsync)(__x_ABI_CWindows_CSystem_CIDispatcherQueueController* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIDispatcherQueueControllerVtbl;

interface __x_ABI_CWindows_CSystem_CIDispatcherQueueController
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIDispatcherQueueControllerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueController_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueController_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueController_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueController_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueController_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueController_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueController_get_DispatcherQueue(This, value) \
    ((This)->lpVtbl->get_DispatcherQueue(This, value))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueController_ShutdownQueueAsync(This, operation) \
    ((This)->lpVtbl->ShutdownQueueAsync(This, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIDispatcherQueueController;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueController_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IDispatcherQueueControllerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.DispatcherQueueController
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IDispatcherQueueControllerStatics[] = L"Windows.System.IDispatcherQueueControllerStatics";
typedef struct __x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateOnDedicatedThread)(__x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics* This,
        __x_ABI_CWindows_CSystem_CIDispatcherQueueController** result);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStaticsVtbl;

interface __x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_CreateOnDedicatedThread(This, result) \
    ((This)->lpVtbl->CreateOnDedicatedThread(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueControllerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IDispatcherQueueShutdownStartingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.DispatcherQueueShutdownStartingEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IDispatcherQueueShutdownStartingEventArgs[] = L"Windows.System.IDispatcherQueueShutdownStartingEventArgs";
typedef struct __x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgsVtbl;

interface __x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_GetDeferral(This, result) \
    ((This)->lpVtbl->GetDeferral(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueShutdownStartingEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IDispatcherQueueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.DispatcherQueue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IDispatcherQueueStatics[] = L"Windows.System.IDispatcherQueueStatics";
typedef struct __x_ABI_CWindows_CSystem_CIDispatcherQueueStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIDispatcherQueueStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIDispatcherQueueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIDispatcherQueueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIDispatcherQueueStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIDispatcherQueueStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIDispatcherQueueStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetForCurrentThread)(__x_ABI_CWindows_CSystem_CIDispatcherQueueStatics* This,
        __x_ABI_CWindows_CSystem_CIDispatcherQueue** result);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIDispatcherQueueStaticsVtbl;

interface __x_ABI_CWindows_CSystem_CIDispatcherQueueStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIDispatcherQueueStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_GetForCurrentThread(This, result) \
    ((This)->lpVtbl->GetForCurrentThread(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIDispatcherQueueStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IDispatcherQueueTimer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.DispatcherQueueTimer
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IDispatcherQueueTimer[] = L"Windows.System.IDispatcherQueueTimer";
typedef struct __x_ABI_CWindows_CSystem_CIDispatcherQueueTimerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIDispatcherQueueTimer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIDispatcherQueueTimer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIDispatcherQueueTimer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIDispatcherQueueTimer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIDispatcherQueueTimer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIDispatcherQueueTimer* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Interval)(__x_ABI_CWindows_CSystem_CIDispatcherQueueTimer* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_Interval)(__x_ABI_CWindows_CSystem_CIDispatcherQueueTimer* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_IsRunning)(__x_ABI_CWindows_CSystem_CIDispatcherQueueTimer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsRepeating)(__x_ABI_CWindows_CSystem_CIDispatcherQueueTimer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsRepeating)(__x_ABI_CWindows_CSystem_CIDispatcherQueueTimer* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* Start)(__x_ABI_CWindows_CSystem_CIDispatcherQueueTimer* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CSystem_CIDispatcherQueueTimer* This);
    HRESULT (STDMETHODCALLTYPE* add_Tick)(__x_ABI_CWindows_CSystem_CIDispatcherQueueTimer* This,
        __FITypedEventHandler_2_Windows__CSystem__CDispatcherQueueTimer_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Tick)(__x_ABI_CWindows_CSystem_CIDispatcherQueueTimer* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIDispatcherQueueTimerVtbl;

interface __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIDispatcherQueueTimerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_get_Interval(This, value) \
    ((This)->lpVtbl->get_Interval(This, value))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_put_Interval(This, value) \
    ((This)->lpVtbl->put_Interval(This, value))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_get_IsRunning(This, value) \
    ((This)->lpVtbl->get_IsRunning(This, value))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_get_IsRepeating(This, value) \
    ((This)->lpVtbl->get_IsRepeating(This, value))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_put_IsRepeating(This, value) \
    ((This)->lpVtbl->put_IsRepeating(This, value))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_Start(This) \
    ((This)->lpVtbl->Start(This))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_Stop(This) \
    ((This)->lpVtbl->Stop(This))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_add_Tick(This, handler, token) \
    ((This)->lpVtbl->add_Tick(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_remove_Tick(This, token) \
    ((This)->lpVtbl->remove_Tick(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIDispatcherQueueTimer;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIDispatcherQueueTimer_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IFolderLauncherOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.FolderLauncherOptions
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIFolderLauncherOptions_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIFolderLauncherOptions_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IFolderLauncherOptions[] = L"Windows.System.IFolderLauncherOptions";
typedef struct __x_ABI_CWindows_CSystem_CIFolderLauncherOptionsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIFolderLauncherOptions* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIFolderLauncherOptions* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIFolderLauncherOptions* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIFolderLauncherOptions* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIFolderLauncherOptions* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIFolderLauncherOptions* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ItemsToSelect)(__x_ABI_CWindows_CSystem_CIFolderLauncherOptions* This,
        __FIVector_1_Windows__CStorage__CIStorageItem** value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIFolderLauncherOptionsVtbl;

interface __x_ABI_CWindows_CSystem_CIFolderLauncherOptions
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIFolderLauncherOptionsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIFolderLauncherOptions_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIFolderLauncherOptions_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIFolderLauncherOptions_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIFolderLauncherOptions_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIFolderLauncherOptions_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIFolderLauncherOptions_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIFolderLauncherOptions_get_ItemsToSelect(This, value) \
    ((This)->lpVtbl->get_ItemsToSelect(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIFolderLauncherOptions;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIFolderLauncherOptions_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IKnownUserPropertiesStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.KnownUserProperties
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IKnownUserPropertiesStatics[] = L"Windows.System.IKnownUserPropertiesStatics";
typedef struct __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_FirstName)(__x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LastName)(__x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ProviderName)(__x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AccountName)(__x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_GuestHost)(__x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PrincipalName)(__x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DomainName)(__x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SessionInitiationProtocolUri)(__x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics* This,
        HSTRING* value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStaticsVtbl;

interface __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_get_DisplayName(This, value) \
    ((This)->lpVtbl->get_DisplayName(This, value))

#define __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_get_FirstName(This, value) \
    ((This)->lpVtbl->get_FirstName(This, value))

#define __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_get_LastName(This, value) \
    ((This)->lpVtbl->get_LastName(This, value))

#define __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_get_ProviderName(This, value) \
    ((This)->lpVtbl->get_ProviderName(This, value))

#define __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_get_AccountName(This, value) \
    ((This)->lpVtbl->get_AccountName(This, value))

#define __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_get_GuestHost(This, value) \
    ((This)->lpVtbl->get_GuestHost(This, value))

#define __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_get_PrincipalName(This, value) \
    ((This)->lpVtbl->get_PrincipalName(This, value))

#define __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_get_DomainName(This, value) \
    ((This)->lpVtbl->get_DomainName(This, value))

#define __x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_get_SessionInitiationProtocolUri(This, value) \
    ((This)->lpVtbl->get_SessionInitiationProtocolUri(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIKnownUserPropertiesStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.ILaunchUriResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.LaunchUriResult
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CILaunchUriResult_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILaunchUriResult_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILaunchUriResult[] = L"Windows.System.ILaunchUriResult";
typedef struct __x_ABI_CWindows_CSystem_CILaunchUriResultVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CILaunchUriResult* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CILaunchUriResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CILaunchUriResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CILaunchUriResult* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CILaunchUriResult* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CILaunchUriResult* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CSystem_CILaunchUriResult* This,
        enum __x_ABI_CWindows_CSystem_CLaunchUriStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_Result)(__x_ABI_CWindows_CSystem_CILaunchUriResult* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CILaunchUriResultVtbl;

interface __x_ABI_CWindows_CSystem_CILaunchUriResult
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CILaunchUriResultVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CILaunchUriResult_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CILaunchUriResult_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CILaunchUriResult_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CILaunchUriResult_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CILaunchUriResult_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CILaunchUriResult_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CILaunchUriResult_get_Status(This, value) \
    ((This)->lpVtbl->get_Status(This, value))

#define __x_ABI_CWindows_CSystem_CILaunchUriResult_get_Result(This, value) \
    ((This)->lpVtbl->get_Result(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILaunchUriResult;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILaunchUriResult_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.ILauncherOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.LauncherOptions
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherOptions_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherOptions_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherOptions[] = L"Windows.System.ILauncherOptions";
typedef struct __x_ABI_CWindows_CSystem_CILauncherOptionsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CILauncherOptions* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CILauncherOptions* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CILauncherOptions* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CILauncherOptions* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CILauncherOptions* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CILauncherOptions* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TreatAsUntrusted)(__x_ABI_CWindows_CSystem_CILauncherOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_TreatAsUntrusted)(__x_ABI_CWindows_CSystem_CILauncherOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayApplicationPicker)(__x_ABI_CWindows_CSystem_CILauncherOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayApplicationPicker)(__x_ABI_CWindows_CSystem_CILauncherOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_UI)(__x_ABI_CWindows_CSystem_CILauncherOptions* This,
        __x_ABI_CWindows_CSystem_CILauncherUIOptions** value);
    HRESULT (STDMETHODCALLTYPE* get_PreferredApplicationPackageFamilyName)(__x_ABI_CWindows_CSystem_CILauncherOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PreferredApplicationPackageFamilyName)(__x_ABI_CWindows_CSystem_CILauncherOptions* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PreferredApplicationDisplayName)(__x_ABI_CWindows_CSystem_CILauncherOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PreferredApplicationDisplayName)(__x_ABI_CWindows_CSystem_CILauncherOptions* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FallbackUri)(__x_ABI_CWindows_CSystem_CILauncherOptions* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_FallbackUri)(__x_ABI_CWindows_CSystem_CILauncherOptions* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentType)(__x_ABI_CWindows_CSystem_CILauncherOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ContentType)(__x_ABI_CWindows_CSystem_CILauncherOptions* This,
        HSTRING value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CILauncherOptionsVtbl;

interface __x_ABI_CWindows_CSystem_CILauncherOptions
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CILauncherOptionsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CILauncherOptions_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CILauncherOptions_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CILauncherOptions_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CILauncherOptions_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CILauncherOptions_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CILauncherOptions_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CILauncherOptions_get_TreatAsUntrusted(This, value) \
    ((This)->lpVtbl->get_TreatAsUntrusted(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherOptions_put_TreatAsUntrusted(This, value) \
    ((This)->lpVtbl->put_TreatAsUntrusted(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherOptions_get_DisplayApplicationPicker(This, value) \
    ((This)->lpVtbl->get_DisplayApplicationPicker(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherOptions_put_DisplayApplicationPicker(This, value) \
    ((This)->lpVtbl->put_DisplayApplicationPicker(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherOptions_get_UI(This, value) \
    ((This)->lpVtbl->get_UI(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherOptions_get_PreferredApplicationPackageFamilyName(This, value) \
    ((This)->lpVtbl->get_PreferredApplicationPackageFamilyName(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherOptions_put_PreferredApplicationPackageFamilyName(This, value) \
    ((This)->lpVtbl->put_PreferredApplicationPackageFamilyName(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherOptions_get_PreferredApplicationDisplayName(This, value) \
    ((This)->lpVtbl->get_PreferredApplicationDisplayName(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherOptions_put_PreferredApplicationDisplayName(This, value) \
    ((This)->lpVtbl->put_PreferredApplicationDisplayName(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherOptions_get_FallbackUri(This, value) \
    ((This)->lpVtbl->get_FallbackUri(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherOptions_put_FallbackUri(This, value) \
    ((This)->lpVtbl->put_FallbackUri(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherOptions_get_ContentType(This, value) \
    ((This)->lpVtbl->get_ContentType(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherOptions_put_ContentType(This, value) \
    ((This)->lpVtbl->put_ContentType(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherOptions;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherOptions_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.ILauncherOptions2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.LauncherOptions
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherOptions2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherOptions2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherOptions2[] = L"Windows.System.ILauncherOptions2";
typedef struct __x_ABI_CWindows_CSystem_CILauncherOptions2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CILauncherOptions2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CILauncherOptions2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CILauncherOptions2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CILauncherOptions2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CILauncherOptions2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CILauncherOptions2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TargetApplicationPackageFamilyName)(__x_ABI_CWindows_CSystem_CILauncherOptions2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetApplicationPackageFamilyName)(__x_ABI_CWindows_CSystem_CILauncherOptions2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_NeighboringFilesQuery)(__x_ABI_CWindows_CSystem_CILauncherOptions2* This,
        __x_ABI_CWindows_CStorage_CSearch_CIStorageFileQueryResult** value);
    HRESULT (STDMETHODCALLTYPE* put_NeighboringFilesQuery)(__x_ABI_CWindows_CSystem_CILauncherOptions2* This,
        __x_ABI_CWindows_CStorage_CSearch_CIStorageFileQueryResult* value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CILauncherOptions2Vtbl;

interface __x_ABI_CWindows_CSystem_CILauncherOptions2
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CILauncherOptions2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CILauncherOptions2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CILauncherOptions2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CILauncherOptions2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CILauncherOptions2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CILauncherOptions2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CILauncherOptions2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CILauncherOptions2_get_TargetApplicationPackageFamilyName(This, value) \
    ((This)->lpVtbl->get_TargetApplicationPackageFamilyName(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherOptions2_put_TargetApplicationPackageFamilyName(This, value) \
    ((This)->lpVtbl->put_TargetApplicationPackageFamilyName(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherOptions2_get_NeighboringFilesQuery(This, value) \
    ((This)->lpVtbl->get_NeighboringFilesQuery(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherOptions2_put_NeighboringFilesQuery(This, value) \
    ((This)->lpVtbl->put_NeighboringFilesQuery(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherOptions2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherOptions2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.ILauncherOptions3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.System.LauncherOptions
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherOptions3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherOptions3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherOptions3[] = L"Windows.System.ILauncherOptions3";
typedef struct __x_ABI_CWindows_CSystem_CILauncherOptions3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CILauncherOptions3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CILauncherOptions3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CILauncherOptions3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CILauncherOptions3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CILauncherOptions3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CILauncherOptions3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IgnoreAppUriHandlers)(__x_ABI_CWindows_CSystem_CILauncherOptions3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IgnoreAppUriHandlers)(__x_ABI_CWindows_CSystem_CILauncherOptions3* This,
        boolean value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CILauncherOptions3Vtbl;

interface __x_ABI_CWindows_CSystem_CILauncherOptions3
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CILauncherOptions3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CILauncherOptions3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CILauncherOptions3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CILauncherOptions3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CILauncherOptions3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CILauncherOptions3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CILauncherOptions3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CILauncherOptions3_get_IgnoreAppUriHandlers(This, value) \
    ((This)->lpVtbl->get_IgnoreAppUriHandlers(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherOptions3_put_IgnoreAppUriHandlers(This, value) \
    ((This)->lpVtbl->put_IgnoreAppUriHandlers(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherOptions3;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherOptions3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.System.ILauncherOptions4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.System.LauncherOptions
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherOptions4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherOptions4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherOptions4[] = L"Windows.System.ILauncherOptions4";
typedef struct __x_ABI_CWindows_CSystem_CILauncherOptions4Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CILauncherOptions4* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CILauncherOptions4* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CILauncherOptions4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CILauncherOptions4* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CILauncherOptions4* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CILauncherOptions4* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LimitPickerToCurrentAppAndAppUriHandlers)(__x_ABI_CWindows_CSystem_CILauncherOptions4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_LimitPickerToCurrentAppAndAppUriHandlers)(__x_ABI_CWindows_CSystem_CILauncherOptions4* This,
        boolean value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CILauncherOptions4Vtbl;

interface __x_ABI_CWindows_CSystem_CILauncherOptions4
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CILauncherOptions4Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CILauncherOptions4_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CILauncherOptions4_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CILauncherOptions4_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CILauncherOptions4_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CILauncherOptions4_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CILauncherOptions4_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CILauncherOptions4_get_LimitPickerToCurrentAppAndAppUriHandlers(This, value) \
    ((This)->lpVtbl->get_LimitPickerToCurrentAppAndAppUriHandlers(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherOptions4_put_LimitPickerToCurrentAppAndAppUriHandlers(This, value) \
    ((This)->lpVtbl->put_LimitPickerToCurrentAppAndAppUriHandlers(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherOptions4;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherOptions4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.System.ILauncherStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.Launcher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherStatics[] = L"Windows.System.ILauncherStatics";
typedef struct __x_ABI_CWindows_CSystem_CILauncherStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CILauncherStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CILauncherStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CILauncherStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CILauncherStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CILauncherStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CILauncherStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* LaunchFileAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* LaunchFileWithOptionsAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_CWindows_CSystem_CILauncherOptions* options,
        __FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* LaunchUriAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* LaunchUriWithOptionsAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CSystem_CILauncherOptions* options,
        __FIAsyncOperation_1_boolean** operation);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CILauncherStaticsVtbl;

interface __x_ABI_CWindows_CSystem_CILauncherStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CILauncherStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CILauncherStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CILauncherStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CILauncherStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CILauncherStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CILauncherStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CILauncherStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CILauncherStatics_LaunchFileAsync(This, file, operation) \
    ((This)->lpVtbl->LaunchFileAsync(This, file, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics_LaunchFileWithOptionsAsync(This, file, options, operation) \
    ((This)->lpVtbl->LaunchFileWithOptionsAsync(This, file, options, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics_LaunchUriAsync(This, uri, operation) \
    ((This)->lpVtbl->LaunchUriAsync(This, uri, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics_LaunchUriWithOptionsAsync(This, uri, options, operation) \
    ((This)->lpVtbl->LaunchUriWithOptionsAsync(This, uri, options, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.ILauncherStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.Launcher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherStatics2[] = L"Windows.System.ILauncherStatics2";
typedef struct __x_ABI_CWindows_CSystem_CILauncherStatics2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CILauncherStatics2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CILauncherStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CILauncherStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CILauncherStatics2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CILauncherStatics2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CILauncherStatics2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* LaunchUriForResultsAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics2* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CSystem_CILauncherOptions* options,
        __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult** operation);
    HRESULT (STDMETHODCALLTYPE* LaunchUriForResultsWithDataAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics2* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CSystem_CILauncherOptions* options,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* inputData,
        __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult** operation);
    HRESULT (STDMETHODCALLTYPE* LaunchUriWithDataAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics2* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CSystem_CILauncherOptions* options,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* inputData,
        __FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* QueryUriSupportAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics2* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        enum __x_ABI_CWindows_CSystem_CLaunchQuerySupportType launchQuerySupportType,
        __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus** operation);
    HRESULT (STDMETHODCALLTYPE* QueryUriSupportWithPackageFamilyNameAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics2* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        enum __x_ABI_CWindows_CSystem_CLaunchQuerySupportType launchQuerySupportType,
        HSTRING packageFamilyName,
        __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus** operation);
    HRESULT (STDMETHODCALLTYPE* QueryFileSupportAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics2* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus** operation);
    HRESULT (STDMETHODCALLTYPE* QueryFileSupportWithPackageFamilyNameAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics2* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        HSTRING packageFamilyName,
        __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus** operation);
    HRESULT (STDMETHODCALLTYPE* FindUriSchemeHandlersAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics2* This,
        HSTRING scheme,
        __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo** operation);
    HRESULT (STDMETHODCALLTYPE* FindUriSchemeHandlersWithLaunchUriTypeAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics2* This,
        HSTRING scheme,
        enum __x_ABI_CWindows_CSystem_CLaunchQuerySupportType launchQuerySupportType,
        __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo** operation);
    HRESULT (STDMETHODCALLTYPE* FindFileHandlersAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics2* This,
        HSTRING extension,
        __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo** operation);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CILauncherStatics2Vtbl;

interface __x_ABI_CWindows_CSystem_CILauncherStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CILauncherStatics2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CILauncherStatics2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CILauncherStatics2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CILauncherStatics2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CILauncherStatics2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CILauncherStatics2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CILauncherStatics2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CILauncherStatics2_LaunchUriForResultsAsync(This, uri, options, operation) \
    ((This)->lpVtbl->LaunchUriForResultsAsync(This, uri, options, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics2_LaunchUriForResultsWithDataAsync(This, uri, options, inputData, operation) \
    ((This)->lpVtbl->LaunchUriForResultsWithDataAsync(This, uri, options, inputData, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics2_LaunchUriWithDataAsync(This, uri, options, inputData, operation) \
    ((This)->lpVtbl->LaunchUriWithDataAsync(This, uri, options, inputData, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics2_QueryUriSupportAsync(This, uri, launchQuerySupportType, operation) \
    ((This)->lpVtbl->QueryUriSupportAsync(This, uri, launchQuerySupportType, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics2_QueryUriSupportWithPackageFamilyNameAsync(This, uri, launchQuerySupportType, packageFamilyName, operation) \
    ((This)->lpVtbl->QueryUriSupportWithPackageFamilyNameAsync(This, uri, launchQuerySupportType, packageFamilyName, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics2_QueryFileSupportAsync(This, file, operation) \
    ((This)->lpVtbl->QueryFileSupportAsync(This, file, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics2_QueryFileSupportWithPackageFamilyNameAsync(This, file, packageFamilyName, operation) \
    ((This)->lpVtbl->QueryFileSupportWithPackageFamilyNameAsync(This, file, packageFamilyName, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics2_FindUriSchemeHandlersAsync(This, scheme, operation) \
    ((This)->lpVtbl->FindUriSchemeHandlersAsync(This, scheme, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics2_FindUriSchemeHandlersWithLaunchUriTypeAsync(This, scheme, launchQuerySupportType, operation) \
    ((This)->lpVtbl->FindUriSchemeHandlersWithLaunchUriTypeAsync(This, scheme, launchQuerySupportType, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics2_FindFileHandlersAsync(This, extension, operation) \
    ((This)->lpVtbl->FindFileHandlersAsync(This, extension, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherStatics2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.ILauncherStatics3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.Launcher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherStatics3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherStatics3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherStatics3[] = L"Windows.System.ILauncherStatics3";
typedef struct __x_ABI_CWindows_CSystem_CILauncherStatics3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CILauncherStatics3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CILauncherStatics3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CILauncherStatics3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CILauncherStatics3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CILauncherStatics3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CILauncherStatics3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* LaunchFolderAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics3* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* folder,
        __FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* LaunchFolderWithOptionsAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics3* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* folder,
        __x_ABI_CWindows_CSystem_CIFolderLauncherOptions* options,
        __FIAsyncOperation_1_boolean** operation);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CILauncherStatics3Vtbl;

interface __x_ABI_CWindows_CSystem_CILauncherStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CILauncherStatics3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CILauncherStatics3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CILauncherStatics3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CILauncherStatics3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CILauncherStatics3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CILauncherStatics3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CILauncherStatics3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CILauncherStatics3_LaunchFolderAsync(This, folder, operation) \
    ((This)->lpVtbl->LaunchFolderAsync(This, folder, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics3_LaunchFolderWithOptionsAsync(This, folder, options, operation) \
    ((This)->lpVtbl->LaunchFolderWithOptionsAsync(This, folder, options, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherStatics3;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherStatics3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.ILauncherStatics4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.System.Launcher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherStatics4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherStatics4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherStatics4[] = L"Windows.System.ILauncherStatics4";
typedef struct __x_ABI_CWindows_CSystem_CILauncherStatics4Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CILauncherStatics4* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CILauncherStatics4* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CILauncherStatics4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CILauncherStatics4* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CILauncherStatics4* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CILauncherStatics4* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* QueryAppUriSupportAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics4* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus** operation);
    HRESULT (STDMETHODCALLTYPE* QueryAppUriSupportWithPackageFamilyNameAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics4* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        HSTRING packageFamilyName,
        __FIAsyncOperation_1_Windows__CSystem__CLaunchQuerySupportStatus** operation);
    HRESULT (STDMETHODCALLTYPE* FindAppUriHandlersAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics4* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __FIAsyncOperation_1___FIVectorView_1_Windows__CApplicationModel__CAppInfo** operation);
    HRESULT (STDMETHODCALLTYPE* LaunchUriForUserAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics4* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus** operation);
    HRESULT (STDMETHODCALLTYPE* LaunchUriWithOptionsForUserAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics4* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CSystem_CILauncherOptions* options,
        __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus** operation);
    HRESULT (STDMETHODCALLTYPE* LaunchUriWithDataForUserAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics4* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CSystem_CILauncherOptions* options,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* inputData,
        __FIAsyncOperation_1_Windows__CSystem__CLaunchUriStatus** operation);
    HRESULT (STDMETHODCALLTYPE* LaunchUriForResultsForUserAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics4* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CSystem_CILauncherOptions* options,
        __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult** operation);
    HRESULT (STDMETHODCALLTYPE* LaunchUriForResultsWithDataForUserAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics4* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CSystem_CILauncherOptions* options,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* inputData,
        __FIAsyncOperation_1_Windows__CSystem__CLaunchUriResult** operation);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CILauncherStatics4Vtbl;

interface __x_ABI_CWindows_CSystem_CILauncherStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CILauncherStatics4Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CILauncherStatics4_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CILauncherStatics4_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CILauncherStatics4_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CILauncherStatics4_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CILauncherStatics4_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CILauncherStatics4_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CILauncherStatics4_QueryAppUriSupportAsync(This, uri, operation) \
    ((This)->lpVtbl->QueryAppUriSupportAsync(This, uri, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics4_QueryAppUriSupportWithPackageFamilyNameAsync(This, uri, packageFamilyName, operation) \
    ((This)->lpVtbl->QueryAppUriSupportWithPackageFamilyNameAsync(This, uri, packageFamilyName, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics4_FindAppUriHandlersAsync(This, uri, operation) \
    ((This)->lpVtbl->FindAppUriHandlersAsync(This, uri, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics4_LaunchUriForUserAsync(This, user, uri, operation) \
    ((This)->lpVtbl->LaunchUriForUserAsync(This, user, uri, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics4_LaunchUriWithOptionsForUserAsync(This, user, uri, options, operation) \
    ((This)->lpVtbl->LaunchUriWithOptionsForUserAsync(This, user, uri, options, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics4_LaunchUriWithDataForUserAsync(This, user, uri, options, inputData, operation) \
    ((This)->lpVtbl->LaunchUriWithDataForUserAsync(This, user, uri, options, inputData, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics4_LaunchUriForResultsForUserAsync(This, user, uri, options, operation) \
    ((This)->lpVtbl->LaunchUriForResultsForUserAsync(This, user, uri, options, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics4_LaunchUriForResultsWithDataForUserAsync(This, user, uri, options, inputData, operation) \
    ((This)->lpVtbl->LaunchUriForResultsWithDataForUserAsync(This, user, uri, options, inputData, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherStatics4;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherStatics4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.System.ILauncherStatics5
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.System.Launcher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherStatics5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherStatics5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherStatics5[] = L"Windows.System.ILauncherStatics5";
typedef struct __x_ABI_CWindows_CSystem_CILauncherStatics5Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CILauncherStatics5* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CILauncherStatics5* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CILauncherStatics5* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CILauncherStatics5* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CILauncherStatics5* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CILauncherStatics5* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* LaunchFolderPathAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics5* This,
        HSTRING path,
        __FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* LaunchFolderPathWithOptionsAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics5* This,
        HSTRING path,
        __x_ABI_CWindows_CSystem_CIFolderLauncherOptions* options,
        __FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* LaunchFolderPathForUserAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics5* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        HSTRING path,
        __FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* LaunchFolderPathWithOptionsForUserAsync)(__x_ABI_CWindows_CSystem_CILauncherStatics5* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        HSTRING path,
        __x_ABI_CWindows_CSystem_CIFolderLauncherOptions* options,
        __FIAsyncOperation_1_boolean** operation);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CILauncherStatics5Vtbl;

interface __x_ABI_CWindows_CSystem_CILauncherStatics5
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CILauncherStatics5Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CILauncherStatics5_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CILauncherStatics5_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CILauncherStatics5_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CILauncherStatics5_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CILauncherStatics5_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CILauncherStatics5_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CILauncherStatics5_LaunchFolderPathAsync(This, path, operation) \
    ((This)->lpVtbl->LaunchFolderPathAsync(This, path, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics5_LaunchFolderPathWithOptionsAsync(This, path, options, operation) \
    ((This)->lpVtbl->LaunchFolderPathWithOptionsAsync(This, path, options, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics5_LaunchFolderPathForUserAsync(This, user, path, operation) \
    ((This)->lpVtbl->LaunchFolderPathForUserAsync(This, user, path, operation))

#define __x_ABI_CWindows_CSystem_CILauncherStatics5_LaunchFolderPathWithOptionsForUserAsync(This, user, path, options, operation) \
    ((This)->lpVtbl->LaunchFolderPathWithOptionsForUserAsync(This, user, path, options, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherStatics5;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherStatics5_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.System.ILauncherUIOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.LauncherUIOptions
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherUIOptions_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherUIOptions_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherUIOptions[] = L"Windows.System.ILauncherUIOptions";
typedef struct __x_ABI_CWindows_CSystem_CILauncherUIOptionsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CILauncherUIOptions* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CILauncherUIOptions* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CILauncherUIOptions* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CILauncherUIOptions* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CILauncherUIOptions* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CILauncherUIOptions* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_InvocationPoint)(__x_ABI_CWindows_CSystem_CILauncherUIOptions* This,
        __FIReference_1_Windows__CFoundation__CPoint** value);
    HRESULT (STDMETHODCALLTYPE* put_InvocationPoint)(__x_ABI_CWindows_CSystem_CILauncherUIOptions* This,
        __FIReference_1_Windows__CFoundation__CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionRect)(__x_ABI_CWindows_CSystem_CILauncherUIOptions* This,
        __FIReference_1_Windows__CFoundation__CRect** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionRect)(__x_ABI_CWindows_CSystem_CILauncherUIOptions* This,
        __FIReference_1_Windows__CFoundation__CRect* value);
    HRESULT (STDMETHODCALLTYPE* get_PreferredPlacement)(__x_ABI_CWindows_CSystem_CILauncherUIOptions* This,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement* value);
    HRESULT (STDMETHODCALLTYPE* put_PreferredPlacement)(__x_ABI_CWindows_CSystem_CILauncherUIOptions* This,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CILauncherUIOptionsVtbl;

interface __x_ABI_CWindows_CSystem_CILauncherUIOptions
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CILauncherUIOptionsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CILauncherUIOptions_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CILauncherUIOptions_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CILauncherUIOptions_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CILauncherUIOptions_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CILauncherUIOptions_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CILauncherUIOptions_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CILauncherUIOptions_get_InvocationPoint(This, value) \
    ((This)->lpVtbl->get_InvocationPoint(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherUIOptions_put_InvocationPoint(This, value) \
    ((This)->lpVtbl->put_InvocationPoint(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherUIOptions_get_SelectionRect(This, value) \
    ((This)->lpVtbl->get_SelectionRect(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherUIOptions_put_SelectionRect(This, value) \
    ((This)->lpVtbl->put_SelectionRect(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherUIOptions_get_PreferredPlacement(This, value) \
    ((This)->lpVtbl->get_PreferredPlacement(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherUIOptions_put_PreferredPlacement(This, value) \
    ((This)->lpVtbl->put_PreferredPlacement(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherUIOptions;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherUIOptions_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.ILauncherViewOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CILauncherViewOptions_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CILauncherViewOptions_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ILauncherViewOptions[] = L"Windows.System.ILauncherViewOptions";
typedef struct __x_ABI_CWindows_CSystem_CILauncherViewOptionsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CILauncherViewOptions* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CILauncherViewOptions* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CILauncherViewOptions* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CILauncherViewOptions* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CILauncherViewOptions* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CILauncherViewOptions* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DesiredRemainingView)(__x_ABI_CWindows_CSystem_CILauncherViewOptions* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference* value);
    HRESULT (STDMETHODCALLTYPE* put_DesiredRemainingView)(__x_ABI_CWindows_CSystem_CILauncherViewOptions* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CILauncherViewOptionsVtbl;

interface __x_ABI_CWindows_CSystem_CILauncherViewOptions
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CILauncherViewOptionsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CILauncherViewOptions_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CILauncherViewOptions_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CILauncherViewOptions_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CILauncherViewOptions_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CILauncherViewOptions_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CILauncherViewOptions_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CILauncherViewOptions_get_DesiredRemainingView(This, value) \
    ((This)->lpVtbl->get_DesiredRemainingView(This, value))

#define __x_ABI_CWindows_CSystem_CILauncherViewOptions_put_DesiredRemainingView(This, value) \
    ((This)->lpVtbl->put_DesiredRemainingView(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CILauncherViewOptions;
#endif /* !defined(____x_ABI_CWindows_CSystem_CILauncherViewOptions_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IMemoryManagerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.MemoryManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIMemoryManagerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IMemoryManagerStatics[] = L"Windows.System.IMemoryManagerStatics";
typedef struct __x_ABI_CWindows_CSystem_CIMemoryManagerStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AppMemoryUsage)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_AppMemoryUsageLimit)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_AppMemoryUsageLevel)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics* This,
        enum __x_ABI_CWindows_CSystem_CAppMemoryUsageLevel* value);
    HRESULT (STDMETHODCALLTYPE* add_AppMemoryUsageIncreased)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics* This,
        __FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AppMemoryUsageIncreased)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_AppMemoryUsageDecreased)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics* This,
        __FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AppMemoryUsageDecreased)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_AppMemoryUsageLimitChanging)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics* This,
        __FIEventHandler_1_Windows__CSystem__CAppMemoryUsageLimitChangingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AppMemoryUsageLimitChanging)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIMemoryManagerStaticsVtbl;

interface __x_ABI_CWindows_CSystem_CIMemoryManagerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIMemoryManagerStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics_get_AppMemoryUsage(This, value) \
    ((This)->lpVtbl->get_AppMemoryUsage(This, value))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics_get_AppMemoryUsageLimit(This, value) \
    ((This)->lpVtbl->get_AppMemoryUsageLimit(This, value))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics_get_AppMemoryUsageLevel(This, value) \
    ((This)->lpVtbl->get_AppMemoryUsageLevel(This, value))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics_add_AppMemoryUsageIncreased(This, handler, token) \
    ((This)->lpVtbl->add_AppMemoryUsageIncreased(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics_remove_AppMemoryUsageIncreased(This, token) \
    ((This)->lpVtbl->remove_AppMemoryUsageIncreased(This, token))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics_add_AppMemoryUsageDecreased(This, handler, token) \
    ((This)->lpVtbl->add_AppMemoryUsageDecreased(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics_remove_AppMemoryUsageDecreased(This, token) \
    ((This)->lpVtbl->remove_AppMemoryUsageDecreased(This, token))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics_add_AppMemoryUsageLimitChanging(This, handler, token) \
    ((This)->lpVtbl->add_AppMemoryUsageLimitChanging(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics_remove_AppMemoryUsageLimitChanging(This, token) \
    ((This)->lpVtbl->remove_AppMemoryUsageLimitChanging(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIMemoryManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIMemoryManagerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IMemoryManagerStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.MemoryManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IMemoryManagerStatics2[] = L"Windows.System.IMemoryManagerStatics2";
typedef struct __x_ABI_CWindows_CSystem_CIMemoryManagerStatics2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAppMemoryReport)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics2* This,
        __x_ABI_CWindows_CSystem_CIAppMemoryReport** memoryReport);
    HRESULT (STDMETHODCALLTYPE* GetProcessMemoryReport)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics2* This,
        __x_ABI_CWindows_CSystem_CIProcessMemoryReport** memoryReport);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIMemoryManagerStatics2Vtbl;

interface __x_ABI_CWindows_CSystem_CIMemoryManagerStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIMemoryManagerStatics2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_GetAppMemoryReport(This, memoryReport) \
    ((This)->lpVtbl->GetAppMemoryReport(This, memoryReport))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_GetProcessMemoryReport(This, memoryReport) \
    ((This)->lpVtbl->GetProcessMemoryReport(This, memoryReport))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIMemoryManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIMemoryManagerStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IMemoryManagerStatics3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.System.MemoryManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IMemoryManagerStatics3[] = L"Windows.System.IMemoryManagerStatics3";
typedef struct __x_ABI_CWindows_CSystem_CIMemoryManagerStatics3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* TrySetAppMemoryUsageLimit)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics3* This,
        UINT64 value,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIMemoryManagerStatics3Vtbl;

interface __x_ABI_CWindows_CSystem_CIMemoryManagerStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIMemoryManagerStatics3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_TrySetAppMemoryUsageLimit(This, value, result) \
    ((This)->lpVtbl->TrySetAppMemoryUsageLimit(This, value, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIMemoryManagerStatics3;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIMemoryManagerStatics3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.System.IMemoryManagerStatics4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.MemoryManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IMemoryManagerStatics4[] = L"Windows.System.IMemoryManagerStatics4";
typedef struct __x_ABI_CWindows_CSystem_CIMemoryManagerStatics4Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics4* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics4* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics4* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics4* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics4* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ExpectedAppMemoryUsageLimit)(__x_ABI_CWindows_CSystem_CIMemoryManagerStatics4* This,
        UINT64* value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIMemoryManagerStatics4Vtbl;

interface __x_ABI_CWindows_CSystem_CIMemoryManagerStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIMemoryManagerStatics4Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_get_ExpectedAppMemoryUsageLimit(This, value) \
    ((This)->lpVtbl->get_ExpectedAppMemoryUsageLimit(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIMemoryManagerStatics4;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIMemoryManagerStatics4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IProcessLauncherOptions
 *
 * Introduced to Windows.System.SystemManagementContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.System.ProcessLauncherOptions
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CSystem_CIProcessLauncherOptions_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIProcessLauncherOptions_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IProcessLauncherOptions[] = L"Windows.System.IProcessLauncherOptions";
typedef struct __x_ABI_CWindows_CSystem_CIProcessLauncherOptionsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIProcessLauncherOptions* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIProcessLauncherOptions* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIProcessLauncherOptions* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIProcessLauncherOptions* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIProcessLauncherOptions* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIProcessLauncherOptions* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_StandardInput)(__x_ABI_CWindows_CSystem_CIProcessLauncherOptions* This,
        __x_ABI_CWindows_CStorage_CStreams_CIInputStream** value);
    HRESULT (STDMETHODCALLTYPE* put_StandardInput)(__x_ABI_CWindows_CSystem_CIProcessLauncherOptions* This,
        __x_ABI_CWindows_CStorage_CStreams_CIInputStream* value);
    HRESULT (STDMETHODCALLTYPE* get_StandardOutput)(__x_ABI_CWindows_CSystem_CIProcessLauncherOptions* This,
        __x_ABI_CWindows_CStorage_CStreams_CIOutputStream** value);
    HRESULT (STDMETHODCALLTYPE* put_StandardOutput)(__x_ABI_CWindows_CSystem_CIProcessLauncherOptions* This,
        __x_ABI_CWindows_CStorage_CStreams_CIOutputStream* value);
    HRESULT (STDMETHODCALLTYPE* get_StandardError)(__x_ABI_CWindows_CSystem_CIProcessLauncherOptions* This,
        __x_ABI_CWindows_CStorage_CStreams_CIOutputStream** value);
    HRESULT (STDMETHODCALLTYPE* put_StandardError)(__x_ABI_CWindows_CSystem_CIProcessLauncherOptions* This,
        __x_ABI_CWindows_CStorage_CStreams_CIOutputStream* value);
    HRESULT (STDMETHODCALLTYPE* get_WorkingDirectory)(__x_ABI_CWindows_CSystem_CIProcessLauncherOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_WorkingDirectory)(__x_ABI_CWindows_CSystem_CIProcessLauncherOptions* This,
        HSTRING value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIProcessLauncherOptionsVtbl;

interface __x_ABI_CWindows_CSystem_CIProcessLauncherOptions
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIProcessLauncherOptionsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIProcessLauncherOptions_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherOptions_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherOptions_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherOptions_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherOptions_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherOptions_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherOptions_get_StandardInput(This, value) \
    ((This)->lpVtbl->get_StandardInput(This, value))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherOptions_put_StandardInput(This, value) \
    ((This)->lpVtbl->put_StandardInput(This, value))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherOptions_get_StandardOutput(This, value) \
    ((This)->lpVtbl->get_StandardOutput(This, value))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherOptions_put_StandardOutput(This, value) \
    ((This)->lpVtbl->put_StandardOutput(This, value))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherOptions_get_StandardError(This, value) \
    ((This)->lpVtbl->get_StandardError(This, value))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherOptions_put_StandardError(This, value) \
    ((This)->lpVtbl->put_StandardError(This, value))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherOptions_get_WorkingDirectory(This, value) \
    ((This)->lpVtbl->get_WorkingDirectory(This, value))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherOptions_put_WorkingDirectory(This, value) \
    ((This)->lpVtbl->put_WorkingDirectory(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIProcessLauncherOptions;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIProcessLauncherOptions_INTERFACE_DEFINED__) */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.System.IProcessLauncherResult
 *
 * Introduced to Windows.System.SystemManagementContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.System.ProcessLauncherResult
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CSystem_CIProcessLauncherResult_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIProcessLauncherResult_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IProcessLauncherResult[] = L"Windows.System.IProcessLauncherResult";
typedef struct __x_ABI_CWindows_CSystem_CIProcessLauncherResultVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIProcessLauncherResult* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIProcessLauncherResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIProcessLauncherResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIProcessLauncherResult* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIProcessLauncherResult* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIProcessLauncherResult* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ExitCode)(__x_ABI_CWindows_CSystem_CIProcessLauncherResult* This,
        UINT32* value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIProcessLauncherResultVtbl;

interface __x_ABI_CWindows_CSystem_CIProcessLauncherResult
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIProcessLauncherResultVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIProcessLauncherResult_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherResult_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherResult_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherResult_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherResult_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherResult_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherResult_get_ExitCode(This, value) \
    ((This)->lpVtbl->get_ExitCode(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIProcessLauncherResult;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIProcessLauncherResult_INTERFACE_DEFINED__) */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.System.IProcessLauncherStatics
 *
 * Introduced to Windows.System.SystemManagementContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.System.ProcessLauncher
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CSystem_CIProcessLauncherStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIProcessLauncherStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IProcessLauncherStatics[] = L"Windows.System.IProcessLauncherStatics";
typedef struct __x_ABI_CWindows_CSystem_CIProcessLauncherStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIProcessLauncherStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIProcessLauncherStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIProcessLauncherStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIProcessLauncherStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIProcessLauncherStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIProcessLauncherStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* RunToCompletionAsync)(__x_ABI_CWindows_CSystem_CIProcessLauncherStatics* This,
        HSTRING fileName,
        HSTRING args,
        __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult** asyncOperationResult);
    HRESULT (STDMETHODCALLTYPE* RunToCompletionAsyncWithOptions)(__x_ABI_CWindows_CSystem_CIProcessLauncherStatics* This,
        HSTRING fileName,
        HSTRING args,
        __x_ABI_CWindows_CSystem_CIProcessLauncherOptions* options,
        __FIAsyncOperation_1_Windows__CSystem__CProcessLauncherResult** asyncOperationResult);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIProcessLauncherStaticsVtbl;

interface __x_ABI_CWindows_CSystem_CIProcessLauncherStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIProcessLauncherStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIProcessLauncherStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherStatics_RunToCompletionAsync(This, fileName, args, asyncOperationResult) \
    ((This)->lpVtbl->RunToCompletionAsync(This, fileName, args, asyncOperationResult))

#define __x_ABI_CWindows_CSystem_CIProcessLauncherStatics_RunToCompletionAsyncWithOptions(This, fileName, args, options, asyncOperationResult) \
    ((This)->lpVtbl->RunToCompletionAsyncWithOptions(This, fileName, args, options, asyncOperationResult))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIProcessLauncherStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIProcessLauncherStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.System.IProcessMemoryReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.ProcessMemoryReport
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIProcessMemoryReport_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIProcessMemoryReport_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IProcessMemoryReport[] = L"Windows.System.IProcessMemoryReport";
typedef struct __x_ABI_CWindows_CSystem_CIProcessMemoryReportVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIProcessMemoryReport* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIProcessMemoryReport* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIProcessMemoryReport* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIProcessMemoryReport* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIProcessMemoryReport* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIProcessMemoryReport* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PrivateWorkingSetUsage)(__x_ABI_CWindows_CSystem_CIProcessMemoryReport* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_TotalWorkingSetUsage)(__x_ABI_CWindows_CSystem_CIProcessMemoryReport* This,
        UINT64* value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIProcessMemoryReportVtbl;

interface __x_ABI_CWindows_CSystem_CIProcessMemoryReport
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIProcessMemoryReportVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIProcessMemoryReport_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIProcessMemoryReport_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIProcessMemoryReport_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIProcessMemoryReport_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIProcessMemoryReport_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIProcessMemoryReport_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIProcessMemoryReport_get_PrivateWorkingSetUsage(This, value) \
    ((This)->lpVtbl->get_PrivateWorkingSetUsage(This, value))

#define __x_ABI_CWindows_CSystem_CIProcessMemoryReport_get_TotalWorkingSetUsage(This, value) \
    ((This)->lpVtbl->get_TotalWorkingSetUsage(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIProcessMemoryReport;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIProcessMemoryReport_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IProtocolForResultsOperation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.ProtocolForResultsOperation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IProtocolForResultsOperation[] = L"Windows.System.IProtocolForResultsOperation";
typedef struct __x_ABI_CWindows_CSystem_CIProtocolForResultsOperationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIProtocolForResultsOperation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIProtocolForResultsOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIProtocolForResultsOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIProtocolForResultsOperation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIProtocolForResultsOperation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIProtocolForResultsOperation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ReportCompleted)(__x_ABI_CWindows_CSystem_CIProtocolForResultsOperation* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* data);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIProtocolForResultsOperationVtbl;

interface __x_ABI_CWindows_CSystem_CIProtocolForResultsOperation
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIProtocolForResultsOperationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_ReportCompleted(This, data) \
    ((This)->lpVtbl->ReportCompleted(This, data))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIProtocolForResultsOperation;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIProtocolForResultsOperation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IRemoteLauncherOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.System.RemoteLauncherOptions
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IRemoteLauncherOptions[] = L"Windows.System.IRemoteLauncherOptions";
typedef struct __x_ABI_CWindows_CSystem_CIRemoteLauncherOptionsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIRemoteLauncherOptions* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIRemoteLauncherOptions* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIRemoteLauncherOptions* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIRemoteLauncherOptions* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIRemoteLauncherOptions* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIRemoteLauncherOptions* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FallbackUri)(__x_ABI_CWindows_CSystem_CIRemoteLauncherOptions* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_FallbackUri)(__x_ABI_CWindows_CSystem_CIRemoteLauncherOptions* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_PreferredAppIds)(__x_ABI_CWindows_CSystem_CIRemoteLauncherOptions* This,
        __FIVector_1_HSTRING** value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIRemoteLauncherOptionsVtbl;

interface __x_ABI_CWindows_CSystem_CIRemoteLauncherOptions
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIRemoteLauncherOptionsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_get_FallbackUri(This, value) \
    ((This)->lpVtbl->get_FallbackUri(This, value))

#define __x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_put_FallbackUri(This, value) \
    ((This)->lpVtbl->put_FallbackUri(This, value))

#define __x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_get_PreferredAppIds(This, value) \
    ((This)->lpVtbl->get_PreferredAppIds(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIRemoteLauncherOptions;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIRemoteLauncherOptions_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.System.IRemoteLauncherStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.System.RemoteLauncher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IRemoteLauncherStatics[] = L"Windows.System.IRemoteLauncherStatics";
typedef struct __x_ABI_CWindows_CSystem_CIRemoteLauncherStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIRemoteLauncherStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIRemoteLauncherStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIRemoteLauncherStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIRemoteLauncherStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIRemoteLauncherStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIRemoteLauncherStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* LaunchUriAsync)(__x_ABI_CWindows_CSystem_CIRemoteLauncherStatics* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest* remoteSystemConnectionRequest,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus** operation);
    HRESULT (STDMETHODCALLTYPE* LaunchUriWithOptionsAsync)(__x_ABI_CWindows_CSystem_CIRemoteLauncherStatics* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest* remoteSystemConnectionRequest,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CSystem_CIRemoteLauncherOptions* options,
        __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus** operation);
    HRESULT (STDMETHODCALLTYPE* LaunchUriWithDataAsync)(__x_ABI_CWindows_CSystem_CIRemoteLauncherStatics* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest* remoteSystemConnectionRequest,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CSystem_CIRemoteLauncherOptions* options,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* inputData,
        __FIAsyncOperation_1_Windows__CSystem__CRemoteLaunchUriStatus** operation);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIRemoteLauncherStaticsVtbl;

interface __x_ABI_CWindows_CSystem_CIRemoteLauncherStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIRemoteLauncherStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_LaunchUriAsync(This, remoteSystemConnectionRequest, uri, operation) \
    ((This)->lpVtbl->LaunchUriAsync(This, remoteSystemConnectionRequest, uri, operation))

#define __x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_LaunchUriWithOptionsAsync(This, remoteSystemConnectionRequest, uri, options, operation) \
    ((This)->lpVtbl->LaunchUriWithOptionsAsync(This, remoteSystemConnectionRequest, uri, options, operation))

#define __x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_LaunchUriWithDataAsync(This, remoteSystemConnectionRequest, uri, options, inputData, operation) \
    ((This)->lpVtbl->LaunchUriWithDataAsync(This, remoteSystemConnectionRequest, uri, options, inputData, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIRemoteLauncherStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIRemoteLauncherStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.System.IShutdownManagerStatics
 *
 * Introduced to Windows.System.SystemManagementContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.ShutdownManager
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIShutdownManagerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIShutdownManagerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IShutdownManagerStatics[] = L"Windows.System.IShutdownManagerStatics";
typedef struct __x_ABI_CWindows_CSystem_CIShutdownManagerStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIShutdownManagerStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIShutdownManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIShutdownManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIShutdownManagerStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIShutdownManagerStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIShutdownManagerStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* BeginShutdown)(__x_ABI_CWindows_CSystem_CIShutdownManagerStatics* This,
        enum __x_ABI_CWindows_CSystem_CShutdownKind shutdownKind,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan timeout);
    HRESULT (STDMETHODCALLTYPE* CancelShutdown)(__x_ABI_CWindows_CSystem_CIShutdownManagerStatics* This);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIShutdownManagerStaticsVtbl;

interface __x_ABI_CWindows_CSystem_CIShutdownManagerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIShutdownManagerStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics_BeginShutdown(This, shutdownKind, timeout) \
    ((This)->lpVtbl->BeginShutdown(This, shutdownKind, timeout))

#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics_CancelShutdown(This) \
    ((This)->lpVtbl->CancelShutdown(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIShutdownManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIShutdownManagerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IShutdownManagerStatics2
 *
 * Introduced to Windows.System.SystemManagementContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.System.ShutdownManager
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Windows.System.IShutdownManagerStatics
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IShutdownManagerStatics2[] = L"Windows.System.IShutdownManagerStatics2";
typedef struct __x_ABI_CWindows_CSystem_CIShutdownManagerStatics2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIShutdownManagerStatics2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIShutdownManagerStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIShutdownManagerStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIShutdownManagerStatics2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIShutdownManagerStatics2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIShutdownManagerStatics2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* IsPowerStateSupported)(__x_ABI_CWindows_CSystem_CIShutdownManagerStatics2* This,
        enum __x_ABI_CWindows_CSystem_CPowerState powerState,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* EnterPowerState)(__x_ABI_CWindows_CSystem_CIShutdownManagerStatics2* This,
        enum __x_ABI_CWindows_CSystem_CPowerState powerState);
    HRESULT (STDMETHODCALLTYPE* EnterPowerStateWithTimeSpan)(__x_ABI_CWindows_CSystem_CIShutdownManagerStatics2* This,
        enum __x_ABI_CWindows_CSystem_CPowerState powerState,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan wakeUpAfter);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIShutdownManagerStatics2Vtbl;

interface __x_ABI_CWindows_CSystem_CIShutdownManagerStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIShutdownManagerStatics2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_IsPowerStateSupported(This, powerState, value) \
    ((This)->lpVtbl->IsPowerStateSupported(This, powerState, value))

#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_EnterPowerState(This, powerState) \
    ((This)->lpVtbl->EnterPowerState(This, powerState))

#define __x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_EnterPowerStateWithTimeSpan(This, powerState, wakeUpAfter) \
    ((This)->lpVtbl->EnterPowerStateWithTimeSpan(This, powerState, wakeUpAfter))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIShutdownManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIShutdownManagerStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.System.ITimeZoneSettingsStatics
 *
 * Introduced to Windows.System.SystemManagementContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.TimeZoneSettings
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ITimeZoneSettingsStatics[] = L"Windows.System.ITimeZoneSettingsStatics";
typedef struct __x_ABI_CWindows_CSystem_CITimeZoneSettingsStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CurrentTimeZoneDisplayName)(__x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedTimeZoneDisplayNames)(__x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics* This,
        __FIVectorView_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_CanChangeTimeZone)(__x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* ChangeTimeZoneByDisplayName)(__x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics* This,
        HSTRING timeZoneDisplayName);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CITimeZoneSettingsStaticsVtbl;

interface __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CITimeZoneSettingsStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_get_CurrentTimeZoneDisplayName(This, value) \
    ((This)->lpVtbl->get_CurrentTimeZoneDisplayName(This, value))

#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_get_SupportedTimeZoneDisplayNames(This, value) \
    ((This)->lpVtbl->get_SupportedTimeZoneDisplayNames(This, value))

#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_get_CanChangeTimeZone(This, value) \
    ((This)->lpVtbl->get_CanChangeTimeZone(This, value))

#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_ChangeTimeZoneByDisplayName(This, timeZoneDisplayName) \
    ((This)->lpVtbl->ChangeTimeZoneByDisplayName(This, timeZoneDisplayName))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.ITimeZoneSettingsStatics2
 *
 * Introduced to Windows.System.SystemManagementContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.System.TimeZoneSettings
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_ITimeZoneSettingsStatics2[] = L"Windows.System.ITimeZoneSettingsStatics2";
typedef struct __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* AutoUpdateTimeZoneAsync)(__x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan timeout,
        __FIAsyncOperation_1_Windows__CSystem__CAutoUpdateTimeZoneStatus** operation);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2Vtbl;

interface __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_AutoUpdateTimeZoneAsync(This, timeout, operation) \
    ((This)->lpVtbl->AutoUpdateTimeZoneAsync(This, timeout, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CITimeZoneSettingsStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.System.IUser
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.User
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIUser_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUser_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUser[] = L"Windows.System.IUser";
typedef struct __x_ABI_CWindows_CSystem_CIUserVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIUser* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIUser* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIUser* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIUser* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIUser* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIUser* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NonRoamableId)(__x_ABI_CWindows_CSystem_CIUser* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AuthenticationStatus)(__x_ABI_CWindows_CSystem_CIUser* This,
        enum __x_ABI_CWindows_CSystem_CUserAuthenticationStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_Type)(__x_ABI_CWindows_CSystem_CIUser* This,
        enum __x_ABI_CWindows_CSystem_CUserType* value);
    HRESULT (STDMETHODCALLTYPE* GetPropertyAsync)(__x_ABI_CWindows_CSystem_CIUser* This,
        HSTRING value,
        __FIAsyncOperation_1_IInspectable** operation);
    HRESULT (STDMETHODCALLTYPE* GetPropertiesAsync)(__x_ABI_CWindows_CSystem_CIUser* This,
        __FIVectorView_1_HSTRING* values,
        __FIAsyncOperation_1___F__CIPropertySet** operation);
    HRESULT (STDMETHODCALLTYPE* GetPictureAsync)(__x_ABI_CWindows_CSystem_CIUser* This,
        enum __x_ABI_CWindows_CSystem_CUserPictureSize desiredSize,
        __FIAsyncOperation_1_Windows__CStorage__CStreams__CIRandomAccessStreamReference** operation);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIUserVtbl;

interface __x_ABI_CWindows_CSystem_CIUser
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIUserVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIUser_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIUser_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIUser_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIUser_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIUser_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIUser_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIUser_get_NonRoamableId(This, value) \
    ((This)->lpVtbl->get_NonRoamableId(This, value))

#define __x_ABI_CWindows_CSystem_CIUser_get_AuthenticationStatus(This, value) \
    ((This)->lpVtbl->get_AuthenticationStatus(This, value))

#define __x_ABI_CWindows_CSystem_CIUser_get_Type(This, value) \
    ((This)->lpVtbl->get_Type(This, value))

#define __x_ABI_CWindows_CSystem_CIUser_GetPropertyAsync(This, value, operation) \
    ((This)->lpVtbl->GetPropertyAsync(This, value, operation))

#define __x_ABI_CWindows_CSystem_CIUser_GetPropertiesAsync(This, values, operation) \
    ((This)->lpVtbl->GetPropertiesAsync(This, values, operation))

#define __x_ABI_CWindows_CSystem_CIUser_GetPictureAsync(This, desiredSize, operation) \
    ((This)->lpVtbl->GetPictureAsync(This, desiredSize, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUser;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUser_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IUserAuthenticationStatusChangeDeferral
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.UserAuthenticationStatusChangeDeferral
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserAuthenticationStatusChangeDeferral[] = L"Windows.System.IUserAuthenticationStatusChangeDeferral";
typedef struct __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferralVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral* This);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferralVtbl;

interface __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferralVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_Complete(This) \
    ((This)->lpVtbl->Complete(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IUserAuthenticationStatusChangingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.UserAuthenticationStatusChangingEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserAuthenticationStatusChangingEventArgs[] = L"Windows.System.IUserAuthenticationStatusChangingEventArgs";
typedef struct __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs* This,
        __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangeDeferral** result);
    HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs* This,
        __x_ABI_CWindows_CSystem_CIUser** value);
    HRESULT (STDMETHODCALLTYPE* get_NewStatus)(__x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs* This,
        enum __x_ABI_CWindows_CSystem_CUserAuthenticationStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_CurrentStatus)(__x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs* This,
        enum __x_ABI_CWindows_CSystem_CUserAuthenticationStatus* value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgsVtbl;

interface __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_GetDeferral(This, result) \
    ((This)->lpVtbl->GetDeferral(This, result))

#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_get_User(This, value) \
    ((This)->lpVtbl->get_User(This, value))

#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_get_NewStatus(This, value) \
    ((This)->lpVtbl->get_NewStatus(This, value))

#define __x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_get_CurrentStatus(This, value) \
    ((This)->lpVtbl->get_CurrentStatus(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserAuthenticationStatusChangingEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IUserChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.UserChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIUserChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserChangedEventArgs[] = L"Windows.System.IUserChangedEventArgs";
typedef struct __x_ABI_CWindows_CSystem_CIUserChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIUserChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIUserChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIUserChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIUserChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIUserChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIUserChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CSystem_CIUserChangedEventArgs* This,
        __x_ABI_CWindows_CSystem_CIUser** value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIUserChangedEventArgsVtbl;

interface __x_ABI_CWindows_CSystem_CIUserChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIUserChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIUserChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIUserChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIUserChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIUserChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIUserChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIUserChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIUserChangedEventArgs_get_User(This, value) \
    ((This)->lpVtbl->get_User(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IUserChangedEventArgs2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 10.0
 *
 * Interface is a part of the implementation of type Windows.System.UserChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000
#if !defined(____x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserChangedEventArgs2[] = L"Windows.System.IUserChangedEventArgs2";
typedef struct __x_ABI_CWindows_CSystem_CIUserChangedEventArgs2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIUserChangedEventArgs2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIUserChangedEventArgs2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIUserChangedEventArgs2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIUserChangedEventArgs2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIUserChangedEventArgs2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIUserChangedEventArgs2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ChangedPropertyKinds)(__x_ABI_CWindows_CSystem_CIUserChangedEventArgs2* This,
        __FIVectorView_1_Windows__CSystem__CUserWatcherUpdateKind** value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIUserChangedEventArgs2Vtbl;

interface __x_ABI_CWindows_CSystem_CIUserChangedEventArgs2
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIUserChangedEventArgs2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_get_ChangedPropertyKinds(This, value) \
    ((This)->lpVtbl->get_ChangedPropertyKinds(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserChangedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserChangedEventArgs2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

/*
 *
 * Interface Windows.System.IUserDeviceAssociationChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.System.UserDeviceAssociationChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserDeviceAssociationChangedEventArgs[] = L"Windows.System.IUserDeviceAssociationChangedEventArgs";
typedef struct __x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_NewUser)(__x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs* This,
        __x_ABI_CWindows_CSystem_CIUser** value);
    HRESULT (STDMETHODCALLTYPE* get_OldUser)(__x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs* This,
        __x_ABI_CWindows_CSystem_CIUser** value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgsVtbl;

interface __x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_get_DeviceId(This, value) \
    ((This)->lpVtbl->get_DeviceId(This, value))

#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_get_NewUser(This, value) \
    ((This)->lpVtbl->get_NewUser(This, value))

#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_get_OldUser(This, value) \
    ((This)->lpVtbl->get_OldUser(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserDeviceAssociationChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.System.IUserDeviceAssociationStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.System.UserDeviceAssociation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserDeviceAssociationStatics[] = L"Windows.System.IUserDeviceAssociationStatics";
typedef struct __x_ABI_CWindows_CSystem_CIUserDeviceAssociationStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* FindUserFromDeviceId)(__x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics* This,
        HSTRING deviceId,
        __x_ABI_CWindows_CSystem_CIUser** user);
    HRESULT (STDMETHODCALLTYPE* add_UserDeviceAssociationChanged)(__x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics* This,
        __FIEventHandler_1_Windows__CSystem__CUserDeviceAssociationChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_UserDeviceAssociationChanged)(__x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIUserDeviceAssociationStaticsVtbl;

interface __x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIUserDeviceAssociationStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_FindUserFromDeviceId(This, deviceId, user) \
    ((This)->lpVtbl->FindUserFromDeviceId(This, deviceId, user))

#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_add_UserDeviceAssociationChanged(This, handler, token) \
    ((This)->lpVtbl->add_UserDeviceAssociationChanged(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_remove_UserDeviceAssociationChanged(This, token) \
    ((This)->lpVtbl->remove_UserDeviceAssociationChanged(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserDeviceAssociationStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.System.IUserPicker
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.System.UserPicker
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CSystem_CIUserPicker_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserPicker_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserPicker[] = L"Windows.System.IUserPicker";
typedef struct __x_ABI_CWindows_CSystem_CIUserPickerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIUserPicker* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIUserPicker* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIUserPicker* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIUserPicker* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIUserPicker* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIUserPicker* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AllowGuestAccounts)(__x_ABI_CWindows_CSystem_CIUserPicker* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowGuestAccounts)(__x_ABI_CWindows_CSystem_CIUserPicker* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SuggestedSelectedUser)(__x_ABI_CWindows_CSystem_CIUserPicker* This,
        __x_ABI_CWindows_CSystem_CIUser** value);
    HRESULT (STDMETHODCALLTYPE* put_SuggestedSelectedUser)(__x_ABI_CWindows_CSystem_CIUserPicker* This,
        __x_ABI_CWindows_CSystem_CIUser* value);
    HRESULT (STDMETHODCALLTYPE* PickSingleUserAsync)(__x_ABI_CWindows_CSystem_CIUserPicker* This,
        __FIAsyncOperation_1_Windows__CSystem__CUser** operation);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIUserPickerVtbl;

interface __x_ABI_CWindows_CSystem_CIUserPicker
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIUserPickerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIUserPicker_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIUserPicker_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIUserPicker_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIUserPicker_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIUserPicker_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIUserPicker_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIUserPicker_get_AllowGuestAccounts(This, value) \
    ((This)->lpVtbl->get_AllowGuestAccounts(This, value))

#define __x_ABI_CWindows_CSystem_CIUserPicker_put_AllowGuestAccounts(This, value) \
    ((This)->lpVtbl->put_AllowGuestAccounts(This, value))

#define __x_ABI_CWindows_CSystem_CIUserPicker_get_SuggestedSelectedUser(This, value) \
    ((This)->lpVtbl->get_SuggestedSelectedUser(This, value))

#define __x_ABI_CWindows_CSystem_CIUserPicker_put_SuggestedSelectedUser(This, value) \
    ((This)->lpVtbl->put_SuggestedSelectedUser(This, value))

#define __x_ABI_CWindows_CSystem_CIUserPicker_PickSingleUserAsync(This, operation) \
    ((This)->lpVtbl->PickSingleUserAsync(This, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserPicker;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserPicker_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.System.IUserPickerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.System.UserPicker
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CSystem_CIUserPickerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserPickerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserPickerStatics[] = L"Windows.System.IUserPickerStatics";
typedef struct __x_ABI_CWindows_CSystem_CIUserPickerStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIUserPickerStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIUserPickerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIUserPickerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIUserPickerStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIUserPickerStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIUserPickerStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* IsSupported)(__x_ABI_CWindows_CSystem_CIUserPickerStatics* This,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIUserPickerStaticsVtbl;

interface __x_ABI_CWindows_CSystem_CIUserPickerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIUserPickerStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIUserPickerStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIUserPickerStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIUserPickerStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIUserPickerStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIUserPickerStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIUserPickerStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIUserPickerStatics_IsSupported(This, result) \
    ((This)->lpVtbl->IsSupported(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserPickerStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserPickerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.System.IUserStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.User
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIUserStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserStatics[] = L"Windows.System.IUserStatics";
typedef struct __x_ABI_CWindows_CSystem_CIUserStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIUserStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIUserStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIUserStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIUserStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIUserStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIUserStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateWatcher)(__x_ABI_CWindows_CSystem_CIUserStatics* This,
        __x_ABI_CWindows_CSystem_CIUserWatcher** result);
    HRESULT (STDMETHODCALLTYPE* FindAllAsync)(__x_ABI_CWindows_CSystem_CIUserStatics* This,
        __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser** operation);
    HRESULT (STDMETHODCALLTYPE* FindAllAsyncByType)(__x_ABI_CWindows_CSystem_CIUserStatics* This,
        enum __x_ABI_CWindows_CSystem_CUserType type,
        __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser** operation);
    HRESULT (STDMETHODCALLTYPE* FindAllAsyncByTypeAndStatus)(__x_ABI_CWindows_CSystem_CIUserStatics* This,
        enum __x_ABI_CWindows_CSystem_CUserType type,
        enum __x_ABI_CWindows_CSystem_CUserAuthenticationStatus status,
        __FIAsyncOperation_1___FIVectorView_1_Windows__CSystem__CUser** operation);
    HRESULT (STDMETHODCALLTYPE* GetFromId)(__x_ABI_CWindows_CSystem_CIUserStatics* This,
        HSTRING nonRoamableId,
        __x_ABI_CWindows_CSystem_CIUser** result);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIUserStaticsVtbl;

interface __x_ABI_CWindows_CSystem_CIUserStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIUserStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIUserStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIUserStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIUserStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIUserStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIUserStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIUserStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIUserStatics_CreateWatcher(This, result) \
    ((This)->lpVtbl->CreateWatcher(This, result))

#define __x_ABI_CWindows_CSystem_CIUserStatics_FindAllAsync(This, operation) \
    ((This)->lpVtbl->FindAllAsync(This, operation))

#define __x_ABI_CWindows_CSystem_CIUserStatics_FindAllAsyncByType(This, type, operation) \
    ((This)->lpVtbl->FindAllAsyncByType(This, type, operation))

#define __x_ABI_CWindows_CSystem_CIUserStatics_FindAllAsyncByTypeAndStatus(This, type, status, operation) \
    ((This)->lpVtbl->FindAllAsyncByTypeAndStatus(This, type, status, operation))

#define __x_ABI_CWindows_CSystem_CIUserStatics_GetFromId(This, nonRoamableId, result) \
    ((This)->lpVtbl->GetFromId(This, nonRoamableId, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.IUserWatcher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.UserWatcher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CIUserWatcher_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CIUserWatcher_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_IUserWatcher[] = L"Windows.System.IUserWatcher";
typedef struct __x_ABI_CWindows_CSystem_CIUserWatcherVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CIUserWatcher* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CIUserWatcher* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        enum __x_ABI_CWindows_CSystem_CUserWatcherStatus* value);
    HRESULT (STDMETHODCALLTYPE* Start)(__x_ABI_CWindows_CSystem_CIUserWatcher* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CSystem_CIUserWatcher* This);
    HRESULT (STDMETHODCALLTYPE* add_Added)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Added)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Removed)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Removed)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Updated)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Updated)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_AuthenticationStatusChanged)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AuthenticationStatusChanged)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_AuthenticationStatusChanging)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_Windows__CSystem__CUserAuthenticationStatusChangingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AuthenticationStatusChanging)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_EnumerationCompleted)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_EnumerationCompleted)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Stopped)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        __FITypedEventHandler_2_Windows__CSystem__CUserWatcher_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Stopped)(__x_ABI_CWindows_CSystem_CIUserWatcher* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CIUserWatcherVtbl;

interface __x_ABI_CWindows_CSystem_CIUserWatcher
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CIUserWatcherVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CIUserWatcher_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_get_Status(This, value) \
    ((This)->lpVtbl->get_Status(This, value))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_Start(This) \
    ((This)->lpVtbl->Start(This))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_Stop(This) \
    ((This)->lpVtbl->Stop(This))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_add_Added(This, handler, token) \
    ((This)->lpVtbl->add_Added(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_remove_Added(This, token) \
    ((This)->lpVtbl->remove_Added(This, token))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_add_Removed(This, handler, token) \
    ((This)->lpVtbl->add_Removed(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_remove_Removed(This, token) \
    ((This)->lpVtbl->remove_Removed(This, token))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_add_Updated(This, handler, token) \
    ((This)->lpVtbl->add_Updated(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_remove_Updated(This, token) \
    ((This)->lpVtbl->remove_Updated(This, token))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_add_AuthenticationStatusChanged(This, handler, token) \
    ((This)->lpVtbl->add_AuthenticationStatusChanged(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_remove_AuthenticationStatusChanged(This, token) \
    ((This)->lpVtbl->remove_AuthenticationStatusChanged(This, token))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_add_AuthenticationStatusChanging(This, handler, token) \
    ((This)->lpVtbl->add_AuthenticationStatusChanging(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_remove_AuthenticationStatusChanging(This, token) \
    ((This)->lpVtbl->remove_AuthenticationStatusChanging(This, token))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_add_EnumerationCompleted(This, handler, token) \
    ((This)->lpVtbl->add_EnumerationCompleted(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_remove_EnumerationCompleted(This, token) \
    ((This)->lpVtbl->remove_EnumerationCompleted(This, token))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_add_Stopped(This, handler, token) \
    ((This)->lpVtbl->add_Stopped(This, handler, token))

#define __x_ABI_CWindows_CSystem_CIUserWatcher_remove_Stopped(This, token) \
    ((This)->lpVtbl->remove_Stopped(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CIUserWatcher;
#endif /* !defined(____x_ABI_CWindows_CSystem_CIUserWatcher_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.AppActivationResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppActivationResult ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_System_AppActivationResult_DEFINED
#define RUNTIMECLASS_Windows_System_AppActivationResult_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppActivationResult[] = L"Windows.System.AppActivationResult";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.System.AppDiagnosticInfo
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IAppDiagnosticInfoStatics interface starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.System.IAppDiagnosticInfoStatics2 interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppDiagnosticInfo ** Default Interface **
 *    Windows.System.IAppDiagnosticInfo2
 *    Windows.System.IAppDiagnosticInfo3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_System_AppDiagnosticInfo_DEFINED
#define RUNTIMECLASS_Windows_System_AppDiagnosticInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppDiagnosticInfo[] = L"Windows.System.AppDiagnosticInfo";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.System.AppDiagnosticInfoWatcher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppDiagnosticInfoWatcher ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_AppDiagnosticInfoWatcher_DEFINED
#define RUNTIMECLASS_Windows_System_AppDiagnosticInfoWatcher_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppDiagnosticInfoWatcher[] = L"Windows.System.AppDiagnosticInfoWatcher";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.AppDiagnosticInfoWatcherEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppDiagnosticInfoWatcherEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_AppDiagnosticInfoWatcherEventArgs_DEFINED
#define RUNTIMECLASS_Windows_System_AppDiagnosticInfoWatcherEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppDiagnosticInfoWatcherEventArgs[] = L"Windows.System.AppDiagnosticInfoWatcherEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.AppExecutionStateChangeResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppExecutionStateChangeResult ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_System_AppExecutionStateChangeResult_DEFINED
#define RUNTIMECLASS_Windows_System_AppExecutionStateChangeResult_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppExecutionStateChangeResult[] = L"Windows.System.AppExecutionStateChangeResult";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.System.AppMemoryReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppMemoryReport ** Default Interface **
 *    Windows.System.IAppMemoryReport2
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_AppMemoryReport_DEFINED
#define RUNTIMECLASS_Windows_System_AppMemoryReport_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppMemoryReport[] = L"Windows.System.AppMemoryReport";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.AppMemoryUsageLimitChangingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppMemoryUsageLimitChangingEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_AppMemoryUsageLimitChangingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_System_AppMemoryUsageLimitChangingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppMemoryUsageLimitChangingEventArgs[] = L"Windows.System.AppMemoryUsageLimitChangingEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.AppResourceGroupBackgroundTaskReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppResourceGroupBackgroundTaskReport ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_AppResourceGroupBackgroundTaskReport_DEFINED
#define RUNTIMECLASS_Windows_System_AppResourceGroupBackgroundTaskReport_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppResourceGroupBackgroundTaskReport[] = L"Windows.System.AppResourceGroupBackgroundTaskReport";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.AppResourceGroupInfo
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppResourceGroupInfo ** Default Interface **
 *    Windows.System.IAppResourceGroupInfo2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_AppResourceGroupInfo_DEFINED
#define RUNTIMECLASS_Windows_System_AppResourceGroupInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppResourceGroupInfo[] = L"Windows.System.AppResourceGroupInfo";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.AppResourceGroupInfoWatcher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppResourceGroupInfoWatcher ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_AppResourceGroupInfoWatcher_DEFINED
#define RUNTIMECLASS_Windows_System_AppResourceGroupInfoWatcher_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppResourceGroupInfoWatcher[] = L"Windows.System.AppResourceGroupInfoWatcher";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.AppResourceGroupInfoWatcherEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppResourceGroupInfoWatcherEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_AppResourceGroupInfoWatcherEventArgs_DEFINED
#define RUNTIMECLASS_Windows_System_AppResourceGroupInfoWatcherEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppResourceGroupInfoWatcherEventArgs[] = L"Windows.System.AppResourceGroupInfoWatcherEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.AppResourceGroupInfoWatcherExecutionStateChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppResourceGroupInfoWatcherExecutionStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_AppResourceGroupInfoWatcherExecutionStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_System_AppResourceGroupInfoWatcherExecutionStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppResourceGroupInfoWatcherExecutionStateChangedEventArgs[] = L"Windows.System.AppResourceGroupInfoWatcherExecutionStateChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.AppResourceGroupMemoryReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppResourceGroupMemoryReport ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_AppResourceGroupMemoryReport_DEFINED
#define RUNTIMECLASS_Windows_System_AppResourceGroupMemoryReport_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppResourceGroupMemoryReport[] = L"Windows.System.AppResourceGroupMemoryReport";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.AppResourceGroupStateReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppResourceGroupStateReport ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_AppResourceGroupStateReport_DEFINED
#define RUNTIMECLASS_Windows_System_AppResourceGroupStateReport_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppResourceGroupStateReport[] = L"Windows.System.AppResourceGroupStateReport";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.AppUriHandlerHost
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 7.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Type can be activated via the Windows.System.IAppUriHandlerHostFactory interface starting with version 7.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppUriHandlerHost ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_System_AppUriHandlerHost_DEFINED
#define RUNTIMECLASS_Windows_System_AppUriHandlerHost_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppUriHandlerHost[] = L"Windows.System.AppUriHandlerHost";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.System.AppUriHandlerRegistration
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppUriHandlerRegistration ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_System_AppUriHandlerRegistration_DEFINED
#define RUNTIMECLASS_Windows_System_AppUriHandlerRegistration_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppUriHandlerRegistration[] = L"Windows.System.AppUriHandlerRegistration";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.System.AppUriHandlerRegistrationManager
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IAppUriHandlerRegistrationManagerStatics interface starting with version 7.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IAppUriHandlerRegistrationManager ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_System_AppUriHandlerRegistrationManager_DEFINED
#define RUNTIMECLASS_Windows_System_AppUriHandlerRegistrationManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_AppUriHandlerRegistrationManager[] = L"Windows.System.AppUriHandlerRegistrationManager";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.System.DateTimeSettings
 *
 * Introduced to Windows.System.SystemManagementContract in version 4.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IDateTimeSettingsStatics interface starting with version 4.0 of the Windows.System.SystemManagementContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_System_DateTimeSettings_DEFINED
#define RUNTIMECLASS_Windows_System_DateTimeSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_DateTimeSettings[] = L"Windows.System.DateTimeSettings";
#endif
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.System.DispatcherQueue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IDispatcherQueueStatics interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IDispatcherQueue ** Default Interface **
 *    Windows.System.IDispatcherQueue2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_DispatcherQueue_DEFINED
#define RUNTIMECLASS_Windows_System_DispatcherQueue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_DispatcherQueue[] = L"Windows.System.DispatcherQueue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.DispatcherQueueController
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IDispatcherQueueControllerStatics interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IDispatcherQueueController ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_DispatcherQueueController_DEFINED
#define RUNTIMECLASS_Windows_System_DispatcherQueueController_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_DispatcherQueueController[] = L"Windows.System.DispatcherQueueController";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.DispatcherQueueShutdownStartingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IDispatcherQueueShutdownStartingEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_DispatcherQueueShutdownStartingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_System_DispatcherQueueShutdownStartingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_DispatcherQueueShutdownStartingEventArgs[] = L"Windows.System.DispatcherQueueShutdownStartingEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.DispatcherQueueTimer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IDispatcherQueueTimer ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_System_DispatcherQueueTimer_DEFINED
#define RUNTIMECLASS_Windows_System_DispatcherQueueTimer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_DispatcherQueueTimer[] = L"Windows.System.DispatcherQueueTimer";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.System.FolderLauncherOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IFolderLauncherOptions ** Default Interface **
 *    Windows.System.ILauncherViewOptions
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_FolderLauncherOptions_DEFINED
#define RUNTIMECLASS_Windows_System_FolderLauncherOptions_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_FolderLauncherOptions[] = L"Windows.System.FolderLauncherOptions";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.KnownUserProperties
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IKnownUserPropertiesStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_KnownUserProperties_DEFINED
#define RUNTIMECLASS_Windows_System_KnownUserProperties_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_KnownUserProperties[] = L"Windows.System.KnownUserProperties";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.LaunchUriResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.ILaunchUriResult ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_LaunchUriResult_DEFINED
#define RUNTIMECLASS_Windows_System_LaunchUriResult_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_LaunchUriResult[] = L"Windows.System.LaunchUriResult";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.Launcher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.ILauncherStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.System.ILauncherStatics4 interface starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.System.ILauncherStatics3 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.System.ILauncherStatics2 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.System.ILauncherStatics5 interface starting with version 7.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_Launcher_DEFINED
#define RUNTIMECLASS_Windows_System_Launcher_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_Launcher[] = L"Windows.System.Launcher";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.LauncherOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.ILauncherOptions2
 *    Windows.System.ILauncherOptions ** Default Interface **
 *    Windows.System.ILauncherOptions3
 *    Windows.System.ILauncherOptions4
 *    Windows.System.ILauncherViewOptions
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_LauncherOptions_DEFINED
#define RUNTIMECLASS_Windows_System_LauncherOptions_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_LauncherOptions[] = L"Windows.System.LauncherOptions";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.LauncherUIOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.ILauncherUIOptions ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_LauncherUIOptions_DEFINED
#define RUNTIMECLASS_Windows_System_LauncherUIOptions_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_LauncherUIOptions[] = L"Windows.System.LauncherUIOptions";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.MemoryManager
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IMemoryManagerStatics2 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.System.IMemoryManagerStatics4 interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.System.IMemoryManagerStatics3 interface starting with version 2.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.System.IMemoryManagerStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_MemoryManager_DEFINED
#define RUNTIMECLASS_Windows_System_MemoryManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_MemoryManager[] = L"Windows.System.MemoryManager";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.ProcessLauncher
 *
 * Introduced to Windows.System.SystemManagementContract in version 2.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IProcessLauncherStatics interface starting with version 2.0 of the Windows.System.SystemManagementContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_System_ProcessLauncher_DEFINED
#define RUNTIMECLASS_Windows_System_ProcessLauncher_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_ProcessLauncher[] = L"Windows.System.ProcessLauncher";
#endif
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.System.ProcessLauncherOptions
 *
 * Introduced to Windows.System.SystemManagementContract in version 2.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 2.0 of the Windows.System.SystemManagementContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IProcessLauncherOptions ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_System_ProcessLauncherOptions_DEFINED
#define RUNTIMECLASS_Windows_System_ProcessLauncherOptions_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_ProcessLauncherOptions[] = L"Windows.System.ProcessLauncherOptions";
#endif
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.System.ProcessLauncherResult
 *
 * Introduced to Windows.System.SystemManagementContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IProcessLauncherResult ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_System_ProcessLauncherResult_DEFINED
#define RUNTIMECLASS_Windows_System_ProcessLauncherResult_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_ProcessLauncherResult[] = L"Windows.System.ProcessLauncherResult";
#endif
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.System.ProcessMemoryReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IProcessMemoryReport ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_ProcessMemoryReport_DEFINED
#define RUNTIMECLASS_Windows_System_ProcessMemoryReport_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_ProcessMemoryReport[] = L"Windows.System.ProcessMemoryReport";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.ProtocolForResultsOperation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IProtocolForResultsOperation ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_ProtocolForResultsOperation_DEFINED
#define RUNTIMECLASS_Windows_System_ProtocolForResultsOperation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_ProtocolForResultsOperation[] = L"Windows.System.ProtocolForResultsOperation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.RemoteLauncher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IRemoteLauncherStatics interface starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_System_RemoteLauncher_DEFINED
#define RUNTIMECLASS_Windows_System_RemoteLauncher_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_RemoteLauncher[] = L"Windows.System.RemoteLauncher";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.System.RemoteLauncherOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IRemoteLauncherOptions ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_System_RemoteLauncherOptions_DEFINED
#define RUNTIMECLASS_Windows_System_RemoteLauncherOptions_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_RemoteLauncherOptions[] = L"Windows.System.RemoteLauncherOptions";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.System.ShutdownManager
 *
 * Introduced to Windows.System.SystemManagementContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IShutdownManagerStatics interface starting with version 1.0 of the Windows.System.SystemManagementContract API contract
 *   Static Methods exist on the Windows.System.IShutdownManagerStatics2 interface starting with version 3.0 of the Windows.System.SystemManagementContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_ShutdownManager_DEFINED
#define RUNTIMECLASS_Windows_System_ShutdownManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_ShutdownManager[] = L"Windows.System.ShutdownManager";
#endif
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.TimeZoneSettings
 *
 * Introduced to Windows.System.SystemManagementContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.ITimeZoneSettingsStatics2 interface starting with version 5.0 of the Windows.System.SystemManagementContract API contract
 *   Static Methods exist on the Windows.System.ITimeZoneSettingsStatics interface starting with version 1.0 of the Windows.System.SystemManagementContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_TimeZoneSettings_DEFINED
#define RUNTIMECLASS_Windows_System_TimeZoneSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_TimeZoneSettings[] = L"Windows.System.TimeZoneSettings";
#endif
#endif // WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.User
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IUserStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IUser ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_User_DEFINED
#define RUNTIMECLASS_Windows_System_User_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_User[] = L"Windows.System.User";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.UserAuthenticationStatusChangeDeferral
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IUserAuthenticationStatusChangeDeferral ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_UserAuthenticationStatusChangeDeferral_DEFINED
#define RUNTIMECLASS_Windows_System_UserAuthenticationStatusChangeDeferral_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_UserAuthenticationStatusChangeDeferral[] = L"Windows.System.UserAuthenticationStatusChangeDeferral";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.UserAuthenticationStatusChangingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IUserAuthenticationStatusChangingEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_UserAuthenticationStatusChangingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_System_UserAuthenticationStatusChangingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_UserAuthenticationStatusChangingEventArgs[] = L"Windows.System.UserAuthenticationStatusChangingEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.UserChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IUserChangedEventArgs ** Default Interface **
 *    Windows.System.IUserChangedEventArgs2
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_UserChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_System_UserChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_UserChangedEventArgs[] = L"Windows.System.UserChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.System.UserDeviceAssociation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IUserDeviceAssociationStatics interface starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_System_UserDeviceAssociation_DEFINED
#define RUNTIMECLASS_Windows_System_UserDeviceAssociation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_UserDeviceAssociation[] = L"Windows.System.UserDeviceAssociation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.System.UserDeviceAssociationChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IUserDeviceAssociationChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_System_UserDeviceAssociationChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_System_UserDeviceAssociationChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_UserDeviceAssociationChangedEventArgs[] = L"Windows.System.UserDeviceAssociationChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.System.UserPicker
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.System.IUserPickerStatics interface starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.System.IUserPicker ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_System_UserPicker_DEFINED
#define RUNTIMECLASS_Windows_System_UserPicker_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_UserPicker[] = L"Windows.System.UserPicker";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.System.UserWatcher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.System.IUserWatcher ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_System_UserWatcher_DEFINED
#define RUNTIMECLASS_Windows_System_UserWatcher_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_System_UserWatcher[] = L"Windows.System.UserWatcher";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#endif // defined(__cplusplus)
#pragma pop_macro("MIDL_CONST_ID")
// Restore the original value of the 'DEPRECATED' macro
#pragma pop_macro("DEPRECATED")

#ifdef __clang__
#pragma clang diagnostic pop // deprecated-declarations
#else
#pragma warning(pop)
#endif
#endif // __windows2Esystem_p_h__

#endif // __windows2Esystem_h__
