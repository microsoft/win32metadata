//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Windows.ApplicationModel.idl";
import "Windows.Data.Xml.Dom.idl";
import "Windows.System.idl";
import "Windows.UI.Notifications.Management.idl";

// Forward Declare
namespace Windows
{
    namespace ApplicationModel
    {
        runtimeclass AppInfo;
    }
}
namespace Windows
{
    namespace Data
    {
        namespace Xml
        {
            namespace Dom
            {
                runtimeclass XmlDocument;
            }
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        namespace Collections
        {
            runtimeclass ValueSet;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct DateTime DateTime;

        runtimeclass Deferral;

        interface IAsyncAction;

        typedef struct TimeSpan TimeSpan;

        apicontract UniversalApiContract;

        runtimeclass Uri;
    }
}
namespace Windows
{
    namespace System
    {
        runtimeclass User;
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Notifications
        {
            namespace Management
            {
                runtimeclass UserNotificationListener;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Notifications
        {
            typedef enum AdaptiveNotificationContentKind AdaptiveNotificationContentKind;

            typedef enum BadgeTemplateType BadgeTemplateType;

            typedef enum NotificationKinds NotificationKinds;

            typedef enum NotificationMirroring NotificationMirroring;

            typedef enum NotificationSetting NotificationSetting;

            typedef enum NotificationUpdateResult NotificationUpdateResult;

            typedef enum PeriodicUpdateRecurrence PeriodicUpdateRecurrence;

            typedef enum TileFlyoutTemplateType TileFlyoutTemplateType;

            typedef enum TileTemplateType TileTemplateType;

            typedef enum ToastDismissalReason ToastDismissalReason;

            typedef enum ToastHistoryChangedType ToastHistoryChangedType;

            typedef enum ToastNotificationPriority ToastNotificationPriority;

            typedef enum ToastTemplateType ToastTemplateType;

            typedef enum UserNotificationChangedKind UserNotificationChangedKind;

            interface IAdaptiveNotificationContent;

            interface IAdaptiveNotificationText;

            interface IBadgeNotification;

            interface IBadgeNotificationFactory;

            interface IBadgeUpdateManagerForUser;

            interface IBadgeUpdateManagerStatics;

            interface IBadgeUpdateManagerStatics2;

            interface IBadgeUpdater;

            interface IKnownAdaptiveNotificationHintsStatics;

            interface IKnownAdaptiveNotificationTextStylesStatics;

            interface IKnownNotificationBindingsStatics;

            interface INotification;

            interface INotificationBinding;

            interface INotificationData;

            interface INotificationDataFactory;

            interface INotificationVisual;

            interface IScheduledTileNotification;

            interface IScheduledTileNotificationFactory;

            interface IScheduledToastNotification;

            interface IScheduledToastNotification2;

            interface IScheduledToastNotification3;

            interface IScheduledToastNotification4;

            interface IScheduledToastNotificationFactory;

            interface IScheduledToastNotificationShowingEventArgs;

            interface IShownTileNotification;

            interface ITileFlyoutNotification;

            interface ITileFlyoutNotificationFactory;

            interface ITileFlyoutUpdateManagerStatics;

            interface ITileFlyoutUpdater;

            interface ITileNotification;

            interface ITileNotificationFactory;

            interface ITileUpdateManagerForUser;

            interface ITileUpdateManagerStatics;

            interface ITileUpdateManagerStatics2;

            interface ITileUpdater;

            interface ITileUpdater2;

            interface IToastActivatedEventArgs;

            interface IToastActivatedEventArgs2;

            interface IToastCollection;

            interface IToastCollectionFactory;

            interface IToastCollectionManager;

            interface IToastDismissedEventArgs;

            interface IToastFailedEventArgs;

            interface IToastNotification;

            interface IToastNotification2;

            interface IToastNotification3;

            interface IToastNotification4;

            interface IToastNotification6;

            interface IToastNotificationActionTriggerDetail;

            interface IToastNotificationFactory;

            interface IToastNotificationHistory;

            interface IToastNotificationHistory2;

            interface IToastNotificationHistoryChangedTriggerDetail;

            interface IToastNotificationHistoryChangedTriggerDetail2;

            interface IToastNotificationManagerForUser;

            interface IToastNotificationManagerForUser2;

            interface IToastNotificationManagerStatics;

            interface IToastNotificationManagerStatics2;

            interface IToastNotificationManagerStatics4;

            interface IToastNotificationManagerStatics5;

            interface IToastNotifier;

            interface IToastNotifier2;

            interface IToastNotifier3;

            interface IUserNotification;

            interface IUserNotificationChangedEventArgs;

            runtimeclass AdaptiveNotificationText;

            runtimeclass BadgeNotification;

            runtimeclass BadgeUpdateManager;

            runtimeclass BadgeUpdateManagerForUser;

            runtimeclass BadgeUpdater;

            runtimeclass KnownAdaptiveNotificationHints;

            runtimeclass KnownAdaptiveNotificationTextStyles;

            runtimeclass KnownNotificationBindings;

            runtimeclass Notification;

            runtimeclass NotificationBinding;

            runtimeclass NotificationData;

            runtimeclass NotificationVisual;

            runtimeclass ScheduledTileNotification;

            runtimeclass ScheduledToastNotification;

            runtimeclass ScheduledToastNotificationShowingEventArgs;

            runtimeclass ShownTileNotification;

            runtimeclass TileFlyoutNotification;

            runtimeclass TileFlyoutUpdateManager;

            runtimeclass TileFlyoutUpdater;

            runtimeclass TileNotification;

            runtimeclass TileUpdateManager;

            runtimeclass TileUpdateManagerForUser;

            runtimeclass TileUpdater;

            runtimeclass ToastActivatedEventArgs;

            runtimeclass ToastCollection;

            runtimeclass ToastCollectionManager;

            runtimeclass ToastDismissedEventArgs;

            runtimeclass ToastFailedEventArgs;

            runtimeclass ToastNotification;

            runtimeclass ToastNotificationActionTriggerDetail;

            runtimeclass ToastNotificationHistory;

            runtimeclass ToastNotificationHistoryChangedTriggerDetail;

            runtimeclass ToastNotificationManager;

            runtimeclass ToastNotificationManagerForUser;

            runtimeclass ToastNotifier;

            runtimeclass UserNotification;

            runtimeclass UserNotificationChangedEventArgs;
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace UI
    {
        namespace Notifications
        {
            declare
            {
                interface Windows.Foundation.Collections.IIterable<Windows.UI.Notifications.AdaptiveNotificationText*>;

                interface Windows.Foundation.Collections.IIterable<Windows.UI.Notifications.NotificationBinding*>;

                interface Windows.Foundation.Collections.IIterable<Windows.UI.Notifications.ScheduledTileNotification*>;

                interface Windows.Foundation.Collections.IIterable<Windows.UI.Notifications.ScheduledToastNotification*>;

                interface Windows.Foundation.Collections.IIterable<Windows.UI.Notifications.ShownTileNotification*>;

                interface Windows.Foundation.Collections.IIterable<Windows.UI.Notifications.ToastCollection*>;

                interface Windows.Foundation.Collections.IIterable<Windows.UI.Notifications.ToastNotification*>;

                interface Windows.Foundation.Collections.IIterable<Windows.UI.Notifications.UserNotification*>;

                interface Windows.Foundation.Collections.IIterator<Windows.UI.Notifications.AdaptiveNotificationText*>;

                interface Windows.Foundation.Collections.IIterator<Windows.UI.Notifications.NotificationBinding*>;

                interface Windows.Foundation.Collections.IIterator<Windows.UI.Notifications.ScheduledTileNotification*>;

                interface Windows.Foundation.Collections.IIterator<Windows.UI.Notifications.ScheduledToastNotification*>;

                interface Windows.Foundation.Collections.IIterator<Windows.UI.Notifications.ShownTileNotification*>;

                interface Windows.Foundation.Collections.IIterator<Windows.UI.Notifications.ToastCollection*>;

                interface Windows.Foundation.Collections.IIterator<Windows.UI.Notifications.ToastNotification*>;

                interface Windows.Foundation.Collections.IIterator<Windows.UI.Notifications.UserNotification*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.UI.Notifications.AdaptiveNotificationText*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.UI.Notifications.NotificationBinding*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.UI.Notifications.ScheduledTileNotification*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.UI.Notifications.ScheduledToastNotification*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.UI.Notifications.ShownTileNotification*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.UI.Notifications.ToastCollection*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.UI.Notifications.ToastNotification*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.UI.Notifications.UserNotification*>;

                interface Windows.Foundation.Collections.IVector<Windows.UI.Notifications.NotificationBinding*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.UI.Notifications.ToastCollection*>*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.UI.Notifications.UserNotification*>*>;

                interface Windows.Foundation.IAsyncOperation<Windows.UI.Notifications.ToastCollection*>;

                interface Windows.Foundation.IAsyncOperation<Windows.UI.Notifications.ToastNotificationHistory*>;

                interface Windows.Foundation.IAsyncOperation<Windows.UI.Notifications.ToastNotifier*>;

                interface Windows.Foundation.TypedEventHandler<Windows.UI.Notifications.Management.UserNotificationListener*, Windows.UI.Notifications.UserNotificationChangedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.UI.Notifications.ToastNotification*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.UI.Notifications.ToastNotification*, Windows.UI.Notifications.ToastDismissedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.UI.Notifications.ToastNotification*, Windows.UI.Notifications.ToastFailedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.UI.Notifications.ToastNotifier*, Windows.UI.Notifications.ScheduledToastNotificationShowingEventArgs*>;
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace UI
    {
        namespace Notifications
        {
            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            enum AdaptiveNotificationContentKind
            {
                Text = 0
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum BadgeTemplateType
            {
                BadgeGlyph  = 0,
                BadgeNumber = 1
            };

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [flags]
            enum NotificationKinds
            {
                Unknown = 0x0,
                Toast   = 0x1
            };

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            enum NotificationMirroring
            {
                Allowed  = 0,
                Disabled = 1
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum NotificationSetting
            {
                Enabled                = 0,
                DisabledForApplication = 1,
                DisabledForUser        = 2,
                DisabledByGroupPolicy  = 3,
                DisabledByManifest     = 4
            };

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            enum NotificationUpdateResult
            {
                Succeeded            = 0,
                Failed               = 1,
                NotificationNotFound = 2
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum PeriodicUpdateRecurrence
            {
                HalfHour    = 0,
                Hour        = 1,
                SixHours    = 2,
                TwelveHours = 3,
                Daily       = 4
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum TileFlyoutTemplateType
            {
                TileFlyoutTemplate01 = 0
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum TileTemplateType
            {
                [deprecated("TileSquareImage may be altered or unavailable for releases after Windows 8.1. Instead, use TileSquare150x150Image.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquareImage                           = 0,
                [deprecated("TileSquareBlock may be altered or unavailable for releases after Windows 8.1. Instead, use TileSquare150x150Block.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquareBlock                           = 1,
                [deprecated("TileSquareText01 may be altered or unavailable for releases after Windows 8.1. Instead, use TileSquare150x150Text01.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquareText01                          = 2,
                [deprecated("TileSquareText02 may be altered or unavailable for releases after Windows 8.1. Instead, use TileSquare150x150Text02.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquareText02                          = 3,
                [deprecated("TileSquareText03 may be altered or unavailable for releases after Windows 8.1. Instead, use TileSquare150x150Text03.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquareText03                          = 4,
                [deprecated("TileSquareText04 may be altered or unavailable for releases after Windows 8.1. Instead, use TileSquare150x150Text04.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquareText04                          = 5,
                [deprecated("TileSquarePeekImageAndText01 may be altered or unavailable for releases after Windows 8.1. Instead, use TileSquare150x150PeekImageAndText01.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquarePeekImageAndText01              = 6,
                [deprecated("TileSquarePeekImageAndText02 may be altered or unavailable for releases after Windows 8.1. Instead, use TileSquare150x150PeekImageAndText02.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquarePeekImageAndText02              = 7,
                [deprecated("TileSquarePeekImageAndText03 may be altered or unavailable for releases after Windows 8.1. Instead, use TileSquare150x150PeekImageAndText03.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquarePeekImageAndText03              = 8,
                [deprecated("TileSquarePeekImageAndText04 may be altered or unavailable for releases after Windows 8.1. Instead, use TileSquare150x150PeekImageAndText04.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquarePeekImageAndText04              = 9,
                [deprecated("TileWideImage may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150Image.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideImage                             = 10,
                [deprecated("TileWideImageCollection may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150ImageCollection.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideImageCollection                   = 11,
                [deprecated("TileWideImageAndText01 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150ImageAndText01.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideImageAndText01                    = 12,
                [deprecated("TileWideImageAndText02 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150ImageAndText02.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideImageAndText02                    = 13,
                [deprecated("TileWideBlockAndText01 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150BlockAndText01.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideBlockAndText01                    = 14,
                [deprecated("TileWideBlockAndText02 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150BlockAndText02.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideBlockAndText02                    = 15,
                [deprecated("TileWidePeekImageCollection01 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150PeekImageCollection01.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWidePeekImageCollection01             = 16,
                [deprecated("TileWidePeekImageCollection02 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150PeekImageCollection02.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWidePeekImageCollection02             = 17,
                [deprecated("TileWidePeekImageCollection03 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150PeekImageCollection03.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWidePeekImageCollection03             = 18,
                [deprecated("TileWidePeekImageCollection04 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150PeekImageCollection04.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWidePeekImageCollection04             = 19,
                [deprecated("TileWidePeekImageCollection05 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150PeekImageCollection05.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWidePeekImageCollection05             = 20,
                [deprecated("TileWidePeekImageCollection06 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150PeekImageCollection06.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWidePeekImageCollection06             = 21,
                [deprecated("TileWidePeekImageAndText01 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150PeekImageAndText01.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWidePeekImageAndText01                = 22,
                [deprecated("TileWidePeekImageAndText02 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150PeekImageAndText02.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWidePeekImageAndText02                = 23,
                [deprecated("TileWidePeekImage01 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150PeekImage01.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWidePeekImage01                       = 24,
                [deprecated("TileWidePeekImage02 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150PeekImage02.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWidePeekImage02                       = 25,
                [deprecated("TileWidePeekImage03 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150PeekImage03.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWidePeekImage03                       = 26,
                [deprecated("TileWidePeekImage04 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150PeekImage04.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWidePeekImage04                       = 27,
                [deprecated("TileWidePeekImage05 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150PeekImage05.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWidePeekImage05                       = 28,
                [deprecated("TileWidePeekImage06 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150PeekImage06.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWidePeekImage06                       = 29,
                [deprecated("TileWideSmallImageAndText01 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150SmallImageAndText01.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideSmallImageAndText01               = 30,
                [deprecated("TileWideSmallImageAndText02 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150SmallImageAndText02.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideSmallImageAndText02               = 31,
                [deprecated("TileWideSmallImageAndText03 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150SmallImageAndText03.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideSmallImageAndText03               = 32,
                [deprecated("TileWideSmallImageAndText04 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150SmallImageAndText04.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideSmallImageAndText04               = 33,
                [deprecated("TileWideSmallImageAndText05 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150SmallImageAndText05.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideSmallImageAndText05               = 34,
                [deprecated("TileWideText01 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150Text01.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideText01                            = 35,
                [deprecated("TileWideText02 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150Text02.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideText02                            = 36,
                [deprecated("TileWideText03 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150Text03.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideText03                            = 37,
                [deprecated("TileWideText04 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150Text04.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideText04                            = 38,
                [deprecated("TileWideText05 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150Text05.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideText05                            = 39,
                [deprecated("TileWideText06 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150Text06.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideText06                            = 40,
                [deprecated("TileWideText07 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150Text07.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideText07                            = 41,
                [deprecated("TileWideText08 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150Text08.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideText08                            = 42,
                [deprecated("TileWideText09 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150Text09.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideText09                            = 43,
                [deprecated("TileWideText10 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150Text10.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideText10                            = 44,
                [deprecated("TileWideText11 may be altered or unavailable for releases after Windows 8.1. Instead, use TileWide310x150Text11.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                TileWideText11                            = 45,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare150x150Image                    = 0,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare150x150Block                    = 1,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare150x150Text01                   = 2,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare150x150Text02                   = 3,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare150x150Text03                   = 4,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare150x150Text04                   = 5,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare150x150PeekImageAndText01       = 6,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare150x150PeekImageAndText02       = 7,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare150x150PeekImageAndText03       = 8,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare150x150PeekImageAndText04       = 9,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150Image                      = 10,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150ImageCollection            = 11,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150ImageAndText01             = 12,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150ImageAndText02             = 13,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150BlockAndText01             = 14,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150BlockAndText02             = 15,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150PeekImageCollection01      = 16,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150PeekImageCollection02      = 17,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150PeekImageCollection03      = 18,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150PeekImageCollection04      = 19,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150PeekImageCollection05      = 20,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150PeekImageCollection06      = 21,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150PeekImageAndText01         = 22,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150PeekImageAndText02         = 23,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150PeekImage01                = 24,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150PeekImage02                = 25,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150PeekImage03                = 26,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150PeekImage04                = 27,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150PeekImage05                = 28,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150PeekImage06                = 29,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150SmallImageAndText01        = 30,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150SmallImageAndText02        = 31,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150SmallImageAndText03        = 32,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150SmallImageAndText04        = 33,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150SmallImageAndText05        = 34,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150Text01                     = 35,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150Text02                     = 36,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150Text03                     = 37,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150Text04                     = 38,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150Text05                     = 39,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150Text06                     = 40,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150Text07                     = 41,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150Text08                     = 42,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150Text09                     = 43,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150Text10                     = 44,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150Text11                     = 45,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310BlockAndText01           = 46,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310BlockAndText02           = 47,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310Image                    = 48,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310ImageAndText01           = 49,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310ImageAndText02           = 50,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310ImageAndTextOverlay01    = 51,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310ImageAndTextOverlay02    = 52,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310ImageAndTextOverlay03    = 53,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310ImageCollectionAndText01 = 54,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310ImageCollectionAndText02 = 55,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310ImageCollection          = 56,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310SmallImagesAndTextList01 = 57,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310SmallImagesAndTextList02 = 58,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310SmallImagesAndTextList03 = 59,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310SmallImagesAndTextList04 = 60,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310Text01                   = 61,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310Text02                   = 62,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310Text03                   = 63,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310Text04                   = 64,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310Text05                   = 65,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310Text06                   = 66,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310Text07                   = 67,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310Text08                   = 68,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310TextList01               = 69,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310TextList02               = 70,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310TextList03               = 71,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310SmallImageAndText01      = 72,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310SmallImagesAndTextList05 = 73,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare310x310Text09                   = 74,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare71x71IconWithBadge              = 75,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare150x150IconWithBadge            = 76,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileWide310x150IconWithBadgeAndText       = 77,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileSquare71x71Image                      = 78,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TileTall150x310Image                      = 79
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum ToastDismissalReason
            {
                UserCanceled      = 0,
                ApplicationHidden = 1,
                TimedOut          = 2
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum ToastHistoryChangedType
            {
                Cleared = 0,
                Removed = 1,
                Expired = 2,
                Added   = 3
            };

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            enum ToastNotificationPriority
            {
                Default = 0,
                High    = 1
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum ToastTemplateType
            {
                ToastImageAndText01 = 0,
                ToastImageAndText02 = 1,
                ToastImageAndText03 = 2,
                ToastImageAndText04 = 3,
                ToastText01         = 4,
                ToastText02         = 5,
                ToastText03         = 6,
                ToastText04         = 7
            };

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            enum UserNotificationChangedKind
            {
                Added   = 0,
                Removed = 1
            };

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [uuid(EB0DBE66-7448-448D-9DB8-D78ACD2ABBA9)]
            interface IAdaptiveNotificationContent : IInspectable
            {
                [propget] HRESULT Kind([out] [retval] Windows.UI.Notifications.AdaptiveNotificationContentKind* value);
                [propget] HRESULT Hints([out] [retval] Windows.Foundation.Collections.IMap<HSTRING, HSTRING>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.UI.Notifications.AdaptiveNotificationText)]
            [uuid(46D4A3BE-609A-4326-A40B-BFDE872034A3)]
            interface IAdaptiveNotificationText : IInspectable
            {
                [propget] HRESULT Text([out] [retval] HSTRING* value);
                [propput] HRESULT Text([in] HSTRING value);
                [propget] HRESULT Language([out] [retval] HSTRING* value);
                [propput] HRESULT Language([in] HSTRING value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.BadgeNotification)]
            [uuid(075CB4CA-D08A-4E2F-9233-7E289C1F7722)]
            interface IBadgeNotification : IInspectable
            {
                [propget] HRESULT Content([out] [retval] Windows.Data.Xml.Dom.XmlDocument** value);
                [propput] HRESULT ExpirationTime([in] Windows.Foundation.IReference<Windows.Foundation.DateTime>* value);
                [propget] HRESULT ExpirationTime([out] [retval] Windows.Foundation.IReference<Windows.Foundation.DateTime>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.BadgeNotification)]
            [uuid(EDF255CE-0618-4D59-948A-5A61040C52F9)]
            interface IBadgeNotificationFactory : IInspectable
            {
                HRESULT CreateBadgeNotification([in] Windows.Data.Xml.Dom.XmlDocument* content, [out] [retval] Windows.UI.Notifications.BadgeNotification** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.UI.Notifications.BadgeUpdateManagerForUser)]
            [uuid(996B21BC-0386-44E5-BA8D-0C1077A62E92)]
            interface IBadgeUpdateManagerForUser : IInspectable
            {
                [overload("CreateBadgeUpdaterForApplication")] HRESULT CreateBadgeUpdaterForApplication([out] [retval] Windows.UI.Notifications.BadgeUpdater** result);
                [overload("CreateBadgeUpdaterForApplication")] HRESULT CreateBadgeUpdaterForApplicationWithId([in] HSTRING applicationId, [out] [retval] Windows.UI.Notifications.BadgeUpdater** result);
                HRESULT CreateBadgeUpdaterForSecondaryTile([in] HSTRING tileId, [out] [retval] Windows.UI.Notifications.BadgeUpdater** result);
                [propget] HRESULT User([out] [retval] Windows.System.User** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.BadgeUpdateManager)]
            [uuid(33400FAA-6DD5-4105-AEBC-9B50FCA492DA)]
            interface IBadgeUpdateManagerStatics : IInspectable
            {
                [overload("CreateBadgeUpdaterForApplication")] HRESULT CreateBadgeUpdaterForApplication([out] [retval] Windows.UI.Notifications.BadgeUpdater** result);
                [overload("CreateBadgeUpdaterForApplication")] HRESULT CreateBadgeUpdaterForApplicationWithId([in] HSTRING applicationId, [out] [retval] Windows.UI.Notifications.BadgeUpdater** result);
                HRESULT CreateBadgeUpdaterForSecondaryTile([in] HSTRING tileId, [out] [retval] Windows.UI.Notifications.BadgeUpdater** result);
                HRESULT GetTemplateContent([in] Windows.UI.Notifications.BadgeTemplateType type, [out] [retval] Windows.Data.Xml.Dom.XmlDocument** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.UI.Notifications.BadgeUpdateManager)]
            [uuid(979A35CE-F940-48BF-94E8-CA244D400B41)]
            interface IBadgeUpdateManagerStatics2 : IInspectable
            {
                HRESULT GetForUser([in] Windows.System.User* user, [out] [retval] Windows.UI.Notifications.BadgeUpdateManagerForUser** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.BadgeUpdater)]
            [uuid(B5FA1FD4-7562-4F6C-BFA3-1B6ED2E57F2F)]
            interface IBadgeUpdater : IInspectable
            {
                HRESULT Update([in] Windows.UI.Notifications.BadgeNotification* notification);
                HRESULT Clear();
                [overload("StartPeriodicUpdate")] HRESULT StartPeriodicUpdate([in] Windows.Foundation.Uri* badgeContent, [in] Windows.UI.Notifications.PeriodicUpdateRecurrence requestedInterval);
                [overload("StartPeriodicUpdate")] HRESULT StartPeriodicUpdateAtTime([in] Windows.Foundation.Uri* badgeContent, [in] Windows.Foundation.DateTime startTime, [in] Windows.UI.Notifications.PeriodicUpdateRecurrence requestedInterval);
                HRESULT StopPeriodicUpdate();
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.UI.Notifications.KnownAdaptiveNotificationHints)]
            [uuid(06206598-D496-497D-8692-4F7D7C2770DF)]
            interface IKnownAdaptiveNotificationHintsStatics : IInspectable
            {
                [propget] HRESULT Style([out] [retval] HSTRING* value);
                [propget] HRESULT Wrap([out] [retval] HSTRING* value);
                [propget] HRESULT MaxLines([out] [retval] HSTRING* value);
                [propget] HRESULT MinLines([out] [retval] HSTRING* value);
                [propget] HRESULT TextStacking([out] [retval] HSTRING* value);
                [propget] HRESULT Align([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.UI.Notifications.KnownAdaptiveNotificationTextStyles)]
            [uuid(202192D7-8996-45AA-8BA1-D461D72C2A1B)]
            interface IKnownAdaptiveNotificationTextStylesStatics : IInspectable
            {
                [propget] HRESULT Caption([out] [retval] HSTRING* value);
                [propget] HRESULT Body([out] [retval] HSTRING* value);
                [propget] HRESULT Base([out] [retval] HSTRING* value);
                [propget] HRESULT Subtitle([out] [retval] HSTRING* value);
                [propget] HRESULT Title([out] [retval] HSTRING* value);
                [propget] HRESULT Subheader([out] [retval] HSTRING* value);
                [propget] HRESULT Header([out] [retval] HSTRING* value);
                [propget] HRESULT TitleNumeral([out] [retval] HSTRING* value);
                [propget] HRESULT SubheaderNumeral([out] [retval] HSTRING* value);
                [propget] HRESULT HeaderNumeral([out] [retval] HSTRING* value);
                [propget] HRESULT CaptionSubtle([out] [retval] HSTRING* value);
                [propget] HRESULT BodySubtle([out] [retval] HSTRING* value);
                [propget] HRESULT BaseSubtle([out] [retval] HSTRING* value);
                [propget] HRESULT SubtitleSubtle([out] [retval] HSTRING* value);
                [propget] HRESULT TitleSubtle([out] [retval] HSTRING* value);
                [propget] HRESULT SubheaderSubtle([out] [retval] HSTRING* value);
                [propget] HRESULT SubheaderNumeralSubtle([out] [retval] HSTRING* value);
                [propget] HRESULT HeaderSubtle([out] [retval] HSTRING* value);
                [propget] HRESULT HeaderNumeralSubtle([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.UI.Notifications.KnownNotificationBindings)]
            [uuid(79427BAE-A8B7-4D58-89EA-76A7B7BCCDED)]
            interface IKnownNotificationBindingsStatics : IInspectable
            {
                [propget] HRESULT ToastGeneric([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.UI.Notifications.Notification)]
            [uuid(108037FE-EB76-4F82-97BC-DA07530A2E20)]
            interface INotification : IInspectable
            {
                [propget] HRESULT ExpirationTime([out] [retval] Windows.Foundation.IReference<Windows.Foundation.DateTime>** value);
                [propput] HRESULT ExpirationTime([in] Windows.Foundation.IReference<Windows.Foundation.DateTime>* value);
                [propget] HRESULT Visual([out] [retval] Windows.UI.Notifications.NotificationVisual** value);
                [propput] HRESULT Visual([in] Windows.UI.Notifications.NotificationVisual* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.UI.Notifications.NotificationBinding)]
            [uuid(F29E4B85-0370-4AD3-B4EA-DA9E35E7EABF)]
            interface INotificationBinding : IInspectable
            {
                [propget] HRESULT Template([out] [retval] HSTRING* value);
                [propput] HRESULT Template([in] HSTRING value);
                [propget] HRESULT Language([out] [retval] HSTRING* value);
                [propput] HRESULT Language([in] HSTRING value);
                [propget] HRESULT Hints([out] [retval] Windows.Foundation.Collections.IMap<HSTRING, HSTRING>** value);
                HRESULT GetTextElements([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.UI.Notifications.AdaptiveNotificationText*>** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.UI.Notifications.NotificationData)]
            [uuid(9FFD2312-9D6A-4AAF-B6AC-FF17F0C1F280)]
            interface INotificationData : IInspectable
            {
                [propget] HRESULT Values([out] [retval] Windows.Foundation.Collections.IMap<HSTRING, HSTRING>** value);
                [propget] HRESULT SequenceNumber([out] [retval] UINT32* value);
                [propput] HRESULT SequenceNumber([in] UINT32 value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.UI.Notifications.NotificationData)]
            [uuid(23C1E33A-1C10-46FB-8040-DEC384621CF8)]
            interface INotificationDataFactory : IInspectable
            {
                [overload("CreateNotificationData")] HRESULT CreateNotificationDataWithValuesAndSequenceNumber([in] Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<HSTRING, HSTRING>*>* initialValues, [in] UINT32 sequenceNumber, [out] [retval] Windows.UI.Notifications.NotificationData** value);
                [overload("CreateNotificationData")] HRESULT CreateNotificationDataWithValues([in] Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<HSTRING, HSTRING>*>* initialValues, [out] [retval] Windows.UI.Notifications.NotificationData** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.UI.Notifications.NotificationVisual)]
            [uuid(68835B8E-AA56-4E11-86D3-5F9A6957BC5B)]
            interface INotificationVisual : IInspectable
            {
                [propget] HRESULT Language([out] [retval] HSTRING* value);
                [propput] HRESULT Language([in] HSTRING value);
                [propget] HRESULT Bindings([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Notifications.NotificationBinding*>** value);
                HRESULT GetBinding([in] HSTRING templateName, [out] [retval] Windows.UI.Notifications.NotificationBinding** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.ScheduledTileNotification)]
            [uuid(0ABCA6D5-99DC-4C78-A11C-C9E7F86D7EF7)]
            interface IScheduledTileNotification : IInspectable
            {
                [propget] HRESULT Content([out] [retval] Windows.Data.Xml.Dom.XmlDocument** value);
                [propget] HRESULT DeliveryTime([out] [retval] Windows.Foundation.DateTime* value);
                [propput] HRESULT ExpirationTime([in] Windows.Foundation.IReference<Windows.Foundation.DateTime>* value);
                [propget] HRESULT ExpirationTime([out] [retval] Windows.Foundation.IReference<Windows.Foundation.DateTime>** value);
                [propput] HRESULT Tag([in] HSTRING value);
                [propget] HRESULT Tag([out] [retval] HSTRING* value);
                [propput] HRESULT Id([in] HSTRING value);
                [propget] HRESULT Id([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.ScheduledTileNotification)]
            [uuid(3383138A-98C0-4C3B-BBD6-4A633C7CFC29)]
            interface IScheduledTileNotificationFactory : IInspectable
            {
                HRESULT CreateScheduledTileNotification([in] Windows.Data.Xml.Dom.XmlDocument* content, [in] Windows.Foundation.DateTime deliveryTime, [out] [retval] Windows.UI.Notifications.ScheduledTileNotification** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.ScheduledToastNotification)]
            [uuid(79F577F8-0DE7-48CD-9740-9B370490C838)]
            interface IScheduledToastNotification : IInspectable
            {
                [propget] HRESULT Content([out] [retval] Windows.Data.Xml.Dom.XmlDocument** value);
                [propget] HRESULT DeliveryTime([out] [retval] Windows.Foundation.DateTime* value);
                [propget] HRESULT SnoozeInterval([out] [retval] Windows.Foundation.IReference<Windows.Foundation.TimeSpan>** value);
                [propget] HRESULT MaximumSnoozeCount([out] [retval] UINT32* value);
                [propput] HRESULT Id([in] HSTRING value);
                [propget] HRESULT Id([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.ScheduledToastNotification)]
            [uuid(A66EA09C-31B4-43B0-B5DD-7A40E85363B1)]
            interface IScheduledToastNotification2 : IInspectable
            {
                [propput] HRESULT Tag([in] HSTRING value);
                [propget] HRESULT Tag([out] [retval] HSTRING* value);
                [propput] HRESULT Group([in] HSTRING value);
                [propget] HRESULT Group([out] [retval] HSTRING* value);
                [propput] HRESULT SuppressPopup([in] boolean value);
                [propget] HRESULT SuppressPopup([out] [retval] boolean* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.UI.Notifications.ScheduledToastNotification)]
            [uuid(98429E8B-BD32-4A3B-9D15-22AEA49462A1)]
            interface IScheduledToastNotification3 : IInspectable
            {
                [propget] HRESULT NotificationMirroring([out] [retval] Windows.UI.Notifications.NotificationMirroring* value);
                [propput] HRESULT NotificationMirroring([in] Windows.UI.Notifications.NotificationMirroring value);
                [propget] HRESULT RemoteId([out] [retval] HSTRING* value);
                [propput] HRESULT RemoteId([in] HSTRING value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.UI.Notifications.ScheduledToastNotification)]
            [uuid(1D4761FD-BDEF-4E4A-96BE-0101369B58D2)]
            interface IScheduledToastNotification4 : IInspectable
            {
                [propget] HRESULT ExpirationTime([out] [retval] Windows.Foundation.IReference<Windows.Foundation.DateTime>** value);
                [propput] HRESULT ExpirationTime([in] Windows.Foundation.IReference<Windows.Foundation.DateTime>* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.ScheduledToastNotification)]
            [uuid(E7BED191-0BB9-4189-8394-31761B476FD7)]
            interface IScheduledToastNotificationFactory : IInspectable
            {
                HRESULT CreateScheduledToastNotification([in] Windows.Data.Xml.Dom.XmlDocument* content, [in] Windows.Foundation.DateTime deliveryTime, [out] [retval] Windows.UI.Notifications.ScheduledToastNotification** value);
                HRESULT CreateScheduledToastNotificationRecurring([in] Windows.Data.Xml.Dom.XmlDocument* content, [in] Windows.Foundation.DateTime deliveryTime, [in] Windows.Foundation.TimeSpan snoozeInterval, [in] UINT32 maximumSnoozeCount, [out] [retval] Windows.UI.Notifications.ScheduledToastNotification** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 7.0)]
            [exclusiveto(Windows.UI.Notifications.ScheduledToastNotificationShowingEventArgs)]
            [uuid(6173F6B4-412A-5E2C-A6ED-A0209AEF9A09)]
            interface IScheduledToastNotificationShowingEventArgs : IInspectable
            {
                [propget] HRESULT Cancel([out] [retval] boolean* value);
                [propput] HRESULT Cancel([in] boolean value);
                [propget] HRESULT ScheduledToastNotification([out] [retval] Windows.UI.Notifications.ScheduledToastNotification** value);
                HRESULT GetDeferral([out] [retval] Windows.Foundation.Deferral** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.UI.Notifications.ShownTileNotification)]
            [uuid(342D8988-5AF2-481A-A6A3-F2FDC78DE88E)]
            interface IShownTileNotification : IInspectable
            {
                [propget] HRESULT Arguments([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.TileFlyoutNotification)]
            [uuid(9A53B261-C70C-42BE-B2F3-F42AA97D34E5)]
            interface ITileFlyoutNotification : IInspectable
            {
                [propget] HRESULT Content([out] [retval] Windows.Data.Xml.Dom.XmlDocument** value);
                [propput] HRESULT ExpirationTime([in] Windows.Foundation.IReference<Windows.Foundation.DateTime>* value);
                [propget] HRESULT ExpirationTime([out] [retval] Windows.Foundation.IReference<Windows.Foundation.DateTime>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.TileFlyoutNotification)]
            [uuid(EF556FF5-5226-4F2B-B278-88A35DFE569F)]
            interface ITileFlyoutNotificationFactory : IInspectable
            {
                HRESULT CreateTileFlyoutNotification([in] Windows.Data.Xml.Dom.XmlDocument* content, [out] [retval] Windows.UI.Notifications.TileFlyoutNotification** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.TileFlyoutUpdateManager)]
            [uuid(04363B0B-1AC0-4B99-88E7-ADA83E953D48)]
            interface ITileFlyoutUpdateManagerStatics : IInspectable
            {
                [overload("CreateTileFlyoutUpdaterForApplication")] HRESULT CreateTileFlyoutUpdaterForApplication([out] [retval] Windows.UI.Notifications.TileFlyoutUpdater** result);
                [overload("CreateTileFlyoutUpdaterForApplication")] HRESULT CreateTileFlyoutUpdaterForApplicationWithId([in] HSTRING applicationId, [out] [retval] Windows.UI.Notifications.TileFlyoutUpdater** result);
                HRESULT CreateTileFlyoutUpdaterForSecondaryTile([in] HSTRING tileId, [out] [retval] Windows.UI.Notifications.TileFlyoutUpdater** result);
                HRESULT GetTemplateContent([in] Windows.UI.Notifications.TileFlyoutTemplateType type, [out] [retval] Windows.Data.Xml.Dom.XmlDocument** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.TileFlyoutUpdater)]
            [uuid(8D40C76A-C465-4052-A740-5C2654C1A089)]
            interface ITileFlyoutUpdater : IInspectable
            {
                HRESULT Update([in] Windows.UI.Notifications.TileFlyoutNotification* notification);
                HRESULT Clear();
                [overload("StartPeriodicUpdate")] HRESULT StartPeriodicUpdate([in] Windows.Foundation.Uri* tileFlyoutContent, [in] Windows.UI.Notifications.PeriodicUpdateRecurrence requestedInterval);
                [overload("StartPeriodicUpdate")] HRESULT StartPeriodicUpdateAtTime([in] Windows.Foundation.Uri* tileFlyoutContent, [in] Windows.Foundation.DateTime startTime, [in] Windows.UI.Notifications.PeriodicUpdateRecurrence requestedInterval);
                HRESULT StopPeriodicUpdate();
                [propget] HRESULT Setting([out] [retval] Windows.UI.Notifications.NotificationSetting* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.TileNotification)]
            [uuid(EBAEC8FA-50EC-4C18-B4D0-3AF02E5540AB)]
            interface ITileNotification : IInspectable
            {
                [propget] HRESULT Content([out] [retval] Windows.Data.Xml.Dom.XmlDocument** value);
                [propput] HRESULT ExpirationTime([in] Windows.Foundation.IReference<Windows.Foundation.DateTime>* value);
                [propget] HRESULT ExpirationTime([out] [retval] Windows.Foundation.IReference<Windows.Foundation.DateTime>** value);
                [propput] HRESULT Tag([in] HSTRING value);
                [propget] HRESULT Tag([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.TileNotification)]
            [uuid(C6ABDD6E-4928-46C8-BDBF-81A047DEA0D4)]
            interface ITileNotificationFactory : IInspectable
            {
                HRESULT CreateTileNotification([in] Windows.Data.Xml.Dom.XmlDocument* content, [out] [retval] Windows.UI.Notifications.TileNotification** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.UI.Notifications.TileUpdateManagerForUser)]
            [uuid(55141348-2EE2-4E2D-9CC1-216A20DECC9F)]
            interface ITileUpdateManagerForUser : IInspectable
            {
                [overload("CreateTileUpdaterForApplicationForUser")] HRESULT CreateTileUpdaterForApplication([out] [retval] Windows.UI.Notifications.TileUpdater** result);
                [overload("CreateTileUpdaterForApplication")] HRESULT CreateTileUpdaterForApplicationWithId([in] HSTRING applicationId, [out] [retval] Windows.UI.Notifications.TileUpdater** result);
                HRESULT CreateTileUpdaterForSecondaryTile([in] HSTRING tileId, [out] [retval] Windows.UI.Notifications.TileUpdater** result);
                [propget] HRESULT User([out] [retval] Windows.System.User** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.TileUpdateManager)]
            [uuid(DA159E5D-3EA9-4986-8D84-B09D5E12276D)]
            interface ITileUpdateManagerStatics : IInspectable
            {
                [overload("CreateTileUpdaterForApplication")] HRESULT CreateTileUpdaterForApplication([out] [retval] Windows.UI.Notifications.TileUpdater** result);
                [overload("CreateTileUpdaterForApplication")] HRESULT CreateTileUpdaterForApplicationWithId([in] HSTRING applicationId, [out] [retval] Windows.UI.Notifications.TileUpdater** result);
                HRESULT CreateTileUpdaterForSecondaryTile([in] HSTRING tileId, [out] [retval] Windows.UI.Notifications.TileUpdater** result);
                HRESULT GetTemplateContent([in] Windows.UI.Notifications.TileTemplateType type, [out] [retval] Windows.Data.Xml.Dom.XmlDocument** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.UI.Notifications.TileUpdateManager)]
            [uuid(731C1DDC-8E14-4B7C-A34B-9D22DE76C84D)]
            interface ITileUpdateManagerStatics2 : IInspectable
            {
                HRESULT GetForUser([in] Windows.System.User* user, [out] [retval] Windows.UI.Notifications.TileUpdateManagerForUser** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.TileUpdater)]
            [uuid(0942A48B-1D91-44EC-9243-C1E821C29A20)]
            interface ITileUpdater : IInspectable
            {
                HRESULT Update([in] Windows.UI.Notifications.TileNotification* notification);
                HRESULT Clear();
                HRESULT EnableNotificationQueue([in] boolean enable);
                [propget] HRESULT Setting([out] [retval] Windows.UI.Notifications.NotificationSetting* value);
                HRESULT AddToSchedule([in] Windows.UI.Notifications.ScheduledTileNotification* scheduledTile);
                HRESULT RemoveFromSchedule([in] Windows.UI.Notifications.ScheduledTileNotification* scheduledTile);
                HRESULT GetScheduledTileNotifications([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.UI.Notifications.ScheduledTileNotification*>** result);
                [overload("StartPeriodicUpdate")] HRESULT StartPeriodicUpdate([in] Windows.Foundation.Uri* tileContent, [in] Windows.UI.Notifications.PeriodicUpdateRecurrence requestedInterval);
                [overload("StartPeriodicUpdate")] HRESULT StartPeriodicUpdateAtTime([in] Windows.Foundation.Uri* tileContent, [in] Windows.Foundation.DateTime startTime, [in] Windows.UI.Notifications.PeriodicUpdateRecurrence requestedInterval);
                HRESULT StopPeriodicUpdate();
                [overload("StartPeriodicUpdateBatch")] HRESULT StartPeriodicUpdateBatch([in] Windows.Foundation.Collections.IIterable<Windows.Foundation.Uri*>* tileContents, [in] Windows.UI.Notifications.PeriodicUpdateRecurrence requestedInterval);
                [overload("StartPeriodicUpdateBatch")] HRESULT StartPeriodicUpdateBatchAtTime([in] Windows.Foundation.Collections.IIterable<Windows.Foundation.Uri*>* tileContents, [in] Windows.Foundation.DateTime startTime, [in] Windows.UI.Notifications.PeriodicUpdateRecurrence requestedInterval);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.TileUpdater)]
            [uuid(A2266E12-15EE-43ED-83F5-65B352BB1A84)]
            interface ITileUpdater2 : IInspectable
            {
                HRESULT EnableNotificationQueueForSquare150x150([in] boolean enable);
                HRESULT EnableNotificationQueueForWide310x150([in] boolean enable);
                HRESULT EnableNotificationQueueForSquare310x310([in] boolean enable);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.ToastActivatedEventArgs)]
            [uuid(E3BF92F3-C197-436F-8265-0625824F8DAC)]
            interface IToastActivatedEventArgs : IInspectable
            {
                [propget] HRESULT Arguments([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 8.0)]
            [exclusiveto(Windows.UI.Notifications.ToastActivatedEventArgs)]
            [uuid(AB7DA512-CC61-568E-81BE-304AC31038FA)]
            interface IToastActivatedEventArgs2 : IInspectable
            {
                [propget] HRESULT UserInput([out] [retval] Windows.Foundation.Collections.ValueSet** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.UI.Notifications.ToastCollection)]
            [uuid(0A8BC3B0-E0BE-4858-BC2A-89DFE0B32863)]
            interface IToastCollection : IInspectable
            {
                [propget] HRESULT Id([out] [retval] HSTRING* value);
                [propget] HRESULT DisplayName([out] [retval] HSTRING* value);
                [propput] HRESULT DisplayName([in] HSTRING value);
                [propget] HRESULT LaunchArgs([out] [retval] HSTRING* value);
                [propput] HRESULT LaunchArgs([in] HSTRING value);
                [propget] HRESULT Icon([out] [retval] Windows.Foundation.Uri** value);
                [propput] HRESULT Icon([in] Windows.Foundation.Uri* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.UI.Notifications.ToastCollection)]
            [uuid(164DD3D7-73C4-44F7-B4FF-FB6D4BF1F4C6)]
            interface IToastCollectionFactory : IInspectable
            {
                HRESULT CreateInstance([in] HSTRING collectionId, [in] HSTRING displayName, [in] HSTRING launchArgs, [in] Windows.Foundation.Uri* iconUri, [out] [retval] Windows.UI.Notifications.ToastCollection** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.UI.Notifications.ToastCollectionManager)]
            [uuid(2A1821FE-179D-49BC-B79D-A527920D3665)]
            interface IToastCollectionManager : IInspectable
            {
                HRESULT SaveToastCollectionAsync([in] Windows.UI.Notifications.ToastCollection* collection, [out] [retval] Windows.Foundation.IAsyncAction** operation);
                HRESULT FindAllToastCollectionsAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.UI.Notifications.ToastCollection*>*>** operation);
                HRESULT GetToastCollectionAsync([in] HSTRING collectionId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.UI.Notifications.ToastCollection*>** operation);
                HRESULT RemoveToastCollectionAsync([in] HSTRING collectionId, [out] [retval] Windows.Foundation.IAsyncAction** operation);
                HRESULT RemoveAllToastCollectionsAsync([out] [retval] Windows.Foundation.IAsyncAction** operation);
                [propget] HRESULT User([out] [retval] Windows.System.User** value);
                [propget] HRESULT AppId([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.ToastDismissedEventArgs)]
            [uuid(3F89D935-D9CB-4538-A0F0-FFE7659938F8)]
            interface IToastDismissedEventArgs : IInspectable
            {
                [propget] HRESULT Reason([out] [retval] Windows.UI.Notifications.ToastDismissalReason* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.ToastFailedEventArgs)]
            [uuid(35176862-CFD4-44F8-AD64-F500FD896C3B)]
            interface IToastFailedEventArgs : IInspectable
            {
                [propget] HRESULT ErrorCode([out] [retval] HRESULT* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotification)]
            [uuid(997E2675-059E-4E60-8B06-1760917C8B80)]
            interface IToastNotification : IInspectable
            {
                [propget] HRESULT Content([out] [retval] Windows.Data.Xml.Dom.XmlDocument** value);
                [propput] HRESULT ExpirationTime([in] Windows.Foundation.IReference<Windows.Foundation.DateTime>* value);
                [propget] HRESULT ExpirationTime([out] [retval] Windows.Foundation.IReference<Windows.Foundation.DateTime>** value);
                [eventadd] HRESULT Dismissed([in] Windows.Foundation.TypedEventHandler<Windows.UI.Notifications.ToastNotification*, Windows.UI.Notifications.ToastDismissedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Dismissed([in] EventRegistrationToken token);
                [eventadd] HRESULT Activated([in] Windows.Foundation.TypedEventHandler<Windows.UI.Notifications.ToastNotification*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Activated([in] EventRegistrationToken token);
                [eventadd] HRESULT Failed([in] Windows.Foundation.TypedEventHandler<Windows.UI.Notifications.ToastNotification*, Windows.UI.Notifications.ToastFailedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Failed([in] EventRegistrationToken token);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotification)]
            [uuid(9DFB9FD1-143A-490E-90BF-B9FBA7132DE7)]
            interface IToastNotification2 : IInspectable
            {
                [propput] HRESULT Tag([in] HSTRING value);
                [propget] HRESULT Tag([out] [retval] HSTRING* value);
                [propput] HRESULT Group([in] HSTRING value);
                [propget] HRESULT Group([out] [retval] HSTRING* value);
                [propput] HRESULT SuppressPopup([in] boolean value);
                [propget] HRESULT SuppressPopup([out] [retval] boolean* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotification)]
            [uuid(31E8AED8-8141-4F99-BC0A-C4ED21297D77)]
            interface IToastNotification3 : IInspectable
            {
                [propget] HRESULT NotificationMirroring([out] [retval] Windows.UI.Notifications.NotificationMirroring* value);
                [propput] HRESULT NotificationMirroring([in] Windows.UI.Notifications.NotificationMirroring value);
                [propget] HRESULT RemoteId([out] [retval] HSTRING* value);
                [propput] HRESULT RemoteId([in] HSTRING value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotification)]
            [uuid(15154935-28EA-4727-88E9-C58680E2D118)]
            interface IToastNotification4 : IInspectable
            {
                [propget] HRESULT Data([out] [retval] Windows.UI.Notifications.NotificationData** value);
                [propput] HRESULT Data([in] Windows.UI.Notifications.NotificationData* value);
                [propget] HRESULT Priority([out] [retval] Windows.UI.Notifications.ToastNotificationPriority* value);
                [propput] HRESULT Priority([in] Windows.UI.Notifications.ToastNotificationPriority value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 8.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotification)]
            [uuid(43EBFE53-89AE-5C1E-A279-3AECFE9B6F54)]
            interface IToastNotification6 : IInspectable
            {
                [propget] HRESULT ExpiresOnReboot([out] [retval] boolean* value);
                [propput] HRESULT ExpiresOnReboot([in] boolean value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotificationActionTriggerDetail)]
            [uuid(9445135A-38F3-42F6-96AA-7955B0F03DA2)]
            interface IToastNotificationActionTriggerDetail : IInspectable
            {
                [propget] HRESULT Argument([out] [retval] HSTRING* value);
                [propget] HRESULT UserInput([out] [retval] Windows.Foundation.Collections.ValueSet** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotification)]
            [uuid(04124B20-82C6-4229-B109-FD9ED4662B53)]
            interface IToastNotificationFactory : IInspectable
            {
                HRESULT CreateToastNotification([in] Windows.Data.Xml.Dom.XmlDocument* content, [out] [retval] Windows.UI.Notifications.ToastNotification** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotificationHistory)]
            [uuid(5CADDC63-01D3-4C97-986F-0533483FEE14)]
            interface IToastNotificationHistory : IInspectable
            {
                [overload("RemoveGroup")] HRESULT RemoveGroup([in] HSTRING group);
                [overload("RemoveGroup")] HRESULT RemoveGroupWithId([in] HSTRING group, [in] HSTRING applicationId);
                [overload("Remove")] HRESULT RemoveGroupedTagWithId([in] HSTRING tag, [in] HSTRING group, [in] HSTRING applicationId);
                [overload("Remove")] HRESULT RemoveGroupedTag([in] HSTRING tag, [in] HSTRING group);
                [overload("Remove")] HRESULT Remove([in] HSTRING tag);
                [overload("Clear")] HRESULT Clear();
                [overload("Clear")] HRESULT ClearWithId([in] HSTRING applicationId);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotificationHistory)]
            [uuid(3BC3D253-2F31-4092-9129-8AD5ABF067DA)]
            interface IToastNotificationHistory2 : IInspectable
            {
                [overload("GetHistory")] HRESULT GetHistory([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.UI.Notifications.ToastNotification*>** result);
                [overload("GetHistory")] HRESULT GetHistoryWithId([in] HSTRING applicationId, [out] [retval] Windows.Foundation.Collections.IVectorView<Windows.UI.Notifications.ToastNotification*>** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotificationHistoryChangedTriggerDetail)]
            [uuid(DB037FFA-0068-412C-9C83-267C37F65670)]
            interface IToastNotificationHistoryChangedTriggerDetail : IInspectable
            {
                [propget] HRESULT ChangeType([out] [retval] Windows.UI.Notifications.ToastHistoryChangedType* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotificationHistoryChangedTriggerDetail)]
            [uuid(0B36E982-C871-49FB-BABB-25BDBC4CC45B)]
            interface IToastNotificationHistoryChangedTriggerDetail2 : IInspectable
            {
                [propget] HRESULT CollectionId([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotificationManagerForUser)]
            [uuid(79AB57F6-43FE-487B-8A7F-99567200AE94)]
            interface IToastNotificationManagerForUser : IInspectable
            {
                [overload("CreateToastNotifier")] HRESULT CreateToastNotifier([out] [retval] Windows.UI.Notifications.ToastNotifier** result);
                [overload("CreateToastNotifier")] HRESULT CreateToastNotifierWithId([in] HSTRING applicationId, [out] [retval] Windows.UI.Notifications.ToastNotifier** result);
                [propget] HRESULT History([out] [retval] Windows.UI.Notifications.ToastNotificationHistory** value);
                [propget] HRESULT User([out] [retval] Windows.System.User** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotificationManagerForUser)]
            [uuid(679C64B7-81AB-42C2-8819-C958767753F4)]
            interface IToastNotificationManagerForUser2 : IInspectable
            {
                HRESULT GetToastNotifierForToastCollectionIdAsync([in] HSTRING collectionId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.UI.Notifications.ToastNotifier*>** operation);
                HRESULT GetHistoryForToastCollectionIdAsync([in] HSTRING collectionId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.UI.Notifications.ToastNotificationHistory*>** operation);
                [overload("GetToastCollectionManager")] HRESULT GetToastCollectionManager([out] [retval] Windows.UI.Notifications.ToastCollectionManager** result);
                [overload("GetToastCollectionManager")] HRESULT GetToastCollectionManagerWithAppId([in] HSTRING appId, [out] [retval] Windows.UI.Notifications.ToastCollectionManager** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotificationManager)]
            [uuid(50AC103F-D235-4598-BBEF-98FE4D1A3AD4)]
            interface IToastNotificationManagerStatics : IInspectable
            {
                [overload("CreateToastNotifier")] HRESULT CreateToastNotifier([out] [retval] Windows.UI.Notifications.ToastNotifier** result);
                [overload("CreateToastNotifier")] HRESULT CreateToastNotifierWithId([in] HSTRING applicationId, [out] [retval] Windows.UI.Notifications.ToastNotifier** result);
                HRESULT GetTemplateContent([in] Windows.UI.Notifications.ToastTemplateType type, [out] [retval] Windows.Data.Xml.Dom.XmlDocument** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotificationManager)]
            [uuid(7AB93C52-0E48-4750-BA9D-1A4113981847)]
            interface IToastNotificationManagerStatics2 : IInspectable
            {
                [propget] HRESULT History([out] [retval] Windows.UI.Notifications.ToastNotificationHistory** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotificationManager)]
            [uuid(8F993FD3-E516-45FB-8130-398E93FA52C3)]
            interface IToastNotificationManagerStatics4 : IInspectable
            {
                HRESULT GetForUser([in] Windows.System.User* user, [out] [retval] Windows.UI.Notifications.ToastNotificationManagerForUser** result);
                HRESULT ConfigureNotificationMirroring([in] Windows.UI.Notifications.NotificationMirroring value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotificationManager)]
            [uuid(D6F5F569-D40D-407C-8989-88CAB42CFD14)]
            interface IToastNotificationManagerStatics5 : IInspectable
            {
                HRESULT GetDefault([out] [retval] Windows.UI.Notifications.ToastNotificationManagerForUser** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotifier)]
            [uuid(75927B93-03F3-41EC-91D3-6E5BAC1B38E7)]
            interface IToastNotifier : IInspectable
            {
                HRESULT Show([in] Windows.UI.Notifications.ToastNotification* notification);
                HRESULT Hide([in] Windows.UI.Notifications.ToastNotification* notification);
                [propget] HRESULT Setting([out] [retval] Windows.UI.Notifications.NotificationSetting* value);
                HRESULT AddToSchedule([in] Windows.UI.Notifications.ScheduledToastNotification* scheduledToast);
                HRESULT RemoveFromSchedule([in] Windows.UI.Notifications.ScheduledToastNotification* scheduledToast);
                HRESULT GetScheduledToastNotifications([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.UI.Notifications.ScheduledToastNotification*>** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotifier)]
            [uuid(354389C6-7C01-4BD5-9C20-604340CD2B74)]
            interface IToastNotifier2 : IInspectable
            {
                [overload("Update")] HRESULT UpdateWithTagAndGroup([in] Windows.UI.Notifications.NotificationData* data, [in] HSTRING tag, [in] HSTRING group, [out] [retval] Windows.UI.Notifications.NotificationUpdateResult* result);
                [overload("Update")] HRESULT UpdateWithTag([in] Windows.UI.Notifications.NotificationData* data, [in] HSTRING tag, [out] [retval] Windows.UI.Notifications.NotificationUpdateResult* result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 7.0)]
            [exclusiveto(Windows.UI.Notifications.ToastNotifier)]
            [uuid(AE75A04A-3B0C-51AD-B7E8-B08AB6052549)]
            interface IToastNotifier3 : IInspectable
            {
                [eventadd] HRESULT ScheduledToastNotificationShowing([in] Windows.Foundation.TypedEventHandler<Windows.UI.Notifications.ToastNotifier*, Windows.UI.Notifications.ScheduledToastNotificationShowingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ScheduledToastNotificationShowing([in] EventRegistrationToken token);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.UI.Notifications.UserNotification)]
            [uuid(ADF7E52F-4E53-42D5-9C33-EB5EA515B23E)]
            interface IUserNotification : IInspectable
            {
                [propget] HRESULT Notification([out] [retval] Windows.UI.Notifications.Notification** value);
                [propget] HRESULT AppInfo([out] [retval] Windows.ApplicationModel.AppInfo** value);
                [propget] HRESULT Id([out] [retval] UINT32* value);
                [propget] HRESULT CreationTime([out] [retval] Windows.Foundation.DateTime* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.UI.Notifications.UserNotificationChangedEventArgs)]
            [uuid(B6BD6839-79CF-4B25-82C0-0CE1EEF81F8C)]
            interface IUserNotificationChangedEventArgs : IInspectable
            {
                [propget] HRESULT ChangeKind([out] [retval] Windows.UI.Notifications.UserNotificationChangedKind* value);
                [propget] HRESULT UserNotificationId([out] [retval] UINT32* value);
            }

            [activatable(Windows.Foundation.UniversalApiContract, 3.0)]
            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass AdaptiveNotificationText
            {
                [default] interface Windows.UI.Notifications.IAdaptiveNotificationText;
                interface Windows.UI.Notifications.IAdaptiveNotificationContent;
            }

            [activatable(Windows.UI.Notifications.IBadgeNotificationFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(mta)]
            runtimeclass BadgeNotification
            {
                [default] interface Windows.UI.Notifications.IBadgeNotification;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Windows.UI.Notifications.IBadgeUpdateManagerStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.UI.Notifications.IBadgeUpdateManagerStatics2, Windows.Foundation.UniversalApiContract, 3.0)]
            [threading(mta)]
            runtimeclass BadgeUpdateManager
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [marshaling_behavior(agile)]
            runtimeclass BadgeUpdateManagerForUser
            {
                [default] interface Windows.UI.Notifications.IBadgeUpdateManagerForUser;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass BadgeUpdater
            {
                [default] interface Windows.UI.Notifications.IBadgeUpdater;
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [marshaling_behavior(agile)]
            [static(Windows.UI.Notifications.IKnownAdaptiveNotificationHintsStatics, Windows.Foundation.UniversalApiContract, 3.0)]
            [threading(both)]
            runtimeclass KnownAdaptiveNotificationHints
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [marshaling_behavior(agile)]
            [static(Windows.UI.Notifications.IKnownAdaptiveNotificationTextStylesStatics, Windows.Foundation.UniversalApiContract, 3.0)]
            [threading(both)]
            runtimeclass KnownAdaptiveNotificationTextStyles
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [marshaling_behavior(agile)]
            [static(Windows.UI.Notifications.IKnownNotificationBindingsStatics, Windows.Foundation.UniversalApiContract, 3.0)]
            [threading(both)]
            runtimeclass KnownNotificationBindings
            {
            }

            [activatable(Windows.Foundation.UniversalApiContract, 3.0)]
            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass Notification
            {
                [default] interface Windows.UI.Notifications.INotification;
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [marshaling_behavior(agile)]
            runtimeclass NotificationBinding
            {
                [default] interface Windows.UI.Notifications.INotificationBinding;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 4.0)]
            [activatable(Windows.UI.Notifications.INotificationDataFactory, Windows.Foundation.UniversalApiContract, 4.0)]
            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass NotificationData
            {
                [default] interface Windows.UI.Notifications.INotificationData;
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [marshaling_behavior(agile)]
            runtimeclass NotificationVisual
            {
                [default] interface Windows.UI.Notifications.INotificationVisual;
            }

            [activatable(Windows.UI.Notifications.IScheduledTileNotificationFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(mta)]
            runtimeclass ScheduledTileNotification
            {
                [default] interface Windows.UI.Notifications.IScheduledTileNotification;
            }

            [activatable(Windows.UI.Notifications.IScheduledToastNotificationFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(mta)]
            runtimeclass ScheduledToastNotification
            {
                [default] interface Windows.UI.Notifications.IScheduledToastNotification;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Notifications.IScheduledToastNotification2;
                [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Notifications.IScheduledToastNotification3;
                [contract(Windows.Foundation.UniversalApiContract, 6.0)] interface Windows.UI.Notifications.IScheduledToastNotification4;
            }

            [contract(Windows.Foundation.UniversalApiContract, 7.0)]
            [marshaling_behavior(agile)]
            runtimeclass ScheduledToastNotificationShowingEventArgs
            {
                [default] interface Windows.UI.Notifications.IScheduledToastNotificationShowingEventArgs;
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [marshaling_behavior(agile)]
            runtimeclass ShownTileNotification
            {
                [default] interface Windows.UI.Notifications.IShownTileNotification;
            }

            [activatable(Windows.UI.Notifications.ITileFlyoutNotificationFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(mta)]
            runtimeclass TileFlyoutNotification
            {
                [default] interface Windows.UI.Notifications.ITileFlyoutNotification;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Windows.UI.Notifications.ITileFlyoutUpdateManagerStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            [threading(mta)]
            runtimeclass TileFlyoutUpdateManager
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(standard)]
            runtimeclass TileFlyoutUpdater
            {
                [default] interface Windows.UI.Notifications.ITileFlyoutUpdater;
            }

            [activatable(Windows.UI.Notifications.ITileNotificationFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(mta)]
            runtimeclass TileNotification
            {
                [default] interface Windows.UI.Notifications.ITileNotification;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Windows.UI.Notifications.ITileUpdateManagerStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.UI.Notifications.ITileUpdateManagerStatics2, Windows.Foundation.UniversalApiContract, 3.0)]
            [threading(mta)]
            runtimeclass TileUpdateManager
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [marshaling_behavior(agile)]
            runtimeclass TileUpdateManagerForUser
            {
                [default] interface Windows.UI.Notifications.ITileUpdateManagerForUser;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass TileUpdater
            {
                [default] interface Windows.UI.Notifications.ITileUpdater;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Notifications.ITileUpdater2;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(standard)]
            runtimeclass ToastActivatedEventArgs
            {
                [default] interface Windows.UI.Notifications.IToastActivatedEventArgs;
                [contract(Windows.Foundation.UniversalApiContract, 8.0)] interface Windows.UI.Notifications.IToastActivatedEventArgs2;
            }

            [activatable(Windows.UI.Notifications.IToastCollectionFactory, Windows.Foundation.UniversalApiContract, 4.0)]
            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [marshaling_behavior(agile)]
            [threading(mta)]
            runtimeclass ToastCollection
            {
                [default] interface Windows.UI.Notifications.IToastCollection;
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [marshaling_behavior(agile)]
            runtimeclass ToastCollectionManager
            {
                [default] interface Windows.UI.Notifications.IToastCollectionManager;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass ToastDismissedEventArgs
            {
                [default] interface Windows.UI.Notifications.IToastDismissedEventArgs;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass ToastFailedEventArgs
            {
                [default] interface Windows.UI.Notifications.IToastFailedEventArgs;
            }

            [activatable(Windows.UI.Notifications.IToastNotificationFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(mta)]
            runtimeclass ToastNotification
            {
                [default] interface Windows.UI.Notifications.IToastNotification;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Notifications.IToastNotification2;
                [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Notifications.IToastNotification3;
                [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Notifications.IToastNotification4;
                [contract(Windows.Foundation.UniversalApiContract, 8.0)] interface Windows.UI.Notifications.IToastNotification6;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(standard)]
            runtimeclass ToastNotificationActionTriggerDetail
            {
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] [default] interface Windows.UI.Notifications.IToastNotificationActionTriggerDetail;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(standard)]
            runtimeclass ToastNotificationHistory
            {
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Notifications.IToastNotificationHistory2;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] [default] interface Windows.UI.Notifications.IToastNotificationHistory;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(standard)]
            runtimeclass ToastNotificationHistoryChangedTriggerDetail
            {
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] [default] interface Windows.UI.Notifications.IToastNotificationHistoryChangedTriggerDetail;
                [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Notifications.IToastNotificationHistoryChangedTriggerDetail2;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Windows.UI.Notifications.IToastNotificationManagerStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.UI.Notifications.IToastNotificationManagerStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.UI.Notifications.IToastNotificationManagerStatics4, Windows.Foundation.UniversalApiContract, 3.0)]
            [static(Windows.UI.Notifications.IToastNotificationManagerStatics5, Windows.Foundation.UniversalApiContract, 4.0)]
            [threading(mta)]
            runtimeclass ToastNotificationManager
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [marshaling_behavior(agile)]
            runtimeclass ToastNotificationManagerForUser
            {
                [default] interface Windows.UI.Notifications.IToastNotificationManagerForUser;
                [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Notifications.IToastNotificationManagerForUser2;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass ToastNotifier
            {
                [default] interface Windows.UI.Notifications.IToastNotifier;
                [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Notifications.IToastNotifier2;
                [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Notifications.IToastNotifier3;
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [marshaling_behavior(agile)]
            runtimeclass UserNotification
            {
                [default] interface Windows.UI.Notifications.IUserNotification;
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [marshaling_behavior(agile)]
            runtimeclass UserNotificationChangedEventArgs
            {
                [default] interface Windows.UI.Notifications.IUserNotificationChangedEventArgs;
            }
        }
    }
}
