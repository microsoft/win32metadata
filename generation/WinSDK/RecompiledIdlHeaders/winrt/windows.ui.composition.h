
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif /*COM_NO_WINDOWS_H*/
#ifndef __windows2Eui2Ecomposition_h__
#define __windows2Eui2Ecomposition_h__
#ifndef __windows2Eui2Ecomposition_p_h__
#define __windows2Eui2Ecomposition_p_h__


#pragma once

//
// Deprecated attribute support
//

#pragma push_macro("DEPRECATED")
#undef DEPRECATED

#if !defined(DISABLE_WINRT_DEPRECATION)
#if defined(__cplusplus)
#if __cplusplus >= 201402
#define DEPRECATED(x) [[deprecated(x)]]
#define DEPRECATEDENUMERATOR(x) [[deprecated(x)]]
#elif defined(_MSC_VER)
#if _MSC_VER >= 1900
#define DEPRECATED(x) [[deprecated(x)]]
#define DEPRECATEDENUMERATOR(x) [[deprecated(x)]]
#else
#define DEPRECATED(x) __declspec(deprecated(x))
#define DEPRECATEDENUMERATOR(x)
#endif // _MSC_VER >= 1900
#else // Not Standard C++ or MSVC, ignore the construct.
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif  // C++ deprecation
#else // C - disable deprecation
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif
#else // Deprecation is disabled
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif  /* DEPRECATED */

// Disable Deprecation for this header, MIDL verifies that cross-type access is acceptable
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#else
#pragma warning(push)
#pragma warning(disable: 4996)
#endif

// Ensure that the setting of the /ns_prefix command line switch is consistent for all headers.
// If you get an error from the compiler indicating "warning C4005: 'CHECK_NS_PREFIX_STATE': macro redefinition", this
// indicates that you have included two different headers with different settings for the /ns_prefix MIDL command line switch
#if !defined(DISABLE_NS_PREFIX_CHECKS)
#define CHECK_NS_PREFIX_STATE "always"
#endif // !defined(DISABLE_NS_PREFIX_CHECKS)


#pragma push_macro("MIDL_CONST_ID")
#undef MIDL_CONST_ID
#define MIDL_CONST_ID const __declspec(selectany)


//  API Contract Inclusion Definitions
#if !defined(SPECIFIC_API_CONTRACT_DEFINITIONS)
#if !defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)
#define WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION 0x40000
#endif // defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)

#if !defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)
#define WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION 0xa0000
#endif // defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)

#if !defined(WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION)
#define WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION 0x70000
#endif // defined(WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION)

#if !defined(WINDOWS_UI_CORE_COREWINDOWDIALOGSCONTRACT_VERSION)
#define WINDOWS_UI_CORE_COREWINDOWDIALOGSCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_UI_CORE_COREWINDOWDIALOGSCONTRACT_VERSION)

#endif // defined(SPECIFIC_API_CONTRACT_DEFINITIONS)


// Header files for imported files
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "windowscontracts.h"
#include "Windows.Foundation.h"
#include "Windows.Foundation.Numerics.h"
#include "Windows.Graphics.h"
#include "Windows.Graphics.DirectX.h"
#include "Windows.Graphics.Effects.h"
#include "Windows.System.h"
#include "Windows.UI.h"
#include "Windows.UI.Core.h"
// Importing Collections header
#include <windows.foundation.collections.h>

#if defined(__cplusplus) && !defined(CINTERFACE)
/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IAmbientLight;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIAmbientLight ABI::Windows::UI::Composition::IAmbientLight

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IAmbientLight2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2 ABI::Windows::UI::Composition::IAmbientLight2

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAnimationController_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationController_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IAnimationController;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIAnimationController ABI::Windows::UI::Composition::IAnimationController

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAnimationController_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IAnimationControllerStatics;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics ABI::Windows::UI::Composition::IAnimationControllerStatics

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IAnimationObject;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIAnimationObject ABI::Windows::UI::Composition::IAnimationObject

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IAnimationPropertyInfo;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo ABI::Windows::UI::Composition::IAnimationPropertyInfo

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IBooleanKeyFrameAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation ABI::Windows::UI::Composition::IBooleanKeyFrameAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IBounceScalarNaturalMotionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation ABI::Windows::UI::Composition::IBounceScalarNaturalMotionAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IBounceVector2NaturalMotionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation ABI::Windows::UI::Composition::IBounceVector2NaturalMotionAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IBounceVector3NaturalMotionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation ABI::Windows::UI::Composition::IBounceVector3NaturalMotionAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IColorKeyFrameAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation ABI::Windows::UI::Composition::IColorKeyFrameAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation ABI::Windows::UI::Composition::ICompositionAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionAnimation2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2 ABI::Windows::UI::Composition::ICompositionAnimation2

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionAnimation3;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3 ABI::Windows::UI::Composition::ICompositionAnimation3

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionAnimation4;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4 ABI::Windows::UI::Composition::ICompositionAnimation4

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionAnimationBase;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase ABI::Windows::UI::Composition::ICompositionAnimationBase

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionAnimationFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory ABI::Windows::UI::Composition::ICompositionAnimationFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionAnimationGroup;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup ABI::Windows::UI::Composition::ICompositionAnimationGroup

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionBackdropBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush ABI::Windows::UI::Composition::ICompositionBackdropBrush

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionBatchCompletedEventArgs;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs ABI::Windows::UI::Composition::ICompositionBatchCompletedEventArgs

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionBrush ABI::Windows::UI::Composition::ICompositionBrush

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionBrushFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory ABI::Windows::UI::Composition::ICompositionBrushFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionCapabilities;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities ABI::Windows::UI::Composition::ICompositionCapabilities

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionCapabilitiesStatics;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics ABI::Windows::UI::Composition::ICompositionCapabilitiesStatics

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionClip_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionClip_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionClip;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip ABI::Windows::UI::Composition::ICompositionClip

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionClip_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionClip2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionClip2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionClip2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2 ABI::Windows::UI::Composition::ICompositionClip2

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionClip2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionClipFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory ABI::Windows::UI::Composition::ICompositionClipFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionColorBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush ABI::Windows::UI::Composition::ICompositionColorBrush

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionColorGradientStop;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop ABI::Windows::UI::Composition::ICompositionColorGradientStop

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionColorGradientStopCollection;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection ABI::Windows::UI::Composition::ICompositionColorGradientStopCollection

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionCommitBatch;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch ABI::Windows::UI::Composition::ICompositionCommitBatch

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionContainerShape;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape ABI::Windows::UI::Composition::ICompositionContainerShape

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionDrawingSurface;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface ABI::Windows::UI::Composition::ICompositionDrawingSurface

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionDrawingSurface2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2 ABI::Windows::UI::Composition::ICompositionDrawingSurface2

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionDrawingSurfaceFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory ABI::Windows::UI::Composition::ICompositionDrawingSurfaceFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionEasingFunction;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction ABI::Windows::UI::Composition::ICompositionEasingFunction

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionEasingFunctionFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory ABI::Windows::UI::Composition::ICompositionEasingFunctionFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionEffectBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush ABI::Windows::UI::Composition::ICompositionEffectBrush

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionEffectFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory ABI::Windows::UI::Composition::ICompositionEffectFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionEffectSourceParameter;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter ABI::Windows::UI::Composition::ICompositionEffectSourceParameter

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionEffectSourceParameterFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory ABI::Windows::UI::Composition::ICompositionEffectSourceParameterFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionEllipseGeometry;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry ABI::Windows::UI::Composition::ICompositionEllipseGeometry

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionGeometricClip;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip ABI::Windows::UI::Composition::ICompositionGeometricClip

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionGeometry;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry ABI::Windows::UI::Composition::ICompositionGeometry

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionGeometryFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory ABI::Windows::UI::Composition::ICompositionGeometryFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionGradientBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush ABI::Windows::UI::Composition::ICompositionGradientBrush

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionGradientBrush2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2 ABI::Windows::UI::Composition::ICompositionGradientBrush2

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionGradientBrushFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory ABI::Windows::UI::Composition::ICompositionGradientBrushFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionGraphicsDevice;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice ABI::Windows::UI::Composition::ICompositionGraphicsDevice

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionGraphicsDevice2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2 ABI::Windows::UI::Composition::ICompositionGraphicsDevice2

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionGraphicsDevice3;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3 ABI::Windows::UI::Composition::ICompositionGraphicsDevice3

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionLight_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLight_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionLight;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight ABI::Windows::UI::Composition::ICompositionLight

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionLight_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionLight2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLight2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionLight2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight2 ABI::Windows::UI::Composition::ICompositionLight2

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionLight2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionLight3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLight3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionLight3;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight3 ABI::Windows::UI::Composition::ICompositionLight3

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionLight3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionLightFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory ABI::Windows::UI::Composition::ICompositionLightFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionLineGeometry;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry ABI::Windows::UI::Composition::ICompositionLineGeometry

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionLinearGradientBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush ABI::Windows::UI::Composition::ICompositionLinearGradientBrush

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionMaskBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush ABI::Windows::UI::Composition::ICompositionMaskBrush

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionMipmapSurface;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface ABI::Windows::UI::Composition::ICompositionMipmapSurface

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionNineGridBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush ABI::Windows::UI::Composition::ICompositionNineGridBrush

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionObject;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject ABI::Windows::UI::Composition::ICompositionObject

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionObject_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionObject2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionObject2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject2 ABI::Windows::UI::Composition::ICompositionObject2

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionObject2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionObject3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionObject3;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject3 ABI::Windows::UI::Composition::ICompositionObject3

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionObject3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionObject4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionObject4;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject4 ABI::Windows::UI::Composition::ICompositionObject4

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionObject4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionObjectFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory ABI::Windows::UI::Composition::ICompositionObjectFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionObjectStatics;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics ABI::Windows::UI::Composition::ICompositionObjectStatics

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionPath_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPath_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionPath;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionPath ABI::Windows::UI::Composition::ICompositionPath

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionPath_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionPathFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory ABI::Windows::UI::Composition::ICompositionPathFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionPathGeometry;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry ABI::Windows::UI::Composition::ICompositionPathGeometry

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionProjectedShadow;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow ABI::Windows::UI::Composition::ICompositionProjectedShadow

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionProjectedShadowCaster;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster ABI::Windows::UI::Composition::ICompositionProjectedShadowCaster

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionProjectedShadowCasterCollection;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection ABI::Windows::UI::Composition::ICompositionProjectedShadowCasterCollection

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionProjectedShadowCasterCollectionStatics;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics ABI::Windows::UI::Composition::ICompositionProjectedShadowCasterCollectionStatics

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionProjectedShadowReceiver;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver ABI::Windows::UI::Composition::ICompositionProjectedShadowReceiver

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionProjectedShadowReceiverUnorderedCollection;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection ABI::Windows::UI::Composition::ICompositionProjectedShadowReceiverUnorderedCollection

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionPropertySet;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet ABI::Windows::UI::Composition::ICompositionPropertySet

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionPropertySet2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2 ABI::Windows::UI::Composition::ICompositionPropertySet2

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionRadialGradientBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush ABI::Windows::UI::Composition::ICompositionRadialGradientBrush

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionRectangleGeometry;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry ABI::Windows::UI::Composition::ICompositionRectangleGeometry

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionRoundedRectangleGeometry;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry ABI::Windows::UI::Composition::ICompositionRoundedRectangleGeometry

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionScopedBatch;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch ABI::Windows::UI::Composition::ICompositionScopedBatch

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionShadow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShadow_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionShadow;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionShadow ABI::Windows::UI::Composition::ICompositionShadow

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionShadow_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionShadowFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory ABI::Windows::UI::Composition::ICompositionShadowFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionShape_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShape_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionShape;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape ABI::Windows::UI::Composition::ICompositionShape

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionShape_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionShapeFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory ABI::Windows::UI::Composition::ICompositionShapeFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionSpriteShape;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape ABI::Windows::UI::Composition::ICompositionSpriteShape

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurface_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionSurface;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurface ABI::Windows::UI::Composition::ICompositionSurface

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionSurfaceBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush ABI::Windows::UI::Composition::ICompositionSurfaceBrush

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionSurfaceBrush2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2 ABI::Windows::UI::Composition::ICompositionSurfaceBrush2

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionSurfaceBrush3;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3 ABI::Windows::UI::Composition::ICompositionSurfaceBrush3

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionTarget_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTarget_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionTarget;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionTarget ABI::Windows::UI::Composition::ICompositionTarget

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionTarget_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionTargetFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory ABI::Windows::UI::Composition::ICompositionTargetFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionTransform_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTransform_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionTransform;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionTransform ABI::Windows::UI::Composition::ICompositionTransform

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionTransform_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionTransformFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory ABI::Windows::UI::Composition::ICompositionTransformFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionViewBox;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox ABI::Windows::UI::Composition::ICompositionViewBox

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionVirtualDrawingSurface;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface ABI::Windows::UI::Composition::ICompositionVirtualDrawingSurface

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionVirtualDrawingSurfaceFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory ABI::Windows::UI::Composition::ICompositionVirtualDrawingSurfaceFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionVisualSurface;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface ABI::Windows::UI::Composition::ICompositionVisualSurface

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositor;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositor ABI::Windows::UI::Composition::ICompositor

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositor2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositor2 ABI::Windows::UI::Composition::ICompositor2

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositor3;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositor3 ABI::Windows::UI::Composition::ICompositor3

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositor4;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositor4 ABI::Windows::UI::Composition::ICompositor4

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor5_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositor5;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositor5 ABI::Windows::UI::Composition::ICompositor5

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor6_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositor6;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositor6 ABI::Windows::UI::Composition::ICompositor6

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositorStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositorStatics;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositorStatics ABI::Windows::UI::Composition::ICompositorStatics

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositorStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositorWithProjectedShadow;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow ABI::Windows::UI::Composition::ICompositorWithProjectedShadow

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositorWithRadialGradient;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient ABI::Windows::UI::Composition::ICompositorWithRadialGradient

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositorWithVisualSurface;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface ABI::Windows::UI::Composition::ICompositorWithVisualSurface

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IContainerVisual;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIContainerVisual ABI::Windows::UI::Composition::IContainerVisual

#endif // ____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IContainerVisualFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory ABI::Windows::UI::Composition::IContainerVisualFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICubicBezierEasingFunction;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction ABI::Windows::UI::Composition::ICubicBezierEasingFunction

#endif // ____x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIDistantLight_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIDistantLight_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IDistantLight;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight ABI::Windows::UI::Composition::IDistantLight

#endif // ____x_ABI_CWindows_CUI_CComposition_CIDistantLight_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIDistantLight2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIDistantLight2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IDistantLight2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight2 ABI::Windows::UI::Composition::IDistantLight2

#endif // ____x_ABI_CWindows_CUI_CComposition_CIDistantLight2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIDropShadow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIDropShadow_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IDropShadow;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow ABI::Windows::UI::Composition::IDropShadow

#endif // ____x_ABI_CWindows_CUI_CComposition_CIDropShadow_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIDropShadow2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIDropShadow2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IDropShadow2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow2 ABI::Windows::UI::Composition::IDropShadow2

#endif // ____x_ABI_CWindows_CUI_CComposition_CIDropShadow2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IExpressionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation ABI::Windows::UI::Composition::IExpressionAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IImplicitAnimationCollection;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection ABI::Windows::UI::Composition::IImplicitAnimationCollection

#endif // ____x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIInsetClip_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIInsetClip_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IInsetClip;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIInsetClip ABI::Windows::UI::Composition::IInsetClip

#endif // ____x_ABI_CWindows_CUI_CComposition_CIInsetClip_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IKeyFrameAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation ABI::Windows::UI::Composition::IKeyFrameAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IKeyFrameAnimation2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2 ABI::Windows::UI::Composition::IKeyFrameAnimation2

#endif // ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IKeyFrameAnimation3;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3 ABI::Windows::UI::Composition::IKeyFrameAnimation3

#endif // ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IKeyFrameAnimationFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory ABI::Windows::UI::Composition::IKeyFrameAnimationFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CILayerVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CILayerVisual_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ILayerVisual;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CILayerVisual ABI::Windows::UI::Composition::ILayerVisual

#endif // ____x_ABI_CWindows_CUI_CComposition_CILayerVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CILayerVisual2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CILayerVisual2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ILayerVisual2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CILayerVisual2 ABI::Windows::UI::Composition::ILayerVisual2

#endif // ____x_ABI_CWindows_CUI_CComposition_CILayerVisual2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ILinearEasingFunction;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction ABI::Windows::UI::Composition::ILinearEasingFunction

#endif // ____x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface INaturalMotionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation ABI::Windows::UI::Composition::INaturalMotionAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface INaturalMotionAnimationFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory ABI::Windows::UI::Composition::INaturalMotionAnimationFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IPathKeyFrameAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation ABI::Windows::UI::Composition::IPathKeyFrameAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIPointLight_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIPointLight_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IPointLight;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIPointLight ABI::Windows::UI::Composition::IPointLight

#endif // ____x_ABI_CWindows_CUI_CComposition_CIPointLight_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIPointLight2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIPointLight2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IPointLight2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIPointLight2 ABI::Windows::UI::Composition::IPointLight2

#endif // ____x_ABI_CWindows_CUI_CComposition_CIPointLight2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIPointLight3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIPointLight3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IPointLight3;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIPointLight3 ABI::Windows::UI::Composition::IPointLight3

#endif // ____x_ABI_CWindows_CUI_CComposition_CIPointLight3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IQuaternionKeyFrameAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation ABI::Windows::UI::Composition::IQuaternionKeyFrameAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IRedirectVisual;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual ABI::Windows::UI::Composition::IRedirectVisual

#endif // ____x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IRenderingDeviceReplacedEventArgs;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs ABI::Windows::UI::Composition::IRenderingDeviceReplacedEventArgs

#endif // ____x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IScalarKeyFrameAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation ABI::Windows::UI::Composition::IScalarKeyFrameAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IScalarNaturalMotionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation ABI::Windows::UI::Composition::IScalarNaturalMotionAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IScalarNaturalMotionAnimationFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory ABI::Windows::UI::Composition::IScalarNaturalMotionAnimationFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIShapeVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIShapeVisual_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IShapeVisual;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIShapeVisual ABI::Windows::UI::Composition::IShapeVisual

#endif // ____x_ABI_CWindows_CUI_CComposition_CIShapeVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpotLight_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpotLight_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ISpotLight;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CISpotLight ABI::Windows::UI::Composition::ISpotLight

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpotLight_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpotLight2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpotLight2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ISpotLight2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CISpotLight2 ABI::Windows::UI::Composition::ISpotLight2

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpotLight2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpotLight3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpotLight3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ISpotLight3;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CISpotLight3 ABI::Windows::UI::Composition::ISpotLight3

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpotLight3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ISpringScalarNaturalMotionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation ABI::Windows::UI::Composition::ISpringScalarNaturalMotionAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ISpringVector2NaturalMotionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation ABI::Windows::UI::Composition::ISpringVector2NaturalMotionAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ISpringVector3NaturalMotionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation ABI::Windows::UI::Composition::ISpringVector3NaturalMotionAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ISpriteVisual;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CISpriteVisual ABI::Windows::UI::Composition::ISpriteVisual

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ISpriteVisual2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2 ABI::Windows::UI::Composition::ISpriteVisual2

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IStepEasingFunction;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction ABI::Windows::UI::Composition::IStepEasingFunction

#endif // ____x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IVector2KeyFrameAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation ABI::Windows::UI::Composition::IVector2KeyFrameAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IVector2NaturalMotionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation ABI::Windows::UI::Composition::IVector2NaturalMotionAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IVector2NaturalMotionAnimationFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory ABI::Windows::UI::Composition::IVector2NaturalMotionAnimationFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IVector3KeyFrameAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation ABI::Windows::UI::Composition::IVector3KeyFrameAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IVector3NaturalMotionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation ABI::Windows::UI::Composition::IVector3NaturalMotionAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IVector3NaturalMotionAnimationFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory ABI::Windows::UI::Composition::IVector3NaturalMotionAnimationFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IVector4KeyFrameAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation ABI::Windows::UI::Composition::IVector4KeyFrameAnimation

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisual_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IVisual;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIVisual ABI::Windows::UI::Composition::IVisual

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisual2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisual2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IVisual2;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIVisual2 ABI::Windows::UI::Composition::IVisual2

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisual2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisualCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IVisualCollection;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIVisualCollection ABI::Windows::UI::Composition::IVisualCollection

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisualCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IVisualElement;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIVisualElement ABI::Windows::UI::Composition::IVisualElement

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisualFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IVisualFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIVisualFactory ABI::Windows::UI::Composition::IVisualFactory

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisualFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IVisualUnorderedCollection;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection ABI::Windows::UI::Composition::IVisualUnorderedCollection

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_FWD_DEFINED__

// Parameterized interface forward declarations (C++)

// Collection interface definitions

#ifndef DEF___FIIterator_1_float_USE
#define DEF___FIIterator_1_float_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("42614e61-b0aa-5e72-9354-2771db20b7a8"))
IIterator<float> : IIterator_impl<float>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Single>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<float> __FIIterator_1_float_t;
#define __FIIterator_1_float ABI::Windows::Foundation::Collections::__FIIterator_1_float_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_float_USE */



#ifndef DEF___FIIterable_1_float_USE
#define DEF___FIIterable_1_float_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b01bee51-063a-5fda-bd72-d76637bb8cb8"))
IIterable<float> : IIterable_impl<float>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Single>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<float> __FIIterable_1_float_t;
#define __FIIterable_1_float ABI::Windows::Foundation::Collections::__FIIterable_1_float_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_float_USE */



#ifndef DEF___FIIterator_1_HSTRING_USE
#define DEF___FIIterator_1_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8c304ebb-6615-50a4-8829-879ecd443236"))
IIterator<HSTRING> : IIterator_impl<HSTRING>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<String>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<HSTRING> __FIIterator_1_HSTRING_t;
#define __FIIterator_1_HSTRING ABI::Windows::Foundation::Collections::__FIIterator_1_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_HSTRING_USE */



#ifndef DEF___FIIterable_1_HSTRING_USE
#define DEF___FIIterable_1_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e2fcc7c1-3bfc-5a0b-b2b0-72e769d1cb7e"))
IIterable<HSTRING> : IIterable_impl<HSTRING>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<String>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<HSTRING> __FIIterable_1_HSTRING_t;
#define __FIIterable_1_HSTRING ABI::Windows::Foundation::Collections::__FIIterable_1_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_HSTRING_USE */



#ifndef DEF___FIKeyValuePair_2_HSTRING_HSTRING_USE
#define DEF___FIKeyValuePair_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("60310303-49c5-52e6-abc6-a9b36eccc716"))
IKeyValuePair<HSTRING, HSTRING> : IKeyValuePair_impl<HSTRING, HSTRING>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IKeyValuePair`2<String, String>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IKeyValuePair<HSTRING, HSTRING> __FIKeyValuePair_2_HSTRING_HSTRING_t;
#define __FIKeyValuePair_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIKeyValuePair_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIKeyValuePair_2_HSTRING_HSTRING_USE */



#ifndef DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#define DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("05eb86f1-7140-5517-b88d-cbaebe57e6b1"))
IIterator<__FIKeyValuePair_2_HSTRING_HSTRING*> : IIterator_impl<__FIKeyValuePair_2_HSTRING_HSTRING*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<__FIKeyValuePair_2_HSTRING_HSTRING*> __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_t;
#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_USE */



#ifndef DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#define DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e9bdaaf0-cbf6-5c72-be90-29cbf3a1319b"))
IIterable<__FIKeyValuePair_2_HSTRING_HSTRING*> : IIterable_impl<__FIKeyValuePair_2_HSTRING_HSTRING*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<__FIKeyValuePair_2_HSTRING_HSTRING*> __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_t;
#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_USE */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_USE
#define DEF___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3b9a274f-891d-5208-96bb-e3f40c809e9b"))
IKeyValuePair<HSTRING, ABI::Windows::UI::Composition::ICompositionAnimationBase*> : IKeyValuePair_impl<HSTRING, ABI::Windows::UI::Composition::ICompositionAnimationBase*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.UI.Composition.ICompositionAnimationBase>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IKeyValuePair<HSTRING, ABI::Windows::UI::Composition::ICompositionAnimationBase*> __FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_t;
#define __FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase ABI::Windows::Foundation::Collections::__FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_USE
#define DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("85924e77-fc46-5a0d-bdaf-463c4f86c172"))
IIterator<__FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase*> : IIterator_impl<__FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.UI.Composition.ICompositionAnimationBase>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<__FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase*> __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_t;
#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase ABI::Windows::Foundation::Collections::__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_USE
#define DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c739c420-64b2-53f2-89b9-05906aba7cb0"))
IIterable<__FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase*> : IIterable_impl<__FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.UI.Composition.ICompositionAnimationBase>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<__FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase*> __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_t;
#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase ABI::Windows::Foundation::Collections::__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#ifndef DEF___FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation_USE
#define DEF___FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("98efbe55-0a66-556a-9adc-4ab59c696846"))
IIterator<ABI::Windows::UI::Composition::CompositionAnimation*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::CompositionAnimation*, ABI::Windows::UI::Composition::ICompositionAnimation*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Composition.CompositionAnimation>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Composition::CompositionAnimation*> __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation_t;
#define __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#ifndef DEF___FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation_USE
#define DEF___FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0cb59942-c6f3-585f-9a92-b47e8dd38ebf"))
IIterable<ABI::Windows::UI::Composition::CompositionAnimation*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::CompositionAnimation*, ABI::Windows::UI::Composition::ICompositionAnimation*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionAnimation>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Composition::CompositionAnimation*> __FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation_t;
#define __FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionColorGradientStop;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop_USE
#define DEF___FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("746a0f51-47f4-5395-8edd-8ae1e93a8183"))
IIterator<ABI::Windows::UI::Composition::CompositionColorGradientStop*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::CompositionColorGradientStop*, ABI::Windows::UI::Composition::ICompositionColorGradientStop*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Composition.CompositionColorGradientStop>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Composition::CompositionColorGradientStop*> __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop_t;
#define __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop_USE
#define DEF___FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0f2cfac1-cdbc-5c4e-a7d2-a3914fb63426"))
IIterable<ABI::Windows::UI::Composition::CompositionColorGradientStop*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::CompositionColorGradientStop*, ABI::Windows::UI::Composition::ICompositionColorGradientStop*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionColorGradientStop>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Composition::CompositionColorGradientStop*> __FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop_t;
#define __FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionProjectedShadowCaster;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

#ifndef DEF___FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_USE
#define DEF___FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6563b1b1-4b53-53df-a0c0-d3ca1dbbfe59"))
IIterator<ABI::Windows::UI::Composition::CompositionProjectedShadowCaster*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::CompositionProjectedShadowCaster*, ABI::Windows::UI::Composition::ICompositionProjectedShadowCaster*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Composition.CompositionProjectedShadowCaster>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Composition::CompositionProjectedShadowCaster*> __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_t;
#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

#ifndef DEF___FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_USE
#define DEF___FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b8301b02-429b-5d71-ab0c-8d1141b12ac3"))
IIterable<ABI::Windows::UI::Composition::CompositionProjectedShadowCaster*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::CompositionProjectedShadowCaster*, ABI::Windows::UI::Composition::ICompositionProjectedShadowCaster*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionProjectedShadowCaster>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Composition::CompositionProjectedShadowCaster*> __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_t;
#define __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionProjectedShadowReceiver;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

#ifndef DEF___FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_USE
#define DEF___FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d2452315-9a6e-5033-9e8f-c25941adbe71"))
IIterator<ABI::Windows::UI::Composition::CompositionProjectedShadowReceiver*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::CompositionProjectedShadowReceiver*, ABI::Windows::UI::Composition::ICompositionProjectedShadowReceiver*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Composition.CompositionProjectedShadowReceiver>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Composition::CompositionProjectedShadowReceiver*> __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_t;
#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

#ifndef DEF___FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_USE
#define DEF___FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e2775a28-ec48-5cb8-b352-76f7f981d7a4"))
IIterable<ABI::Windows::UI::Composition::CompositionProjectedShadowReceiver*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::CompositionProjectedShadowReceiver*, ABI::Windows::UI::Composition::ICompositionProjectedShadowReceiver*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionProjectedShadowReceiver>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Composition::CompositionProjectedShadowReceiver*> __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_t;
#define __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionShape;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

#ifndef DEF___FIIterator_1_Windows__CUI__CComposition__CCompositionShape_USE
#define DEF___FIIterator_1_Windows__CUI__CComposition__CCompositionShape_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ff8d5b3b-ab18-5307-9ffe-e3b5d63452a4"))
IIterator<ABI::Windows::UI::Composition::CompositionShape*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::CompositionShape*, ABI::Windows::UI::Composition::ICompositionShape*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Composition.CompositionShape>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Composition::CompositionShape*> __FIIterator_1_Windows__CUI__CComposition__CCompositionShape_t;
#define __FIIterator_1_Windows__CUI__CComposition__CCompositionShape ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CComposition__CCompositionShape_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CComposition__CCompositionShape_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

#ifndef DEF___FIIterable_1_Windows__CUI__CComposition__CCompositionShape_USE
#define DEF___FIIterable_1_Windows__CUI__CComposition__CCompositionShape_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1135adf5-db12-55e8-ae0f-bd8d914bd399"))
IIterable<ABI::Windows::UI::Composition::CompositionShape*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::CompositionShape*, ABI::Windows::UI::Composition::ICompositionShape*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionShape>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Composition::CompositionShape*> __FIIterable_1_Windows__CUI__CComposition__CCompositionShape_t;
#define __FIIterable_1_Windows__CUI__CComposition__CCompositionShape ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CComposition__CCompositionShape_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CComposition__CCompositionShape_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class Visual;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#ifndef DEF___FIIterator_1_Windows__CUI__CComposition__CVisual_USE
#define DEF___FIIterator_1_Windows__CUI__CComposition__CVisual_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("eca15496-dcaa-5095-a898-f8602a40e10a"))
IIterator<ABI::Windows::UI::Composition::Visual*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::Visual*, ABI::Windows::UI::Composition::IVisual*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Composition.Visual>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Composition::Visual*> __FIIterator_1_Windows__CUI__CComposition__CVisual_t;
#define __FIIterator_1_Windows__CUI__CComposition__CVisual ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CComposition__CVisual_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CComposition__CVisual_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#ifndef DEF___FIIterable_1_Windows__CUI__CComposition__CVisual_USE
#define DEF___FIIterable_1_Windows__CUI__CComposition__CVisual_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4eed7dce-e4ac-5891-9b52-799d70df47fe"))
IIterable<ABI::Windows::UI::Composition::Visual*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::Visual*, ABI::Windows::UI::Composition::IVisual*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.Visual>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Composition::Visual*> __FIIterable_1_Windows__CUI__CComposition__CVisual_t;
#define __FIIterable_1_Windows__CUI__CComposition__CVisual ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CComposition__CVisual_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CComposition__CVisual_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000


#ifndef DEF___FIMapView_2_HSTRING_HSTRING_USE
#define DEF___FIMapView_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ac7f26f2-feb7-5b2a-8ac4-345bc62caede"))
IMapView<HSTRING, HSTRING> : IMapView_impl<HSTRING, HSTRING>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IMapView`2<String, String>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMapView<HSTRING, HSTRING> __FIMapView_2_HSTRING_HSTRING_t;
#define __FIMapView_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIMapView_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMapView_2_HSTRING_HSTRING_USE */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_USE
#define DEF___FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b65e6ece-d9af-5d4a-abaa-c08e34a5f815"))
IMapView<HSTRING, ABI::Windows::UI::Composition::ICompositionAnimationBase*> : IMapView_impl<HSTRING, ABI::Windows::UI::Composition::ICompositionAnimationBase*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IMapView`2<String, Windows.UI.Composition.ICompositionAnimationBase>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMapView<HSTRING, ABI::Windows::UI::Composition::ICompositionAnimationBase*> __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_t;
#define __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase ABI::Windows::Foundation::Collections::__FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000


#ifndef DEF___FIMap_2_HSTRING_HSTRING_USE
#define DEF___FIMap_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f6d1f700-49c2-52ae-8154-826f9908773c"))
IMap<HSTRING, HSTRING> : IMap_impl<HSTRING, HSTRING>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IMap`2<String, String>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMap<HSTRING, HSTRING> __FIMap_2_HSTRING_HSTRING_t;
#define __FIMap_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIMap_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMap_2_HSTRING_HSTRING_USE */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_USE
#define DEF___FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4ba9aa1d-57ac-54de-a807-b52e689bfc04"))
IMap<HSTRING, ABI::Windows::UI::Composition::ICompositionAnimationBase*> : IMap_impl<HSTRING, ABI::Windows::UI::Composition::ICompositionAnimationBase*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IMap`2<String, Windows.UI.Composition.ICompositionAnimationBase>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMap<HSTRING, ABI::Windows::UI::Composition::ICompositionAnimationBase*> __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_t;
#define __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase ABI::Windows::Foundation::Collections::__FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000


#ifndef DEF___FIVectorView_1_float_USE
#define DEF___FIVectorView_1_float_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("7bca64fd-150c-5d50-b56b-9f4f474c5930"))
IVectorView<float> : IVectorView_impl<float>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Single>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<float> __FIVectorView_1_float_t;
#define __FIVectorView_1_float ABI::Windows::Foundation::Collections::__FIVectorView_1_float_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_float_USE */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop_USE
#define DEF___FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("801d95c7-7ce2-55d7-a62f-2ff94c544034"))
IVectorView<ABI::Windows::UI::Composition::CompositionColorGradientStop*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::CompositionColorGradientStop*, ABI::Windows::UI::Composition::ICompositionColorGradientStop*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Composition.CompositionColorGradientStop>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Composition::CompositionColorGradientStop*> __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop_t;
#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

#ifndef DEF___FIVectorView_1_Windows__CUI__CComposition__CCompositionShape_USE
#define DEF___FIVectorView_1_Windows__CUI__CComposition__CCompositionShape_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e7e27ef4-4ec6-5b8a-a858-561b9534a885"))
IVectorView<ABI::Windows::UI::Composition::CompositionShape*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::CompositionShape*, ABI::Windows::UI::Composition::ICompositionShape*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Composition.CompositionShape>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Composition::CompositionShape*> __FIVectorView_1_Windows__CUI__CComposition__CCompositionShape_t;
#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionShape ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CComposition__CCompositionShape_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CComposition__CCompositionShape_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000


#ifndef DEF___FIVector_1_float_USE
#define DEF___FIVector_1_float_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("61cf693f-db4c-579f-b905-5dd3d23cfd4d"))
IVector<float> : IVector_impl<float>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Single>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<float> __FIVector_1_float_t;
#define __FIVector_1_float ABI::Windows::Foundation::Collections::__FIVector_1_float_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_float_USE */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_USE
#define DEF___FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bf2e107e-f3db-56cd-91ed-c1129406d552"))
IVector<ABI::Windows::UI::Composition::CompositionColorGradientStop*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::CompositionColorGradientStop*, ABI::Windows::UI::Composition::ICompositionColorGradientStop*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Composition.CompositionColorGradientStop>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Composition::CompositionColorGradientStop*> __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_t;
#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

#ifndef DEF___FIVector_1_Windows__CUI__CComposition__CCompositionShape_USE
#define DEF___FIVector_1_Windows__CUI__CComposition__CCompositionShape_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("42d4219a-be1b-5091-8f1e-90270840fc2d"))
IVector<ABI::Windows::UI::Composition::CompositionShape*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::CompositionShape*, ABI::Windows::UI::Composition::ICompositionShape*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Composition.CompositionShape>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Composition::CompositionShape*> __FIVector_1_Windows__CUI__CComposition__CCompositionShape_t;
#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CComposition__CCompositionShape_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CComposition__CCompositionShape_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000


#ifndef DEF___FIReference_1_float_USE
#define DEF___FIReference_1_float_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("719cc2ba-3e76-5def-9f1a-38d85a145ea8"))
IReference<float> : IReference_impl<float>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Single>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<float> __FIReference_1_float_t;
#define __FIReference_1_float ABI::Windows::Foundation::__FIReference_1_float_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_float_USE */


namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Numerics {
                typedef struct Vector2 Vector2;
            } /* Numerics */
        } /* Foundation */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIReference_1_Windows__CFoundation__CNumerics__CVector2_USE
#define DEF___FIReference_1_Windows__CFoundation__CNumerics__CVector2_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("48f6a69e-8465-57ae-9400-9764087f65ad"))
IReference<struct ABI::Windows::Foundation::Numerics::Vector2> : IReference_impl<struct ABI::Windows::Foundation::Numerics::Vector2>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Windows.Foundation.Numerics.Vector2>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<struct ABI::Windows::Foundation::Numerics::Vector2> __FIReference_1_Windows__CFoundation__CNumerics__CVector2_t;
#define __FIReference_1_Windows__CFoundation__CNumerics__CVector2 ABI::Windows::Foundation::__FIReference_1_Windows__CFoundation__CNumerics__CVector2_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Windows__CFoundation__CNumerics__CVector2_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Numerics {
                typedef struct Vector3 Vector3;
            } /* Numerics */
        } /* Foundation */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIReference_1_Windows__CFoundation__CNumerics__CVector3_USE
#define DEF___FIReference_1_Windows__CFoundation__CNumerics__CVector3_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("1ee770ff-c954-59ca-a754-6199a9be282c"))
IReference<struct ABI::Windows::Foundation::Numerics::Vector3> : IReference_impl<struct ABI::Windows::Foundation::Numerics::Vector3>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Windows.Foundation.Numerics.Vector3>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<struct ABI::Windows::Foundation::Numerics::Vector3> __FIReference_1_Windows__CFoundation__CNumerics__CVector3_t;
#define __FIReference_1_Windows__CFoundation__CNumerics__CVector3 ABI::Windows::Foundation::__FIReference_1_Windows__CFoundation__CNumerics__CVector3_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Windows__CFoundation__CNumerics__CVector3_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionBatchCompletedEventArgs;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#ifndef DEF___FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs_USE
#define DEF___FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("9df03456-3383-508b-9c75-ee840a7e1a39"))
ITypedEventHandler<IInspectable*, ABI::Windows::UI::Composition::CompositionBatchCompletedEventArgs*> : ITypedEventHandler_impl<IInspectable*, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::CompositionBatchCompletedEventArgs*, ABI::Windows::UI::Composition::ICompositionBatchCompletedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Object, Windows.UI.Composition.CompositionBatchCompletedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<IInspectable*, ABI::Windows::UI::Composition::CompositionBatchCompletedEventArgs*> __FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs_t;
#define __FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionCapabilities;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("6e8cc6f4-6cf5-5994-9447-726171236ea8"))
ITypedEventHandler<ABI::Windows::UI::Composition::CompositionCapabilities*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::CompositionCapabilities*, ABI::Windows::UI::Composition::ICompositionCapabilities*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Composition.CompositionCapabilities, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Composition::CompositionCapabilities*, IInspectable*> __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionGraphicsDevice;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class RenderingDeviceReplacedEventArgs;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("259b32be-bd06-53c2-bd51-89e8e0f9e239"))
ITypedEventHandler<ABI::Windows::UI::Composition::CompositionGraphicsDevice*, ABI::Windows::UI::Composition::RenderingDeviceReplacedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::CompositionGraphicsDevice*, ABI::Windows::UI::Composition::ICompositionGraphicsDevice*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Composition::RenderingDeviceReplacedEventArgs*, ABI::Windows::UI::Composition::IRenderingDeviceReplacedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Composition.CompositionGraphicsDevice, Windows.UI.Composition.RenderingDeviceReplacedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Composition::CompositionGraphicsDevice*, ABI::Windows::UI::Composition::RenderingDeviceReplacedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IAsyncAction;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIAsyncAction ABI::Windows::Foundation::IAsyncAction

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IClosable;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIClosable ABI::Windows::Foundation::IClosable

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IPropertyValue;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIPropertyValue ABI::Windows::Foundation::IPropertyValue

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Numerics {
                typedef struct Matrix3x2 Matrix3x2;
            } /* Numerics */
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Numerics {
                typedef struct Matrix4x4 Matrix4x4;
            } /* Numerics */
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Numerics {
                typedef struct Quaternion Quaternion;
            } /* Numerics */
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Numerics {
                typedef struct Vector4 Vector4;
            } /* Numerics */
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct Size Size;
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct TimeSpan TimeSpan;
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Graphics {
            namespace DirectX {
                typedef enum DirectXAlphaMode : int DirectXAlphaMode;
            } /* DirectX */
        } /* Graphics */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Graphics {
            namespace DirectX {
                typedef enum DirectXPixelFormat : int DirectXPixelFormat;
            } /* DirectX */
        } /* Graphics */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Graphics {
            namespace Effects {
                interface IGraphicsEffect;
            } /* Effects */
        } /* Graphics */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect ABI::Windows::Graphics::Effects::IGraphicsEffect

#endif // ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Graphics {
            namespace Effects {
                interface IGraphicsEffectSource;
            } /* Effects */
        } /* Graphics */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource ABI::Windows::Graphics::Effects::IGraphicsEffectSource

#endif // ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CIGeometrySource2D_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CIGeometrySource2D_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Graphics {
            interface IGeometrySource2D;
        } /* Graphics */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CGraphics_CIGeometrySource2D ABI::Windows::Graphics::IGeometrySource2D

#endif // ____x_ABI_CWindows_CGraphics_CIGeometrySource2D_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Graphics {
            typedef struct PointInt32 PointInt32;
        } /* Graphics */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Graphics {
            typedef struct RectInt32 RectInt32;
        } /* Graphics */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Graphics {
            typedef struct SizeInt32 SizeInt32;
        } /* Graphics */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            class DispatcherQueue;
        } /* System */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueue_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IDispatcherQueue;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIDispatcherQueue ABI::Windows::System::IDispatcherQueue

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueue_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            typedef struct Color Color;
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Core {
                class CoreDispatcher;
            } /* Core */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CCore_CICoreDispatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CICoreDispatcher_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Core {
                interface ICoreDispatcher;
            } /* Core */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CCore_CICoreDispatcher ABI::Windows::UI::Core::ICoreDispatcher

#endif // ____x_ABI_CWindows_CUI_CCore_CICoreDispatcher_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum AnimationControllerProgressBehavior : int AnimationControllerProgressBehavior;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum AnimationDelayBehavior : int AnimationDelayBehavior;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum AnimationDirection : int AnimationDirection;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum AnimationIterationBehavior : int AnimationIterationBehavior;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum AnimationPropertyAccessMode : int AnimationPropertyAccessMode;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum AnimationStopBehavior : int AnimationStopBehavior;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum CompositionBackfaceVisibility : int CompositionBackfaceVisibility;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum CompositionBatchTypes : unsigned int CompositionBatchTypes;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum CompositionBitmapInterpolationMode : int CompositionBitmapInterpolationMode;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum CompositionBorderMode : int CompositionBorderMode;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum CompositionColorSpace : int CompositionColorSpace;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum CompositionCompositeMode : int CompositionCompositeMode;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum CompositionDropShadowSourcePolicy : int CompositionDropShadowSourcePolicy;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum CompositionEffectFactoryLoadStatus : int CompositionEffectFactoryLoadStatus;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum CompositionGetValueStatus : int CompositionGetValueStatus;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum CompositionGradientExtendMode : int CompositionGradientExtendMode;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum CompositionMappingMode : int CompositionMappingMode;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum CompositionStretch : int CompositionStretch;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum CompositionStrokeCap : int CompositionStrokeCap;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                typedef enum CompositionStrokeLineJoin : int CompositionStrokeLineJoin;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class AmbientLight;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class AnimationController;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class AnimationPropertyInfo;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class BooleanKeyFrameAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class BounceScalarNaturalMotionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class BounceVector2NaturalMotionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class BounceVector3NaturalMotionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class ColorKeyFrameAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionAnimationGroup;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionBackdropBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionClip;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionColorBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionColorGradientStopCollection;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionCommitBatch;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionContainerShape;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionDrawingSurface;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionEasingFunction;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionEffectBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionEffectFactory;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionEffectSourceParameter;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionEllipseGeometry;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionGeometricClip;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionGeometry;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionLight;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionLineGeometry;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionLinearGradientBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionMaskBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionMipmapSurface;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionNineGridBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionObject;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionPath;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionPathGeometry;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionProjectedShadow;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionProjectedShadowCasterCollection;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionProjectedShadowReceiverUnorderedCollection;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionPropertySet;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionRadialGradientBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionRectangleGeometry;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionRoundedRectangleGeometry;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionScopedBatch;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionShadow;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionShapeCollection;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionSpriteShape;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionStrokeDashArray;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionSurfaceBrush;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionTarget;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionViewBox;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionVirtualDrawingSurface;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CompositionVisualSurface;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class Compositor;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class ContainerVisual;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class CubicBezierEasingFunction;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class DistantLight;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class DropShadow;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class ExpressionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class ImplicitAnimationCollection;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class InitialValueExpressionCollection;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class InsetClip;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class LayerVisual;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class LinearEasingFunction;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class PathKeyFrameAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class PointLight;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class QuaternionKeyFrameAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class RedirectVisual;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class ScalarKeyFrameAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class ShapeVisual;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class SpotLight;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class SpringScalarNaturalMotionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class SpringVector2NaturalMotionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class SpringVector3NaturalMotionAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class SpriteVisual;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class StepEasingFunction;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class Vector2KeyFrameAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class Vector3KeyFrameAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class Vector4KeyFrameAnimation;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class VisualCollection;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class VisualUnorderedCollection;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

/*
 *
 * Struct Windows.UI.Composition.AnimationControllerProgressBehavior
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum AnimationControllerProgressBehavior : int
                {
                    AnimationControllerProgressBehavior_Default = 0,
                    AnimationControllerProgressBehavior_IncludesDelayTime = 1,
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Struct Windows.UI.Composition.AnimationDelayBehavior
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum AnimationDelayBehavior : int
                {
                    AnimationDelayBehavior_SetInitialValueAfterDelay = 0,
                    AnimationDelayBehavior_SetInitialValueBeforeDelay = 1,
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Struct Windows.UI.Composition.AnimationDirection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum AnimationDirection : int
                {
                    AnimationDirection_Normal = 0,
                    AnimationDirection_Reverse = 1,
                    AnimationDirection_Alternate = 2,
                    AnimationDirection_AlternateReverse = 3,
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.UI.Composition.AnimationIterationBehavior
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum AnimationIterationBehavior : int
                {
                    AnimationIterationBehavior_Count = 0,
                    AnimationIterationBehavior_Forever = 1,
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.AnimationPropertyAccessMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum AnimationPropertyAccessMode : int
                {
                    AnimationPropertyAccessMode_None = 0,
                    AnimationPropertyAccessMode_ReadOnly = 1,
                    AnimationPropertyAccessMode_WriteOnly = 2,
                    AnimationPropertyAccessMode_ReadWrite = 3,
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Struct Windows.UI.Composition.AnimationStopBehavior
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum AnimationStopBehavior : int
                {
                    AnimationStopBehavior_LeaveCurrentValue = 0,
                    AnimationStopBehavior_SetToInitialValue = 1,
                    AnimationStopBehavior_SetToFinalValue = 2,
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionBackfaceVisibility
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum CompositionBackfaceVisibility : int
                {
                    CompositionBackfaceVisibility_Inherit = 0,
                    CompositionBackfaceVisibility_Visible = 1,
                    CompositionBackfaceVisibility_Hidden = 2,
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionBatchTypes
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum CompositionBatchTypes : unsigned int
                {
                    CompositionBatchTypes_None = 0,
                    CompositionBatchTypes_Animation = 0x1,
                    CompositionBatchTypes_Effect = 0x2,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
                    CompositionBatchTypes_InfiniteAnimation = 0x4,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
                    CompositionBatchTypes_AllAnimations = 0x5,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
                };

                DEFINE_ENUM_FLAG_OPERATORS(CompositionBatchTypes)
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionBitmapInterpolationMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum CompositionBitmapInterpolationMode : int
                {
                    CompositionBitmapInterpolationMode_NearestNeighbor = 0,
                    CompositionBitmapInterpolationMode_Linear = 1,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
                    CompositionBitmapInterpolationMode_MagLinearMinLinearMipLinear = 2,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
                    CompositionBitmapInterpolationMode_MagLinearMinLinearMipNearest = 3,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
                    CompositionBitmapInterpolationMode_MagLinearMinNearestMipLinear = 4,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
                    CompositionBitmapInterpolationMode_MagLinearMinNearestMipNearest = 5,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
                    CompositionBitmapInterpolationMode_MagNearestMinLinearMipLinear = 6,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
                    CompositionBitmapInterpolationMode_MagNearestMinLinearMipNearest = 7,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
                    CompositionBitmapInterpolationMode_MagNearestMinNearestMipLinear = 8,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
                    CompositionBitmapInterpolationMode_MagNearestMinNearestMipNearest = 9,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionBorderMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum CompositionBorderMode : int
                {
                    CompositionBorderMode_Inherit = 0,
                    CompositionBorderMode_Soft = 1,
                    CompositionBorderMode_Hard = 2,
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionColorSpace
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum CompositionColorSpace : int
                {
                    CompositionColorSpace_Auto = 0,
                    CompositionColorSpace_Hsl = 1,
                    CompositionColorSpace_Rgb = 2,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
                    CompositionColorSpace_HslLinear = 3,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
                    CompositionColorSpace_RgbLinear = 4,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionCompositeMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum CompositionCompositeMode : int
                {
                    CompositionCompositeMode_Inherit = 0,
                    CompositionCompositeMode_SourceOver = 1,
                    CompositionCompositeMode_DestinationInvert = 2,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
                    CompositionCompositeMode_MinBlend = 3,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionDropShadowSourcePolicy
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum CompositionDropShadowSourcePolicy : int
                {
                    CompositionDropShadowSourcePolicy_Default = 0,
                    CompositionDropShadowSourcePolicy_InheritFromVisualContent = 1,
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Struct Windows.UI.Composition.CompositionEffectFactoryLoadStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum CompositionEffectFactoryLoadStatus : int
                {
                    CompositionEffectFactoryLoadStatus_Success = 0,
                    CompositionEffectFactoryLoadStatus_EffectTooComplex = 1,
                    CompositionEffectFactoryLoadStatus_Pending = 2,
                    CompositionEffectFactoryLoadStatus_Other = -1,
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionGetValueStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum CompositionGetValueStatus : int
                {
                    CompositionGetValueStatus_Succeeded = 0,
                    CompositionGetValueStatus_TypeMismatch = 1,
                    CompositionGetValueStatus_NotFound = 2,
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionGradientExtendMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum CompositionGradientExtendMode : int
                {
                    CompositionGradientExtendMode_Clamp = 0,
                    CompositionGradientExtendMode_Wrap = 1,
                    CompositionGradientExtendMode_Mirror = 2,
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Struct Windows.UI.Composition.CompositionMappingMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum CompositionMappingMode : int
                {
                    CompositionMappingMode_Absolute = 0,
                    CompositionMappingMode_Relative = 1,
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Struct Windows.UI.Composition.CompositionStretch
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum CompositionStretch : int
                {
                    CompositionStretch_None = 0,
                    CompositionStretch_Fill = 1,
                    CompositionStretch_Uniform = 2,
                    CompositionStretch_UniformToFill = 3,
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionStrokeCap
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum CompositionStrokeCap : int
                {
                    CompositionStrokeCap_Flat = 0,
                    CompositionStrokeCap_Square = 1,
                    CompositionStrokeCap_Round = 2,
                    CompositionStrokeCap_Triangle = 3,
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Struct Windows.UI.Composition.CompositionStrokeLineJoin
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                enum CompositionStrokeLineJoin : int
                {
                    CompositionStrokeLineJoin_Miter = 0,
                    CompositionStrokeLineJoin_Bevel = 1,
                    CompositionStrokeLineJoin_Round = 2,
                    CompositionStrokeLineJoin_MiterOrBevel = 3,
                };
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.IAmbientLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.AmbientLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIAmbientLight_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IAmbientLight[] = L"Windows.UI.Composition.IAmbientLight";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("a48130a1-b7c4-46f7-b9bf-daf43a44e6ee")
                IAmbientLight : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Color(
                        ABI::Windows::UI::Color* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Color(
                        ABI::Windows::UI::Color value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAmbientLight = _uuidof(IAmbientLight);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIAmbientLight;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIAmbientLight_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.IAmbientLight2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.AmbientLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IAmbientLight2[] = L"Windows.UI.Composition.IAmbientLight2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("3b64a6bf-5f97-4c94-86e5-042dd386b27d")
                IAmbientLight2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Intensity(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Intensity(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAmbientLight2 = _uuidof(IAmbientLight2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIAmbientLight2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IAnimationController
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.AnimationController
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationController_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationController_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IAnimationController[] = L"Windows.UI.Composition.IAnimationController";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("c934efd2-0722-4f5f-a4e2-9510f3d43bf7")
                IAnimationController : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_PlaybackRate(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_PlaybackRate(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Progress(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Progress(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ProgressBehavior(
                        ABI::Windows::UI::Composition::AnimationControllerProgressBehavior* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ProgressBehavior(
                        ABI::Windows::UI::Composition::AnimationControllerProgressBehavior value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Pause(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Resume(void) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAnimationController = _uuidof(IAnimationController);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIAnimationController;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationController_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.IAnimationControllerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.AnimationController
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IAnimationControllerStatics[] = L"Windows.UI.Composition.IAnimationControllerStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("e71164df-651b-4800-b9e5-6a3bcfed3365")
                IAnimationControllerStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_MaxPlaybackRate(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MinPlaybackRate(
                        FLOAT* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAnimationControllerStatics = _uuidof(IAnimationControllerStatics);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.IAnimationObject
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IAnimationObject[] = L"Windows.UI.Composition.IAnimationObject";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("e7141e0a-04b8-4fc5-a4dc-195392e57807")
                IAnimationObject : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE PopulatePropertyInfo(
                        HSTRING propertyName,
                        ABI::Windows::UI::Composition::IAnimationPropertyInfo* propertyInfo
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAnimationObject = _uuidof(IAnimationObject);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIAnimationObject;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Composition.IAnimationPropertyInfo
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.AnimationPropertyInfo
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IAnimationPropertyInfo[] = L"Windows.UI.Composition.IAnimationPropertyInfo";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("f4716f05-ed77-4e3c-b328-5c3985b3738f")
                IAnimationPropertyInfo : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AccessMode(
                        ABI::Windows::UI::Composition::AnimationPropertyAccessMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AccessMode(
                        ABI::Windows::UI::Composition::AnimationPropertyAccessMode value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAnimationPropertyInfo = _uuidof(IAnimationPropertyInfo);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Composition.IBooleanKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.BooleanKeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IBooleanKeyFrameAnimation[] = L"Windows.UI.Composition.IBooleanKeyFrameAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("95e23a08-d1f4-4972-9770-3efe68d82e14")
                IBooleanKeyFrameAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE InsertKeyFrame(
                        FLOAT normalizedProgressKey,
                        boolean value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IBooleanKeyFrameAnimation = _uuidof(IBooleanKeyFrameAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Composition.IBounceScalarNaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.BounceScalarNaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IBounceScalarNaturalMotionAnimation[] = L"Windows.UI.Composition.IBounceScalarNaturalMotionAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("baa30dcc-a633-4618-9b06-7f7c72c87cff")
                IBounceScalarNaturalMotionAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Acceleration(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Acceleration(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Restitution(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Restitution(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IBounceScalarNaturalMotionAnimation = _uuidof(IBounceScalarNaturalMotionAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.IBounceVector2NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.BounceVector2NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IBounceVector2NaturalMotionAnimation[] = L"Windows.UI.Composition.IBounceVector2NaturalMotionAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("da344196-2154-4b3c-88aa-47361204eccd")
                IBounceVector2NaturalMotionAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Acceleration(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Acceleration(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Restitution(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Restitution(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IBounceVector2NaturalMotionAnimation = _uuidof(IBounceVector2NaturalMotionAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.IBounceVector3NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.BounceVector3NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IBounceVector3NaturalMotionAnimation[] = L"Windows.UI.Composition.IBounceVector3NaturalMotionAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("47dabc31-10d3-4518-86f1-09caf742d113")
                IBounceVector3NaturalMotionAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Acceleration(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Acceleration(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Restitution(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Restitution(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IBounceVector3NaturalMotionAnimation = _uuidof(IBounceVector3NaturalMotionAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.IColorKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.ColorKeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IColorKeyFrameAnimation[] = L"Windows.UI.Composition.IColorKeyFrameAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("93adb5e9-8e05-4593-84a3-dca152781e56")
                IColorKeyFrameAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_InterpolationColorSpace(
                        ABI::Windows::UI::Composition::CompositionColorSpace* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_InterpolationColorSpace(
                        ABI::Windows::UI::Composition::CompositionColorSpace value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertKeyFrame(
                        FLOAT normalizedProgressKey,
                        ABI::Windows::UI::Color value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertKeyFrameWithEasingFunction(
                        FLOAT normalizedProgressKey,
                        ABI::Windows::UI::Color value,
                        ABI::Windows::UI::Composition::ICompositionEasingFunction* easingFunction
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IColorKeyFrameAnimation = _uuidof(IColorKeyFrameAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionAnimation[] = L"Windows.UI.Composition.ICompositionAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("464c4c2c-1caa-4061-9b40-e13fde1503ca")
                ICompositionAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE ClearAllParameters(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ClearParameter(
                        HSTRING key
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetColorParameter(
                        HSTRING key,
                        ABI::Windows::UI::Color value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetMatrix3x2Parameter(
                        HSTRING key,
                        ABI::Windows::Foundation::Numerics::Matrix3x2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetMatrix4x4Parameter(
                        HSTRING key,
                        ABI::Windows::Foundation::Numerics::Matrix4x4 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetQuaternionParameter(
                        HSTRING key,
                        ABI::Windows::Foundation::Numerics::Quaternion value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetReferenceParameter(
                        HSTRING key,
                        ABI::Windows::UI::Composition::ICompositionObject* compositionObject
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetScalarParameter(
                        HSTRING key,
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetVector2Parameter(
                        HSTRING key,
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetVector3Parameter(
                        HSTRING key,
                        ABI::Windows::Foundation::Numerics::Vector3 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetVector4Parameter(
                        HSTRING key,
                        ABI::Windows::Foundation::Numerics::Vector4 value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionAnimation = _uuidof(ICompositionAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionAnimation2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionAnimation2[] = L"Windows.UI.Composition.ICompositionAnimation2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("369b603e-a80f-4948-93e3-ed23fb38c6cb")
                ICompositionAnimation2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE SetBooleanParameter(
                        HSTRING key,
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Target(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Target(
                        HSTRING value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionAnimation2 = _uuidof(ICompositionAnimation2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionAnimation3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionAnimation3[] = L"Windows.UI.Composition.ICompositionAnimation3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("d51e030d-7da4-4bd7-bc2d-f4517529f43a")
                ICompositionAnimation3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_InitialValueExpressions(
                        __FIMap_2_HSTRING_HSTRING** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionAnimation3 = _uuidof(ICompositionAnimation3);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositionAnimation4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionAnimation4[] = L"Windows.UI.Composition.ICompositionAnimation4";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("770137be-76bc-4e23-bfed-fe9cc20f6ec9")
                ICompositionAnimation4 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE SetExpressionReferenceParameter(
                        HSTRING parameterName,
                        ABI::Windows::UI::Composition::IAnimationObject* source
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionAnimation4 = _uuidof(ICompositionAnimation4);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Composition.ICompositionAnimationBase
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionAnimationBase[] = L"Windows.UI.Composition.ICompositionAnimationBase";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("1c2c2999-e818-48d3-a6dd-d78c82f8ace9")
                ICompositionAnimationBase : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionAnimationBase = _uuidof(ICompositionAnimationBase);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionAnimationFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionAnimationFactory[] = L"Windows.UI.Composition.ICompositionAnimationFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("10f6c4fb-6e51-4c25-bbd3-586a9bec3ef4")
                ICompositionAnimationFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionAnimationFactory = _uuidof(ICompositionAnimationFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionAnimationGroup
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionAnimationGroup
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionAnimationGroup[] = L"Windows.UI.Composition.ICompositionAnimationGroup";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("5e7cc90c-cd14-4e07-8a55-c72527aabdac")
                ICompositionAnimationGroup : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Count(
                        INT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Add(
                        ABI::Windows::UI::Composition::ICompositionAnimation* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Remove(
                        ABI::Windows::UI::Composition::ICompositionAnimation* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE RemoveAll(void) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionAnimationGroup = _uuidof(ICompositionAnimationGroup);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionBackdropBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionBackdropBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionBackdropBrush[] = L"Windows.UI.Composition.ICompositionBackdropBrush";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("c5acae58-3898-499e-8d7f-224e91286a5d")
                ICompositionBackdropBrush : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionBackdropBrush = _uuidof(ICompositionBackdropBrush);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionBatchCompletedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionBatchCompletedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionBatchCompletedEventArgs[] = L"Windows.UI.Composition.ICompositionBatchCompletedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("0d00dad0-9464-450a-a562-2e2698b0a812")
                ICompositionBatchCompletedEventArgs : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionBatchCompletedEventArgs = _uuidof(ICompositionBatchCompletedEventArgs);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionBrush[] = L"Windows.UI.Composition.ICompositionBrush";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("ab0d7608-30c0-40e9-b568-b60a6bd1fb46")
                ICompositionBrush : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionBrush = _uuidof(ICompositionBrush);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionBrushFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionBrushFactory[] = L"Windows.UI.Composition.ICompositionBrushFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("da53fb4c-4650-47c4-ad76-765379607ed6")
                ICompositionBrushFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionBrushFactory = _uuidof(ICompositionBrushFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionCapabilities
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionCapabilities
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionCapabilities[] = L"Windows.UI.Composition.ICompositionCapabilities";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("8253353e-b517-48bc-b1e8-4b3561a2e181")
                ICompositionCapabilities : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE AreEffectsSupported(
                        boolean* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE AreEffectsFast(
                        boolean* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_Changed(
                        __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_Changed(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionCapabilities = _uuidof(ICompositionCapabilities);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.ICompositionCapabilitiesStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionCapabilities
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionCapabilitiesStatics[] = L"Windows.UI.Composition.ICompositionCapabilitiesStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("f7b7a86e-6416-49e5-8ddf-afe949e20562")
                ICompositionCapabilitiesStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE GetForCurrentView(
                        ABI::Windows::UI::Composition::ICompositionCapabilities** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionCapabilitiesStatics = _uuidof(ICompositionCapabilitiesStatics);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.ICompositionClip
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionClip
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionClip_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionClip_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionClip[] = L"Windows.UI.Composition.ICompositionClip";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("1ccd2a52-cfc7-4ace-9983-146bb8eb6a3c")
                ICompositionClip : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionClip = _uuidof(ICompositionClip);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionClip;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionClip_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionClip2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionClip
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionClip2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionClip2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionClip2[] = L"Windows.UI.Composition.ICompositionClip2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("5893e069-3516-40e1-89e0-5ba924927235")
                ICompositionClip2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AnchorPoint(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AnchorPoint(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CenterPoint(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CenterPoint(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Offset(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Offset(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RotationAngle(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RotationAngle(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RotationAngleInDegrees(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RotationAngleInDegrees(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Scale(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Scale(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TransformMatrix(
                        ABI::Windows::Foundation::Numerics::Matrix3x2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TransformMatrix(
                        ABI::Windows::Foundation::Numerics::Matrix3x2 value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionClip2 = _uuidof(ICompositionClip2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionClip2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionClip2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionClipFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionClip
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionClipFactory[] = L"Windows.UI.Composition.ICompositionClipFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("b9484caf-20c7-4aed-ac4a-9c78ba1302cf")
                ICompositionClipFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionClipFactory = _uuidof(ICompositionClipFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionColorBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionColorBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionColorBrush[] = L"Windows.UI.Composition.ICompositionColorBrush";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("2b264c5e-bf35-4831-8642-cf70c20fff2f")
                ICompositionColorBrush : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Color(
                        ABI::Windows::UI::Color* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Color(
                        ABI::Windows::UI::Color value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionColorBrush = _uuidof(ICompositionColorBrush);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionColorGradientStop
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionColorGradientStop
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionColorGradientStop[] = L"Windows.UI.Composition.ICompositionColorGradientStop";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("6f00ca92-c801-4e41-9a8f-a53e20f57778")
                ICompositionColorGradientStop : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Color(
                        ABI::Windows::UI::Color* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Color(
                        ABI::Windows::UI::Color value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Offset(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Offset(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionColorGradientStop = _uuidof(ICompositionColorGradientStop);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositionColorGradientStopCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionColorGradientStopCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionColorGradientStopCollection[] = L"Windows.UI.Composition.ICompositionColorGradientStopCollection";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("9f1d20ec-7b04-4b1d-90bc-9fa32c0cfd26")
                ICompositionColorGradientStopCollection : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionColorGradientStopCollection = _uuidof(ICompositionColorGradientStopCollection);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositionCommitBatch
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionCommitBatch
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionCommitBatch[] = L"Windows.UI.Composition.ICompositionCommitBatch";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("0d00dad0-ca07-4400-8c8e-cb5db08559cc")
                ICompositionCommitBatch : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_IsActive(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsEnded(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_Completed(
                        __FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_Completed(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionCommitBatch = _uuidof(ICompositionCommitBatch);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionContainerShape
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionContainerShape
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionContainerShape[] = L"Windows.UI.Composition.ICompositionContainerShape";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("4f5e859b-2e5b-44a8-982c-aa0f69c16059")
                ICompositionContainerShape : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Shapes(
                        __FIVector_1_Windows__CUI__CComposition__CCompositionShape** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionContainerShape = _uuidof(ICompositionContainerShape);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionDrawingSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionDrawingSurface
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionDrawingSurface[] = L"Windows.UI.Composition.ICompositionDrawingSurface";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("a166c300-fad0-4d11-9e67-e433162ff49e")
                ICompositionDrawingSurface : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AlphaMode(
                        ABI::Windows::Graphics::DirectX::DirectXAlphaMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PixelFormat(
                        ABI::Windows::Graphics::DirectX::DirectXPixelFormat* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Size(
                        ABI::Windows::Foundation::Size* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionDrawingSurface = _uuidof(ICompositionDrawingSurface);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionDrawingSurface2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionDrawingSurface
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionDrawingSurface2[] = L"Windows.UI.Composition.ICompositionDrawingSurface2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("fad0e88b-e354-44e8-8e3d-c4880d5a213f")
                ICompositionDrawingSurface2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_SizeInt32(
                        ABI::Windows::Graphics::SizeInt32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Resize(
                        ABI::Windows::Graphics::SizeInt32 sizePixels
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Scroll(
                        ABI::Windows::Graphics::PointInt32 offset
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ScrollRect(
                        ABI::Windows::Graphics::PointInt32 offset,
                        ABI::Windows::Graphics::RectInt32 scrollRect
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ScrollWithClip(
                        ABI::Windows::Graphics::PointInt32 offset,
                        ABI::Windows::Graphics::RectInt32 clipRect
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ScrollRectWithClip(
                        ABI::Windows::Graphics::PointInt32 offset,
                        ABI::Windows::Graphics::RectInt32 clipRect,
                        ABI::Windows::Graphics::RectInt32 scrollRect
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionDrawingSurface2 = _uuidof(ICompositionDrawingSurface2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.ICompositionDrawingSurfaceFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionDrawingSurface
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionDrawingSurfaceFactory[] = L"Windows.UI.Composition.ICompositionDrawingSurfaceFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("9497b00a-312d-46b9-9db3-412fd79464c8")
                ICompositionDrawingSurfaceFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionDrawingSurfaceFactory = _uuidof(ICompositionDrawingSurfaceFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.ICompositionEasingFunction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionEasingFunction
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionEasingFunction[] = L"Windows.UI.Composition.ICompositionEasingFunction";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("5145e356-bf79-4ea8-8cc2-6b5b472e6c9a")
                ICompositionEasingFunction : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionEasingFunction = _uuidof(ICompositionEasingFunction);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionEasingFunctionFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionEasingFunction
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionEasingFunctionFactory[] = L"Windows.UI.Composition.ICompositionEasingFunctionFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("60840774-3da0-4949-8200-7206c00190a0")
                ICompositionEasingFunctionFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionEasingFunctionFactory = _uuidof(ICompositionEasingFunctionFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionEffectBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionEffectBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionEffectBrush[] = L"Windows.UI.Composition.ICompositionEffectBrush";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("bf7f795e-83cc-44bf-a447-3e3c071789ec")
                ICompositionEffectBrush : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE GetSourceParameter(
                        HSTRING name,
                        ABI::Windows::UI::Composition::ICompositionBrush** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetSourceParameter(
                        HSTRING name,
                        ABI::Windows::UI::Composition::ICompositionBrush* source
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionEffectBrush = _uuidof(ICompositionEffectBrush);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionEffectFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionEffectFactory
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionEffectFactory[] = L"Windows.UI.Composition.ICompositionEffectFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("be5624af-ba7e-4510-9850-41c0b4ff74df")
                ICompositionEffectFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateBrush(
                        ABI::Windows::UI::Composition::ICompositionEffectBrush** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ExtendedError(
                        HRESULT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_LoadStatus(
                        ABI::Windows::UI::Composition::CompositionEffectFactoryLoadStatus* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionEffectFactory = _uuidof(ICompositionEffectFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionEffectSourceParameter
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionEffectSourceParameter
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionEffectSourceParameter[] = L"Windows.UI.Composition.ICompositionEffectSourceParameter";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("858ab13a-3292-4e4e-b3bb-2b6c6544a6ee")
                ICompositionEffectSourceParameter : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Name(
                        HSTRING* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionEffectSourceParameter = _uuidof(ICompositionEffectSourceParameter);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionEffectSourceParameterFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionEffectSourceParameter
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionEffectSourceParameterFactory[] = L"Windows.UI.Composition.ICompositionEffectSourceParameterFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("b3d9f276-aba3-4724-acf3-d0397464db1c")
                ICompositionEffectSourceParameterFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Create(
                        HSTRING name,
                        ABI::Windows::UI::Composition::ICompositionEffectSourceParameter** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionEffectSourceParameterFactory = _uuidof(ICompositionEffectSourceParameterFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionEllipseGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionEllipseGeometry
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionEllipseGeometry[] = L"Windows.UI.Composition.ICompositionEllipseGeometry";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("4801f884-f6ad-4b93-afa9-897b64e57b1f")
                ICompositionEllipseGeometry : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Center(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Center(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Radius(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Radius(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionEllipseGeometry = _uuidof(ICompositionEllipseGeometry);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionGeometricClip
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionGeometricClip
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionGeometricClip[] = L"Windows.UI.Composition.ICompositionGeometricClip";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("c840b581-81c9-4444-a2c1-ccaece3a50e5")
                ICompositionGeometricClip : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Geometry(
                        ABI::Windows::UI::Composition::ICompositionGeometry** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Geometry(
                        ABI::Windows::UI::Composition::ICompositionGeometry* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ViewBox(
                        ABI::Windows::UI::Composition::ICompositionViewBox** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ViewBox(
                        ABI::Windows::UI::Composition::ICompositionViewBox* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionGeometricClip = _uuidof(ICompositionGeometricClip);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Composition.ICompositionGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionGeometry
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionGeometry[] = L"Windows.UI.Composition.ICompositionGeometry";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("e985217c-6a17-4207-abd8-5fd3dd612a9d")
                ICompositionGeometry : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_TrimEnd(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TrimEnd(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TrimOffset(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TrimOffset(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TrimStart(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TrimStart(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionGeometry = _uuidof(ICompositionGeometry);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGeometry;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionGeometryFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionGeometry
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionGeometryFactory[] = L"Windows.UI.Composition.ICompositionGeometryFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("bffebfe1-8c25-480b-9f56-fed6b288055d")
                ICompositionGeometryFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionGeometryFactory = _uuidof(ICompositionGeometryFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionGradientBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionGradientBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionGradientBrush[] = L"Windows.UI.Composition.ICompositionGradientBrush";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("1d9709e0-ffc6-4c0e-a9ab-34144d4c9098")
                ICompositionGradientBrush : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AnchorPoint(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AnchorPoint(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CenterPoint(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CenterPoint(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ColorStops(
                        ABI::Windows::UI::Composition::ICompositionColorGradientStopCollection** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ExtendMode(
                        ABI::Windows::UI::Composition::CompositionGradientExtendMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ExtendMode(
                        ABI::Windows::UI::Composition::CompositionGradientExtendMode value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_InterpolationSpace(
                        ABI::Windows::UI::Composition::CompositionColorSpace* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_InterpolationSpace(
                        ABI::Windows::UI::Composition::CompositionColorSpace value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Offset(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Offset(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RotationAngle(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RotationAngle(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RotationAngleInDegrees(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RotationAngleInDegrees(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Scale(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Scale(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TransformMatrix(
                        ABI::Windows::Foundation::Numerics::Matrix3x2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TransformMatrix(
                        ABI::Windows::Foundation::Numerics::Matrix3x2 value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionGradientBrush = _uuidof(ICompositionGradientBrush);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositionGradientBrush2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionGradientBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionGradientBrush2[] = L"Windows.UI.Composition.ICompositionGradientBrush2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("899dd5a1-b4c7-4b33-a1b6-264addc26d10")
                ICompositionGradientBrush2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_MappingMode(
                        ABI::Windows::UI::Composition::CompositionMappingMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MappingMode(
                        ABI::Windows::UI::Composition::CompositionMappingMode value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionGradientBrush2 = _uuidof(ICompositionGradientBrush2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Composition.ICompositionGradientBrushFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionGradientBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionGradientBrushFactory[] = L"Windows.UI.Composition.ICompositionGradientBrushFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("56d765d7-f189-48c9-9c8d-94daf1bec010")
                ICompositionGradientBrushFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionGradientBrushFactory = _uuidof(ICompositionGradientBrushFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositionGraphicsDevice
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionGraphicsDevice
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionGraphicsDevice[] = L"Windows.UI.Composition.ICompositionGraphicsDevice";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("fb22c6e1-80a2-4667-9936-dbeaf6eefe95")
                ICompositionGraphicsDevice : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateDrawingSurface(
                        ABI::Windows::Foundation::Size sizePixels,
                        ABI::Windows::Graphics::DirectX::DirectXPixelFormat pixelFormat,
                        ABI::Windows::Graphics::DirectX::DirectXAlphaMode alphaMode,
                        ABI::Windows::UI::Composition::ICompositionDrawingSurface** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_RenderingDeviceReplaced(
                        __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_RenderingDeviceReplaced(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionGraphicsDevice = _uuidof(ICompositionGraphicsDevice);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionGraphicsDevice2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionGraphicsDevice
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionGraphicsDevice2[] = L"Windows.UI.Composition.ICompositionGraphicsDevice2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("0fb8bdf6-c0f0-4bcc-9fb8-084982490d7d")
                ICompositionGraphicsDevice2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateDrawingSurface2(
                        ABI::Windows::Graphics::SizeInt32 sizePixels,
                        ABI::Windows::Graphics::DirectX::DirectXPixelFormat pixelFormat,
                        ABI::Windows::Graphics::DirectX::DirectXAlphaMode alphaMode,
                        ABI::Windows::UI::Composition::ICompositionDrawingSurface** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateVirtualDrawingSurface(
                        ABI::Windows::Graphics::SizeInt32 sizePixels,
                        ABI::Windows::Graphics::DirectX::DirectXPixelFormat pixelFormat,
                        ABI::Windows::Graphics::DirectX::DirectXAlphaMode alphaMode,
                        ABI::Windows::UI::Composition::ICompositionVirtualDrawingSurface** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionGraphicsDevice2 = _uuidof(ICompositionGraphicsDevice2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.ICompositionGraphicsDevice3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionGraphicsDevice
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionGraphicsDevice3[] = L"Windows.UI.Composition.ICompositionGraphicsDevice3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("37f67514-d3ef-49d1-b69d-0d8eabeb3626")
                ICompositionGraphicsDevice3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateMipmapSurface(
                        ABI::Windows::Graphics::SizeInt32 sizePixels,
                        ABI::Windows::Graphics::DirectX::DirectXPixelFormat pixelFormat,
                        ABI::Windows::Graphics::DirectX::DirectXAlphaMode alphaMode,
                        ABI::Windows::UI::Composition::ICompositionMipmapSurface** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Trim(void) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionGraphicsDevice3 = _uuidof(ICompositionGraphicsDevice3);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLight_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionLight[] = L"Windows.UI.Composition.ICompositionLight";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("41a6d7c2-2e5d-4bc1-b09e-8f0a03e3d8d3")
                ICompositionLight : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Targets(
                        ABI::Windows::UI::Composition::IVisualUnorderedCollection** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionLight = _uuidof(ICompositionLight);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionLight;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLight_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionLight2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLight2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionLight2[] = L"Windows.UI.Composition.ICompositionLight2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("a7bcda72-f35d-425d-9b98-23f4205f6669")
                ICompositionLight2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_ExclusionsFromTargets(
                        ABI::Windows::UI::Composition::IVisualUnorderedCollection** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionLight2 = _uuidof(ICompositionLight2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionLight2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLight2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositionLight3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLight3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLight3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionLight3[] = L"Windows.UI.Composition.ICompositionLight3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("4b0b00e4-df07-4959-b7a4-4f7e4233f838")
                ICompositionLight3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_IsEnabled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsEnabled(
                        boolean value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionLight3 = _uuidof(ICompositionLight3);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionLight3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLight3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionLightFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionLightFactory[] = L"Windows.UI.Composition.ICompositionLightFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("069cf306-da3c-4b44-838a-5e03d51ace55")
                ICompositionLightFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionLightFactory = _uuidof(ICompositionLightFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionLineGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionLineGeometry
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionLineGeometry[] = L"Windows.UI.Composition.ICompositionLineGeometry";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("dd7615a4-0c9a-4b67-8dce-440a5bf9cdec")
                ICompositionLineGeometry : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Start(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Start(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_End(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_End(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionLineGeometry = _uuidof(ICompositionLineGeometry);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionLinearGradientBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionLinearGradientBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionLinearGradientBrush[] = L"Windows.UI.Composition.ICompositionLinearGradientBrush";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("983bc519-a9db-413c-a2d8-2a9056fc525e")
                ICompositionLinearGradientBrush : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_EndPoint(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_EndPoint(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StartPoint(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_StartPoint(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionLinearGradientBrush = _uuidof(ICompositionLinearGradientBrush);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositionMaskBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionMaskBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionMaskBrush[] = L"Windows.UI.Composition.ICompositionMaskBrush";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("522cf09e-be6b-4f41-be49-f9226d471b4a")
                ICompositionMaskBrush : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Mask(
                        ABI::Windows::UI::Composition::ICompositionBrush** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Mask(
                        ABI::Windows::UI::Composition::ICompositionBrush* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Source(
                        ABI::Windows::UI::Composition::ICompositionBrush** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Source(
                        ABI::Windows::UI::Composition::ICompositionBrush* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionMaskBrush = _uuidof(ICompositionMaskBrush);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionMipmapSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionMipmapSurface
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionMipmapSurface[] = L"Windows.UI.Composition.ICompositionMipmapSurface";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("4863675c-cf4a-4b1c-9ece-c5ec0c2b2fe6")
                ICompositionMipmapSurface : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_LevelCount(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AlphaMode(
                        ABI::Windows::Graphics::DirectX::DirectXAlphaMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PixelFormat(
                        ABI::Windows::Graphics::DirectX::DirectXPixelFormat* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_SizeInt32(
                        ABI::Windows::Graphics::SizeInt32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetDrawingSurfaceForLevel(
                        UINT32 level,
                        ABI::Windows::UI::Composition::ICompositionDrawingSurface** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionMipmapSurface = _uuidof(ICompositionMipmapSurface);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionNineGridBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionNineGridBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionNineGridBrush[] = L"Windows.UI.Composition.ICompositionNineGridBrush";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("f25154e4-bc8c-4be7-b80f-8685b83c0186")
                ICompositionNineGridBrush : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_BottomInset(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BottomInset(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BottomInsetScale(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BottomInsetScale(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsCenterHollow(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsCenterHollow(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_LeftInset(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_LeftInset(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_LeftInsetScale(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_LeftInsetScale(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RightInset(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RightInset(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RightInsetScale(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RightInsetScale(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Source(
                        ABI::Windows::UI::Composition::ICompositionBrush** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Source(
                        ABI::Windows::UI::Composition::ICompositionBrush* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TopInset(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TopInset(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TopInsetScale(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TopInsetScale(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetInsets(
                        FLOAT inset
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetInsetsWithValues(
                        FLOAT left,
                        FLOAT top,
                        FLOAT right,
                        FLOAT bottom
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetInsetScales(
                        FLOAT scale
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetInsetScalesWithValues(
                        FLOAT left,
                        FLOAT top,
                        FLOAT right,
                        FLOAT bottom
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionNineGridBrush = _uuidof(ICompositionNineGridBrush);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionObject
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionObject
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionObject[] = L"Windows.UI.Composition.ICompositionObject";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("bcb4ad45-7609-4550-934f-16002a68fded")
                ICompositionObject : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Compositor(
                        ABI::Windows::UI::Composition::ICompositor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Dispatcher(
                        ABI::Windows::UI::Core::ICoreDispatcher** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Properties(
                        ABI::Windows::UI::Composition::ICompositionPropertySet** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StartAnimation(
                        HSTRING propertyName,
                        ABI::Windows::UI::Composition::ICompositionAnimation* animation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StopAnimation(
                        HSTRING propertyName
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionObject = _uuidof(ICompositionObject);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionObject;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionObject2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionObject
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionObject2[] = L"Windows.UI.Composition.ICompositionObject2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("ef874ea1-5cff-4b68-9e30-a1519d08ba03")
                ICompositionObject2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Comment(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Comment(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ImplicitAnimations(
                        ABI::Windows::UI::Composition::IImplicitAnimationCollection** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ImplicitAnimations(
                        ABI::Windows::UI::Composition::IImplicitAnimationCollection* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StartAnimationGroup(
                        ABI::Windows::UI::Composition::ICompositionAnimationBase* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StopAnimationGroup(
                        ABI::Windows::UI::Composition::ICompositionAnimationBase* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionObject2 = _uuidof(ICompositionObject2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionObject2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionObject3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionObject
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionObject3[] = L"Windows.UI.Composition.ICompositionObject3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("4bc27925-dacd-4cf2-98b1-986b76e7ebe6")
                ICompositionObject3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_DispatcherQueue(
                        ABI::Windows::System::IDispatcherQueue** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionObject3 = _uuidof(ICompositionObject3);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionObject3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositionObject4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionObject
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionObject4[] = L"Windows.UI.Composition.ICompositionObject4";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("0bb3784c-346b-4a7c-966b-7310966553d5")
                ICompositionObject4 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE TryGetAnimationController(
                        HSTRING propertyName,
                        ABI::Windows::UI::Composition::IAnimationController** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionObject4 = _uuidof(ICompositionObject4);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionObject4;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionObjectFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionObject
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionObjectFactory[] = L"Windows.UI.Composition.ICompositionObjectFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("51205c5e-558a-4f2a-8d39-37bfe1e20ddd")
                ICompositionObjectFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionObjectFactory = _uuidof(ICompositionObjectFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionObjectStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionObject
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionObjectStatics[] = L"Windows.UI.Composition.ICompositionObjectStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("c1ed052f-1ba2-44ba-a904-6a882a0a5adb")
                ICompositionObjectStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE StartAnimationWithIAnimationObject(
                        ABI::Windows::UI::Composition::IAnimationObject* target,
                        HSTRING propertyName,
                        ABI::Windows::UI::Composition::ICompositionAnimation* animation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StartAnimationGroupWithIAnimationObject(
                        ABI::Windows::UI::Composition::IAnimationObject* target,
                        ABI::Windows::UI::Composition::ICompositionAnimationBase* animation
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionObjectStatics = _uuidof(ICompositionObjectStatics);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Composition.ICompositionPath
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionPath
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPath_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPath_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionPath[] = L"Windows.UI.Composition.ICompositionPath";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("66da1d5f-2e10-4f22-8a06-0a8151919e60")
                ICompositionPath : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionPath = _uuidof(ICompositionPath);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionPath;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPath_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionPathFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionPath
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionPathFactory[] = L"Windows.UI.Composition.ICompositionPathFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("9c1e8c6a-0f33-4751-9437-eb3fb9d3ab07")
                ICompositionPathFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Create(
                        ABI::Windows::Graphics::IGeometrySource2D* source,
                        ABI::Windows::UI::Composition::ICompositionPath** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionPathFactory = _uuidof(ICompositionPathFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionPathGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionPathGeometry
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionPathGeometry[] = L"Windows.UI.Composition.ICompositionPathGeometry";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("0b6a417e-2c77-4c23-af5e-6304c147bb61")
                ICompositionPathGeometry : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Path(
                        ABI::Windows::UI::Composition::ICompositionPath** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Path(
                        ABI::Windows::UI::Composition::ICompositionPath* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionPathGeometry = _uuidof(ICompositionPathGeometry);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionProjectedShadow
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionProjectedShadow
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionProjectedShadow[] = L"Windows.UI.Composition.ICompositionProjectedShadow";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("285b8e72-4328-523f-bcf2-5557c52c3b25")
                ICompositionProjectedShadow : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_BlurRadiusMultiplier(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BlurRadiusMultiplier(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Casters(
                        ABI::Windows::UI::Composition::ICompositionProjectedShadowCasterCollection** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_LightSource(
                        ABI::Windows::UI::Composition::ICompositionLight** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_LightSource(
                        ABI::Windows::UI::Composition::ICompositionLight* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MaxBlurRadius(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MaxBlurRadius(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MinBlurRadius(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MinBlurRadius(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Receivers(
                        ABI::Windows::UI::Composition::ICompositionProjectedShadowReceiverUnorderedCollection** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionProjectedShadow = _uuidof(ICompositionProjectedShadow);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionProjectedShadowCaster
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionProjectedShadowCaster
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionProjectedShadowCaster[] = L"Windows.UI.Composition.ICompositionProjectedShadowCaster";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("b1d7d426-1e36-5a62-be56-a16112fdd148")
                ICompositionProjectedShadowCaster : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Brush(
                        ABI::Windows::UI::Composition::ICompositionBrush** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Brush(
                        ABI::Windows::UI::Composition::ICompositionBrush* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CastingVisual(
                        ABI::Windows::UI::Composition::IVisual** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CastingVisual(
                        ABI::Windows::UI::Composition::IVisual* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionProjectedShadowCaster = _uuidof(ICompositionProjectedShadowCaster);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionProjectedShadowCasterCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionProjectedShadowCasterCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionProjectedShadowCasterCollection[] = L"Windows.UI.Composition.ICompositionProjectedShadowCasterCollection";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("d2525c0c-e07f-58a3-ac91-37f73ee91740")
                ICompositionProjectedShadowCasterCollection : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Count(
                        INT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertAbove(
                        ABI::Windows::UI::Composition::ICompositionProjectedShadowCaster* newCaster,
                        ABI::Windows::UI::Composition::ICompositionProjectedShadowCaster* reference
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertAtBottom(
                        ABI::Windows::UI::Composition::ICompositionProjectedShadowCaster* newCaster
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertAtTop(
                        ABI::Windows::UI::Composition::ICompositionProjectedShadowCaster* newCaster
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertBelow(
                        ABI::Windows::UI::Composition::ICompositionProjectedShadowCaster* newCaster,
                        ABI::Windows::UI::Composition::ICompositionProjectedShadowCaster* reference
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Remove(
                        ABI::Windows::UI::Composition::ICompositionProjectedShadowCaster* caster
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE RemoveAll(void) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionProjectedShadowCasterCollection = _uuidof(ICompositionProjectedShadowCasterCollection);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionProjectedShadowCasterCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionProjectedShadowCasterCollectionStatics[] = L"Windows.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("56fbb136-e94f-5299-ab5b-6e15e38bd899")
                ICompositionProjectedShadowCasterCollectionStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_MaxRespectedCasters(
                        INT32* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionProjectedShadowCasterCollectionStatics = _uuidof(ICompositionProjectedShadowCasterCollectionStatics);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionProjectedShadowReceiver
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionProjectedShadowReceiver
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionProjectedShadowReceiver[] = L"Windows.UI.Composition.ICompositionProjectedShadowReceiver";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("1377985a-6a49-536a-9be4-a96a8e5298a9")
                ICompositionProjectedShadowReceiver : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_ReceivingVisual(
                        ABI::Windows::UI::Composition::IVisual** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ReceivingVisual(
                        ABI::Windows::UI::Composition::IVisual* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionProjectedShadowReceiver = _uuidof(ICompositionProjectedShadowReceiver);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionProjectedShadowReceiverUnorderedCollection[] = L"Windows.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("02b3e3b7-27d2-599f-ac4b-ab787cdde6fd")
                ICompositionProjectedShadowReceiverUnorderedCollection : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Add(
                        ABI::Windows::UI::Composition::ICompositionProjectedShadowReceiver* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Count(
                        INT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Remove(
                        ABI::Windows::UI::Composition::ICompositionProjectedShadowReceiver* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE RemoveAll(void) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionProjectedShadowReceiverUnorderedCollection = _uuidof(ICompositionProjectedShadowReceiverUnorderedCollection);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionPropertySet
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionPropertySet
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionPropertySet[] = L"Windows.UI.Composition.ICompositionPropertySet";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("c9d6d202-5f67-4453-9117-9eadd430d3c2")
                ICompositionPropertySet : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE InsertColor(
                        HSTRING propertyName,
                        ABI::Windows::UI::Color value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertMatrix3x2(
                        HSTRING propertyName,
                        ABI::Windows::Foundation::Numerics::Matrix3x2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertMatrix4x4(
                        HSTRING propertyName,
                        ABI::Windows::Foundation::Numerics::Matrix4x4 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertQuaternion(
                        HSTRING propertyName,
                        ABI::Windows::Foundation::Numerics::Quaternion value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertScalar(
                        HSTRING propertyName,
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertVector2(
                        HSTRING propertyName,
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertVector3(
                        HSTRING propertyName,
                        ABI::Windows::Foundation::Numerics::Vector3 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertVector4(
                        HSTRING propertyName,
                        ABI::Windows::Foundation::Numerics::Vector4 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE TryGetColor(
                        HSTRING propertyName,
                        ABI::Windows::UI::Color* value,
                        ABI::Windows::UI::Composition::CompositionGetValueStatus* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE TryGetMatrix3x2(
                        HSTRING propertyName,
                        ABI::Windows::Foundation::Numerics::Matrix3x2* value,
                        ABI::Windows::UI::Composition::CompositionGetValueStatus* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE TryGetMatrix4x4(
                        HSTRING propertyName,
                        ABI::Windows::Foundation::Numerics::Matrix4x4* value,
                        ABI::Windows::UI::Composition::CompositionGetValueStatus* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE TryGetQuaternion(
                        HSTRING propertyName,
                        ABI::Windows::Foundation::Numerics::Quaternion* value,
                        ABI::Windows::UI::Composition::CompositionGetValueStatus* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE TryGetScalar(
                        HSTRING propertyName,
                        FLOAT* value,
                        ABI::Windows::UI::Composition::CompositionGetValueStatus* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE TryGetVector2(
                        HSTRING propertyName,
                        ABI::Windows::Foundation::Numerics::Vector2* value,
                        ABI::Windows::UI::Composition::CompositionGetValueStatus* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE TryGetVector3(
                        HSTRING propertyName,
                        ABI::Windows::Foundation::Numerics::Vector3* value,
                        ABI::Windows::UI::Composition::CompositionGetValueStatus* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE TryGetVector4(
                        HSTRING propertyName,
                        ABI::Windows::Foundation::Numerics::Vector4* value,
                        ABI::Windows::UI::Composition::CompositionGetValueStatus* result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionPropertySet = _uuidof(ICompositionPropertySet);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionPropertySet2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionPropertySet
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionPropertySet2[] = L"Windows.UI.Composition.ICompositionPropertySet2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("de80731e-a211-4455-8880-7d0f3f6a44fd")
                ICompositionPropertySet2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE InsertBoolean(
                        HSTRING propertyName,
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE TryGetBoolean(
                        HSTRING propertyName,
                        boolean* value,
                        ABI::Windows::UI::Composition::CompositionGetValueStatus* result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionPropertySet2 = _uuidof(ICompositionPropertySet2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionRadialGradientBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionRadialGradientBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionRadialGradientBrush[] = L"Windows.UI.Composition.ICompositionRadialGradientBrush";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("3d3b50c5-e3fa-4ce2-b9fc-3ee12561788f")
                ICompositionRadialGradientBrush : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_EllipseCenter(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_EllipseCenter(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_EllipseRadius(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_EllipseRadius(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_GradientOriginOffset(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_GradientOriginOffset(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionRadialGradientBrush = _uuidof(ICompositionRadialGradientBrush);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionRectangleGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionRectangleGeometry
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionRectangleGeometry[] = L"Windows.UI.Composition.ICompositionRectangleGeometry";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("0cd51428-5356-4246-aecf-7a0b76975400")
                ICompositionRectangleGeometry : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Offset(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Offset(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Size(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Size(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionRectangleGeometry = _uuidof(ICompositionRectangleGeometry);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionRoundedRectangleGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionRoundedRectangleGeometry
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionRoundedRectangleGeometry[] = L"Windows.UI.Composition.ICompositionRoundedRectangleGeometry";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("8770c822-1d50-4b8b-b013-7c9a0e46935f")
                ICompositionRoundedRectangleGeometry : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_CornerRadius(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CornerRadius(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Offset(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Offset(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Size(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Size(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionRoundedRectangleGeometry = _uuidof(ICompositionRoundedRectangleGeometry);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionScopedBatch
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionScopedBatch
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionScopedBatch[] = L"Windows.UI.Composition.ICompositionScopedBatch";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("0d00dad0-fb07-46fd-8c72-6280d1a3d1dd")
                ICompositionScopedBatch : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_IsActive(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsEnded(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE End(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Resume(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Suspend(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_Completed(
                        __FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_Completed(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionScopedBatch = _uuidof(ICompositionScopedBatch);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionShadow
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionShadow
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShadow_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionShadow[] = L"Windows.UI.Composition.ICompositionShadow";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("329e52e2-4335-49cc-b14a-37782d10f0c4")
                ICompositionShadow : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionShadow = _uuidof(ICompositionShadow);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionShadow;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShadow_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionShadowFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionShadow
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionShadowFactory[] = L"Windows.UI.Composition.ICompositionShadowFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("221f492f-dcba-4b91-999e-1dc217a01530")
                ICompositionShadowFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionShadowFactory = _uuidof(ICompositionShadowFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionShape
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionShape
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShape_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShape_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionShape[] = L"Windows.UI.Composition.ICompositionShape";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("b47ce2f7-9a88-42c4-9e87-2e500ca8688c")
                ICompositionShape : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_CenterPoint(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CenterPoint(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Offset(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Offset(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RotationAngle(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RotationAngle(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RotationAngleInDegrees(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RotationAngleInDegrees(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Scale(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Scale(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TransformMatrix(
                        ABI::Windows::Foundation::Numerics::Matrix3x2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TransformMatrix(
                        ABI::Windows::Foundation::Numerics::Matrix3x2 value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionShape = _uuidof(ICompositionShape);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionShape;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShape_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionShapeFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionShape
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionShapeFactory[] = L"Windows.UI.Composition.ICompositionShapeFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("1dfc36d0-b05a-44ef-82b0-12118bcd4cd0")
                ICompositionShapeFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionShapeFactory = _uuidof(ICompositionShapeFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionSpriteShape
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionSpriteShape
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionSpriteShape[] = L"Windows.UI.Composition.ICompositionSpriteShape";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("401b61bb-0007-4363-b1f3-6bcc003fb83e")
                ICompositionSpriteShape : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_FillBrush(
                        ABI::Windows::UI::Composition::ICompositionBrush** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_FillBrush(
                        ABI::Windows::UI::Composition::ICompositionBrush* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Geometry(
                        ABI::Windows::UI::Composition::ICompositionGeometry** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Geometry(
                        ABI::Windows::UI::Composition::ICompositionGeometry* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsStrokeNonScaling(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsStrokeNonScaling(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StrokeBrush(
                        ABI::Windows::UI::Composition::ICompositionBrush** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_StrokeBrush(
                        ABI::Windows::UI::Composition::ICompositionBrush* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StrokeDashArray(
                        __FIVector_1_float** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StrokeDashCap(
                        ABI::Windows::UI::Composition::CompositionStrokeCap* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_StrokeDashCap(
                        ABI::Windows::UI::Composition::CompositionStrokeCap value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StrokeDashOffset(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_StrokeDashOffset(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StrokeEndCap(
                        ABI::Windows::UI::Composition::CompositionStrokeCap* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_StrokeEndCap(
                        ABI::Windows::UI::Composition::CompositionStrokeCap value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StrokeLineJoin(
                        ABI::Windows::UI::Composition::CompositionStrokeLineJoin* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_StrokeLineJoin(
                        ABI::Windows::UI::Composition::CompositionStrokeLineJoin value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StrokeMiterLimit(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_StrokeMiterLimit(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StrokeStartCap(
                        ABI::Windows::UI::Composition::CompositionStrokeCap* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_StrokeStartCap(
                        ABI::Windows::UI::Composition::CompositionStrokeCap value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StrokeThickness(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_StrokeThickness(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionSpriteShape = _uuidof(ICompositionSpriteShape);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurface_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionSurface[] = L"Windows.UI.Composition.ICompositionSurface";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("1527540d-42c7-47a6-a408-668f79a90dfb")
                ICompositionSurface : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionSurface = _uuidof(ICompositionSurface);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionSurface;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurface_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionSurfaceBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionSurfaceBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionSurfaceBrush[] = L"Windows.UI.Composition.ICompositionSurfaceBrush";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("ad016d79-1e4c-4c0d-9c29-83338c87c162")
                ICompositionSurfaceBrush : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_BitmapInterpolationMode(
                        ABI::Windows::UI::Composition::CompositionBitmapInterpolationMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BitmapInterpolationMode(
                        ABI::Windows::UI::Composition::CompositionBitmapInterpolationMode value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_HorizontalAlignmentRatio(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_HorizontalAlignmentRatio(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Stretch(
                        ABI::Windows::UI::Composition::CompositionStretch* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Stretch(
                        ABI::Windows::UI::Composition::CompositionStretch value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Surface(
                        ABI::Windows::UI::Composition::ICompositionSurface** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Surface(
                        ABI::Windows::UI::Composition::ICompositionSurface* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VerticalAlignmentRatio(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_VerticalAlignmentRatio(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionSurfaceBrush = _uuidof(ICompositionSurfaceBrush);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionSurfaceBrush2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionSurfaceBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionSurfaceBrush2[] = L"Windows.UI.Composition.ICompositionSurfaceBrush2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("d27174d5-64f5-4692-9dc7-71b61d7e5880")
                ICompositionSurfaceBrush2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AnchorPoint(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AnchorPoint(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CenterPoint(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CenterPoint(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Offset(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Offset(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RotationAngle(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RotationAngle(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RotationAngleInDegrees(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RotationAngleInDegrees(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Scale(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Scale(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TransformMatrix(
                        ABI::Windows::Foundation::Numerics::Matrix3x2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TransformMatrix(
                        ABI::Windows::Foundation::Numerics::Matrix3x2 value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionSurfaceBrush2 = _uuidof(ICompositionSurfaceBrush2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionSurfaceBrush3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionSurfaceBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionSurfaceBrush3[] = L"Windows.UI.Composition.ICompositionSurfaceBrush3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("550bb289-1fe0-42e5-8195-1eefa87ff08e")
                ICompositionSurfaceBrush3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_SnapToPixels(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_SnapToPixels(
                        boolean value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionSurfaceBrush3 = _uuidof(ICompositionSurfaceBrush3);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionTarget
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionTarget
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTarget_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTarget_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionTarget[] = L"Windows.UI.Composition.ICompositionTarget";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("a1bea8ba-d726-4663-8129-6b5e7927ffa6")
                ICompositionTarget : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Root(
                        ABI::Windows::UI::Composition::IVisual** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Root(
                        ABI::Windows::UI::Composition::IVisual* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionTarget = _uuidof(ICompositionTarget);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionTarget;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTarget_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionTargetFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionTarget
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionTargetFactory[] = L"Windows.UI.Composition.ICompositionTargetFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("93cd9d2b-8516-4b14-a8ce-f49e2119ec42")
                ICompositionTargetFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionTargetFactory = _uuidof(ICompositionTargetFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositionTransform
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionTransform
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTransform_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionTransform[] = L"Windows.UI.Composition.ICompositionTransform";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("7cd54529-fbed-4112-abc5-185906dd927c")
                ICompositionTransform : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionTransform = _uuidof(ICompositionTransform);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionTransform;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTransform_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionTransformFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionTransform
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionTransformFactory[] = L"Windows.UI.Composition.ICompositionTransformFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("aaaeca26-c149-517a-8f72-6bff7a65ce08")
                ICompositionTransformFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionTransformFactory = _uuidof(ICompositionTransformFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionViewBox
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionViewBox
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionViewBox[] = L"Windows.UI.Composition.ICompositionViewBox";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("b440bf07-068f-4537-84c6-4ecbe019e1f4")
                ICompositionViewBox : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_HorizontalAlignmentRatio(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_HorizontalAlignmentRatio(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Offset(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Offset(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Size(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Size(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Stretch(
                        ABI::Windows::UI::Composition::CompositionStretch* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Stretch(
                        ABI::Windows::UI::Composition::CompositionStretch value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VerticalAlignmentRatio(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_VerticalAlignmentRatio(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionViewBox = _uuidof(ICompositionViewBox);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionViewBox;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionVirtualDrawingSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionVirtualDrawingSurface
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionVirtualDrawingSurface[] = L"Windows.UI.Composition.ICompositionVirtualDrawingSurface";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("a9c384db-8740-4f94-8b9d-b68521e7863d")
                ICompositionVirtualDrawingSurface : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Trim(
                        UINT32 rectsLength,
                        ABI::Windows::Graphics::RectInt32* rects
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionVirtualDrawingSurface = _uuidof(ICompositionVirtualDrawingSurface);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.ICompositionVirtualDrawingSurfaceFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionVirtualDrawingSurface
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionVirtualDrawingSurfaceFactory[] = L"Windows.UI.Composition.ICompositionVirtualDrawingSurfaceFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("6766106c-d56b-4a49-b1df-5076a0620768")
                ICompositionVirtualDrawingSurfaceFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICompositionVirtualDrawingSurfaceFactory = _uuidof(ICompositionVirtualDrawingSurfaceFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.ICompositionVisualSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionVisualSurface
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionVisualSurface[] = L"Windows.UI.Composition.ICompositionVisualSurface";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("b224d803-4f6e-4a3f-8cae-3dc1cda74fc6")
                ICompositionVisualSurface : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_SourceVisual(
                        ABI::Windows::UI::Composition::IVisual** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_SourceVisual(
                        ABI::Windows::UI::Composition::IVisual* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_SourceOffset(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_SourceOffset(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_SourceSize(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_SourceSize(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositionVisualSurface = _uuidof(ICompositionVisualSurface);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositor
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositor[] = L"Windows.UI.Composition.ICompositor";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("b403ca50-7f8c-4e83-985f-cc45060036d8")
                ICompositor : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateColorKeyFrameAnimation(
                        ABI::Windows::UI::Composition::IColorKeyFrameAnimation** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateColorBrush(
                        ABI::Windows::UI::Composition::ICompositionColorBrush** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateColorBrushWithColor(
                        ABI::Windows::UI::Color color,
                        ABI::Windows::UI::Composition::ICompositionColorBrush** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateContainerVisual(
                        ABI::Windows::UI::Composition::IContainerVisual** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateCubicBezierEasingFunction(
                        ABI::Windows::Foundation::Numerics::Vector2 controlPoint1,
                        ABI::Windows::Foundation::Numerics::Vector2 controlPoint2,
                        ABI::Windows::UI::Composition::ICubicBezierEasingFunction** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateEffectFactory(
                        ABI::Windows::Graphics::Effects::IGraphicsEffect* graphicsEffect,
                        ABI::Windows::UI::Composition::ICompositionEffectFactory** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateEffectFactoryWithProperties(
                        ABI::Windows::Graphics::Effects::IGraphicsEffect* graphicsEffect,
                        __FIIterable_1_HSTRING* animatableProperties,
                        ABI::Windows::UI::Composition::ICompositionEffectFactory** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateExpressionAnimation(
                        ABI::Windows::UI::Composition::IExpressionAnimation** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateExpressionAnimationWithExpression(
                        HSTRING expression,
                        ABI::Windows::UI::Composition::IExpressionAnimation** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateInsetClip(
                        ABI::Windows::UI::Composition::IInsetClip** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateInsetClipWithInsets(
                        FLOAT leftInset,
                        FLOAT topInset,
                        FLOAT rightInset,
                        FLOAT bottomInset,
                        ABI::Windows::UI::Composition::IInsetClip** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateLinearEasingFunction(
                        ABI::Windows::UI::Composition::ILinearEasingFunction** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreatePropertySet(
                        ABI::Windows::UI::Composition::ICompositionPropertySet** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateQuaternionKeyFrameAnimation(
                        ABI::Windows::UI::Composition::IQuaternionKeyFrameAnimation** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateScalarKeyFrameAnimation(
                        ABI::Windows::UI::Composition::IScalarKeyFrameAnimation** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateScopedBatch(
                        ABI::Windows::UI::Composition::CompositionBatchTypes batchType,
                        ABI::Windows::UI::Composition::ICompositionScopedBatch** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateSpriteVisual(
                        ABI::Windows::UI::Composition::ISpriteVisual** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateSurfaceBrush(
                        ABI::Windows::UI::Composition::ICompositionSurfaceBrush** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateSurfaceBrushWithSurface(
                        ABI::Windows::UI::Composition::ICompositionSurface* surface,
                        ABI::Windows::UI::Composition::ICompositionSurfaceBrush** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateTargetForCurrentView(
                        ABI::Windows::UI::Composition::ICompositionTarget** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateVector2KeyFrameAnimation(
                        ABI::Windows::UI::Composition::IVector2KeyFrameAnimation** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateVector3KeyFrameAnimation(
                        ABI::Windows::UI::Composition::IVector3KeyFrameAnimation** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateVector4KeyFrameAnimation(
                        ABI::Windows::UI::Composition::IVector4KeyFrameAnimation** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetCommitBatch(
                        ABI::Windows::UI::Composition::CompositionBatchTypes batchType,
                        ABI::Windows::UI::Composition::ICompositionCommitBatch** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositor = _uuidof(ICompositor);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositor;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositor2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositor2[] = L"Windows.UI.Composition.ICompositor2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("735081dc-5e24-45da-a38f-e32cc349a9a0")
                ICompositor2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateAmbientLight(
                        ABI::Windows::UI::Composition::IAmbientLight** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateAnimationGroup(
                        ABI::Windows::UI::Composition::ICompositionAnimationGroup** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateBackdropBrush(
                        ABI::Windows::UI::Composition::ICompositionBackdropBrush** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateDistantLight(
                        ABI::Windows::UI::Composition::IDistantLight** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateDropShadow(
                        ABI::Windows::UI::Composition::IDropShadow** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateImplicitAnimationCollection(
                        ABI::Windows::UI::Composition::IImplicitAnimationCollection** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateLayerVisual(
                        ABI::Windows::UI::Composition::ILayerVisual** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateMaskBrush(
                        ABI::Windows::UI::Composition::ICompositionMaskBrush** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateNineGridBrush(
                        ABI::Windows::UI::Composition::ICompositionNineGridBrush** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreatePointLight(
                        ABI::Windows::UI::Composition::IPointLight** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateSpotLight(
                        ABI::Windows::UI::Composition::ISpotLight** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateStepEasingFunction(
                        ABI::Windows::UI::Composition::IStepEasingFunction** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateStepEasingFunctionWithStepCount(
                        INT32 stepCount,
                        ABI::Windows::UI::Composition::IStepEasingFunction** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositor2 = _uuidof(ICompositor2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositor2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositor3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositor3[] = L"Windows.UI.Composition.ICompositor3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("c9dd8ef0-6eb1-4e3c-a658-675d9c64d4ab")
                ICompositor3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateHostBackdropBrush(
                        ABI::Windows::UI::Composition::ICompositionBackdropBrush** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositor3 = _uuidof(ICompositor3);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositor3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.ICompositor4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositor4[] = L"Windows.UI.Composition.ICompositor4";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("ae47e78a-7910-4425-a482-a05b758adce9")
                ICompositor4 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateColorGradientStop(
                        ABI::Windows::UI::Composition::ICompositionColorGradientStop** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateColorGradientStopWithOffsetAndColor(
                        FLOAT offset,
                        ABI::Windows::UI::Color color,
                        ABI::Windows::UI::Composition::ICompositionColorGradientStop** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateLinearGradientBrush(
                        ABI::Windows::UI::Composition::ICompositionLinearGradientBrush** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateSpringScalarAnimation(
                        ABI::Windows::UI::Composition::ISpringScalarNaturalMotionAnimation** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateSpringVector2Animation(
                        ABI::Windows::UI::Composition::ISpringVector2NaturalMotionAnimation** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateSpringVector3Animation(
                        ABI::Windows::UI::Composition::ISpringVector3NaturalMotionAnimation** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositor4 = _uuidof(ICompositor4);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositor4;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositor5
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositor5[] = L"Windows.UI.Composition.ICompositor5";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("48ea31ad-7fcd-4076-a79c-90cc4b852c9b")
                ICompositor5 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Comment(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Comment(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_GlobalPlaybackRate(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_GlobalPlaybackRate(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateBounceScalarAnimation(
                        ABI::Windows::UI::Composition::IBounceScalarNaturalMotionAnimation** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateBounceVector2Animation(
                        ABI::Windows::UI::Composition::IBounceVector2NaturalMotionAnimation** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateBounceVector3Animation(
                        ABI::Windows::UI::Composition::IBounceVector3NaturalMotionAnimation** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateContainerShape(
                        ABI::Windows::UI::Composition::ICompositionContainerShape** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateEllipseGeometry(
                        ABI::Windows::UI::Composition::ICompositionEllipseGeometry** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateLineGeometry(
                        ABI::Windows::UI::Composition::ICompositionLineGeometry** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreatePathGeometry(
                        ABI::Windows::UI::Composition::ICompositionPathGeometry** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreatePathGeometryWithPath(
                        ABI::Windows::UI::Composition::ICompositionPath* path,
                        ABI::Windows::UI::Composition::ICompositionPathGeometry** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreatePathKeyFrameAnimation(
                        ABI::Windows::UI::Composition::IPathKeyFrameAnimation** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateRectangleGeometry(
                        ABI::Windows::UI::Composition::ICompositionRectangleGeometry** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateRoundedRectangleGeometry(
                        ABI::Windows::UI::Composition::ICompositionRoundedRectangleGeometry** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateShapeVisual(
                        ABI::Windows::UI::Composition::IShapeVisual** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateSpriteShape(
                        ABI::Windows::UI::Composition::ICompositionSpriteShape** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateSpriteShapeWithGeometry(
                        ABI::Windows::UI::Composition::ICompositionGeometry* geometry,
                        ABI::Windows::UI::Composition::ICompositionSpriteShape** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateViewBox(
                        ABI::Windows::UI::Composition::ICompositionViewBox** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE RequestCommitAsync(
                        ABI::Windows::Foundation::IAsyncAction** operation
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositor5 = _uuidof(ICompositor5);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositor5;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor5_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositor6
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor6_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor6_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositor6[] = L"Windows.UI.Composition.ICompositor6";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("7a38b2bd-cec8-4eeb-830f-d8d07aedebc3")
                ICompositor6 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateGeometricClip(
                        ABI::Windows::UI::Composition::ICompositionGeometricClip** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateGeometricClipWithGeometry(
                        ABI::Windows::UI::Composition::ICompositionGeometry* geometry,
                        ABI::Windows::UI::Composition::ICompositionGeometricClip** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateRedirectVisual(
                        ABI::Windows::UI::Composition::IRedirectVisual** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateRedirectVisualWithSourceVisual(
                        ABI::Windows::UI::Composition::IVisual* source,
                        ABI::Windows::UI::Composition::IRedirectVisual** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateBooleanKeyFrameAnimation(
                        ABI::Windows::UI::Composition::IBooleanKeyFrameAnimation** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositor6 = _uuidof(ICompositor6);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositor6;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor6_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Composition.ICompositorStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositorStatics[] = L"Windows.UI.Composition.ICompositorStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("080db93e-121e-4d97-8b74-1dfcf91987ea")
                ICompositorStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_MaxGlobalPlaybackRate(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MinGlobalPlaybackRate(
                        FLOAT* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositorStatics = _uuidof(ICompositorStatics);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositorStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositorWithProjectedShadow
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositorWithProjectedShadow[] = L"Windows.UI.Composition.ICompositorWithProjectedShadow";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("a2e6330e-8a60-5a38-bb85-b44ea901677c")
                ICompositorWithProjectedShadow : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateProjectedShadowCaster(
                        ABI::Windows::UI::Composition::ICompositionProjectedShadowCaster** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateProjectedShadow(
                        ABI::Windows::UI::Composition::ICompositionProjectedShadow** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateProjectedShadowReceiver(
                        ABI::Windows::UI::Composition::ICompositionProjectedShadowReceiver** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositorWithProjectedShadow = _uuidof(ICompositorWithProjectedShadow);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositorWithRadialGradient
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositorWithRadialGradient[] = L"Windows.UI.Composition.ICompositorWithRadialGradient";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("98b9c1a7-8e71-4b53-b4a8-69ba5d19dc5b")
                ICompositorWithRadialGradient : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateRadialGradientBrush(
                        ABI::Windows::UI::Composition::ICompositionRadialGradientBrush** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositorWithRadialGradient = _uuidof(ICompositorWithRadialGradient);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositorWithVisualSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositorWithVisualSurface[] = L"Windows.UI.Composition.ICompositorWithVisualSurface";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("cfa1658b-0123-4551-8891-89bdcc40322b")
                ICompositorWithVisualSurface : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateVisualSurface(
                        ABI::Windows::UI::Composition::ICompositionVisualSurface** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICompositorWithVisualSurface = _uuidof(ICompositorWithVisualSurface);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.IContainerVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.ContainerVisual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IContainerVisual[] = L"Windows.UI.Composition.IContainerVisual";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("02f6bc74-ed20-4773-afe6-d49b4a93db32")
                IContainerVisual : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Children(
                        ABI::Windows::UI::Composition::IVisualCollection** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IContainerVisual = _uuidof(IContainerVisual);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIContainerVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IContainerVisualFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.ContainerVisual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IContainerVisualFactory[] = L"Windows.UI.Composition.IContainerVisualFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("0363a65b-c7da-4d9a-95f4-69b5c8df670b")
                IContainerVisualFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IContainerVisualFactory = _uuidof(IContainerVisualFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICubicBezierEasingFunction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CubicBezierEasingFunction
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICubicBezierEasingFunction[] = L"Windows.UI.Composition.ICubicBezierEasingFunction";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("32350666-c1e8-44f9-96b8-c98acf0ae698")
                ICubicBezierEasingFunction : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_ControlPoint1(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ControlPoint2(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICubicBezierEasingFunction = _uuidof(ICubicBezierEasingFunction);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IDistantLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.DistantLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIDistantLight_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIDistantLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IDistantLight[] = L"Windows.UI.Composition.IDistantLight";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("318cfafc-5ce3-4b55-ab5d-07a00353ac99")
                IDistantLight : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Color(
                        ABI::Windows::UI::Color* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Color(
                        ABI::Windows::UI::Color value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CoordinateSpace(
                        ABI::Windows::UI::Composition::IVisual** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CoordinateSpace(
                        ABI::Windows::UI::Composition::IVisual* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Direction(
                        ABI::Windows::Foundation::Numerics::Vector3* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Direction(
                        ABI::Windows::Foundation::Numerics::Vector3 value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDistantLight = _uuidof(IDistantLight);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIDistantLight;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIDistantLight_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.IDistantLight2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.DistantLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIDistantLight2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIDistantLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IDistantLight2[] = L"Windows.UI.Composition.IDistantLight2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("dbcdaa1c-294b-48d7-b60e-76df64aa392b")
                IDistantLight2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Intensity(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Intensity(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDistantLight2 = _uuidof(IDistantLight2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIDistantLight2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIDistantLight2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IDropShadow
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.DropShadow
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIDropShadow_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIDropShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IDropShadow[] = L"Windows.UI.Composition.IDropShadow";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("cb977c07-a154-4851-85e7-a8924c84fad8")
                IDropShadow : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_BlurRadius(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BlurRadius(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Color(
                        ABI::Windows::UI::Color* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Color(
                        ABI::Windows::UI::Color value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Mask(
                        ABI::Windows::UI::Composition::ICompositionBrush** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Mask(
                        ABI::Windows::UI::Composition::ICompositionBrush* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Offset(
                        ABI::Windows::Foundation::Numerics::Vector3* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Offset(
                        ABI::Windows::Foundation::Numerics::Vector3 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Opacity(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Opacity(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDropShadow = _uuidof(IDropShadow);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIDropShadow;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIDropShadow_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.IDropShadow2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.DropShadow
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIDropShadow2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIDropShadow2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IDropShadow2[] = L"Windows.UI.Composition.IDropShadow2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("6c4218bc-15b9-4c2d-8d4a-0767df11977a")
                IDropShadow2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_SourcePolicy(
                        ABI::Windows::UI::Composition::CompositionDropShadowSourcePolicy* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_SourcePolicy(
                        ABI::Windows::UI::Composition::CompositionDropShadowSourcePolicy value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDropShadow2 = _uuidof(IDropShadow2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIDropShadow2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIDropShadow2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IExpressionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.ExpressionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IExpressionAnimation[] = L"Windows.UI.Composition.IExpressionAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("6acc5431-7d3d-4bf3-abb6-f44bdc4888c1")
                IExpressionAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Expression(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Expression(
                        HSTRING value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IExpressionAnimation = _uuidof(IExpressionAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IImplicitAnimationCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.ImplicitAnimationCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IImplicitAnimationCollection[] = L"Windows.UI.Composition.IImplicitAnimationCollection";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("0598a3ff-0a92-4c9d-a427-b25519250dbf")
                IImplicitAnimationCollection : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IImplicitAnimationCollection = _uuidof(IImplicitAnimationCollection);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.IInsetClip
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.InsetClip
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIInsetClip_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIInsetClip_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IInsetClip[] = L"Windows.UI.Composition.IInsetClip";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("1e73e647-84c7-477a-b474-5880e0442e15")
                IInsetClip : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_BottomInset(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BottomInset(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_LeftInset(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_LeftInset(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RightInset(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RightInset(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TopInset(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TopInset(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IInsetClip = _uuidof(IInsetClip);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIInsetClip;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIInsetClip_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.KeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IKeyFrameAnimation[] = L"Windows.UI.Composition.IKeyFrameAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("126e7f22-3ae9-4540-9a8a-deae8a4a4a84")
                IKeyFrameAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_DelayTime(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_DelayTime(
                        ABI::Windows::Foundation::TimeSpan value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Duration(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Duration(
                        ABI::Windows::Foundation::TimeSpan value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IterationBehavior(
                        ABI::Windows::UI::Composition::AnimationIterationBehavior* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IterationBehavior(
                        ABI::Windows::UI::Composition::AnimationIterationBehavior value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IterationCount(
                        INT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IterationCount(
                        INT32 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_KeyFrameCount(
                        INT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StopBehavior(
                        ABI::Windows::UI::Composition::AnimationStopBehavior* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_StopBehavior(
                        ABI::Windows::UI::Composition::AnimationStopBehavior value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertExpressionKeyFrame(
                        FLOAT normalizedProgressKey,
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertExpressionKeyFrameWithEasingFunction(
                        FLOAT normalizedProgressKey,
                        HSTRING value,
                        ABI::Windows::UI::Composition::ICompositionEasingFunction* easingFunction
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IKeyFrameAnimation = _uuidof(IKeyFrameAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IKeyFrameAnimation2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.KeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IKeyFrameAnimation2[] = L"Windows.UI.Composition.IKeyFrameAnimation2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("f4b488bb-2940-4ec0-a41a-eb6d801a2f18")
                IKeyFrameAnimation2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Direction(
                        ABI::Windows::UI::Composition::AnimationDirection* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Direction(
                        ABI::Windows::UI::Composition::AnimationDirection value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IKeyFrameAnimation2 = _uuidof(IKeyFrameAnimation2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.IKeyFrameAnimation3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.KeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IKeyFrameAnimation3[] = L"Windows.UI.Composition.IKeyFrameAnimation3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("845bf0b4-d8de-462f-8753-c80d43c6ff5a")
                IKeyFrameAnimation3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_DelayBehavior(
                        ABI::Windows::UI::Composition::AnimationDelayBehavior* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_DelayBehavior(
                        ABI::Windows::UI::Composition::AnimationDelayBehavior value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IKeyFrameAnimation3 = _uuidof(IKeyFrameAnimation3);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.IKeyFrameAnimationFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.KeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IKeyFrameAnimationFactory[] = L"Windows.UI.Composition.IKeyFrameAnimationFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("bf0803f8-712a-4fc1-8c87-970859ed8d2e")
                IKeyFrameAnimationFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IKeyFrameAnimationFactory = _uuidof(IKeyFrameAnimationFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ILayerVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.LayerVisual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CILayerVisual_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CILayerVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ILayerVisual[] = L"Windows.UI.Composition.ILayerVisual";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("af843985-0444-4887-8e83-b40b253f822c")
                ILayerVisual : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Effect(
                        ABI::Windows::UI::Composition::ICompositionEffectBrush** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Effect(
                        ABI::Windows::UI::Composition::ICompositionEffectBrush* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ILayerVisual = _uuidof(ILayerVisual);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CILayerVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CILayerVisual_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ILayerVisual2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.LayerVisual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CILayerVisual2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CILayerVisual2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ILayerVisual2[] = L"Windows.UI.Composition.ILayerVisual2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("98f9aeeb-6f23-49f1-90b1-1f59a14fbce3")
                ILayerVisual2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Shadow(
                        ABI::Windows::UI::Composition::ICompositionShadow** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Shadow(
                        ABI::Windows::UI::Composition::ICompositionShadow* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ILayerVisual2 = _uuidof(ILayerVisual2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CILayerVisual2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CILayerVisual2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ILinearEasingFunction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.LinearEasingFunction
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ILinearEasingFunction[] = L"Windows.UI.Composition.ILinearEasingFunction";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("9400975a-c7a6-46b3-acf7-1a268a0a117d")
                ILinearEasingFunction : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ILinearEasingFunction = _uuidof(ILinearEasingFunction);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.INaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_INaturalMotionAnimation[] = L"Windows.UI.Composition.INaturalMotionAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("438de12d-769b-4821-a949-284a6547e873")
                INaturalMotionAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_DelayBehavior(
                        ABI::Windows::UI::Composition::AnimationDelayBehavior* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_DelayBehavior(
                        ABI::Windows::UI::Composition::AnimationDelayBehavior value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_DelayTime(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_DelayTime(
                        ABI::Windows::Foundation::TimeSpan value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StopBehavior(
                        ABI::Windows::UI::Composition::AnimationStopBehavior* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_StopBehavior(
                        ABI::Windows::UI::Composition::AnimationStopBehavior value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_INaturalMotionAnimation = _uuidof(INaturalMotionAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.INaturalMotionAnimationFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_INaturalMotionAnimationFactory[] = L"Windows.UI.Composition.INaturalMotionAnimationFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("f53acb06-cf6a-4387-a3fe-5221f3e7e0e0")
                INaturalMotionAnimationFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_INaturalMotionAnimationFactory = _uuidof(INaturalMotionAnimationFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IPathKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.PathKeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IPathKeyFrameAnimation[] = L"Windows.UI.Composition.IPathKeyFrameAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("9d0d18c9-1576-4b3f-be60-1d5031f5e71b")
                IPathKeyFrameAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE InsertKeyFrame(
                        FLOAT normalizedProgressKey,
                        ABI::Windows::UI::Composition::ICompositionPath* path
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertKeyFrameWithEasingFunction(
                        FLOAT normalizedProgressKey,
                        ABI::Windows::UI::Composition::ICompositionPath* path,
                        ABI::Windows::UI::Composition::ICompositionEasingFunction* easingFunction
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IPathKeyFrameAnimation = _uuidof(IPathKeyFrameAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.IPointLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.PointLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIPointLight_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIPointLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IPointLight[] = L"Windows.UI.Composition.IPointLight";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("b18545b3-0c5a-4ab0-bedc-4f3546948272")
                IPointLight : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Color(
                        ABI::Windows::UI::Color* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Color(
                        ABI::Windows::UI::Color value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ConstantAttenuation(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ConstantAttenuation(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CoordinateSpace(
                        ABI::Windows::UI::Composition::IVisual** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CoordinateSpace(
                        ABI::Windows::UI::Composition::IVisual* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_LinearAttenuation(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_LinearAttenuation(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Offset(
                        ABI::Windows::Foundation::Numerics::Vector3* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Offset(
                        ABI::Windows::Foundation::Numerics::Vector3 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_QuadraticAttenuation(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_QuadraticAttenuation(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IPointLight = _uuidof(IPointLight);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIPointLight;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIPointLight_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.IPointLight2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.PointLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIPointLight2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIPointLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IPointLight2[] = L"Windows.UI.Composition.IPointLight2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("efe98f2c-0678-4f69-b164-a810d995bcb7")
                IPointLight2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Intensity(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Intensity(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IPointLight2 = _uuidof(IPointLight2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIPointLight2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIPointLight2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IPointLight3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.PointLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIPointLight3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIPointLight3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IPointLight3[] = L"Windows.UI.Composition.IPointLight3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("4c0a8367-d4e9-468a-87ae-7ba43ab29485")
                IPointLight3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_MinAttenuationCutoff(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MinAttenuationCutoff(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MaxAttenuationCutoff(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MaxAttenuationCutoff(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IPointLight3 = _uuidof(IPointLight3);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIPointLight3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIPointLight3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.IQuaternionKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.QuaternionKeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IQuaternionKeyFrameAnimation[] = L"Windows.UI.Composition.IQuaternionKeyFrameAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("404e5835-ecf6-4240-8520-671279cf36bc")
                IQuaternionKeyFrameAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE InsertKeyFrame(
                        FLOAT normalizedProgressKey,
                        ABI::Windows::Foundation::Numerics::Quaternion value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertKeyFrameWithEasingFunction(
                        FLOAT normalizedProgressKey,
                        ABI::Windows::Foundation::Numerics::Quaternion value,
                        ABI::Windows::UI::Composition::ICompositionEasingFunction* easingFunction
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IQuaternionKeyFrameAnimation = _uuidof(IQuaternionKeyFrameAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IRedirectVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.RedirectVisual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IRedirectVisual[] = L"Windows.UI.Composition.IRedirectVisual";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("8cc6e340-8b75-5422-b06f-09ffe9f8617e")
                IRedirectVisual : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Source(
                        ABI::Windows::UI::Composition::IVisual** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Source(
                        ABI::Windows::UI::Composition::IVisual* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IRedirectVisual = _uuidof(IRedirectVisual);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIRedirectVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Composition.IRenderingDeviceReplacedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.RenderingDeviceReplacedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IRenderingDeviceReplacedEventArgs[] = L"Windows.UI.Composition.IRenderingDeviceReplacedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("3a31ac7d-28bf-4e7a-8524-71679d480f38")
                IRenderingDeviceReplacedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_GraphicsDevice(
                        ABI::Windows::UI::Composition::ICompositionGraphicsDevice** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IRenderingDeviceReplacedEventArgs = _uuidof(IRenderingDeviceReplacedEventArgs);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IScalarKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.ScalarKeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IScalarKeyFrameAnimation[] = L"Windows.UI.Composition.IScalarKeyFrameAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("ae288fa9-252c-4b95-a725-bf85e38000a1")
                IScalarKeyFrameAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE InsertKeyFrame(
                        FLOAT normalizedProgressKey,
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertKeyFrameWithEasingFunction(
                        FLOAT normalizedProgressKey,
                        FLOAT value,
                        ABI::Windows::UI::Composition::ICompositionEasingFunction* easingFunction
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IScalarKeyFrameAnimation = _uuidof(IScalarKeyFrameAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IScalarNaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.ScalarNaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IScalarNaturalMotionAnimation[] = L"Windows.UI.Composition.IScalarNaturalMotionAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("94a94581-bf92-495b-b5bd-d2c659430737")
                IScalarNaturalMotionAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_FinalValue(
                        __FIReference_1_float** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_FinalValue(
                        __FIReference_1_float* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_InitialValue(
                        __FIReference_1_float** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_InitialValue(
                        __FIReference_1_float* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_InitialVelocity(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_InitialVelocity(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IScalarNaturalMotionAnimation = _uuidof(IScalarNaturalMotionAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IScalarNaturalMotionAnimationFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.ScalarNaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IScalarNaturalMotionAnimationFactory[] = L"Windows.UI.Composition.IScalarNaturalMotionAnimationFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("835aa4fc-671c-41dd-af48-ae8def8b1529")
                IScalarNaturalMotionAnimationFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IScalarNaturalMotionAnimationFactory = _uuidof(IScalarNaturalMotionAnimationFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IShapeVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.ShapeVisual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIShapeVisual_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIShapeVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IShapeVisual[] = L"Windows.UI.Composition.IShapeVisual";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("f2bd13c3-ba7e-4b0f-9126-ffb7536b8176")
                IShapeVisual : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Shapes(
                        __FIVector_1_Windows__CUI__CComposition__CCompositionShape** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ViewBox(
                        ABI::Windows::UI::Composition::ICompositionViewBox** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ViewBox(
                        ABI::Windows::UI::Composition::ICompositionViewBox* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IShapeVisual = _uuidof(IShapeVisual);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIShapeVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIShapeVisual_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ISpotLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.SpotLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpotLight_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CISpotLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ISpotLight[] = L"Windows.UI.Composition.ISpotLight";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("5a9fe273-44a1-4f95-a422-8fa5116bdb44")
                ISpotLight : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_ConstantAttenuation(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ConstantAttenuation(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CoordinateSpace(
                        ABI::Windows::UI::Composition::IVisual** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CoordinateSpace(
                        ABI::Windows::UI::Composition::IVisual* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Direction(
                        ABI::Windows::Foundation::Numerics::Vector3* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Direction(
                        ABI::Windows::Foundation::Numerics::Vector3 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_InnerConeAngle(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_InnerConeAngle(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_InnerConeAngleInDegrees(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_InnerConeAngleInDegrees(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_InnerConeColor(
                        ABI::Windows::UI::Color* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_InnerConeColor(
                        ABI::Windows::UI::Color value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_LinearAttenuation(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_LinearAttenuation(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Offset(
                        ABI::Windows::Foundation::Numerics::Vector3* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Offset(
                        ABI::Windows::Foundation::Numerics::Vector3 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_OuterConeAngle(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_OuterConeAngle(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_OuterConeAngleInDegrees(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_OuterConeAngleInDegrees(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_OuterConeColor(
                        ABI::Windows::UI::Color* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_OuterConeColor(
                        ABI::Windows::UI::Color value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_QuadraticAttenuation(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_QuadraticAttenuation(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ISpotLight = _uuidof(ISpotLight);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpotLight;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpotLight_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ISpotLight2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.SpotLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpotLight2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CISpotLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ISpotLight2[] = L"Windows.UI.Composition.ISpotLight2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("64ee615e-0686-4dea-a9e8-bc3a8c701459")
                ISpotLight2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_InnerConeIntensity(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_InnerConeIntensity(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_OuterConeIntensity(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_OuterConeIntensity(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ISpotLight2 = _uuidof(ISpotLight2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpotLight2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpotLight2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ISpotLight3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.SpotLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpotLight3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CISpotLight3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ISpotLight3[] = L"Windows.UI.Composition.ISpotLight3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("e4d03eea-131f-480e-859e-b82705b74360")
                ISpotLight3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_MinAttenuationCutoff(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MinAttenuationCutoff(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MaxAttenuationCutoff(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MaxAttenuationCutoff(
                        FLOAT value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ISpotLight3 = _uuidof(ISpotLight3);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpotLight3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpotLight3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ISpringScalarNaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.SpringScalarNaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ISpringScalarNaturalMotionAnimation[] = L"Windows.UI.Composition.ISpringScalarNaturalMotionAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("0572a95f-37f9-4fbe-b87b-5cd03a89501c")
                ISpringScalarNaturalMotionAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_DampingRatio(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_DampingRatio(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Period(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Period(
                        ABI::Windows::Foundation::TimeSpan value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ISpringScalarNaturalMotionAnimation = _uuidof(ISpringScalarNaturalMotionAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ISpringVector2NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.SpringVector2NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ISpringVector2NaturalMotionAnimation[] = L"Windows.UI.Composition.ISpringVector2NaturalMotionAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("23f494b5-ee73-4f0f-a423-402b946df4b3")
                ISpringVector2NaturalMotionAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_DampingRatio(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_DampingRatio(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Period(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Period(
                        ABI::Windows::Foundation::TimeSpan value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ISpringVector2NaturalMotionAnimation = _uuidof(ISpringVector2NaturalMotionAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ISpringVector3NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.SpringVector3NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ISpringVector3NaturalMotionAnimation[] = L"Windows.UI.Composition.ISpringVector3NaturalMotionAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("6c8749df-d57b-4794-8e2d-cecb11e194e5")
                ISpringVector3NaturalMotionAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_DampingRatio(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_DampingRatio(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Period(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Period(
                        ABI::Windows::Foundation::TimeSpan value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ISpringVector3NaturalMotionAnimation = _uuidof(ISpringVector3NaturalMotionAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ISpriteVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.SpriteVisual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpriteVisual_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ISpriteVisual[] = L"Windows.UI.Composition.ISpriteVisual";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("08e05581-1ad1-4f97-9757-402d76e4233b")
                ISpriteVisual : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Brush(
                        ABI::Windows::UI::Composition::ICompositionBrush** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Brush(
                        ABI::Windows::UI::Composition::ICompositionBrush* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ISpriteVisual = _uuidof(ISpriteVisual);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpriteVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpriteVisual_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ISpriteVisual2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.SpriteVisual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ISpriteVisual2[] = L"Windows.UI.Composition.ISpriteVisual2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("588c9664-997a-4850-91fe-53cb58f81ce9")
                ISpriteVisual2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Shadow(
                        ABI::Windows::UI::Composition::ICompositionShadow** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Shadow(
                        ABI::Windows::UI::Composition::ICompositionShadow* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ISpriteVisual2 = _uuidof(ISpriteVisual2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpriteVisual2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.IStepEasingFunction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.StepEasingFunction
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IStepEasingFunction[] = L"Windows.UI.Composition.IStepEasingFunction";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("d0caa74b-560c-4a0b-a5f6-206ca8c3ecd6")
                IStepEasingFunction : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_FinalStep(
                        INT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_FinalStep(
                        INT32 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_InitialStep(
                        INT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_InitialStep(
                        INT32 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsFinalStepSingleFrame(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsFinalStepSingleFrame(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsInitialStepSingleFrame(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsInitialStepSingleFrame(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StepCount(
                        INT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_StepCount(
                        INT32 value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IStepEasingFunction = _uuidof(IStepEasingFunction);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.IVector2KeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Vector2KeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVector2KeyFrameAnimation[] = L"Windows.UI.Composition.IVector2KeyFrameAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("df414515-4e29-4f11-b55e-bf2a6eb36294")
                IVector2KeyFrameAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE InsertKeyFrame(
                        FLOAT normalizedProgressKey,
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertKeyFrameWithEasingFunction(
                        FLOAT normalizedProgressKey,
                        ABI::Windows::Foundation::Numerics::Vector2 value,
                        ABI::Windows::UI::Composition::ICompositionEasingFunction* easingFunction
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVector2KeyFrameAnimation = _uuidof(IVector2KeyFrameAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IVector2NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Vector2NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVector2NaturalMotionAnimation[] = L"Windows.UI.Composition.IVector2NaturalMotionAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("0f3e0b7d-e512-479d-a00c-77c93a30a395")
                IVector2NaturalMotionAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_FinalValue(
                        __FIReference_1_Windows__CFoundation__CNumerics__CVector2** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_FinalValue(
                        __FIReference_1_Windows__CFoundation__CNumerics__CVector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_InitialValue(
                        __FIReference_1_Windows__CFoundation__CNumerics__CVector2** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_InitialValue(
                        __FIReference_1_Windows__CFoundation__CNumerics__CVector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_InitialVelocity(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_InitialVelocity(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVector2NaturalMotionAnimation = _uuidof(IVector2NaturalMotionAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IVector2NaturalMotionAnimationFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Vector2NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVector2NaturalMotionAnimationFactory[] = L"Windows.UI.Composition.IVector2NaturalMotionAnimationFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("8c74ff61-0761-48a2-bddb-6afcc52b89d8")
                IVector2NaturalMotionAnimationFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IVector2NaturalMotionAnimationFactory = _uuidof(IVector2NaturalMotionAnimationFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IVector3KeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Vector3KeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVector3KeyFrameAnimation[] = L"Windows.UI.Composition.IVector3KeyFrameAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("c8039daa-a281-43c2-a73d-b68e3c533c40")
                IVector3KeyFrameAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE InsertKeyFrame(
                        FLOAT normalizedProgressKey,
                        ABI::Windows::Foundation::Numerics::Vector3 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertKeyFrameWithEasingFunction(
                        FLOAT normalizedProgressKey,
                        ABI::Windows::Foundation::Numerics::Vector3 value,
                        ABI::Windows::UI::Composition::ICompositionEasingFunction* easingFunction
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVector3KeyFrameAnimation = _uuidof(IVector3KeyFrameAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IVector3NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Vector3NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVector3NaturalMotionAnimation[] = L"Windows.UI.Composition.IVector3NaturalMotionAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("9c17042c-e2ca-45ad-969e-4e78b7b9ad41")
                IVector3NaturalMotionAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_FinalValue(
                        __FIReference_1_Windows__CFoundation__CNumerics__CVector3** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_FinalValue(
                        __FIReference_1_Windows__CFoundation__CNumerics__CVector3* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_InitialValue(
                        __FIReference_1_Windows__CFoundation__CNumerics__CVector3** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_InitialValue(
                        __FIReference_1_Windows__CFoundation__CNumerics__CVector3* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_InitialVelocity(
                        ABI::Windows::Foundation::Numerics::Vector3* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_InitialVelocity(
                        ABI::Windows::Foundation::Numerics::Vector3 value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVector3NaturalMotionAnimation = _uuidof(IVector3NaturalMotionAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IVector3NaturalMotionAnimationFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Vector3NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVector3NaturalMotionAnimationFactory[] = L"Windows.UI.Composition.IVector3NaturalMotionAnimationFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("21a81d2f-0880-457b-ac87-b609018c876d")
                IVector3NaturalMotionAnimationFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IVector3NaturalMotionAnimationFactory = _uuidof(IVector3NaturalMotionAnimationFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IVector4KeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Vector4KeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVector4KeyFrameAnimation[] = L"Windows.UI.Composition.IVector4KeyFrameAnimation";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("2457945b-addd-4385-9606-b6a3d5e4e1b9")
                IVector4KeyFrameAnimation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE InsertKeyFrame(
                        FLOAT normalizedProgressKey,
                        ABI::Windows::Foundation::Numerics::Vector4 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertKeyFrameWithEasingFunction(
                        FLOAT normalizedProgressKey,
                        ABI::Windows::Foundation::Numerics::Vector4 value,
                        ABI::Windows::UI::Composition::ICompositionEasingFunction* easingFunction
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVector4KeyFrameAnimation = _uuidof(IVector4KeyFrameAnimation);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Visual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVisual_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVisual[] = L"Windows.UI.Composition.IVisual";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("117e202d-a859-4c89-873b-c2aa566788e3")
                IVisual : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AnchorPoint(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AnchorPoint(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BackfaceVisibility(
                        ABI::Windows::UI::Composition::CompositionBackfaceVisibility* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BackfaceVisibility(
                        ABI::Windows::UI::Composition::CompositionBackfaceVisibility value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BorderMode(
                        ABI::Windows::UI::Composition::CompositionBorderMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BorderMode(
                        ABI::Windows::UI::Composition::CompositionBorderMode value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CenterPoint(
                        ABI::Windows::Foundation::Numerics::Vector3* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CenterPoint(
                        ABI::Windows::Foundation::Numerics::Vector3 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Clip(
                        ABI::Windows::UI::Composition::ICompositionClip** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Clip(
                        ABI::Windows::UI::Composition::ICompositionClip* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CompositeMode(
                        ABI::Windows::UI::Composition::CompositionCompositeMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CompositeMode(
                        ABI::Windows::UI::Composition::CompositionCompositeMode value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsVisible(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsVisible(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Offset(
                        ABI::Windows::Foundation::Numerics::Vector3* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Offset(
                        ABI::Windows::Foundation::Numerics::Vector3 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Opacity(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Opacity(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Orientation(
                        ABI::Windows::Foundation::Numerics::Quaternion* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Orientation(
                        ABI::Windows::Foundation::Numerics::Quaternion value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Parent(
                        ABI::Windows::UI::Composition::IContainerVisual** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RotationAngle(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RotationAngle(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RotationAngleInDegrees(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RotationAngleInDegrees(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RotationAxis(
                        ABI::Windows::Foundation::Numerics::Vector3* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RotationAxis(
                        ABI::Windows::Foundation::Numerics::Vector3 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Scale(
                        ABI::Windows::Foundation::Numerics::Vector3* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Scale(
                        ABI::Windows::Foundation::Numerics::Vector3 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Size(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Size(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TransformMatrix(
                        ABI::Windows::Foundation::Numerics::Matrix4x4* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TransformMatrix(
                        ABI::Windows::Foundation::Numerics::Matrix4x4 value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVisual = _uuidof(IVisual);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVisual_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IVisual2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Visual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVisual2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVisual2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVisual2[] = L"Windows.UI.Composition.IVisual2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("3052b611-56c3-4c3e-8bf3-f6e1ad473f06")
                IVisual2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_ParentForTransform(
                        ABI::Windows::UI::Composition::IVisual** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ParentForTransform(
                        ABI::Windows::UI::Composition::IVisual* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RelativeOffsetAdjustment(
                        ABI::Windows::Foundation::Numerics::Vector3* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RelativeOffsetAdjustment(
                        ABI::Windows::Foundation::Numerics::Vector3 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RelativeSizeAdjustment(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RelativeSizeAdjustment(
                        ABI::Windows::Foundation::Numerics::Vector2 value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVisual2 = _uuidof(IVisual2);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVisual2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVisual2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.IVisualCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.VisualCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVisualCollection[] = L"Windows.UI.Composition.IVisualCollection";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("8b745505-fd3e-4a98-84a8-e949468c6bcb")
                IVisualCollection : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Count(
                        INT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertAbove(
                        ABI::Windows::UI::Composition::IVisual* newChild,
                        ABI::Windows::UI::Composition::IVisual* sibling
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertAtBottom(
                        ABI::Windows::UI::Composition::IVisual* newChild
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertAtTop(
                        ABI::Windows::UI::Composition::IVisual* newChild
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InsertBelow(
                        ABI::Windows::UI::Composition::IVisual* newChild,
                        ABI::Windows::UI::Composition::IVisual* sibling
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Remove(
                        ABI::Windows::UI::Composition::IVisual* child
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE RemoveAll(void) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVisualCollection = _uuidof(IVisualCollection);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVisualCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IVisualElement
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualElement_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVisualElement[] = L"Windows.UI.Composition.IVisualElement";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("01e64612-1d82-42f4-8e3f-a722ded33fc7")
                IVisualElement : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IVisualElement = _uuidof(IVisualElement);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVisualElement;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualElement_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.IVisualFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Visual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVisualFactory[] = L"Windows.UI.Composition.IVisualFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("ad0ff93e-b502-4eb5-87b4-9a38a71d0137")
                IVisualFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IVisualFactory = _uuidof(IVisualFactory);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVisualFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IVisualUnorderedCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.VisualUnorderedCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVisualUnorderedCollection[] = L"Windows.UI.Composition.IVisualUnorderedCollection";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                MIDL_INTERFACE("338faa70-54c8-40a7-8029-c9ceeb0aa250")
                IVisualUnorderedCollection : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Count(
                        INT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Add(
                        ABI::Windows::UI::Composition::IVisual* newVisual
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Remove(
                        ABI::Windows::UI::Composition::IVisual* visual
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE RemoveAll(void) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVisualUnorderedCollection = _uuidof(IVisualUnorderedCollection);
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.AmbientLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IAmbientLight ** Default Interface **
 *    Windows.UI.Composition.IAmbientLight2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_AmbientLight_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_AmbientLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_AmbientLight[] = L"Windows.UI.Composition.AmbientLight";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.AnimationController
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Composition.IAnimationControllerStatics interface starting with version 6.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IAnimationController ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_AnimationController_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_AnimationController_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_AnimationController[] = L"Windows.UI.Composition.AnimationController";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.AnimationPropertyInfo
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IAnimationPropertyInfo ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Composition_AnimationPropertyInfo_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_AnimationPropertyInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_AnimationPropertyInfo[] = L"Windows.UI.Composition.AnimationPropertyInfo";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Composition.BooleanKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IBooleanKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Composition_BooleanKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_BooleanKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_BooleanKeyFrameAnimation[] = L"Windows.UI.Composition.BooleanKeyFrameAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Composition.BounceScalarNaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IBounceScalarNaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_BounceScalarNaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_BounceScalarNaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_BounceScalarNaturalMotionAnimation[] = L"Windows.UI.Composition.BounceScalarNaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.BounceVector2NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IBounceVector2NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_BounceVector2NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_BounceVector2NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_BounceVector2NaturalMotionAnimation[] = L"Windows.UI.Composition.BounceVector2NaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.BounceVector3NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IBounceVector3NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_BounceVector3NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_BounceVector3NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_BounceVector3NaturalMotionAnimation[] = L"Windows.UI.Composition.BounceVector3NaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.ColorKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IColorKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_ColorKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_ColorKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_ColorKeyFrameAnimation[] = L"Windows.UI.Composition.ColorKeyFrameAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionAnimation ** Default Interface **
 *    Windows.UI.Composition.ICompositionAnimation2
 *    Windows.UI.Composition.ICompositionAnimation3
 *    Windows.UI.Composition.ICompositionAnimation4
 *    Windows.UI.Composition.ICompositionAnimationBase
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionAnimation[] = L"Windows.UI.Composition.CompositionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionAnimationGroup
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionAnimationGroup ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionAnimation>
 *    Windows.UI.Composition.ICompositionAnimationBase
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionAnimationGroup_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionAnimationGroup_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionAnimationGroup[] = L"Windows.UI.Composition.CompositionAnimationGroup";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.CompositionBackdropBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionBackdropBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionBackdropBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionBackdropBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionBackdropBrush[] = L"Windows.UI.Composition.CompositionBackdropBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.CompositionBatchCompletedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionBatchCompletedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionBatchCompletedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionBatchCompletedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionBatchCompletedEventArgs[] = L"Windows.UI.Composition.CompositionBatchCompletedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionBrush[] = L"Windows.UI.Composition.CompositionBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionCapabilities
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Composition.ICompositionCapabilitiesStatics interface starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionCapabilities ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionCapabilities_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionCapabilities_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionCapabilities[] = L"Windows.UI.Composition.CompositionCapabilities";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.UI.Composition.CompositionClip
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionClip ** Default Interface **
 *    Windows.UI.Composition.ICompositionClip2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionClip_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionClip_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionClip[] = L"Windows.UI.Composition.CompositionClip";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionColorBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionColorBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionColorBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionColorBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionColorBrush[] = L"Windows.UI.Composition.CompositionColorBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionColorGradientStop
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionColorGradientStop ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionColorGradientStop_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionColorGradientStop_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionColorGradientStop[] = L"Windows.UI.Composition.CompositionColorGradientStop";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.CompositionColorGradientStopCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionColorGradientStopCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionColorGradientStop>
 *    Windows.Foundation.Collections.IVector`1<Windows.UI.Composition.CompositionColorGradientStop>
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionColorGradientStopCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionColorGradientStopCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionColorGradientStopCollection[] = L"Windows.UI.Composition.CompositionColorGradientStopCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.CompositionCommitBatch
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionCommitBatch ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionCommitBatch_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionCommitBatch_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionCommitBatch[] = L"Windows.UI.Composition.CompositionCommitBatch";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionContainerShape
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionContainerShape ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionContainerShape_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionContainerShape_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionContainerShape[] = L"Windows.UI.Composition.CompositionContainerShape";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionDrawingSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionDrawingSurface ** Default Interface **
 *    Windows.UI.Composition.ICompositionDrawingSurface2
 *    Windows.UI.Composition.ICompositionSurface
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionDrawingSurface_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionDrawingSurface_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionDrawingSurface[] = L"Windows.UI.Composition.CompositionDrawingSurface";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionEasingFunction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionEasingFunction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionEasingFunction_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionEasingFunction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionEasingFunction[] = L"Windows.UI.Composition.CompositionEasingFunction";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionEffectBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionEffectBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionEffectBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionEffectBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionEffectBrush[] = L"Windows.UI.Composition.CompositionEffectBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionEffectFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionEffectFactory ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionEffectFactory_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionEffectFactory_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionEffectFactory[] = L"Windows.UI.Composition.CompositionEffectFactory";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionEffectSourceParameter
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.UI.Composition.ICompositionEffectSourceParameterFactory interface starting with version 2.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionEffectSourceParameter ** Default Interface **
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionEffectSourceParameter_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionEffectSourceParameter_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionEffectSourceParameter[] = L"Windows.UI.Composition.CompositionEffectSourceParameter";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionEllipseGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionEllipseGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionEllipseGeometry_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionEllipseGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionEllipseGeometry[] = L"Windows.UI.Composition.CompositionEllipseGeometry";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionGeometricClip
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionGeometricClip ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionGeometricClip_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionGeometricClip_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionGeometricClip[] = L"Windows.UI.Composition.CompositionGeometricClip";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Composition.CompositionGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionGeometry_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionGeometry[] = L"Windows.UI.Composition.CompositionGeometry";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionGradientBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionGradientBrush ** Default Interface **
 *    Windows.UI.Composition.ICompositionGradientBrush2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionGradientBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionGradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionGradientBrush[] = L"Windows.UI.Composition.CompositionGradientBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.CompositionGraphicsDevice
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionGraphicsDevice ** Default Interface **
 *    Windows.UI.Composition.ICompositionGraphicsDevice2
 *    Windows.UI.Composition.ICompositionGraphicsDevice3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionGraphicsDevice_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionGraphicsDevice_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionGraphicsDevice[] = L"Windows.UI.Composition.CompositionGraphicsDevice";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionLight ** Default Interface **
 *    Windows.UI.Composition.ICompositionLight2
 *    Windows.UI.Composition.ICompositionLight3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionLight_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionLight[] = L"Windows.UI.Composition.CompositionLight";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.CompositionLineGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionLineGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionLineGeometry_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionLineGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionLineGeometry[] = L"Windows.UI.Composition.CompositionLineGeometry";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionLinearGradientBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionLinearGradientBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionLinearGradientBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionLinearGradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionLinearGradientBrush[] = L"Windows.UI.Composition.CompositionLinearGradientBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.CompositionMaskBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionMaskBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionMaskBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionMaskBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionMaskBrush[] = L"Windows.UI.Composition.CompositionMaskBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.CompositionMipmapSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionMipmapSurface ** Default Interface **
 *    Windows.UI.Composition.ICompositionSurface
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionMipmapSurface_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionMipmapSurface_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionMipmapSurface[] = L"Windows.UI.Composition.CompositionMipmapSurface";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Composition.CompositionNineGridBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionNineGridBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionNineGridBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionNineGridBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionNineGridBrush[] = L"Windows.UI.Composition.CompositionNineGridBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.CompositionObject
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Composition.ICompositionObjectStatics interface starting with version 7.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionObject ** Default Interface **
 *    Windows.UI.Composition.ICompositionObject2
 *    Windows.UI.Composition.ICompositionObject3
 *    Windows.UI.Composition.ICompositionObject4
 *    Windows.Foundation.IClosable
 *    Windows.UI.Composition.IAnimationObject
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionObject_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionObject_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionObject[] = L"Windows.UI.Composition.CompositionObject";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionPath
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.UI.Composition.ICompositionPathFactory interface starting with version 6.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionPath ** Default Interface **
 *    Windows.Graphics.IGeometrySource2D
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionPath_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionPath_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionPath[] = L"Windows.UI.Composition.CompositionPath";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionPathGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionPathGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionPathGeometry_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionPathGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionPathGeometry[] = L"Windows.UI.Composition.CompositionPathGeometry";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionProjectedShadow
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionProjectedShadow ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadow_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadow_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionProjectedShadow[] = L"Windows.UI.Composition.CompositionProjectedShadow";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Composition.CompositionProjectedShadowCaster
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionProjectedShadowCaster ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadowCaster_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadowCaster_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionProjectedShadowCaster[] = L"Windows.UI.Composition.CompositionProjectedShadowCaster";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Composition.CompositionProjectedShadowCasterCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics interface starting with version 8.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionProjectedShadowCasterCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionProjectedShadowCaster>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadowCasterCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadowCasterCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionProjectedShadowCasterCollection[] = L"Windows.UI.Composition.CompositionProjectedShadowCasterCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Composition.CompositionProjectedShadowReceiver
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionProjectedShadowReceiver ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadowReceiver_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadowReceiver_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionProjectedShadowReceiver[] = L"Windows.UI.Composition.CompositionProjectedShadowReceiver";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionProjectedShadowReceiver>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadowReceiverUnorderedCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadowReceiverUnorderedCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionProjectedShadowReceiverUnorderedCollection[] = L"Windows.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Composition.CompositionPropertySet
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionPropertySet ** Default Interface **
 *    Windows.UI.Composition.ICompositionPropertySet2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionPropertySet_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionPropertySet_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionPropertySet[] = L"Windows.UI.Composition.CompositionPropertySet";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionRadialGradientBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionRadialGradientBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionRadialGradientBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionRadialGradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionRadialGradientBrush[] = L"Windows.UI.Composition.CompositionRadialGradientBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Composition.CompositionRectangleGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionRectangleGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionRectangleGeometry_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionRectangleGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionRectangleGeometry[] = L"Windows.UI.Composition.CompositionRectangleGeometry";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionRoundedRectangleGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionRoundedRectangleGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionRoundedRectangleGeometry_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionRoundedRectangleGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionRoundedRectangleGeometry[] = L"Windows.UI.Composition.CompositionRoundedRectangleGeometry";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionScopedBatch
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionScopedBatch ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionScopedBatch_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionScopedBatch_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionScopedBatch[] = L"Windows.UI.Composition.CompositionScopedBatch";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionShadow
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionShadow ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionShadow_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionShadow_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionShadow[] = L"Windows.UI.Composition.CompositionShadow";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.CompositionShape
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionShape ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionShape_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionShape_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionShape[] = L"Windows.UI.Composition.CompositionShape";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionShapeCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Windows.UI.Composition.CompositionShape> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionShape>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionShapeCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionShapeCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionShapeCollection[] = L"Windows.UI.Composition.CompositionShapeCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionSpriteShape
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionSpriteShape ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionSpriteShape_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionSpriteShape_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionSpriteShape[] = L"Windows.UI.Composition.CompositionSpriteShape";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionStrokeDashArray
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Single> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Single>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionStrokeDashArray_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionStrokeDashArray_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionStrokeDashArray[] = L"Windows.UI.Composition.CompositionStrokeDashArray";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionSurfaceBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionSurfaceBrush ** Default Interface **
 *    Windows.UI.Composition.ICompositionSurfaceBrush2
 *    Windows.UI.Composition.ICompositionSurfaceBrush3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionSurfaceBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionSurfaceBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionSurfaceBrush[] = L"Windows.UI.Composition.CompositionSurfaceBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionTarget
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionTarget ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionTarget_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionTarget_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionTarget[] = L"Windows.UI.Composition.CompositionTarget";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionTransform
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionTransform ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionTransform_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionTransform[] = L"Windows.UI.Composition.CompositionTransform";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Composition.CompositionViewBox
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionViewBox ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionViewBox_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionViewBox_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionViewBox[] = L"Windows.UI.Composition.CompositionViewBox";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionVirtualDrawingSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionVirtualDrawingSurface ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionVirtualDrawingSurface_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionVirtualDrawingSurface_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionVirtualDrawingSurface[] = L"Windows.UI.Composition.CompositionVirtualDrawingSurface";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.UI.Composition.CompositionVisualSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionVisualSurface ** Default Interface **
 *    Windows.UI.Composition.ICompositionSurface
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionVisualSurface_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionVisualSurface_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionVisualSurface[] = L"Windows.UI.Composition.CompositionVisualSurface";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Composition.Compositor
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 2.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Composition.ICompositorStatics interface starting with version 6.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositor ** Default Interface **
 *    Windows.UI.Composition.ICompositor2
 *    Windows.UI.Composition.ICompositor3
 *    Windows.UI.Composition.ICompositor4
 *    Windows.UI.Composition.ICompositor5
 *    Windows.UI.Composition.ICompositor6
 *    Windows.UI.Composition.ICompositorWithProjectedShadow
 *    Windows.UI.Composition.ICompositorWithRadialGradient
 *    Windows.UI.Composition.ICompositorWithVisualSurface
 *    Windows.Foundation.IClosable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_Compositor_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_Compositor_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_Compositor[] = L"Windows.UI.Composition.Compositor";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.ContainerVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IContainerVisual ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_ContainerVisual_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_ContainerVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_ContainerVisual[] = L"Windows.UI.Composition.ContainerVisual";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CubicBezierEasingFunction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICubicBezierEasingFunction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CubicBezierEasingFunction_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CubicBezierEasingFunction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CubicBezierEasingFunction[] = L"Windows.UI.Composition.CubicBezierEasingFunction";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.DistantLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IDistantLight ** Default Interface **
 *    Windows.UI.Composition.IDistantLight2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_DistantLight_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_DistantLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_DistantLight[] = L"Windows.UI.Composition.DistantLight";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.DropShadow
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IDropShadow ** Default Interface **
 *    Windows.UI.Composition.IDropShadow2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_DropShadow_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_DropShadow_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_DropShadow[] = L"Windows.UI.Composition.DropShadow";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.ExpressionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IExpressionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_ExpressionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_ExpressionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_ExpressionAnimation[] = L"Windows.UI.Composition.ExpressionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.ImplicitAnimationCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IImplicitAnimationCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.UI.Composition.ICompositionAnimationBase>>
 *    Windows.Foundation.Collections.IMap`2<String, Windows.UI.Composition.ICompositionAnimationBase>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_ImplicitAnimationCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_ImplicitAnimationCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_ImplicitAnimationCollection[] = L"Windows.UI.Composition.ImplicitAnimationCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.InitialValueExpressionCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IMap`2<String, String> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_InitialValueExpressionCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_InitialValueExpressionCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_InitialValueExpressionCollection[] = L"Windows.UI.Composition.InitialValueExpressionCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.InsetClip
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IInsetClip ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_InsetClip_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_InsetClip_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_InsetClip[] = L"Windows.UI.Composition.InsetClip";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.KeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IKeyFrameAnimation ** Default Interface **
 *    Windows.UI.Composition.IKeyFrameAnimation2
 *    Windows.UI.Composition.IKeyFrameAnimation3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_KeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_KeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_KeyFrameAnimation[] = L"Windows.UI.Composition.KeyFrameAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.LayerVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ILayerVisual ** Default Interface **
 *    Windows.UI.Composition.ILayerVisual2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_LayerVisual_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_LayerVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_LayerVisual[] = L"Windows.UI.Composition.LayerVisual";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.LinearEasingFunction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ILinearEasingFunction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_LinearEasingFunction_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_LinearEasingFunction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_LinearEasingFunction[] = L"Windows.UI.Composition.LinearEasingFunction";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.INaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_NaturalMotionAnimation[] = L"Windows.UI.Composition.NaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.PathKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IPathKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_PathKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_PathKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_PathKeyFrameAnimation[] = L"Windows.UI.Composition.PathKeyFrameAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.PointLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IPointLight ** Default Interface **
 *    Windows.UI.Composition.IPointLight2
 *    Windows.UI.Composition.IPointLight3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_PointLight_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_PointLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_PointLight[] = L"Windows.UI.Composition.PointLight";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.QuaternionKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IQuaternionKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_QuaternionKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_QuaternionKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_QuaternionKeyFrameAnimation[] = L"Windows.UI.Composition.QuaternionKeyFrameAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.RedirectVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IRedirectVisual ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Composition_RedirectVisual_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_RedirectVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_RedirectVisual[] = L"Windows.UI.Composition.RedirectVisual";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Composition.RenderingDeviceReplacedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IRenderingDeviceReplacedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_RenderingDeviceReplacedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_RenderingDeviceReplacedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_RenderingDeviceReplacedEventArgs[] = L"Windows.UI.Composition.RenderingDeviceReplacedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.ScalarKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IScalarKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_ScalarKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_ScalarKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_ScalarKeyFrameAnimation[] = L"Windows.UI.Composition.ScalarKeyFrameAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.ScalarNaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IScalarNaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_ScalarNaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_ScalarNaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_ScalarNaturalMotionAnimation[] = L"Windows.UI.Composition.ScalarNaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.ShapeVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IShapeVisual ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_ShapeVisual_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_ShapeVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_ShapeVisual[] = L"Windows.UI.Composition.ShapeVisual";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.SpotLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ISpotLight ** Default Interface **
 *    Windows.UI.Composition.ISpotLight2
 *    Windows.UI.Composition.ISpotLight3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_SpotLight_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_SpotLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_SpotLight[] = L"Windows.UI.Composition.SpotLight";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.SpringScalarNaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ISpringScalarNaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_SpringScalarNaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_SpringScalarNaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_SpringScalarNaturalMotionAnimation[] = L"Windows.UI.Composition.SpringScalarNaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.SpringVector2NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ISpringVector2NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_SpringVector2NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_SpringVector2NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_SpringVector2NaturalMotionAnimation[] = L"Windows.UI.Composition.SpringVector2NaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.SpringVector3NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ISpringVector3NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_SpringVector3NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_SpringVector3NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_SpringVector3NaturalMotionAnimation[] = L"Windows.UI.Composition.SpringVector3NaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.SpriteVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ISpriteVisual ** Default Interface **
 *    Windows.UI.Composition.ISpriteVisual2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_SpriteVisual_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_SpriteVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_SpriteVisual[] = L"Windows.UI.Composition.SpriteVisual";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.StepEasingFunction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IStepEasingFunction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_StepEasingFunction_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_StepEasingFunction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_StepEasingFunction[] = L"Windows.UI.Composition.StepEasingFunction";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.Vector2KeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IVector2KeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_Vector2KeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_Vector2KeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_Vector2KeyFrameAnimation[] = L"Windows.UI.Composition.Vector2KeyFrameAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.Vector2NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IVector2NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_Vector2NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_Vector2NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_Vector2NaturalMotionAnimation[] = L"Windows.UI.Composition.Vector2NaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.Vector3KeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IVector3KeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_Vector3KeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_Vector3KeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_Vector3KeyFrameAnimation[] = L"Windows.UI.Composition.Vector3KeyFrameAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.Vector3NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IVector3NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_Vector3NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_Vector3NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_Vector3NaturalMotionAnimation[] = L"Windows.UI.Composition.Vector3NaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.Vector4KeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IVector4KeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_Vector4KeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_Vector4KeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_Vector4KeyFrameAnimation[] = L"Windows.UI.Composition.Vector4KeyFrameAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.Visual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IVisual ** Default Interface **
 *    Windows.UI.Composition.IVisual2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_Visual_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_Visual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_Visual[] = L"Windows.UI.Composition.Visual";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.VisualCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IVisualCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.Visual>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_VisualCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_VisualCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_VisualCollection[] = L"Windows.UI.Composition.VisualCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.VisualUnorderedCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IVisualUnorderedCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.Visual>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_VisualUnorderedCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_VisualUnorderedCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_VisualUnorderedCollection[] = L"Windows.UI.Composition.VisualUnorderedCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#else // !defined(__cplusplus)
/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIAmbientLight __x_ABI_CWindows_CUI_CComposition_CIAmbientLight;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2 __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAnimationController_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationController_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIAnimationController __x_ABI_CWindows_CUI_CComposition_CIAnimationController;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAnimationController_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIAnimationObject __x_ABI_CWindows_CUI_CComposition_CIAnimationObject;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2 __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3 __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4 __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionBrush __x_ABI_CWindows_CUI_CComposition_CICompositionBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionClip_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionClip_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionClip __x_ABI_CWindows_CUI_CComposition_CICompositionClip;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionClip_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionClip2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionClip2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionClip2 __x_ABI_CWindows_CUI_CComposition_CICompositionClip2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionClip2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2 __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2 __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2 __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3 __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionLight_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLight_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionLight __x_ABI_CWindows_CUI_CComposition_CICompositionLight;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionLight_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionLight2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLight2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionLight2 __x_ABI_CWindows_CUI_CComposition_CICompositionLight2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionLight2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionLight3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLight3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionLight3 __x_ABI_CWindows_CUI_CComposition_CICompositionLight3;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionLight3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionObject __x_ABI_CWindows_CUI_CComposition_CICompositionObject;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionObject_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionObject2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionObject2 __x_ABI_CWindows_CUI_CComposition_CICompositionObject2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionObject2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionObject3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionObject3 __x_ABI_CWindows_CUI_CComposition_CICompositionObject3;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionObject3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionObject4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionObject4 __x_ABI_CWindows_CUI_CComposition_CICompositionObject4;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionObject4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionPath_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPath_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionPath __x_ABI_CWindows_CUI_CComposition_CICompositionPath;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionPath_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2 __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionShadow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShadow_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionShadow __x_ABI_CWindows_CUI_CComposition_CICompositionShadow;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionShadow_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionShape_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShape_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionShape __x_ABI_CWindows_CUI_CComposition_CICompositionShape;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionShape_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurface_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionSurface __x_ABI_CWindows_CUI_CComposition_CICompositionSurface;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2 __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3 __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionTarget_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTarget_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionTarget __x_ABI_CWindows_CUI_CComposition_CICompositionTarget;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionTarget_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionTransform_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTransform_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionTransform __x_ABI_CWindows_CUI_CComposition_CICompositionTransform;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionTransform_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositor __x_ABI_CWindows_CUI_CComposition_CICompositor;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositor2 __x_ABI_CWindows_CUI_CComposition_CICompositor2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositor3 __x_ABI_CWindows_CUI_CComposition_CICompositor3;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositor4 __x_ABI_CWindows_CUI_CComposition_CICompositor4;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor5_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositor5 __x_ABI_CWindows_CUI_CComposition_CICompositor5;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor6_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositor6 __x_ABI_CWindows_CUI_CComposition_CICompositor6;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositorStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositorStatics __x_ABI_CWindows_CUI_CComposition_CICompositorStatics;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositorStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIContainerVisual __x_ABI_CWindows_CUI_CComposition_CIContainerVisual;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIDistantLight_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIDistantLight_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIDistantLight __x_ABI_CWindows_CUI_CComposition_CIDistantLight;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIDistantLight_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIDistantLight2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIDistantLight2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIDistantLight2 __x_ABI_CWindows_CUI_CComposition_CIDistantLight2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIDistantLight2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIDropShadow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIDropShadow_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIDropShadow __x_ABI_CWindows_CUI_CComposition_CIDropShadow;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIDropShadow_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIDropShadow2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIDropShadow2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIDropShadow2 __x_ABI_CWindows_CUI_CComposition_CIDropShadow2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIDropShadow2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIInsetClip_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIInsetClip_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIInsetClip __x_ABI_CWindows_CUI_CComposition_CIInsetClip;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIInsetClip_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2 __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3 __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CILayerVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CILayerVisual_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CILayerVisual __x_ABI_CWindows_CUI_CComposition_CILayerVisual;

#endif // ____x_ABI_CWindows_CUI_CComposition_CILayerVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CILayerVisual2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CILayerVisual2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CILayerVisual2 __x_ABI_CWindows_CUI_CComposition_CILayerVisual2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CILayerVisual2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction;

#endif // ____x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIPointLight_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIPointLight_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIPointLight __x_ABI_CWindows_CUI_CComposition_CIPointLight;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIPointLight_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIPointLight2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIPointLight2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIPointLight2 __x_ABI_CWindows_CUI_CComposition_CIPointLight2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIPointLight2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIPointLight3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIPointLight3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIPointLight3 __x_ABI_CWindows_CUI_CComposition_CIPointLight3;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIPointLight3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIShapeVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIShapeVisual_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIShapeVisual __x_ABI_CWindows_CUI_CComposition_CIShapeVisual;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIShapeVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpotLight_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpotLight_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CISpotLight __x_ABI_CWindows_CUI_CComposition_CISpotLight;

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpotLight_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpotLight2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpotLight2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CISpotLight2 __x_ABI_CWindows_CUI_CComposition_CISpotLight2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpotLight2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpotLight3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpotLight3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CISpotLight3 __x_ABI_CWindows_CUI_CComposition_CISpotLight3;

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpotLight3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CISpriteVisual __x_ABI_CWindows_CUI_CComposition_CISpriteVisual;

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2 __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisual_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIVisual __x_ABI_CWindows_CUI_CComposition_CIVisual;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisual2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisual2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIVisual2 __x_ABI_CWindows_CUI_CComposition_CIVisual2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisual2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisualCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIVisualCollection __x_ABI_CWindows_CUI_CComposition_CIVisualCollection;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisualCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIVisualElement __x_ABI_CWindows_CUI_CComposition_CIVisualElement;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisualFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIVisualFactory __x_ABI_CWindows_CUI_CComposition_CIVisualFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisualFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____FIIterator_1_float_INTERFACE_DEFINED__)
#define ____FIIterator_1_float_INTERFACE_DEFINED__

typedef interface __FIIterator_1_float __FIIterator_1_float;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_float;

typedef struct __FIIterator_1_floatVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_float* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_float* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_float* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_float* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_float* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_float* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_float* This,
        FLOAT* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_float* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_float* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_float* This,
        UINT32 itemsLength,
        FLOAT* items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_floatVtbl;

interface __FIIterator_1_float
{
    CONST_VTBL struct __FIIterator_1_floatVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_float_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_float_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_float_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_float_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_float_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_float_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_float_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_float_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_float_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_float_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_float_INTERFACE_DEFINED__

#if !defined(____FIIterable_1_float_INTERFACE_DEFINED__)
#define ____FIIterable_1_float_INTERFACE_DEFINED__

typedef interface __FIIterable_1_float __FIIterable_1_float;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_float;

typedef struct __FIIterable_1_floatVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_float* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_float* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_float* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_float* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_float* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_float* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_float* This,
        __FIIterator_1_float** result);

    END_INTERFACE
} __FIIterable_1_floatVtbl;

interface __FIIterable_1_float
{
    CONST_VTBL struct __FIIterable_1_floatVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_float_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_float_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_float_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_float_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_float_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_float_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_float_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_float_INTERFACE_DEFINED__

#if !defined(____FIIterator_1_HSTRING_INTERFACE_DEFINED__)
#define ____FIIterator_1_HSTRING_INTERFACE_DEFINED__

typedef interface __FIIterator_1_HSTRING __FIIterator_1_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_HSTRING;

typedef struct __FIIterator_1_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_HSTRINGVtbl;

interface __FIIterator_1_HSTRING
{
    CONST_VTBL struct __FIIterator_1_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_HSTRING_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_HSTRING_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_HSTRING_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_HSTRING_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_HSTRING_INTERFACE_DEFINED__

#if !defined(____FIIterable_1_HSTRING_INTERFACE_DEFINED__)
#define ____FIIterable_1_HSTRING_INTERFACE_DEFINED__

typedef interface __FIIterable_1_HSTRING __FIIterable_1_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_HSTRING;

typedef struct __FIIterable_1_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_HSTRING* This,
        __FIIterator_1_HSTRING** result);

    END_INTERFACE
} __FIIterable_1_HSTRINGVtbl;

interface __FIIterable_1_HSTRING
{
    CONST_VTBL struct __FIIterable_1_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_HSTRING_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_HSTRING_INTERFACE_DEFINED__

#if !defined(____FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIKeyValuePair_2_HSTRING_HSTRING __FIKeyValuePair_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIKeyValuePair_2_HSTRING_HSTRING;

typedef struct __FIKeyValuePair_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIKeyValuePair_2_HSTRING_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIKeyValuePair_2_HSTRING_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIKeyValuePair_2_HSTRING_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIKeyValuePair_2_HSTRING_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIKeyValuePair_2_HSTRING_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Key)(__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);

    END_INTERFACE
} __FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

interface __FIKeyValuePair_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIKeyValuePair_2_HSTRING_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIKeyValuePair_2_HSTRING_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIKeyValuePair_2_HSTRING_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIKeyValuePair_2_HSTRING_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIKeyValuePair_2_HSTRING_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIKeyValuePair_2_HSTRING_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIKeyValuePair_2_HSTRING_HSTRING_get_Key(This, result) \
    ((This)->lpVtbl->get_Key(This, result))

#define __FIKeyValuePair_2_HSTRING_HSTRING_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

#if !defined(____FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING;

typedef struct __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        __FIKeyValuePair_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        UINT32 itemsLength,
        __FIKeyValuePair_2_HSTRING_HSTRING** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

interface __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

#if !defined(____FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING;

typedef struct __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING** result);

    END_INTERFACE
} __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

interface __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__)
#define ____FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

typedef interface __FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase __FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase;

typedef struct __FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Key)(__FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase** result);

    END_INTERFACE
} __FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBaseVtbl;

interface __FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase
{
    CONST_VTBL struct __FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_get_Key(This, result) \
    ((This)->lpVtbl->get_Key(This, result))

#define __FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__)
#define ____FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

typedef interface __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase;

typedef struct __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        __FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        UINT32 itemsLength,
        __FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBaseVtbl;

interface __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase
{
    CONST_VTBL struct __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__)
#define ____FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

typedef interface __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase;

typedef struct __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase** result);

    END_INTERFACE
} __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBaseVtbl;

interface __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase
{
    CONST_VTBL struct __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation;

typedef struct __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimationVtbl;

interface __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation __FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation;

typedef struct __FIIterable_1_Windows__CUI__CComposition__CCompositionAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation* This,
        __FIIterator_1_Windows__CUI__CComposition__CCompositionAnimation** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CComposition__CCompositionAnimationVtbl;

interface __FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CComposition__CCompositionAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CComposition__CCompositionAnimation_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop;

typedef struct __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStopVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStopVtbl;

interface __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStopVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop __FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop;

typedef struct __FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStopVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        __FIIterator_1_Windows__CUI__CComposition__CCompositionColorGradientStop** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStopVtbl;

interface __FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStopVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster;

typedef struct __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCasterVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCasterVtbl;

interface __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCasterVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster;

typedef struct __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCasterVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
        __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCasterVtbl;

interface __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCasterVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowCaster_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver;

typedef struct __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiverVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiverVtbl;

interface __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiverVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver;

typedef struct __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiverVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
        __FIIterator_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiverVtbl;

interface __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiverVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CComposition__CCompositionProjectedShadowReceiver_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____FIIterator_1_Windows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CComposition__CCompositionShape __FIIterator_1_Windows__CUI__CComposition__CCompositionShape;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CComposition__CCompositionShape;

typedef struct __FIIterator_1_Windows__CUI__CComposition__CCompositionShapeVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CComposition__CCompositionShape* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CComposition__CCompositionShape* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CComposition__CCompositionShape* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CComposition__CCompositionShape* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CComposition__CCompositionShape* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CComposition__CCompositionShape* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CComposition__CCompositionShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CComposition__CCompositionShape* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CComposition__CCompositionShape* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CComposition__CCompositionShape* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CComposition__CCompositionShapeVtbl;

interface __FIIterator_1_Windows__CUI__CComposition__CCompositionShape
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CComposition__CCompositionShapeVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionShape_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionShape_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionShape_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionShape_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionShape_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionShape_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionShape_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionShape_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionShape_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CComposition__CCompositionShape_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____FIIterable_1_Windows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CComposition__CCompositionShape __FIIterable_1_Windows__CUI__CComposition__CCompositionShape;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CComposition__CCompositionShape;

typedef struct __FIIterable_1_Windows__CUI__CComposition__CCompositionShapeVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CComposition__CCompositionShape* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CComposition__CCompositionShape* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CComposition__CCompositionShape* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CComposition__CCompositionShape* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CComposition__CCompositionShape* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CComposition__CCompositionShape* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CComposition__CCompositionShape* This,
        __FIIterator_1_Windows__CUI__CComposition__CCompositionShape** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CComposition__CCompositionShapeVtbl;

interface __FIIterable_1_Windows__CUI__CComposition__CCompositionShape
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CComposition__CCompositionShapeVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionShape_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionShape_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionShape_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionShape_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionShape_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionShape_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CComposition__CCompositionShape_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____FIIterator_1_Windows__CUI__CComposition__CVisual_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CComposition__CVisual_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CComposition__CVisual __FIIterator_1_Windows__CUI__CComposition__CVisual;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CComposition__CVisual;

typedef struct __FIIterator_1_Windows__CUI__CComposition__CVisualVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CComposition__CVisual* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CComposition__CVisual* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CComposition__CVisual* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CComposition__CVisual* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CComposition__CVisual* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CComposition__CVisual* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CComposition__CVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CComposition__CVisual* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CComposition__CVisual* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CComposition__CVisual* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CComposition__CVisualVtbl;

interface __FIIterator_1_Windows__CUI__CComposition__CVisual
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CComposition__CVisualVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CComposition__CVisual_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CComposition__CVisual_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CComposition__CVisual_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CComposition__CVisual_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CComposition__CVisual_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CComposition__CVisual_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CComposition__CVisual_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CComposition__CVisual_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CComposition__CVisual_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CComposition__CVisual_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CComposition__CVisual_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____FIIterable_1_Windows__CUI__CComposition__CVisual_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CComposition__CVisual_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CComposition__CVisual __FIIterable_1_Windows__CUI__CComposition__CVisual;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CComposition__CVisual;

typedef struct __FIIterable_1_Windows__CUI__CComposition__CVisualVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CComposition__CVisual* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CComposition__CVisual* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CComposition__CVisual* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CComposition__CVisual* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CComposition__CVisual* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CComposition__CVisual* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CComposition__CVisual* This,
        __FIIterator_1_Windows__CUI__CComposition__CVisual** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CComposition__CVisualVtbl;

interface __FIIterable_1_Windows__CUI__CComposition__CVisual
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CComposition__CVisualVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CComposition__CVisual_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CComposition__CVisual_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CComposition__CVisual_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CComposition__CVisual_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CComposition__CVisual_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CComposition__CVisual_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CComposition__CVisual_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CComposition__CVisual_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

typedef interface __FIMapView_2_HSTRING_HSTRING __FIMapView_2_HSTRING_HSTRING;

#if !defined(____FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIMapView_2_HSTRING_HSTRING __FIMapView_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMapView_2_HSTRING_HSTRING;

typedef struct __FIMapView_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIMapView_2_HSTRING_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIMapView_2_HSTRING_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIMapView_2_HSTRING_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIMapView_2_HSTRING_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIMapView_2_HSTRING_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Lookup)(__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIMapView_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__FIMapView_2_HSTRING_HSTRING* This,
        __FIMapView_2_HSTRING_HSTRING** first,
        __FIMapView_2_HSTRING_HSTRING** second);

    END_INTERFACE
} __FIMapView_2_HSTRING_HSTRINGVtbl;

interface __FIMapView_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIMapView_2_HSTRING_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIMapView_2_HSTRING_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIMapView_2_HSTRING_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIMapView_2_HSTRING_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIMapView_2_HSTRING_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIMapView_2_HSTRING_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIMapView_2_HSTRING_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIMapView_2_HSTRING_HSTRING_Lookup(This, key, result) \
    ((This)->lpVtbl->Lookup(This, key, result))

#define __FIMapView_2_HSTRING_HSTRING_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIMapView_2_HSTRING_HSTRING_HasKey(This, key, result) \
    ((This)->lpVtbl->HasKey(This, key, result))

#define __FIMapView_2_HSTRING_HSTRING_Split(This, first, second) \
    ((This)->lpVtbl->Split(This, first, second))

#endif /* COBJMACROS */

#endif // ____FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__)
#define ____FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

typedef interface __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase;

typedef struct __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Lookup)(__FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING key,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase** first,
        __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase** second);

    END_INTERFACE
} __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBaseVtbl;

interface __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase
{
    CONST_VTBL struct __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_Lookup(This, key, result) \
    ((This)->lpVtbl->Lookup(This, key, result))

#define __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_HasKey(This, key, result) \
    ((This)->lpVtbl->HasKey(This, key, result))

#define __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_Split(This, first, second) \
    ((This)->lpVtbl->Split(This, first, second))

#endif /* COBJMACROS */

#endif // ____FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if !defined(____FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIMap_2_HSTRING_HSTRING __FIMap_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMap_2_HSTRING_HSTRING;

typedef struct __FIMap_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIMap_2_HSTRING_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIMap_2_HSTRING_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIMap_2_HSTRING_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIMap_2_HSTRING_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIMap_2_HSTRING_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIMap_2_HSTRING_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Lookup)(__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIMap_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIMap_2_HSTRING_HSTRING* This,
        __FIMapView_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIMap_2_HSTRING_HSTRING* This);

    END_INTERFACE
} __FIMap_2_HSTRING_HSTRINGVtbl;

interface __FIMap_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIMap_2_HSTRING_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIMap_2_HSTRING_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIMap_2_HSTRING_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIMap_2_HSTRING_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIMap_2_HSTRING_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIMap_2_HSTRING_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIMap_2_HSTRING_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIMap_2_HSTRING_HSTRING_Lookup(This, key, result) \
    ((This)->lpVtbl->Lookup(This, key, result))

#define __FIMap_2_HSTRING_HSTRING_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIMap_2_HSTRING_HSTRING_HasKey(This, key, result) \
    ((This)->lpVtbl->HasKey(This, key, result))

#define __FIMap_2_HSTRING_HSTRING_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIMap_2_HSTRING_HSTRING_Insert(This, key, value, result) \
    ((This)->lpVtbl->Insert(This, key, value, result))

#define __FIMap_2_HSTRING_HSTRING_Remove(This, key) \
    ((This)->lpVtbl->Remove(This, key))

#define __FIMap_2_HSTRING_HSTRING_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#endif /* COBJMACROS */

#endif // ____FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__)
#define ____FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

typedef interface __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase;

typedef struct __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Lookup)(__FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING key,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        __FIMapView_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING key,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase* This);

    END_INTERFACE
} __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBaseVtbl;

interface __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase
{
    CONST_VTBL struct __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_Lookup(This, key, result) \
    ((This)->lpVtbl->Lookup(This, key, result))

#define __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_HasKey(This, key, result) \
    ((This)->lpVtbl->HasKey(This, key, result))

#define __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_Insert(This, key, value, result) \
    ((This)->lpVtbl->Insert(This, key, value, result))

#define __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_Remove(This, key) \
    ((This)->lpVtbl->Remove(This, key))

#define __FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#endif /* COBJMACROS */

#endif // ____FIMap_2_HSTRING_Windows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if !defined(____FIVectorView_1_float_INTERFACE_DEFINED__)
#define ____FIVectorView_1_float_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_float __FIVectorView_1_float;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_float;

typedef struct __FIVectorView_1_floatVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_float* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_float* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_float* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_float* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_float* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_float* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_float* This,
        UINT32 index,
        FLOAT* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_float* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_float* This,
        FLOAT value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_float* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        FLOAT* items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_floatVtbl;

interface __FIVectorView_1_float
{
    CONST_VTBL struct __FIVectorView_1_floatVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_float_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_float_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_float_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_float_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_float_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_float_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_float_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_float_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_float_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_float_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_float_INTERFACE_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop;

typedef struct __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStopVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStopVtbl;

interface __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStopVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____FIVectorView_1_Windows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CComposition__CCompositionShape __FIVectorView_1_Windows__CUI__CComposition__CCompositionShape;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CComposition__CCompositionShape;

typedef struct __FIVectorView_1_Windows__CUI__CComposition__CCompositionShapeVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionShape* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionShape* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionShape* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionShape* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionShape* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionShape* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionShape* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionShape* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CUI__CComposition__CCompositionShape* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CUI__CComposition__CCompositionShapeVtbl;

interface __FIVectorView_1_Windows__CUI__CComposition__CCompositionShape
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CComposition__CCompositionShapeVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionShape_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionShape_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionShape_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionShape_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionShape_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionShape_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionShape_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionShape_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionShape_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CUI__CComposition__CCompositionShape_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

#if !defined(____FIVector_1_float_INTERFACE_DEFINED__)
#define ____FIVector_1_float_INTERFACE_DEFINED__

typedef interface __FIVector_1_float __FIVector_1_float;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_float;

typedef struct __FIVector_1_floatVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_float* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_float* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_float* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_float* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_float* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_float* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_float* This,
        UINT32 index,
        FLOAT* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_float* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_float* This,
        __FIVectorView_1_float** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_float* This,
        FLOAT value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_float* This,
        UINT32 index,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_float* This,
        UINT32 index,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_float* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_float* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_float* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_float* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_float* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        FLOAT* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_float* This,
        UINT32 itemsLength,
        FLOAT* items);

    END_INTERFACE
} __FIVector_1_floatVtbl;

interface __FIVector_1_float
{
    CONST_VTBL struct __FIVector_1_floatVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_float_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_float_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_float_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_float_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_float_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_float_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_float_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_float_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_float_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_float_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_float_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_float_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_float_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_float_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_float_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_float_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_float_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_float_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_float_INTERFACE_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop;

typedef struct __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStopVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        __FIVectorView_1_Windows__CUI__CComposition__CCompositionColorGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop** items);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStopVtbl;

interface __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStopVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____FIVector_1_Windows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CComposition__CCompositionShape __FIVector_1_Windows__CUI__CComposition__CCompositionShape;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CComposition__CCompositionShape;

typedef struct __FIVector_1_Windows__CUI__CComposition__CCompositionShapeVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CUI__CComposition__CCompositionShape* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CUI__CComposition__CCompositionShape* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CUI__CComposition__CCompositionShape* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CUI__CComposition__CCompositionShape* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CUI__CComposition__CCompositionShape* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CUI__CComposition__CCompositionShape* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CUI__CComposition__CCompositionShape* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CUI__CComposition__CCompositionShape* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CUI__CComposition__CCompositionShape* This,
        __FIVectorView_1_Windows__CUI__CComposition__CCompositionShape** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CUI__CComposition__CCompositionShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CUI__CComposition__CCompositionShape* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CUI__CComposition__CCompositionShape* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CUI__CComposition__CCompositionShape* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CUI__CComposition__CCompositionShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CUI__CComposition__CCompositionShape* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CUI__CComposition__CCompositionShape* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CUI__CComposition__CCompositionShape* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CUI__CComposition__CCompositionShape* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape** items);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CComposition__CCompositionShapeVtbl;

interface __FIVector_1_Windows__CUI__CComposition__CCompositionShape
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CComposition__CCompositionShapeVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CUI__CComposition__CCompositionShape_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

#if !defined(____FIReference_1_float_INTERFACE_DEFINED__)
#define ____FIReference_1_float_INTERFACE_DEFINED__

typedef interface __FIReference_1_float __FIReference_1_float;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_float;

typedef struct __FIReference_1_floatVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_float* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_float* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_float* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_float* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_float* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_float* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_float* This,
        FLOAT* result);

    END_INTERFACE
} __FIReference_1_floatVtbl;

interface __FIReference_1_float
{
    CONST_VTBL struct __FIReference_1_floatVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_float_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_float_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_float_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_float_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_float_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_float_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_float_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_float_INTERFACE_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 __x_ABI_CWindows_CFoundation_CNumerics_CVector2;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIReference_1_Windows__CFoundation__CNumerics__CVector2_INTERFACE_DEFINED__)
#define ____FIReference_1_Windows__CFoundation__CNumerics__CVector2_INTERFACE_DEFINED__

typedef interface __FIReference_1_Windows__CFoundation__CNumerics__CVector2 __FIReference_1_Windows__CFoundation__CNumerics__CVector2;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Windows__CFoundation__CNumerics__CVector2;

typedef struct __FIReference_1_Windows__CFoundation__CNumerics__CVector2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_Windows__CFoundation__CNumerics__CVector2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_Windows__CFoundation__CNumerics__CVector2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_Windows__CFoundation__CNumerics__CVector2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_Windows__CFoundation__CNumerics__CVector2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_Windows__CFoundation__CNumerics__CVector2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_Windows__CFoundation__CNumerics__CVector2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_Windows__CFoundation__CNumerics__CVector2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* result);

    END_INTERFACE
} __FIReference_1_Windows__CFoundation__CNumerics__CVector2Vtbl;

interface __FIReference_1_Windows__CFoundation__CNumerics__CVector2
{
    CONST_VTBL struct __FIReference_1_Windows__CFoundation__CNumerics__CVector2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_Windows__CFoundation__CNumerics__CVector2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_Windows__CFoundation__CNumerics__CVector2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_Windows__CFoundation__CNumerics__CVector2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_Windows__CFoundation__CNumerics__CVector2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_Windows__CFoundation__CNumerics__CVector2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_Windows__CFoundation__CNumerics__CVector2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_Windows__CFoundation__CNumerics__CVector2_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_Windows__CFoundation__CNumerics__CVector2_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 __x_ABI_CWindows_CFoundation_CNumerics_CVector3;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIReference_1_Windows__CFoundation__CNumerics__CVector3_INTERFACE_DEFINED__)
#define ____FIReference_1_Windows__CFoundation__CNumerics__CVector3_INTERFACE_DEFINED__

typedef interface __FIReference_1_Windows__CFoundation__CNumerics__CVector3 __FIReference_1_Windows__CFoundation__CNumerics__CVector3;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Windows__CFoundation__CNumerics__CVector3;

typedef struct __FIReference_1_Windows__CFoundation__CNumerics__CVector3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_Windows__CFoundation__CNumerics__CVector3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_Windows__CFoundation__CNumerics__CVector3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_Windows__CFoundation__CNumerics__CVector3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_Windows__CFoundation__CNumerics__CVector3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_Windows__CFoundation__CNumerics__CVector3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_Windows__CFoundation__CNumerics__CVector3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_Windows__CFoundation__CNumerics__CVector3* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* result);

    END_INTERFACE
} __FIReference_1_Windows__CFoundation__CNumerics__CVector3Vtbl;

interface __FIReference_1_Windows__CFoundation__CNumerics__CVector3
{
    CONST_VTBL struct __FIReference_1_Windows__CFoundation__CNumerics__CVector3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_Windows__CFoundation__CNumerics__CVector3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_Windows__CFoundation__CNumerics__CVector3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_Windows__CFoundation__CNumerics__CVector3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_Windows__CFoundation__CNumerics__CVector3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_Windows__CFoundation__CNumerics__CVector3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_Windows__CFoundation__CNumerics__CVector3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_Windows__CFoundation__CNumerics__CVector3_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_Windows__CFoundation__CNumerics__CVector3_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs __FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs;

typedef struct __FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgsVtbl;

interface __FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* sender,
        __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 __x_ABI_CWindows_CFoundation_CNumerics_CVector4;

typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

typedef enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode __x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode;

typedef enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat;

#ifndef ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect;

#endif // ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource;

#endif // ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CIGeometrySource2D_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CIGeometrySource2D_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CGraphics_CIGeometrySource2D __x_ABI_CWindows_CGraphics_CIGeometrySource2D;

#endif // ____x_ABI_CWindows_CGraphics_CIGeometrySource2D_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CGraphics_CPointInt32 __x_ABI_CWindows_CGraphics_CPointInt32;

typedef struct __x_ABI_CWindows_CGraphics_CRectInt32 __x_ABI_CWindows_CGraphics_CRectInt32;

typedef struct __x_ABI_CWindows_CGraphics_CSizeInt32 __x_ABI_CWindows_CGraphics_CSizeInt32;

#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueue_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIDispatcherQueue __x_ABI_CWindows_CSystem_CIDispatcherQueue;

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

#ifndef ____x_ABI_CWindows_CUI_CCore_CICoreDispatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CICoreDispatcher_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CCore_CICoreDispatcher __x_ABI_CWindows_CUI_CCore_CICoreDispatcher;

#endif // ____x_ABI_CWindows_CUI_CCore_CICoreDispatcher_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CComposition_CAnimationControllerProgressBehavior __x_ABI_CWindows_CUI_CComposition_CAnimationControllerProgressBehavior;

typedef enum __x_ABI_CWindows_CUI_CComposition_CAnimationDelayBehavior __x_ABI_CWindows_CUI_CComposition_CAnimationDelayBehavior;

typedef enum __x_ABI_CWindows_CUI_CComposition_CAnimationDirection __x_ABI_CWindows_CUI_CComposition_CAnimationDirection;

typedef enum __x_ABI_CWindows_CUI_CComposition_CAnimationIterationBehavior __x_ABI_CWindows_CUI_CComposition_CAnimationIterationBehavior;

typedef enum __x_ABI_CWindows_CUI_CComposition_CAnimationPropertyAccessMode __x_ABI_CWindows_CUI_CComposition_CAnimationPropertyAccessMode;

typedef enum __x_ABI_CWindows_CUI_CComposition_CAnimationStopBehavior __x_ABI_CWindows_CUI_CComposition_CAnimationStopBehavior;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionBackfaceVisibility __x_ABI_CWindows_CUI_CComposition_CCompositionBackfaceVisibility;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionBatchTypes __x_ABI_CWindows_CUI_CComposition_CCompositionBatchTypes;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionBorderMode __x_ABI_CWindows_CUI_CComposition_CCompositionBorderMode;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionCompositeMode __x_ABI_CWindows_CUI_CComposition_CCompositionCompositeMode;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionDropShadowSourcePolicy __x_ABI_CWindows_CUI_CComposition_CCompositionDropShadowSourcePolicy;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionEffectFactoryLoadStatus __x_ABI_CWindows_CUI_CComposition_CCompositionEffectFactoryLoadStatus;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionGradientExtendMode __x_ABI_CWindows_CUI_CComposition_CCompositionGradientExtendMode;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionMappingMode __x_ABI_CWindows_CUI_CComposition_CCompositionMappingMode;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionStretch __x_ABI_CWindows_CUI_CComposition_CCompositionStretch;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeLineJoin __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeLineJoin;

/*
 *
 * Struct Windows.UI.Composition.AnimationControllerProgressBehavior
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
enum __x_ABI_CWindows_CUI_CComposition_CAnimationControllerProgressBehavior
{
    AnimationControllerProgressBehavior_Default = 0,
    AnimationControllerProgressBehavior_IncludesDelayTime = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Struct Windows.UI.Composition.AnimationDelayBehavior
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
enum __x_ABI_CWindows_CUI_CComposition_CAnimationDelayBehavior
{
    AnimationDelayBehavior_SetInitialValueAfterDelay = 0,
    AnimationDelayBehavior_SetInitialValueBeforeDelay = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Struct Windows.UI.Composition.AnimationDirection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
enum __x_ABI_CWindows_CUI_CComposition_CAnimationDirection
{
    AnimationDirection_Normal = 0,
    AnimationDirection_Reverse = 1,
    AnimationDirection_Alternate = 2,
    AnimationDirection_AlternateReverse = 3,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.UI.Composition.AnimationIterationBehavior
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
enum __x_ABI_CWindows_CUI_CComposition_CAnimationIterationBehavior
{
    AnimationIterationBehavior_Count = 0,
    AnimationIterationBehavior_Forever = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.AnimationPropertyAccessMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
enum __x_ABI_CWindows_CUI_CComposition_CAnimationPropertyAccessMode
{
    AnimationPropertyAccessMode_None = 0,
    AnimationPropertyAccessMode_ReadOnly = 1,
    AnimationPropertyAccessMode_WriteOnly = 2,
    AnimationPropertyAccessMode_ReadWrite = 3,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Struct Windows.UI.Composition.AnimationStopBehavior
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
enum __x_ABI_CWindows_CUI_CComposition_CAnimationStopBehavior
{
    AnimationStopBehavior_LeaveCurrentValue = 0,
    AnimationStopBehavior_SetToInitialValue = 1,
    AnimationStopBehavior_SetToFinalValue = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionBackfaceVisibility
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
enum __x_ABI_CWindows_CUI_CComposition_CCompositionBackfaceVisibility
{
    CompositionBackfaceVisibility_Inherit = 0,
    CompositionBackfaceVisibility_Visible = 1,
    CompositionBackfaceVisibility_Hidden = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionBatchTypes
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
enum __x_ABI_CWindows_CUI_CComposition_CCompositionBatchTypes
{
    CompositionBatchTypes_None = 0,
    CompositionBatchTypes_Animation = 0x1,
    CompositionBatchTypes_Effect = 0x2,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
    CompositionBatchTypes_InfiniteAnimation = 0x4,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
    CompositionBatchTypes_AllAnimations = 0x5,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionBitmapInterpolationMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
enum __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode
{
    CompositionBitmapInterpolationMode_NearestNeighbor = 0,
    CompositionBitmapInterpolationMode_Linear = 1,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
    CompositionBitmapInterpolationMode_MagLinearMinLinearMipLinear = 2,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
    CompositionBitmapInterpolationMode_MagLinearMinLinearMipNearest = 3,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
    CompositionBitmapInterpolationMode_MagLinearMinNearestMipLinear = 4,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
    CompositionBitmapInterpolationMode_MagLinearMinNearestMipNearest = 5,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
    CompositionBitmapInterpolationMode_MagNearestMinLinearMipLinear = 6,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
    CompositionBitmapInterpolationMode_MagNearestMinLinearMipNearest = 7,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
    CompositionBitmapInterpolationMode_MagNearestMinNearestMipLinear = 8,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
    CompositionBitmapInterpolationMode_MagNearestMinNearestMipNearest = 9,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionBorderMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
enum __x_ABI_CWindows_CUI_CComposition_CCompositionBorderMode
{
    CompositionBorderMode_Inherit = 0,
    CompositionBorderMode_Soft = 1,
    CompositionBorderMode_Hard = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionColorSpace
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
enum __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace
{
    CompositionColorSpace_Auto = 0,
    CompositionColorSpace_Hsl = 1,
    CompositionColorSpace_Rgb = 2,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
    CompositionColorSpace_HslLinear = 3,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
    CompositionColorSpace_RgbLinear = 4,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionCompositeMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
enum __x_ABI_CWindows_CUI_CComposition_CCompositionCompositeMode
{
    CompositionCompositeMode_Inherit = 0,
    CompositionCompositeMode_SourceOver = 1,
    CompositionCompositeMode_DestinationInvert = 2,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
    CompositionCompositeMode_MinBlend = 3,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionDropShadowSourcePolicy
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
enum __x_ABI_CWindows_CUI_CComposition_CCompositionDropShadowSourcePolicy
{
    CompositionDropShadowSourcePolicy_Default = 0,
    CompositionDropShadowSourcePolicy_InheritFromVisualContent = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Struct Windows.UI.Composition.CompositionEffectFactoryLoadStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
enum __x_ABI_CWindows_CUI_CComposition_CCompositionEffectFactoryLoadStatus
{
    CompositionEffectFactoryLoadStatus_Success = 0,
    CompositionEffectFactoryLoadStatus_EffectTooComplex = 1,
    CompositionEffectFactoryLoadStatus_Pending = 2,
    CompositionEffectFactoryLoadStatus_Other = -1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionGetValueStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus
{
    CompositionGetValueStatus_Succeeded = 0,
    CompositionGetValueStatus_TypeMismatch = 1,
    CompositionGetValueStatus_NotFound = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionGradientExtendMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
enum __x_ABI_CWindows_CUI_CComposition_CCompositionGradientExtendMode
{
    CompositionGradientExtendMode_Clamp = 0,
    CompositionGradientExtendMode_Wrap = 1,
    CompositionGradientExtendMode_Mirror = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Struct Windows.UI.Composition.CompositionMappingMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
enum __x_ABI_CWindows_CUI_CComposition_CCompositionMappingMode
{
    CompositionMappingMode_Absolute = 0,
    CompositionMappingMode_Relative = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Struct Windows.UI.Composition.CompositionStretch
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
enum __x_ABI_CWindows_CUI_CComposition_CCompositionStretch
{
    CompositionStretch_None = 0,
    CompositionStretch_Fill = 1,
    CompositionStretch_Uniform = 2,
    CompositionStretch_UniformToFill = 3,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Struct Windows.UI.Composition.CompositionStrokeCap
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap
{
    CompositionStrokeCap_Flat = 0,
    CompositionStrokeCap_Square = 1,
    CompositionStrokeCap_Round = 2,
    CompositionStrokeCap_Triangle = 3,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Struct Windows.UI.Composition.CompositionStrokeLineJoin
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeLineJoin
{
    CompositionStrokeLineJoin_Miter = 0,
    CompositionStrokeLineJoin_Bevel = 1,
    CompositionStrokeLineJoin_Round = 2,
    CompositionStrokeLineJoin_MiterOrBevel = 3,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.IAmbientLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.AmbientLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIAmbientLight_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IAmbientLight[] = L"Windows.UI.Composition.IAmbientLight";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIAmbientLightVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight* This,
        struct __x_ABI_CWindows_CUI_CColor value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIAmbientLightVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIAmbientLight
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIAmbientLightVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIAmbientLight_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIAmbientLight_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIAmbientLight_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIAmbientLight_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIAmbientLight_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIAmbientLight_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIAmbientLight_get_Color(This, value) \
    ((This)->lpVtbl->get_Color(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIAmbientLight_put_Color(This, value) \
    ((This)->lpVtbl->put_Color(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIAmbientLight;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIAmbientLight_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.IAmbientLight2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.AmbientLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IAmbientLight2[] = L"Windows.UI.Composition.IAmbientLight2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Intensity)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Intensity)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight2* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_get_Intensity(This, value) \
    ((This)->lpVtbl->get_Intensity(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_put_Intensity(This, value) \
    ((This)->lpVtbl->put_Intensity(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIAmbientLight2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IAnimationController
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.AnimationController
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationController_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationController_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IAnimationController[] = L"Windows.UI.Composition.IAnimationController";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PlaybackRate)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_PlaybackRate)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_ProgressBehavior)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationControllerProgressBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_ProgressBehavior)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationControllerProgressBehavior value);
    HRESULT (STDMETHODCALLTYPE* Pause)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This);
    HRESULT (STDMETHODCALLTYPE* Resume)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIAnimationController
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationController_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationController_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationController_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationController_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationController_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationController_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationController_get_PlaybackRate(This, value) \
    ((This)->lpVtbl->get_PlaybackRate(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationController_put_PlaybackRate(This, value) \
    ((This)->lpVtbl->put_PlaybackRate(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationController_get_Progress(This, value) \
    ((This)->lpVtbl->get_Progress(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationController_put_Progress(This, value) \
    ((This)->lpVtbl->put_Progress(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationController_get_ProgressBehavior(This, value) \
    ((This)->lpVtbl->get_ProgressBehavior(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationController_put_ProgressBehavior(This, value) \
    ((This)->lpVtbl->put_ProgressBehavior(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationController_Pause(This) \
    ((This)->lpVtbl->Pause(This))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationController_Resume(This) \
    ((This)->lpVtbl->Resume(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIAnimationController;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationController_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.IAnimationControllerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.AnimationController
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IAnimationControllerStatics[] = L"Windows.UI.Composition.IAnimationControllerStatics";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MaxPlaybackRate)(__x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_MinPlaybackRate)(__x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics* This,
        FLOAT* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStaticsVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_get_MaxPlaybackRate(This, value) \
    ((This)->lpVtbl->get_MaxPlaybackRate(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_get_MinPlaybackRate(This, value) \
    ((This)->lpVtbl->get_MinPlaybackRate(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.IAnimationObject
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IAnimationObject[] = L"Windows.UI.Composition.IAnimationObject";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIAnimationObjectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIAnimationObject* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIAnimationObject* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIAnimationObject* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIAnimationObject* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIAnimationObject* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIAnimationObject* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* PopulatePropertyInfo)(__x_ABI_CWindows_CUI_CComposition_CIAnimationObject* This,
        HSTRING propertyName,
        __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* propertyInfo);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIAnimationObjectVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIAnimationObject
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIAnimationObjectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationObject_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationObject_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationObject_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationObject_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationObject_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationObject_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationObject_PopulatePropertyInfo(This, propertyName, propertyInfo) \
    ((This)->lpVtbl->PopulatePropertyInfo(This, propertyName, propertyInfo))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIAnimationObject;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Composition.IAnimationPropertyInfo
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.AnimationPropertyInfo
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IAnimationPropertyInfo[] = L"Windows.UI.Composition.IAnimationPropertyInfo";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AccessMode)(__x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationPropertyAccessMode* value);
    HRESULT (STDMETHODCALLTYPE* put_AccessMode)(__x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationPropertyAccessMode value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfoVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_get_AccessMode(This, value) \
    ((This)->lpVtbl->get_AccessMode(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_put_AccessMode(This, value) \
    ((This)->lpVtbl->put_AccessMode(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Composition.IBooleanKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.BooleanKeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IBooleanKeyFrameAnimation[] = L"Windows.UI.Composition.IBooleanKeyFrameAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrame)(__x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        boolean value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_InsertKeyFrame(This, normalizedProgressKey, value) \
    ((This)->lpVtbl->InsertKeyFrame(This, normalizedProgressKey, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Composition.IBounceScalarNaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.BounceScalarNaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IBounceScalarNaturalMotionAnimation[] = L"Windows.UI.Composition.IBounceScalarNaturalMotionAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Acceleration)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Acceleration)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Restitution)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Restitution)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_get_Acceleration(This, value) \
    ((This)->lpVtbl->get_Acceleration(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_put_Acceleration(This, value) \
    ((This)->lpVtbl->put_Acceleration(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_get_Restitution(This, value) \
    ((This)->lpVtbl->get_Restitution(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_put_Restitution(This, value) \
    ((This)->lpVtbl->put_Restitution(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.IBounceVector2NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.BounceVector2NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IBounceVector2NaturalMotionAnimation[] = L"Windows.UI.Composition.IBounceVector2NaturalMotionAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Acceleration)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Acceleration)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Restitution)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Restitution)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_get_Acceleration(This, value) \
    ((This)->lpVtbl->get_Acceleration(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_put_Acceleration(This, value) \
    ((This)->lpVtbl->put_Acceleration(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_get_Restitution(This, value) \
    ((This)->lpVtbl->get_Restitution(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_put_Restitution(This, value) \
    ((This)->lpVtbl->put_Restitution(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.IBounceVector3NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.BounceVector3NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IBounceVector3NaturalMotionAnimation[] = L"Windows.UI.Composition.IBounceVector3NaturalMotionAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Acceleration)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Acceleration)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Restitution)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Restitution)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_get_Acceleration(This, value) \
    ((This)->lpVtbl->get_Acceleration(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_put_Acceleration(This, value) \
    ((This)->lpVtbl->put_Acceleration(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_get_Restitution(This, value) \
    ((This)->lpVtbl->get_Restitution(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_put_Restitution(This, value) \
    ((This)->lpVtbl->put_Restitution(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.IColorKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.ColorKeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IColorKeyFrameAnimation[] = L"Windows.UI.Composition.IColorKeyFrameAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_InterpolationColorSpace)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace* value);
    HRESULT (STDMETHODCALLTYPE* put_InterpolationColorSpace)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace value);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrame)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrameWithEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CUI_CColor value,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* easingFunction);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_get_InterpolationColorSpace(This, value) \
    ((This)->lpVtbl->get_InterpolationColorSpace(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_put_InterpolationColorSpace(This, value) \
    ((This)->lpVtbl->put_InterpolationColorSpace(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_InsertKeyFrame(This, normalizedProgressKey, value) \
    ((This)->lpVtbl->InsertKeyFrame(This, normalizedProgressKey, value))

#define __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_InsertKeyFrameWithEasingFunction(This, normalizedProgressKey, value, easingFunction) \
    ((This)->lpVtbl->InsertKeyFrameWithEasingFunction(This, normalizedProgressKey, value, easingFunction))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionAnimation[] = L"Windows.UI.Composition.ICompositionAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ClearAllParameters)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This);
    HRESULT (STDMETHODCALLTYPE* ClearParameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* SetColorParameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* SetMatrix3x2Parameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value);
    HRESULT (STDMETHODCALLTYPE* SetMatrix4x4Parameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 value);
    HRESULT (STDMETHODCALLTYPE* SetQuaternionParameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion value);
    HRESULT (STDMETHODCALLTYPE* SetReferenceParameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key,
        __x_ABI_CWindows_CUI_CComposition_CICompositionObject* compositionObject);
    HRESULT (STDMETHODCALLTYPE* SetScalarParameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* SetVector2Parameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* SetVector3Parameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* SetVector4Parameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_ClearAllParameters(This) \
    ((This)->lpVtbl->ClearAllParameters(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_ClearParameter(This, key) \
    ((This)->lpVtbl->ClearParameter(This, key))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_SetColorParameter(This, key, value) \
    ((This)->lpVtbl->SetColorParameter(This, key, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_SetMatrix3x2Parameter(This, key, value) \
    ((This)->lpVtbl->SetMatrix3x2Parameter(This, key, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_SetMatrix4x4Parameter(This, key, value) \
    ((This)->lpVtbl->SetMatrix4x4Parameter(This, key, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_SetQuaternionParameter(This, key, value) \
    ((This)->lpVtbl->SetQuaternionParameter(This, key, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_SetReferenceParameter(This, key, compositionObject) \
    ((This)->lpVtbl->SetReferenceParameter(This, key, compositionObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_SetScalarParameter(This, key, value) \
    ((This)->lpVtbl->SetScalarParameter(This, key, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_SetVector2Parameter(This, key, value) \
    ((This)->lpVtbl->SetVector2Parameter(This, key, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_SetVector3Parameter(This, key, value) \
    ((This)->lpVtbl->SetVector3Parameter(This, key, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_SetVector4Parameter(This, key, value) \
    ((This)->lpVtbl->SetVector4Parameter(This, key, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionAnimation2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionAnimation2[] = L"Windows.UI.Composition.ICompositionAnimation2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SetBooleanParameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2* This,
        HSTRING key,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Target)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Target)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2* This,
        HSTRING value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_SetBooleanParameter(This, key, value) \
    ((This)->lpVtbl->SetBooleanParameter(This, key, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_get_Target(This, value) \
    ((This)->lpVtbl->get_Target(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_put_Target(This, value) \
    ((This)->lpVtbl->put_Target(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionAnimation3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionAnimation3[] = L"Windows.UI.Composition.ICompositionAnimation3";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_InitialValueExpressions)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3* This,
        __FIMap_2_HSTRING_HSTRING** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_get_InitialValueExpressions(This, value) \
    ((This)->lpVtbl->get_InitialValueExpressions(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositionAnimation4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionAnimation4[] = L"Windows.UI.Composition.ICompositionAnimation4";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SetExpressionReferenceParameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4* This,
        HSTRING parameterName,
        __x_ABI_CWindows_CUI_CComposition_CIAnimationObject* source);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_SetExpressionReferenceParameter(This, parameterName, source) \
    ((This)->lpVtbl->SetExpressionReferenceParameter(This, parameterName, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Composition.ICompositionAnimationBase
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionAnimationBase[] = L"Windows.UI.Composition.ICompositionAnimationBase";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBaseVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionAnimationFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionAnimationFactory[] = L"Windows.UI.Composition.ICompositionAnimationFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionAnimationGroup
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionAnimationGroup
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionAnimationGroup[] = L"Windows.UI.Composition.ICompositionAnimationGroup";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroupVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Count)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* Add)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* value);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAll)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroupVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroupVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_get_Count(This, value) \
    ((This)->lpVtbl->get_Count(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_Add(This, value) \
    ((This)->lpVtbl->Add(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_Remove(This, value) \
    ((This)->lpVtbl->Remove(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_RemoveAll(This) \
    ((This)->lpVtbl->RemoveAll(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionBackdropBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionBackdropBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionBackdropBrush[] = L"Windows.UI.Composition.ICompositionBackdropBrush";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrushVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionBatchCompletedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionBatchCompletedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionBatchCompletedEventArgs[] = L"Windows.UI.Composition.ICompositionBatchCompletedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionBrush[] = L"Windows.UI.Composition.ICompositionBrush";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrush* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionBrushVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionBrush
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionBrushFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionBrushFactory[] = L"Windows.UI.Composition.ICompositionBrushFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionCapabilities
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionCapabilities
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionCapabilities[] = L"Windows.UI.Composition.ICompositionCapabilities";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* AreEffectsSupported)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* AreEffectsFast)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* add_Changed)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This,
        __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionCapabilities_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Changed)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_AreEffectsSupported(This, result) \
    ((This)->lpVtbl->AreEffectsSupported(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_AreEffectsFast(This, result) \
    ((This)->lpVtbl->AreEffectsFast(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_add_Changed(This, handler, token) \
    ((This)->lpVtbl->add_Changed(This, handler, token))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_remove_Changed(This, token) \
    ((This)->lpVtbl->remove_Changed(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.ICompositionCapabilitiesStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionCapabilities
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionCapabilitiesStatics[] = L"Windows.UI.Composition.ICompositionCapabilitiesStatics";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetForCurrentView)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStaticsVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_GetForCurrentView(This, result) \
    ((This)->lpVtbl->GetForCurrentView(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.ICompositionClip
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionClip
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionClip_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionClip_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionClip[] = L"Windows.UI.Composition.ICompositionClip";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionClipVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionClipVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionClip
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionClipVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionClip;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionClip_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionClip2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionClip
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionClip2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionClip2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionClip2[] = L"Windows.UI.Composition.ICompositionClip2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionClip2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AnchorPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_AnchorPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Scale)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Scale)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2* value);
    HRESULT (STDMETHODCALLTYPE* put_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionClip2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionClip2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionClip2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_get_AnchorPoint(This, value) \
    ((This)->lpVtbl->get_AnchorPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_put_AnchorPoint(This, value) \
    ((This)->lpVtbl->put_AnchorPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_get_CenterPoint(This, value) \
    ((This)->lpVtbl->get_CenterPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_put_CenterPoint(This, value) \
    ((This)->lpVtbl->put_CenterPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_get_Offset(This, value) \
    ((This)->lpVtbl->get_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_put_Offset(This, value) \
    ((This)->lpVtbl->put_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_get_RotationAngle(This, value) \
    ((This)->lpVtbl->get_RotationAngle(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_put_RotationAngle(This, value) \
    ((This)->lpVtbl->put_RotationAngle(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_get_RotationAngleInDegrees(This, value) \
    ((This)->lpVtbl->get_RotationAngleInDegrees(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_put_RotationAngleInDegrees(This, value) \
    ((This)->lpVtbl->put_RotationAngleInDegrees(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_get_Scale(This, value) \
    ((This)->lpVtbl->get_Scale(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_put_Scale(This, value) \
    ((This)->lpVtbl->put_Scale(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_get_TransformMatrix(This, value) \
    ((This)->lpVtbl->get_TransformMatrix(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClip2_put_TransformMatrix(This, value) \
    ((This)->lpVtbl->put_TransformMatrix(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionClip2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionClip2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionClipFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionClip
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionClipFactory[] = L"Windows.UI.Composition.ICompositionClipFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionColorBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionColorBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionColorBrush[] = L"Windows.UI.Composition.ICompositionColorBrush";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush* This,
        struct __x_ABI_CWindows_CUI_CColor value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrushVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_get_Color(This, value) \
    ((This)->lpVtbl->get_Color(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_put_Color(This, value) \
    ((This)->lpVtbl->put_Color(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionColorGradientStop
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionColorGradientStop
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionColorGradientStop[] = L"Windows.UI.Composition.ICompositionColorGradientStop";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_get_Color(This, value) \
    ((This)->lpVtbl->get_Color(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_put_Color(This, value) \
    ((This)->lpVtbl->put_Color(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_get_Offset(This, value) \
    ((This)->lpVtbl->get_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_put_Offset(This, value) \
    ((This)->lpVtbl->put_Offset(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositionColorGradientStopCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionColorGradientStopCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionColorGradientStopCollection[] = L"Windows.UI.Composition.ICompositionColorGradientStopCollection";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollectionVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositionCommitBatch
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionCommitBatch
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionCommitBatch[] = L"Windows.UI.Composition.ICompositionCommitBatch";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatchVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsActive)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsEnded)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_Completed)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This,
        __FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Completed)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatchVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatchVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_get_IsActive(This, value) \
    ((This)->lpVtbl->get_IsActive(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_get_IsEnded(This, value) \
    ((This)->lpVtbl->get_IsEnded(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_add_Completed(This, handler, token) \
    ((This)->lpVtbl->add_Completed(This, handler, token))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_remove_Completed(This, token) \
    ((This)->lpVtbl->remove_Completed(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionContainerShape
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionContainerShape
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionContainerShape[] = L"Windows.UI.Composition.ICompositionContainerShape";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShapeVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Shapes)(__x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape* This,
        __FIVector_1_Windows__CUI__CComposition__CCompositionShape** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShapeVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShapeVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_get_Shapes(This, value) \
    ((This)->lpVtbl->get_Shapes(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionDrawingSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionDrawingSurface
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionDrawingSurface[] = L"Windows.UI.Composition.ICompositionDrawingSurface";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AlphaMode)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface* This,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode* value);
    HRESULT (STDMETHODCALLTYPE* get_PixelFormat)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface* This,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat* value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_get_AlphaMode(This, value) \
    ((This)->lpVtbl->get_AlphaMode(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_get_PixelFormat(This, value) \
    ((This)->lpVtbl->get_PixelFormat(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_get_Size(This, value) \
    ((This)->lpVtbl->get_Size(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionDrawingSurface2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionDrawingSurface
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionDrawingSurface2[] = L"Windows.UI.Composition.ICompositionDrawingSurface2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SizeInt32)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32* value);
    HRESULT (STDMETHODCALLTYPE* Resize)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32 sizePixels);
    HRESULT (STDMETHODCALLTYPE* Scroll)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
        struct __x_ABI_CWindows_CGraphics_CPointInt32 offset);
    HRESULT (STDMETHODCALLTYPE* ScrollRect)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
        struct __x_ABI_CWindows_CGraphics_CPointInt32 offset,
        struct __x_ABI_CWindows_CGraphics_CRectInt32 scrollRect);
    HRESULT (STDMETHODCALLTYPE* ScrollWithClip)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
        struct __x_ABI_CWindows_CGraphics_CPointInt32 offset,
        struct __x_ABI_CWindows_CGraphics_CRectInt32 clipRect);
    HRESULT (STDMETHODCALLTYPE* ScrollRectWithClip)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
        struct __x_ABI_CWindows_CGraphics_CPointInt32 offset,
        struct __x_ABI_CWindows_CGraphics_CRectInt32 clipRect,
        struct __x_ABI_CWindows_CGraphics_CRectInt32 scrollRect);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_get_SizeInt32(This, value) \
    ((This)->lpVtbl->get_SizeInt32(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_Resize(This, sizePixels) \
    ((This)->lpVtbl->Resize(This, sizePixels))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_Scroll(This, offset) \
    ((This)->lpVtbl->Scroll(This, offset))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_ScrollRect(This, offset, scrollRect) \
    ((This)->lpVtbl->ScrollRect(This, offset, scrollRect))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_ScrollWithClip(This, offset, clipRect) \
    ((This)->lpVtbl->ScrollWithClip(This, offset, clipRect))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_ScrollRectWithClip(This, offset, clipRect, scrollRect) \
    ((This)->lpVtbl->ScrollRectWithClip(This, offset, clipRect, scrollRect))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.ICompositionDrawingSurfaceFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionDrawingSurface
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionDrawingSurfaceFactory[] = L"Windows.UI.Composition.ICompositionDrawingSurfaceFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.ICompositionEasingFunction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionEasingFunction
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionEasingFunction[] = L"Windows.UI.Composition.ICompositionEasingFunction";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionEasingFunctionFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionEasingFunction
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionEasingFunctionFactory[] = L"Windows.UI.Composition.ICompositionEasingFunctionFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionEffectBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionEffectBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionEffectBrush[] = L"Windows.UI.Composition.ICompositionEffectBrush";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetSourceParameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush* This,
        HSTRING name,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** result);
    HRESULT (STDMETHODCALLTYPE* SetSourceParameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush* This,
        HSTRING name,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush* source);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrushVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_GetSourceParameter(This, name, result) \
    ((This)->lpVtbl->GetSourceParameter(This, name, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_SetSourceParameter(This, name, source) \
    ((This)->lpVtbl->SetSourceParameter(This, name, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionEffectFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionEffectFactory
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionEffectFactory[] = L"Windows.UI.Composition.ICompositionEffectFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush** result);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory* This,
        HRESULT* value);
    HRESULT (STDMETHODCALLTYPE* get_LoadStatus)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionEffectFactoryLoadStatus* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_CreateBrush(This, result) \
    ((This)->lpVtbl->CreateBrush(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_get_ExtendedError(This, value) \
    ((This)->lpVtbl->get_ExtendedError(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_get_LoadStatus(This, value) \
    ((This)->lpVtbl->get_LoadStatus(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionEffectSourceParameter
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionEffectSourceParameter
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionEffectSourceParameter[] = L"Windows.UI.Composition.ICompositionEffectSourceParameter";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter* This,
        HSTRING* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_get_Name(This, value) \
    ((This)->lpVtbl->get_Name(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionEffectSourceParameterFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionEffectSourceParameter
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionEffectSourceParameterFactory[] = L"Windows.UI.Composition.ICompositionEffectSourceParameterFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory* This,
        HSTRING name,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_Create(This, name, value) \
    ((This)->lpVtbl->Create(This, name, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionEllipseGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionEllipseGeometry
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionEllipseGeometry[] = L"Windows.UI.Composition.ICompositionEllipseGeometry";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Center)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Center)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Radius)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Radius)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_get_Center(This, value) \
    ((This)->lpVtbl->get_Center(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_put_Center(This, value) \
    ((This)->lpVtbl->put_Center(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_get_Radius(This, value) \
    ((This)->lpVtbl->get_Radius(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_put_Radius(This, value) \
    ((This)->lpVtbl->put_Radius(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionGeometricClip
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionGeometricClip
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionGeometricClip[] = L"Windows.UI.Composition.ICompositionGeometricClip";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClipVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Geometry)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry** value);
    HRESULT (STDMETHODCALLTYPE* put_Geometry)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* value);
    HRESULT (STDMETHODCALLTYPE* get_ViewBox)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox** value);
    HRESULT (STDMETHODCALLTYPE* put_ViewBox)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClipVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClipVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_get_Geometry(This, value) \
    ((This)->lpVtbl->get_Geometry(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_put_Geometry(This, value) \
    ((This)->lpVtbl->put_Geometry(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_get_ViewBox(This, value) \
    ((This)->lpVtbl->get_ViewBox(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_put_ViewBox(This, value) \
    ((This)->lpVtbl->put_ViewBox(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Composition.ICompositionGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionGeometry
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionGeometry[] = L"Windows.UI.Composition.ICompositionGeometry";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TrimEnd)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_TrimEnd)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_TrimOffset)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_TrimOffset)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_TrimStart)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_TrimStart)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_get_TrimEnd(This, value) \
    ((This)->lpVtbl->get_TrimEnd(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_put_TrimEnd(This, value) \
    ((This)->lpVtbl->put_TrimEnd(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_get_TrimOffset(This, value) \
    ((This)->lpVtbl->get_TrimOffset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_put_TrimOffset(This, value) \
    ((This)->lpVtbl->put_TrimOffset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_get_TrimStart(This, value) \
    ((This)->lpVtbl->get_TrimStart(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_put_TrimStart(This, value) \
    ((This)->lpVtbl->put_TrimStart(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGeometry;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionGeometryFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionGeometry
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionGeometryFactory[] = L"Windows.UI.Composition.ICompositionGeometryFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionGradientBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionGradientBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionGradientBrush[] = L"Windows.UI.Composition.ICompositionGradientBrush";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AnchorPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_AnchorPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_ColorStops)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendMode)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGradientExtendMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ExtendMode)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGradientExtendMode value);
    HRESULT (STDMETHODCALLTYPE* get_InterpolationSpace)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace* value);
    HRESULT (STDMETHODCALLTYPE* put_InterpolationSpace)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Scale)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Scale)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2* value);
    HRESULT (STDMETHODCALLTYPE* put_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_get_AnchorPoint(This, value) \
    ((This)->lpVtbl->get_AnchorPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_put_AnchorPoint(This, value) \
    ((This)->lpVtbl->put_AnchorPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_get_CenterPoint(This, value) \
    ((This)->lpVtbl->get_CenterPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_put_CenterPoint(This, value) \
    ((This)->lpVtbl->put_CenterPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_get_ColorStops(This, value) \
    ((This)->lpVtbl->get_ColorStops(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_get_ExtendMode(This, value) \
    ((This)->lpVtbl->get_ExtendMode(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_put_ExtendMode(This, value) \
    ((This)->lpVtbl->put_ExtendMode(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_get_InterpolationSpace(This, value) \
    ((This)->lpVtbl->get_InterpolationSpace(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_put_InterpolationSpace(This, value) \
    ((This)->lpVtbl->put_InterpolationSpace(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_get_Offset(This, value) \
    ((This)->lpVtbl->get_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_put_Offset(This, value) \
    ((This)->lpVtbl->put_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_get_RotationAngle(This, value) \
    ((This)->lpVtbl->get_RotationAngle(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_put_RotationAngle(This, value) \
    ((This)->lpVtbl->put_RotationAngle(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_get_RotationAngleInDegrees(This, value) \
    ((This)->lpVtbl->get_RotationAngleInDegrees(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_put_RotationAngleInDegrees(This, value) \
    ((This)->lpVtbl->put_RotationAngleInDegrees(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_get_Scale(This, value) \
    ((This)->lpVtbl->get_Scale(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_put_Scale(This, value) \
    ((This)->lpVtbl->put_Scale(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_get_TransformMatrix(This, value) \
    ((This)->lpVtbl->get_TransformMatrix(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_put_TransformMatrix(This, value) \
    ((This)->lpVtbl->put_TransformMatrix(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositionGradientBrush2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionGradientBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionGradientBrush2[] = L"Windows.UI.Composition.ICompositionGradientBrush2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MappingMode)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionMappingMode* value);
    HRESULT (STDMETHODCALLTYPE* put_MappingMode)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionMappingMode value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_get_MappingMode(This, value) \
    ((This)->lpVtbl->get_MappingMode(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_put_MappingMode(This, value) \
    ((This)->lpVtbl->put_MappingMode(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Composition.ICompositionGradientBrushFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionGradientBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionGradientBrushFactory[] = L"Windows.UI.Composition.ICompositionGradientBrushFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositionGraphicsDevice
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionGraphicsDevice
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionGraphicsDevice[] = L"Windows.UI.Composition.ICompositionGraphicsDevice";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDeviceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateDrawingSurface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* This,
        struct __x_ABI_CWindows_CFoundation_CSize sizePixels,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat pixelFormat,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode alphaMode,
        __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface** result);
    HRESULT (STDMETHODCALLTYPE* add_RenderingDeviceReplaced)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* This,
        __FITypedEventHandler_2_Windows__CUI__CComposition__CCompositionGraphicsDevice_Windows__CUI__CComposition__CRenderingDeviceReplacedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RenderingDeviceReplaced)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDeviceVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDeviceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_CreateDrawingSurface(This, sizePixels, pixelFormat, alphaMode, result) \
    ((This)->lpVtbl->CreateDrawingSurface(This, sizePixels, pixelFormat, alphaMode, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_add_RenderingDeviceReplaced(This, handler, token) \
    ((This)->lpVtbl->add_RenderingDeviceReplaced(This, handler, token))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_remove_RenderingDeviceReplaced(This, token) \
    ((This)->lpVtbl->remove_RenderingDeviceReplaced(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionGraphicsDevice2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionGraphicsDevice
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionGraphicsDevice2[] = L"Windows.UI.Composition.ICompositionGraphicsDevice2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateDrawingSurface2)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32 sizePixels,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat pixelFormat,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode alphaMode,
        __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface** result);
    HRESULT (STDMETHODCALLTYPE* CreateVirtualDrawingSurface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32 sizePixels,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat pixelFormat,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode alphaMode,
        __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_CreateDrawingSurface2(This, sizePixels, pixelFormat, alphaMode, result) \
    ((This)->lpVtbl->CreateDrawingSurface2(This, sizePixels, pixelFormat, alphaMode, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_CreateVirtualDrawingSurface(This, sizePixels, pixelFormat, alphaMode, result) \
    ((This)->lpVtbl->CreateVirtualDrawingSurface(This, sizePixels, pixelFormat, alphaMode, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.ICompositionGraphicsDevice3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionGraphicsDevice
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionGraphicsDevice3[] = L"Windows.UI.Composition.ICompositionGraphicsDevice3";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateMipmapSurface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32 sizePixels,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat pixelFormat,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode alphaMode,
        __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface** result);
    HRESULT (STDMETHODCALLTYPE* Trim)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3* This);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_CreateMipmapSurface(This, sizePixels, pixelFormat, alphaMode, result) \
    ((This)->lpVtbl->CreateMipmapSurface(This, sizePixels, pixelFormat, alphaMode, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_Trim(This) \
    ((This)->lpVtbl->Trim(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLight_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionLight[] = L"Windows.UI.Composition.ICompositionLight";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionLightVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Targets)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionLightVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionLight
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionLightVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight_get_Targets(This, value) \
    ((This)->lpVtbl->get_Targets(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionLight;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLight_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionLight2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLight2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionLight2[] = L"Windows.UI.Composition.ICompositionLight2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionLight2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ExclusionsFromTargets)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight2* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionLight2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionLight2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionLight2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight2_get_ExclusionsFromTargets(This, value) \
    ((This)->lpVtbl->get_ExclusionsFromTargets(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionLight2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLight2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositionLight3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLight3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLight3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionLight3[] = L"Windows.UI.Composition.ICompositionLight3";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionLight3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsEnabled)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsEnabled)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight3* This,
        boolean value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionLight3Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionLight3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionLight3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight3_get_IsEnabled(This, value) \
    ((This)->lpVtbl->get_IsEnabled(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLight3_put_IsEnabled(This, value) \
    ((This)->lpVtbl->put_IsEnabled(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionLight3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLight3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionLightFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionLightFactory[] = L"Windows.UI.Composition.ICompositionLightFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionLineGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionLineGeometry
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionLineGeometry[] = L"Windows.UI.Composition.ICompositionLineGeometry";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Start)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Start)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_End)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_End)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_get_Start(This, value) \
    ((This)->lpVtbl->get_Start(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_put_Start(This, value) \
    ((This)->lpVtbl->put_Start(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_get_End(This, value) \
    ((This)->lpVtbl->get_End(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_put_End(This, value) \
    ((This)->lpVtbl->put_End(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionLinearGradientBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionLinearGradientBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionLinearGradientBrush[] = L"Windows.UI.Composition.ICompositionLinearGradientBrush";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_EndPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_EndPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_StartPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_StartPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrushVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_get_EndPoint(This, value) \
    ((This)->lpVtbl->get_EndPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_put_EndPoint(This, value) \
    ((This)->lpVtbl->put_EndPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_get_StartPoint(This, value) \
    ((This)->lpVtbl->get_StartPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_put_StartPoint(This, value) \
    ((This)->lpVtbl->put_StartPoint(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositionMaskBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionMaskBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionMaskBrush[] = L"Windows.UI.Composition.ICompositionMaskBrush";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Mask)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Mask)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrushVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_get_Mask(This, value) \
    ((This)->lpVtbl->get_Mask(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_put_Mask(This, value) \
    ((This)->lpVtbl->put_Mask(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_get_Source(This, value) \
    ((This)->lpVtbl->get_Source(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_put_Source(This, value) \
    ((This)->lpVtbl->put_Source(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionMipmapSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionMipmapSurface
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionMipmapSurface[] = L"Windows.UI.Composition.ICompositionMipmapSurface";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurfaceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LevelCount)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaMode)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode* value);
    HRESULT (STDMETHODCALLTYPE* get_PixelFormat)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat* value);
    HRESULT (STDMETHODCALLTYPE* get_SizeInt32)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32* value);
    HRESULT (STDMETHODCALLTYPE* GetDrawingSurfaceForLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This,
        UINT32 level,
        __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurfaceVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurfaceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_get_LevelCount(This, value) \
    ((This)->lpVtbl->get_LevelCount(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_get_AlphaMode(This, value) \
    ((This)->lpVtbl->get_AlphaMode(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_get_PixelFormat(This, value) \
    ((This)->lpVtbl->get_PixelFormat(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_get_SizeInt32(This, value) \
    ((This)->lpVtbl->get_SizeInt32(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_GetDrawingSurfaceForLevel(This, level, result) \
    ((This)->lpVtbl->GetDrawingSurfaceForLevel(This, level, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionNineGridBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionNineGridBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionNineGridBrush[] = L"Windows.UI.Composition.ICompositionNineGridBrush";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BottomInset)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BottomInset)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_BottomInsetScale)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BottomInsetScale)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_IsCenterHollow)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCenterHollow)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_LeftInset)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_LeftInset)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LeftInsetScale)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_LeftInsetScale)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RightInset)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RightInset)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RightInsetScale)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RightInsetScale)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_TopInset)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_TopInset)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_TopInsetScale)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_TopInsetScale)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* SetInsets)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT inset);
    HRESULT (STDMETHODCALLTYPE* SetInsetsWithValues)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT left,
        FLOAT top,
        FLOAT right,
        FLOAT bottom);
    HRESULT (STDMETHODCALLTYPE* SetInsetScales)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT scale);
    HRESULT (STDMETHODCALLTYPE* SetInsetScalesWithValues)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT left,
        FLOAT top,
        FLOAT right,
        FLOAT bottom);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrushVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_get_BottomInset(This, value) \
    ((This)->lpVtbl->get_BottomInset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_put_BottomInset(This, value) \
    ((This)->lpVtbl->put_BottomInset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_get_BottomInsetScale(This, value) \
    ((This)->lpVtbl->get_BottomInsetScale(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_put_BottomInsetScale(This, value) \
    ((This)->lpVtbl->put_BottomInsetScale(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_get_IsCenterHollow(This, value) \
    ((This)->lpVtbl->get_IsCenterHollow(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_put_IsCenterHollow(This, value) \
    ((This)->lpVtbl->put_IsCenterHollow(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_get_LeftInset(This, value) \
    ((This)->lpVtbl->get_LeftInset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_put_LeftInset(This, value) \
    ((This)->lpVtbl->put_LeftInset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_get_LeftInsetScale(This, value) \
    ((This)->lpVtbl->get_LeftInsetScale(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_put_LeftInsetScale(This, value) \
    ((This)->lpVtbl->put_LeftInsetScale(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_get_RightInset(This, value) \
    ((This)->lpVtbl->get_RightInset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_put_RightInset(This, value) \
    ((This)->lpVtbl->put_RightInset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_get_RightInsetScale(This, value) \
    ((This)->lpVtbl->get_RightInsetScale(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_put_RightInsetScale(This, value) \
    ((This)->lpVtbl->put_RightInsetScale(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_get_Source(This, value) \
    ((This)->lpVtbl->get_Source(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_put_Source(This, value) \
    ((This)->lpVtbl->put_Source(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_get_TopInset(This, value) \
    ((This)->lpVtbl->get_TopInset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_put_TopInset(This, value) \
    ((This)->lpVtbl->put_TopInset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_get_TopInsetScale(This, value) \
    ((This)->lpVtbl->get_TopInsetScale(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_put_TopInsetScale(This, value) \
    ((This)->lpVtbl->put_TopInsetScale(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_SetInsets(This, inset) \
    ((This)->lpVtbl->SetInsets(This, inset))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_SetInsetsWithValues(This, left, top, right, bottom) \
    ((This)->lpVtbl->SetInsetsWithValues(This, left, top, right, bottom))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_SetInsetScales(This, scale) \
    ((This)->lpVtbl->SetInsetScales(This, scale))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_SetInsetScalesWithValues(This, left, top, right, bottom) \
    ((This)->lpVtbl->SetInsetScalesWithValues(This, left, top, right, bottom))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionObject
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionObject
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionObject[] = L"Windows.UI.Composition.ICompositionObject";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionObjectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Compositor)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositor** value);
    HRESULT (STDMETHODCALLTYPE* get_Dispatcher)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This,
        __x_ABI_CWindows_CUI_CCore_CICoreDispatcher** value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet** value);
    HRESULT (STDMETHODCALLTYPE* StartAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This,
        HSTRING propertyName,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* animation);
    HRESULT (STDMETHODCALLTYPE* StopAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This,
        HSTRING propertyName);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionObjectVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionObject
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionObjectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject_get_Compositor(This, value) \
    ((This)->lpVtbl->get_Compositor(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject_get_Dispatcher(This, value) \
    ((This)->lpVtbl->get_Dispatcher(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject_get_Properties(This, value) \
    ((This)->lpVtbl->get_Properties(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject_StartAnimation(This, propertyName, animation) \
    ((This)->lpVtbl->StartAnimation(This, propertyName, animation))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject_StopAnimation(This, propertyName) \
    ((This)->lpVtbl->StopAnimation(This, propertyName))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionObject;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionObject2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionObject
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionObject2[] = L"Windows.UI.Composition.ICompositionObject2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionObject2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Comment)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Comment)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ImplicitAnimations)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
        __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection** value);
    HRESULT (STDMETHODCALLTYPE* put_ImplicitAnimations)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
        __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection* value);
    HRESULT (STDMETHODCALLTYPE* StartAnimationGroup)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* value);
    HRESULT (STDMETHODCALLTYPE* StopAnimationGroup)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionObject2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionObject2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionObject2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject2_get_Comment(This, value) \
    ((This)->lpVtbl->get_Comment(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject2_put_Comment(This, value) \
    ((This)->lpVtbl->put_Comment(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject2_get_ImplicitAnimations(This, value) \
    ((This)->lpVtbl->get_ImplicitAnimations(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject2_put_ImplicitAnimations(This, value) \
    ((This)->lpVtbl->put_ImplicitAnimations(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject2_StartAnimationGroup(This, value) \
    ((This)->lpVtbl->StartAnimationGroup(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject2_StopAnimationGroup(This, value) \
    ((This)->lpVtbl->StopAnimationGroup(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionObject2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionObject3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionObject
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionObject3[] = L"Windows.UI.Composition.ICompositionObject3";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionObject3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DispatcherQueue)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject3* This,
        __x_ABI_CWindows_CSystem_CIDispatcherQueue** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionObject3Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionObject3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionObject3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject3_get_DispatcherQueue(This, value) \
    ((This)->lpVtbl->get_DispatcherQueue(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionObject3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositionObject4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionObject
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionObject4[] = L"Windows.UI.Composition.ICompositionObject4";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionObject4Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject4* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject4* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject4* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject4* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject4* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* TryGetAnimationController)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject4* This,
        HSTRING propertyName,
        __x_ABI_CWindows_CUI_CComposition_CIAnimationController** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionObject4Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionObject4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionObject4Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject4_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject4_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject4_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject4_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject4_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject4_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObject4_TryGetAnimationController(This, propertyName, result) \
    ((This)->lpVtbl->TryGetAnimationController(This, propertyName, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionObject4;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionObjectFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionObject
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionObjectFactory[] = L"Windows.UI.Composition.ICompositionObjectFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionObjectStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionObject
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionObjectStatics[] = L"Windows.UI.Composition.ICompositionObjectStatics";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* StartAnimationWithIAnimationObject)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics* This,
        __x_ABI_CWindows_CUI_CComposition_CIAnimationObject* target,
        HSTRING propertyName,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* animation);
    HRESULT (STDMETHODCALLTYPE* StartAnimationGroupWithIAnimationObject)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics* This,
        __x_ABI_CWindows_CUI_CComposition_CIAnimationObject* target,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* animation);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStaticsVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_StartAnimationWithIAnimationObject(This, target, propertyName, animation) \
    ((This)->lpVtbl->StartAnimationWithIAnimationObject(This, target, propertyName, animation))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_StartAnimationGroupWithIAnimationObject(This, target, animation) \
    ((This)->lpVtbl->StartAnimationGroupWithIAnimationObject(This, target, animation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Composition.ICompositionPath
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionPath
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPath_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPath_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionPath[] = L"Windows.UI.Composition.ICompositionPath";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionPathVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionPath* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionPath* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionPath* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionPath* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionPath* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionPath* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionPathVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionPath
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionPathVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPath_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPath_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPath_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPath_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPath_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPath_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionPath;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPath_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionPathFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionPath
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionPathFactory[] = L"Windows.UI.Composition.ICompositionPathFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory* This,
        __x_ABI_CWindows_CGraphics_CIGeometrySource2D* source,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPath** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_Create(This, source, value) \
    ((This)->lpVtbl->Create(This, source, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionPathGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionPathGeometry
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionPathGeometry[] = L"Windows.UI.Composition.ICompositionPathGeometry";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Path)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPath** value);
    HRESULT (STDMETHODCALLTYPE* put_Path)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPath* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_get_Path(This, value) \
    ((This)->lpVtbl->get_Path(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_put_Path(This, value) \
    ((This)->lpVtbl->put_Path(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionProjectedShadow
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionProjectedShadow
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionProjectedShadow[] = L"Windows.UI.Composition.ICompositionProjectedShadow";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BlurRadiusMultiplier)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlurRadiusMultiplier)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Casters)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_LightSource)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionLight** value);
    HRESULT (STDMETHODCALLTYPE* put_LightSource)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionLight* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxBlurRadius)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxBlurRadius)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_MinBlurRadius)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MinBlurRadius)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Receivers)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_get_BlurRadiusMultiplier(This, value) \
    ((This)->lpVtbl->get_BlurRadiusMultiplier(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_put_BlurRadiusMultiplier(This, value) \
    ((This)->lpVtbl->put_BlurRadiusMultiplier(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_get_Casters(This, value) \
    ((This)->lpVtbl->get_Casters(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_get_LightSource(This, value) \
    ((This)->lpVtbl->get_LightSource(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_put_LightSource(This, value) \
    ((This)->lpVtbl->put_LightSource(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_get_MaxBlurRadius(This, value) \
    ((This)->lpVtbl->get_MaxBlurRadius(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_put_MaxBlurRadius(This, value) \
    ((This)->lpVtbl->put_MaxBlurRadius(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_get_MinBlurRadius(This, value) \
    ((This)->lpVtbl->get_MinBlurRadius(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_put_MinBlurRadius(This, value) \
    ((This)->lpVtbl->put_MinBlurRadius(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_get_Receivers(This, value) \
    ((This)->lpVtbl->get_Receivers(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionProjectedShadowCaster
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionProjectedShadowCaster
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionProjectedShadowCaster[] = L"Windows.UI.Composition.ICompositionProjectedShadowCaster";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Brush)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Brush)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CastingVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_CastingVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_get_Brush(This, value) \
    ((This)->lpVtbl->get_Brush(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_put_Brush(This, value) \
    ((This)->lpVtbl->put_Brush(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_get_CastingVisual(This, value) \
    ((This)->lpVtbl->get_CastingVisual(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_put_CastingVisual(This, value) \
    ((This)->lpVtbl->put_CastingVisual(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionProjectedShadowCasterCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionProjectedShadowCasterCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionProjectedShadowCasterCollection[] = L"Windows.UI.Composition.ICompositionProjectedShadowCasterCollection";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Count)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* InsertAbove)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* newCaster,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* reference);
    HRESULT (STDMETHODCALLTYPE* InsertAtBottom)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* newCaster);
    HRESULT (STDMETHODCALLTYPE* InsertAtTop)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* newCaster);
    HRESULT (STDMETHODCALLTYPE* InsertBelow)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* newCaster,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* reference);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* caster);
    HRESULT (STDMETHODCALLTYPE* RemoveAll)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_get_Count(This, value) \
    ((This)->lpVtbl->get_Count(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_InsertAbove(This, newCaster, reference) \
    ((This)->lpVtbl->InsertAbove(This, newCaster, reference))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_InsertAtBottom(This, newCaster) \
    ((This)->lpVtbl->InsertAtBottom(This, newCaster))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_InsertAtTop(This, newCaster) \
    ((This)->lpVtbl->InsertAtTop(This, newCaster))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_InsertBelow(This, newCaster, reference) \
    ((This)->lpVtbl->InsertBelow(This, newCaster, reference))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_Remove(This, caster) \
    ((This)->lpVtbl->Remove(This, caster))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_RemoveAll(This) \
    ((This)->lpVtbl->RemoveAll(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionProjectedShadowCasterCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionProjectedShadowCasterCollectionStatics[] = L"Windows.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MaxRespectedCasters)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics* This,
        INT32* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStaticsVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_get_MaxRespectedCasters(This, value) \
    ((This)->lpVtbl->get_MaxRespectedCasters(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionProjectedShadowReceiver
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionProjectedShadowReceiver
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionProjectedShadowReceiver[] = L"Windows.UI.Composition.ICompositionProjectedShadowReceiver";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ReceivingVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_ReceivingVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_get_ReceivingVisual(This, value) \
    ((This)->lpVtbl->get_ReceivingVisual(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_put_ReceivingVisual(This, value) \
    ((This)->lpVtbl->put_ReceivingVisual(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionProjectedShadowReceiverUnorderedCollection[] = L"Windows.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Add)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* value);
    HRESULT (STDMETHODCALLTYPE* get_Count)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAll)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollectionVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_Add(This, value) \
    ((This)->lpVtbl->Add(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_get_Count(This, value) \
    ((This)->lpVtbl->get_Count(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_Remove(This, value) \
    ((This)->lpVtbl->Remove(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_RemoveAll(This) \
    ((This)->lpVtbl->RemoveAll(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionPropertySet
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionPropertySet
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionPropertySet[] = L"Windows.UI.Composition.ICompositionPropertySet";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySetVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* InsertColor)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* InsertMatrix3x2)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value);
    HRESULT (STDMETHODCALLTYPE* InsertMatrix4x4)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 value);
    HRESULT (STDMETHODCALLTYPE* InsertQuaternion)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion value);
    HRESULT (STDMETHODCALLTYPE* InsertScalar)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* InsertVector2)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* InsertVector3)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* InsertVector4)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* TryGetColor)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CUI_CColor* value,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus* result);
    HRESULT (STDMETHODCALLTYPE* TryGetMatrix3x2)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2* value,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus* result);
    HRESULT (STDMETHODCALLTYPE* TryGetMatrix4x4)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4* value,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus* result);
    HRESULT (STDMETHODCALLTYPE* TryGetQuaternion)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion* value,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus* result);
    HRESULT (STDMETHODCALLTYPE* TryGetScalar)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        FLOAT* value,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus* result);
    HRESULT (STDMETHODCALLTYPE* TryGetVector2)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus* result);
    HRESULT (STDMETHODCALLTYPE* TryGetVector3)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus* result);
    HRESULT (STDMETHODCALLTYPE* TryGetVector4)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus* result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySetVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySetVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_InsertColor(This, propertyName, value) \
    ((This)->lpVtbl->InsertColor(This, propertyName, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_InsertMatrix3x2(This, propertyName, value) \
    ((This)->lpVtbl->InsertMatrix3x2(This, propertyName, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_InsertMatrix4x4(This, propertyName, value) \
    ((This)->lpVtbl->InsertMatrix4x4(This, propertyName, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_InsertQuaternion(This, propertyName, value) \
    ((This)->lpVtbl->InsertQuaternion(This, propertyName, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_InsertScalar(This, propertyName, value) \
    ((This)->lpVtbl->InsertScalar(This, propertyName, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_InsertVector2(This, propertyName, value) \
    ((This)->lpVtbl->InsertVector2(This, propertyName, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_InsertVector3(This, propertyName, value) \
    ((This)->lpVtbl->InsertVector3(This, propertyName, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_InsertVector4(This, propertyName, value) \
    ((This)->lpVtbl->InsertVector4(This, propertyName, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_TryGetColor(This, propertyName, value, result) \
    ((This)->lpVtbl->TryGetColor(This, propertyName, value, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_TryGetMatrix3x2(This, propertyName, value, result) \
    ((This)->lpVtbl->TryGetMatrix3x2(This, propertyName, value, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_TryGetMatrix4x4(This, propertyName, value, result) \
    ((This)->lpVtbl->TryGetMatrix4x4(This, propertyName, value, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_TryGetQuaternion(This, propertyName, value, result) \
    ((This)->lpVtbl->TryGetQuaternion(This, propertyName, value, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_TryGetScalar(This, propertyName, value, result) \
    ((This)->lpVtbl->TryGetScalar(This, propertyName, value, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_TryGetVector2(This, propertyName, value, result) \
    ((This)->lpVtbl->TryGetVector2(This, propertyName, value, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_TryGetVector3(This, propertyName, value, result) \
    ((This)->lpVtbl->TryGetVector3(This, propertyName, value, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_TryGetVector4(This, propertyName, value, result) \
    ((This)->lpVtbl->TryGetVector4(This, propertyName, value, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionPropertySet2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionPropertySet
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionPropertySet2[] = L"Windows.UI.Composition.ICompositionPropertySet2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* InsertBoolean)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2* This,
        HSTRING propertyName,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* TryGetBoolean)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2* This,
        HSTRING propertyName,
        boolean* value,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus* result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_InsertBoolean(This, propertyName, value) \
    ((This)->lpVtbl->InsertBoolean(This, propertyName, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_TryGetBoolean(This, propertyName, value, result) \
    ((This)->lpVtbl->TryGetBoolean(This, propertyName, value, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionRadialGradientBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionRadialGradientBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionRadialGradientBrush[] = L"Windows.UI.Composition.ICompositionRadialGradientBrush";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_EllipseCenter)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_EllipseCenter)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_EllipseRadius)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_EllipseRadius)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_GradientOriginOffset)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_GradientOriginOffset)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrushVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_get_EllipseCenter(This, value) \
    ((This)->lpVtbl->get_EllipseCenter(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_put_EllipseCenter(This, value) \
    ((This)->lpVtbl->put_EllipseCenter(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_get_EllipseRadius(This, value) \
    ((This)->lpVtbl->get_EllipseRadius(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_put_EllipseRadius(This, value) \
    ((This)->lpVtbl->put_EllipseRadius(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_get_GradientOriginOffset(This, value) \
    ((This)->lpVtbl->get_GradientOriginOffset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_put_GradientOriginOffset(This, value) \
    ((This)->lpVtbl->put_GradientOriginOffset(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionRectangleGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionRectangleGeometry
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionRectangleGeometry[] = L"Windows.UI.Composition.ICompositionRectangleGeometry";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Size)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_get_Offset(This, value) \
    ((This)->lpVtbl->get_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_put_Offset(This, value) \
    ((This)->lpVtbl->put_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_get_Size(This, value) \
    ((This)->lpVtbl->get_Size(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_put_Size(This, value) \
    ((This)->lpVtbl->put_Size(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionRoundedRectangleGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionRoundedRectangleGeometry
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionRoundedRectangleGeometry[] = L"Windows.UI.Composition.ICompositionRoundedRectangleGeometry";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CornerRadius)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_CornerRadius)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Size)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_get_CornerRadius(This, value) \
    ((This)->lpVtbl->get_CornerRadius(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_put_CornerRadius(This, value) \
    ((This)->lpVtbl->put_CornerRadius(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_get_Offset(This, value) \
    ((This)->lpVtbl->get_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_put_Offset(This, value) \
    ((This)->lpVtbl->put_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_get_Size(This, value) \
    ((This)->lpVtbl->get_Size(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_put_Size(This, value) \
    ((This)->lpVtbl->put_Size(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionScopedBatch
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionScopedBatch
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionScopedBatch[] = L"Windows.UI.Composition.ICompositionScopedBatch";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatchVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsActive)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsEnded)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* End)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This);
    HRESULT (STDMETHODCALLTYPE* Resume)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This);
    HRESULT (STDMETHODCALLTYPE* Suspend)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This);
    HRESULT (STDMETHODCALLTYPE* add_Completed)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This,
        __FITypedEventHandler_2_IInspectable_Windows__CUI__CComposition__CCompositionBatchCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Completed)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatchVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatchVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_get_IsActive(This, value) \
    ((This)->lpVtbl->get_IsActive(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_get_IsEnded(This, value) \
    ((This)->lpVtbl->get_IsEnded(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_End(This) \
    ((This)->lpVtbl->End(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_Resume(This) \
    ((This)->lpVtbl->Resume(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_Suspend(This) \
    ((This)->lpVtbl->Suspend(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_add_Completed(This, handler, token) \
    ((This)->lpVtbl->add_Completed(This, handler, token))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_remove_Completed(This, token) \
    ((This)->lpVtbl->remove_Completed(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionShadow
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionShadow
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShadow_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionShadow[] = L"Windows.UI.Composition.ICompositionShadow";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionShadowVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadow* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadow* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadow* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadow* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadow* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadow* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionShadowVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionShadow
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionShadowVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShadow_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShadow_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShadow_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShadow_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShadow_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShadow_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionShadow;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShadow_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionShadowFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionShadow
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionShadowFactory[] = L"Windows.UI.Composition.ICompositionShadowFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionShape
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionShape
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShape_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShape_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionShape[] = L"Windows.UI.Composition.ICompositionShape";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionShapeVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Scale)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Scale)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2* value);
    HRESULT (STDMETHODCALLTYPE* put_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionShapeVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionShape
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionShapeVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape_get_CenterPoint(This, value) \
    ((This)->lpVtbl->get_CenterPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape_put_CenterPoint(This, value) \
    ((This)->lpVtbl->put_CenterPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape_get_Offset(This, value) \
    ((This)->lpVtbl->get_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape_put_Offset(This, value) \
    ((This)->lpVtbl->put_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape_get_RotationAngle(This, value) \
    ((This)->lpVtbl->get_RotationAngle(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape_put_RotationAngle(This, value) \
    ((This)->lpVtbl->put_RotationAngle(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape_get_RotationAngleInDegrees(This, value) \
    ((This)->lpVtbl->get_RotationAngleInDegrees(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape_put_RotationAngleInDegrees(This, value) \
    ((This)->lpVtbl->put_RotationAngleInDegrees(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape_get_Scale(This, value) \
    ((This)->lpVtbl->get_Scale(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape_put_Scale(This, value) \
    ((This)->lpVtbl->put_Scale(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape_get_TransformMatrix(This, value) \
    ((This)->lpVtbl->get_TransformMatrix(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShape_put_TransformMatrix(This, value) \
    ((This)->lpVtbl->put_TransformMatrix(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionShape;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShape_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionShapeFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionShape
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionShapeFactory[] = L"Windows.UI.Composition.ICompositionShapeFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionSpriteShape
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionSpriteShape
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionSpriteShape[] = L"Windows.UI.Composition.ICompositionSpriteShape";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShapeVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FillBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_FillBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_Geometry)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry** value);
    HRESULT (STDMETHODCALLTYPE* put_Geometry)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStrokeNonScaling)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsStrokeNonScaling)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StrokeBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_StrokeBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_StrokeDashArray)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        __FIVector_1_float** value);
    HRESULT (STDMETHODCALLTYPE* get_StrokeDashCap)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap* value);
    HRESULT (STDMETHODCALLTYPE* put_StrokeDashCap)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap value);
    HRESULT (STDMETHODCALLTYPE* get_StrokeDashOffset)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_StrokeDashOffset)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_StrokeEndCap)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap* value);
    HRESULT (STDMETHODCALLTYPE* put_StrokeEndCap)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap value);
    HRESULT (STDMETHODCALLTYPE* get_StrokeLineJoin)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeLineJoin* value);
    HRESULT (STDMETHODCALLTYPE* put_StrokeLineJoin)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeLineJoin value);
    HRESULT (STDMETHODCALLTYPE* get_StrokeMiterLimit)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_StrokeMiterLimit)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_StrokeStartCap)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap* value);
    HRESULT (STDMETHODCALLTYPE* put_StrokeStartCap)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap value);
    HRESULT (STDMETHODCALLTYPE* get_StrokeThickness)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_StrokeThickness)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShapeVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShapeVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_get_FillBrush(This, value) \
    ((This)->lpVtbl->get_FillBrush(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_put_FillBrush(This, value) \
    ((This)->lpVtbl->put_FillBrush(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_get_Geometry(This, value) \
    ((This)->lpVtbl->get_Geometry(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_put_Geometry(This, value) \
    ((This)->lpVtbl->put_Geometry(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_get_IsStrokeNonScaling(This, value) \
    ((This)->lpVtbl->get_IsStrokeNonScaling(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_put_IsStrokeNonScaling(This, value) \
    ((This)->lpVtbl->put_IsStrokeNonScaling(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_get_StrokeBrush(This, value) \
    ((This)->lpVtbl->get_StrokeBrush(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_put_StrokeBrush(This, value) \
    ((This)->lpVtbl->put_StrokeBrush(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_get_StrokeDashArray(This, value) \
    ((This)->lpVtbl->get_StrokeDashArray(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_get_StrokeDashCap(This, value) \
    ((This)->lpVtbl->get_StrokeDashCap(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_put_StrokeDashCap(This, value) \
    ((This)->lpVtbl->put_StrokeDashCap(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_get_StrokeDashOffset(This, value) \
    ((This)->lpVtbl->get_StrokeDashOffset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_put_StrokeDashOffset(This, value) \
    ((This)->lpVtbl->put_StrokeDashOffset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_get_StrokeEndCap(This, value) \
    ((This)->lpVtbl->get_StrokeEndCap(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_put_StrokeEndCap(This, value) \
    ((This)->lpVtbl->put_StrokeEndCap(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_get_StrokeLineJoin(This, value) \
    ((This)->lpVtbl->get_StrokeLineJoin(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_put_StrokeLineJoin(This, value) \
    ((This)->lpVtbl->put_StrokeLineJoin(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_get_StrokeMiterLimit(This, value) \
    ((This)->lpVtbl->get_StrokeMiterLimit(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_put_StrokeMiterLimit(This, value) \
    ((This)->lpVtbl->put_StrokeMiterLimit(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_get_StrokeStartCap(This, value) \
    ((This)->lpVtbl->get_StrokeStartCap(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_put_StrokeStartCap(This, value) \
    ((This)->lpVtbl->put_StrokeStartCap(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_get_StrokeThickness(This, value) \
    ((This)->lpVtbl->get_StrokeThickness(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_put_StrokeThickness(This, value) \
    ((This)->lpVtbl->put_StrokeThickness(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurface_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionSurface[] = L"Windows.UI.Composition.ICompositionSurface";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurface* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurface* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurface* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurface* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurface* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurface* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionSurface
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurface_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurface_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurface_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurface_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurface_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurface_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionSurface;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurface_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionSurfaceBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionSurfaceBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionSurfaceBrush[] = L"Windows.UI.Composition.ICompositionSurfaceBrush";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BitmapInterpolationMode)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BitmapInterpolationMode)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalAlignmentRatio)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalAlignmentRatio)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Stretch)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStretch* value);
    HRESULT (STDMETHODCALLTYPE* put_Stretch)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStretch value);
    HRESULT (STDMETHODCALLTYPE* get_Surface)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionSurface** value);
    HRESULT (STDMETHODCALLTYPE* put_Surface)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionSurface* value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalAlignmentRatio)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalAlignmentRatio)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrushVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_get_BitmapInterpolationMode(This, value) \
    ((This)->lpVtbl->get_BitmapInterpolationMode(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_put_BitmapInterpolationMode(This, value) \
    ((This)->lpVtbl->put_BitmapInterpolationMode(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_get_HorizontalAlignmentRatio(This, value) \
    ((This)->lpVtbl->get_HorizontalAlignmentRatio(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_put_HorizontalAlignmentRatio(This, value) \
    ((This)->lpVtbl->put_HorizontalAlignmentRatio(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_get_Stretch(This, value) \
    ((This)->lpVtbl->get_Stretch(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_put_Stretch(This, value) \
    ((This)->lpVtbl->put_Stretch(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_get_Surface(This, value) \
    ((This)->lpVtbl->get_Surface(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_put_Surface(This, value) \
    ((This)->lpVtbl->put_Surface(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_get_VerticalAlignmentRatio(This, value) \
    ((This)->lpVtbl->get_VerticalAlignmentRatio(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_put_VerticalAlignmentRatio(This, value) \
    ((This)->lpVtbl->put_VerticalAlignmentRatio(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionSurfaceBrush2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionSurfaceBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionSurfaceBrush2[] = L"Windows.UI.Composition.ICompositionSurfaceBrush2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AnchorPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_AnchorPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Scale)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Scale)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2* value);
    HRESULT (STDMETHODCALLTYPE* put_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_get_AnchorPoint(This, value) \
    ((This)->lpVtbl->get_AnchorPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_put_AnchorPoint(This, value) \
    ((This)->lpVtbl->put_AnchorPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_get_CenterPoint(This, value) \
    ((This)->lpVtbl->get_CenterPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_put_CenterPoint(This, value) \
    ((This)->lpVtbl->put_CenterPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_get_Offset(This, value) \
    ((This)->lpVtbl->get_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_put_Offset(This, value) \
    ((This)->lpVtbl->put_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_get_RotationAngle(This, value) \
    ((This)->lpVtbl->get_RotationAngle(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_put_RotationAngle(This, value) \
    ((This)->lpVtbl->put_RotationAngle(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_get_RotationAngleInDegrees(This, value) \
    ((This)->lpVtbl->get_RotationAngleInDegrees(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_put_RotationAngleInDegrees(This, value) \
    ((This)->lpVtbl->put_RotationAngleInDegrees(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_get_Scale(This, value) \
    ((This)->lpVtbl->get_Scale(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_put_Scale(This, value) \
    ((This)->lpVtbl->put_Scale(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_get_TransformMatrix(This, value) \
    ((This)->lpVtbl->get_TransformMatrix(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_put_TransformMatrix(This, value) \
    ((This)->lpVtbl->put_TransformMatrix(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositionSurfaceBrush3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionSurfaceBrush
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionSurfaceBrush3[] = L"Windows.UI.Composition.ICompositionSurfaceBrush3";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SnapToPixels)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SnapToPixels)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3* This,
        boolean value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_get_SnapToPixels(This, value) \
    ((This)->lpVtbl->get_SnapToPixels(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_put_SnapToPixels(This, value) \
    ((This)->lpVtbl->put_SnapToPixels(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionTarget
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionTarget
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTarget_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTarget_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionTarget[] = L"Windows.UI.Composition.ICompositionTarget";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionTargetVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionTarget* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionTarget* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionTarget* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionTarget* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionTarget* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionTarget* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Root)(__x_ABI_CWindows_CUI_CComposition_CICompositionTarget* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_Root)(__x_ABI_CWindows_CUI_CComposition_CICompositionTarget* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionTargetVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionTarget
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionTargetVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTarget_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTarget_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTarget_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTarget_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTarget_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTarget_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTarget_get_Root(This, value) \
    ((This)->lpVtbl->get_Root(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTarget_put_Root(This, value) \
    ((This)->lpVtbl->put_Root(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionTarget;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTarget_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositionTargetFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionTarget
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionTargetFactory[] = L"Windows.UI.Composition.ICompositionTargetFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositionTransform
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionTransform
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTransform_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionTransform[] = L"Windows.UI.Composition.ICompositionTransform";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionTransformVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransform* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransform* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransform* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransform* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransform* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransform* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionTransformVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionTransform
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionTransformVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTransform_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTransform_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTransform_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTransform_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTransform_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTransform_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionTransform;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTransform_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionTransformFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionTransform
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionTransformFactory[] = L"Windows.UI.Composition.ICompositionTransformFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositionViewBox
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionViewBox
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionViewBox[] = L"Windows.UI.Composition.ICompositionViewBox";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionViewBoxVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalAlignmentRatio)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalAlignmentRatio)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Size)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Stretch)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStretch* value);
    HRESULT (STDMETHODCALLTYPE* put_Stretch)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStretch value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalAlignmentRatio)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalAlignmentRatio)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionViewBoxVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionViewBoxVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_get_HorizontalAlignmentRatio(This, value) \
    ((This)->lpVtbl->get_HorizontalAlignmentRatio(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_put_HorizontalAlignmentRatio(This, value) \
    ((This)->lpVtbl->put_HorizontalAlignmentRatio(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_get_Offset(This, value) \
    ((This)->lpVtbl->get_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_put_Offset(This, value) \
    ((This)->lpVtbl->put_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_get_Size(This, value) \
    ((This)->lpVtbl->get_Size(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_put_Size(This, value) \
    ((This)->lpVtbl->put_Size(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_get_Stretch(This, value) \
    ((This)->lpVtbl->get_Stretch(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_put_Stretch(This, value) \
    ((This)->lpVtbl->put_Stretch(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_get_VerticalAlignmentRatio(This, value) \
    ((This)->lpVtbl->get_VerticalAlignmentRatio(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_put_VerticalAlignmentRatio(This, value) \
    ((This)->lpVtbl->put_VerticalAlignmentRatio(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionViewBox;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositionVirtualDrawingSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionVirtualDrawingSurface
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionVirtualDrawingSurface[] = L"Windows.UI.Composition.ICompositionVirtualDrawingSurface";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Trim)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface* This,
        UINT32 rectsLength,
        struct __x_ABI_CWindows_CGraphics_CRectInt32* rects);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_Trim(This, rectsLength, rects) \
    ((This)->lpVtbl->Trim(This, rectsLength, rects))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.ICompositionVirtualDrawingSurfaceFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionVirtualDrawingSurface
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionVirtualDrawingSurfaceFactory[] = L"Windows.UI.Composition.ICompositionVirtualDrawingSurfaceFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.ICompositionVisualSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CompositionVisualSurface
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositionVisualSurface[] = L"Windows.UI.Composition.ICompositionVisualSurface";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurfaceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SourceVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_SourceVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* value);
    HRESULT (STDMETHODCALLTYPE* get_SourceOffset)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceOffset)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_SourceSize)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceSize)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurfaceVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurfaceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_get_SourceVisual(This, value) \
    ((This)->lpVtbl->get_SourceVisual(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_put_SourceVisual(This, value) \
    ((This)->lpVtbl->put_SourceVisual(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_get_SourceOffset(This, value) \
    ((This)->lpVtbl->get_SourceOffset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_put_SourceOffset(This, value) \
    ((This)->lpVtbl->put_SourceOffset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_get_SourceSize(This, value) \
    ((This)->lpVtbl->get_SourceSize(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_put_SourceSize(This, value) \
    ((This)->lpVtbl->put_SourceSize(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositor
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositor[] = L"Windows.UI.Composition.ICompositor";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositorVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateColorKeyFrameAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateColorBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush** result);
    HRESULT (STDMETHODCALLTYPE* CreateColorBrushWithColor)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        struct __x_ABI_CWindows_CUI_CColor color,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush** result);
    HRESULT (STDMETHODCALLTYPE* CreateContainerVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CIContainerVisual** result);
    HRESULT (STDMETHODCALLTYPE* CreateCubicBezierEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 controlPoint1,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 controlPoint2,
        __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction** result);
    HRESULT (STDMETHODCALLTYPE* CreateEffectFactory)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect* graphicsEffect,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory** result);
    HRESULT (STDMETHODCALLTYPE* CreateEffectFactoryWithProperties)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect* graphicsEffect,
        __FIIterable_1_HSTRING* animatableProperties,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory** result);
    HRESULT (STDMETHODCALLTYPE* CreateExpressionAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateExpressionAnimationWithExpression)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        HSTRING expression,
        __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateInsetClip)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CIInsetClip** result);
    HRESULT (STDMETHODCALLTYPE* CreateInsetClipWithInsets)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        FLOAT leftInset,
        FLOAT topInset,
        FLOAT rightInset,
        FLOAT bottomInset,
        __x_ABI_CWindows_CUI_CComposition_CIInsetClip** result);
    HRESULT (STDMETHODCALLTYPE* CreateLinearEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction** result);
    HRESULT (STDMETHODCALLTYPE* CreatePropertySet)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet** result);
    HRESULT (STDMETHODCALLTYPE* CreateQuaternionKeyFrameAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateScalarKeyFrameAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateScopedBatch)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionBatchTypes batchType,
        __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch** result);
    HRESULT (STDMETHODCALLTYPE* CreateSpriteVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CISpriteVisual** result);
    HRESULT (STDMETHODCALLTYPE* CreateSurfaceBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush** result);
    HRESULT (STDMETHODCALLTYPE* CreateSurfaceBrushWithSurface)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionSurface* surface,
        __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush** result);
    HRESULT (STDMETHODCALLTYPE* CreateTargetForCurrentView)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionTarget** result);
    HRESULT (STDMETHODCALLTYPE* CreateVector2KeyFrameAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateVector3KeyFrameAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateVector4KeyFrameAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation** result);
    HRESULT (STDMETHODCALLTYPE* GetCommitBatch)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionBatchTypes batchType,
        __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositorVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositor
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositorVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateColorKeyFrameAnimation(This, result) \
    ((This)->lpVtbl->CreateColorKeyFrameAnimation(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateColorBrush(This, result) \
    ((This)->lpVtbl->CreateColorBrush(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateColorBrushWithColor(This, color, result) \
    ((This)->lpVtbl->CreateColorBrushWithColor(This, color, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateContainerVisual(This, result) \
    ((This)->lpVtbl->CreateContainerVisual(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateCubicBezierEasingFunction(This, controlPoint1, controlPoint2, result) \
    ((This)->lpVtbl->CreateCubicBezierEasingFunction(This, controlPoint1, controlPoint2, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateEffectFactory(This, graphicsEffect, result) \
    ((This)->lpVtbl->CreateEffectFactory(This, graphicsEffect, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateEffectFactoryWithProperties(This, graphicsEffect, animatableProperties, result) \
    ((This)->lpVtbl->CreateEffectFactoryWithProperties(This, graphicsEffect, animatableProperties, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateExpressionAnimation(This, result) \
    ((This)->lpVtbl->CreateExpressionAnimation(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateExpressionAnimationWithExpression(This, expression, result) \
    ((This)->lpVtbl->CreateExpressionAnimationWithExpression(This, expression, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateInsetClip(This, result) \
    ((This)->lpVtbl->CreateInsetClip(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateInsetClipWithInsets(This, leftInset, topInset, rightInset, bottomInset, result) \
    ((This)->lpVtbl->CreateInsetClipWithInsets(This, leftInset, topInset, rightInset, bottomInset, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateLinearEasingFunction(This, result) \
    ((This)->lpVtbl->CreateLinearEasingFunction(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreatePropertySet(This, result) \
    ((This)->lpVtbl->CreatePropertySet(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateQuaternionKeyFrameAnimation(This, result) \
    ((This)->lpVtbl->CreateQuaternionKeyFrameAnimation(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateScalarKeyFrameAnimation(This, result) \
    ((This)->lpVtbl->CreateScalarKeyFrameAnimation(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateScopedBatch(This, batchType, result) \
    ((This)->lpVtbl->CreateScopedBatch(This, batchType, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateSpriteVisual(This, result) \
    ((This)->lpVtbl->CreateSpriteVisual(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateSurfaceBrush(This, result) \
    ((This)->lpVtbl->CreateSurfaceBrush(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateSurfaceBrushWithSurface(This, surface, result) \
    ((This)->lpVtbl->CreateSurfaceBrushWithSurface(This, surface, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateTargetForCurrentView(This, result) \
    ((This)->lpVtbl->CreateTargetForCurrentView(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateVector2KeyFrameAnimation(This, result) \
    ((This)->lpVtbl->CreateVector2KeyFrameAnimation(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateVector3KeyFrameAnimation(This, result) \
    ((This)->lpVtbl->CreateVector3KeyFrameAnimation(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_CreateVector4KeyFrameAnimation(This, result) \
    ((This)->lpVtbl->CreateVector4KeyFrameAnimation(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor_GetCommitBatch(This, batchType, result) \
    ((This)->lpVtbl->GetCommitBatch(This, batchType, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositor;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICompositor2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositor2[] = L"Windows.UI.Composition.ICompositor2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositor2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateAmbientLight)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CIAmbientLight** result);
    HRESULT (STDMETHODCALLTYPE* CreateAnimationGroup)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup** result);
    HRESULT (STDMETHODCALLTYPE* CreateBackdropBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush** result);
    HRESULT (STDMETHODCALLTYPE* CreateDistantLight)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CIDistantLight** result);
    HRESULT (STDMETHODCALLTYPE* CreateDropShadow)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CIDropShadow** result);
    HRESULT (STDMETHODCALLTYPE* CreateImplicitAnimationCollection)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection** result);
    HRESULT (STDMETHODCALLTYPE* CreateLayerVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CILayerVisual** result);
    HRESULT (STDMETHODCALLTYPE* CreateMaskBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush** result);
    HRESULT (STDMETHODCALLTYPE* CreateNineGridBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush** result);
    HRESULT (STDMETHODCALLTYPE* CreatePointLight)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CIPointLight** result);
    HRESULT (STDMETHODCALLTYPE* CreateSpotLight)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CISpotLight** result);
    HRESULT (STDMETHODCALLTYPE* CreateStepEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction** result);
    HRESULT (STDMETHODCALLTYPE* CreateStepEasingFunctionWithStepCount)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        INT32 stepCount,
        __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositor2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositor2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositor2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_CreateAmbientLight(This, result) \
    ((This)->lpVtbl->CreateAmbientLight(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_CreateAnimationGroup(This, result) \
    ((This)->lpVtbl->CreateAnimationGroup(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_CreateBackdropBrush(This, result) \
    ((This)->lpVtbl->CreateBackdropBrush(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_CreateDistantLight(This, result) \
    ((This)->lpVtbl->CreateDistantLight(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_CreateDropShadow(This, result) \
    ((This)->lpVtbl->CreateDropShadow(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_CreateImplicitAnimationCollection(This, result) \
    ((This)->lpVtbl->CreateImplicitAnimationCollection(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_CreateLayerVisual(This, result) \
    ((This)->lpVtbl->CreateLayerVisual(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_CreateMaskBrush(This, result) \
    ((This)->lpVtbl->CreateMaskBrush(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_CreateNineGridBrush(This, result) \
    ((This)->lpVtbl->CreateNineGridBrush(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_CreatePointLight(This, result) \
    ((This)->lpVtbl->CreatePointLight(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_CreateSpotLight(This, result) \
    ((This)->lpVtbl->CreateSpotLight(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_CreateStepEasingFunction(This, result) \
    ((This)->lpVtbl->CreateStepEasingFunction(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor2_CreateStepEasingFunctionWithStepCount(This, stepCount, result) \
    ((This)->lpVtbl->CreateStepEasingFunctionWithStepCount(This, stepCount, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositor2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ICompositor3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositor3[] = L"Windows.UI.Composition.ICompositor3";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositor3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositor3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositor3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositor3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositor3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositor3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositor3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateHostBackdropBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositor3* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositor3Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositor3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositor3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositor3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor3_CreateHostBackdropBrush(This, result) \
    ((This)->lpVtbl->CreateHostBackdropBrush(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositor3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.ICompositor4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositor4[] = L"Windows.UI.Composition.ICompositor4";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositor4Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateColorGradientStop)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* CreateColorGradientStopWithOffsetAndColor)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
        FLOAT offset,
        struct __x_ABI_CWindows_CUI_CColor color,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* CreateLinearGradientBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush** result);
    HRESULT (STDMETHODCALLTYPE* CreateSpringScalarAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
        __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateSpringVector2Animation)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
        __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateSpringVector3Animation)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
        __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositor4Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositor4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositor4Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositor4_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor4_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor4_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor4_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor4_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor4_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor4_CreateColorGradientStop(This, result) \
    ((This)->lpVtbl->CreateColorGradientStop(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor4_CreateColorGradientStopWithOffsetAndColor(This, offset, color, result) \
    ((This)->lpVtbl->CreateColorGradientStopWithOffsetAndColor(This, offset, color, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor4_CreateLinearGradientBrush(This, result) \
    ((This)->lpVtbl->CreateLinearGradientBrush(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor4_CreateSpringScalarAnimation(This, result) \
    ((This)->lpVtbl->CreateSpringScalarAnimation(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor4_CreateSpringVector2Animation(This, result) \
    ((This)->lpVtbl->CreateSpringVector2Animation(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor4_CreateSpringVector3Animation(This, result) \
    ((This)->lpVtbl->CreateSpringVector3Animation(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositor4;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ICompositor5
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositor5[] = L"Windows.UI.Composition.ICompositor5";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositor5Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Comment)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Comment)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_GlobalPlaybackRate)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_GlobalPlaybackRate)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* CreateBounceScalarAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateBounceVector2Animation)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateBounceVector3Animation)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateContainerShape)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape** result);
    HRESULT (STDMETHODCALLTYPE* CreateEllipseGeometry)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry** result);
    HRESULT (STDMETHODCALLTYPE* CreateLineGeometry)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry** result);
    HRESULT (STDMETHODCALLTYPE* CreatePathGeometry)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry** result);
    HRESULT (STDMETHODCALLTYPE* CreatePathGeometryWithPath)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPath* path,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry** result);
    HRESULT (STDMETHODCALLTYPE* CreatePathKeyFrameAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateRectangleGeometry)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry** result);
    HRESULT (STDMETHODCALLTYPE* CreateRoundedRectangleGeometry)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry** result);
    HRESULT (STDMETHODCALLTYPE* CreateShapeVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CIShapeVisual** result);
    HRESULT (STDMETHODCALLTYPE* CreateSpriteShape)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape** result);
    HRESULT (STDMETHODCALLTYPE* CreateSpriteShapeWithGeometry)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* geometry,
        __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape** result);
    HRESULT (STDMETHODCALLTYPE* CreateViewBox)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox** result);
    HRESULT (STDMETHODCALLTYPE* RequestCommitAsync)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositor5Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositor5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositor5Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_get_Comment(This, value) \
    ((This)->lpVtbl->get_Comment(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_put_Comment(This, value) \
    ((This)->lpVtbl->put_Comment(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_get_GlobalPlaybackRate(This, value) \
    ((This)->lpVtbl->get_GlobalPlaybackRate(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_put_GlobalPlaybackRate(This, value) \
    ((This)->lpVtbl->put_GlobalPlaybackRate(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_CreateBounceScalarAnimation(This, result) \
    ((This)->lpVtbl->CreateBounceScalarAnimation(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_CreateBounceVector2Animation(This, result) \
    ((This)->lpVtbl->CreateBounceVector2Animation(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_CreateBounceVector3Animation(This, result) \
    ((This)->lpVtbl->CreateBounceVector3Animation(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_CreateContainerShape(This, result) \
    ((This)->lpVtbl->CreateContainerShape(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_CreateEllipseGeometry(This, result) \
    ((This)->lpVtbl->CreateEllipseGeometry(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_CreateLineGeometry(This, result) \
    ((This)->lpVtbl->CreateLineGeometry(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_CreatePathGeometry(This, result) \
    ((This)->lpVtbl->CreatePathGeometry(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_CreatePathGeometryWithPath(This, path, result) \
    ((This)->lpVtbl->CreatePathGeometryWithPath(This, path, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_CreatePathKeyFrameAnimation(This, result) \
    ((This)->lpVtbl->CreatePathKeyFrameAnimation(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_CreateRectangleGeometry(This, result) \
    ((This)->lpVtbl->CreateRectangleGeometry(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_CreateRoundedRectangleGeometry(This, result) \
    ((This)->lpVtbl->CreateRoundedRectangleGeometry(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_CreateShapeVisual(This, result) \
    ((This)->lpVtbl->CreateShapeVisual(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_CreateSpriteShape(This, result) \
    ((This)->lpVtbl->CreateSpriteShape(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_CreateSpriteShapeWithGeometry(This, geometry, result) \
    ((This)->lpVtbl->CreateSpriteShapeWithGeometry(This, geometry, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_CreateViewBox(This, result) \
    ((This)->lpVtbl->CreateViewBox(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor5_RequestCommitAsync(This, operation) \
    ((This)->lpVtbl->RequestCommitAsync(This, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositor5;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor5_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositor6
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor6_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor6_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositor6[] = L"Windows.UI.Composition.ICompositor6";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositor6Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateGeometricClip)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip** result);
    HRESULT (STDMETHODCALLTYPE* CreateGeometricClipWithGeometry)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* geometry,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip** result);
    HRESULT (STDMETHODCALLTYPE* CreateRedirectVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This,
        __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual** result);
    HRESULT (STDMETHODCALLTYPE* CreateRedirectVisualWithSourceVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* source,
        __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual** result);
    HRESULT (STDMETHODCALLTYPE* CreateBooleanKeyFrameAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This,
        __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositor6Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositor6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositor6Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositor6_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor6_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor6_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor6_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor6_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor6_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor6_CreateGeometricClip(This, result) \
    ((This)->lpVtbl->CreateGeometricClip(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor6_CreateGeometricClipWithGeometry(This, geometry, result) \
    ((This)->lpVtbl->CreateGeometricClipWithGeometry(This, geometry, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor6_CreateRedirectVisual(This, result) \
    ((This)->lpVtbl->CreateRedirectVisual(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor6_CreateRedirectVisualWithSourceVisual(This, source, result) \
    ((This)->lpVtbl->CreateRedirectVisualWithSourceVisual(This, source, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositor6_CreateBooleanKeyFrameAnimation(This, result) \
    ((This)->lpVtbl->CreateBooleanKeyFrameAnimation(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositor6;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor6_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Composition.ICompositorStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositorStatics[] = L"Windows.UI.Composition.ICompositorStatics";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositorStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositorStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositorStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositorStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositorStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositorStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositorStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MaxGlobalPlaybackRate)(__x_ABI_CWindows_CUI_CComposition_CICompositorStatics* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_MinGlobalPlaybackRate)(__x_ABI_CWindows_CUI_CComposition_CICompositorStatics* This,
        FLOAT* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositorStaticsVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositorStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositorStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositorStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorStatics_get_MaxGlobalPlaybackRate(This, value) \
    ((This)->lpVtbl->get_MaxGlobalPlaybackRate(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorStatics_get_MinGlobalPlaybackRate(This, value) \
    ((This)->lpVtbl->get_MinGlobalPlaybackRate(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositorStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ICompositorWithProjectedShadow
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositorWithProjectedShadow[] = L"Windows.UI.Composition.ICompositorWithProjectedShadow";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadowVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateProjectedShadowCaster)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster** result);
    HRESULT (STDMETHODCALLTYPE* CreateProjectedShadow)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow** result);
    HRESULT (STDMETHODCALLTYPE* CreateProjectedShadowReceiver)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadowVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadowVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_CreateProjectedShadowCaster(This, result) \
    ((This)->lpVtbl->CreateProjectedShadowCaster(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_CreateProjectedShadow(This, result) \
    ((This)->lpVtbl->CreateProjectedShadow(This, result))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_CreateProjectedShadowReceiver(This, result) \
    ((This)->lpVtbl->CreateProjectedShadowReceiver(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositorWithRadialGradient
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositorWithRadialGradient[] = L"Windows.UI.Composition.ICompositorWithRadialGradient";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradientVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateRadialGradientBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradientVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradientVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_CreateRadialGradientBrush(This, result) \
    ((This)->lpVtbl->CreateRadialGradientBrush(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.ICompositorWithVisualSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Compositor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICompositorWithVisualSurface[] = L"Windows.UI.Composition.ICompositorWithVisualSurface";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurfaceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateVisualSurface)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurfaceVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurfaceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_CreateVisualSurface(This, result) \
    ((This)->lpVtbl->CreateVisualSurface(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.IContainerVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.ContainerVisual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IContainerVisual[] = L"Windows.UI.Composition.IContainerVisual";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIContainerVisualVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisual* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisual* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisual* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisual* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisual* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisual* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Children)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisualCollection** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIContainerVisualVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIContainerVisual
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIContainerVisualVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIContainerVisual_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIContainerVisual_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIContainerVisual_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIContainerVisual_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIContainerVisual_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIContainerVisual_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIContainerVisual_get_Children(This, value) \
    ((This)->lpVtbl->get_Children(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIContainerVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IContainerVisualFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.ContainerVisual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IContainerVisualFactory[] = L"Windows.UI.Composition.IContainerVisualFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ICubicBezierEasingFunction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.CubicBezierEasingFunction
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ICubicBezierEasingFunction[] = L"Windows.UI.Composition.ICubicBezierEasingFunction";
typedef struct __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunctionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ControlPoint1)(__x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* get_ControlPoint2)(__x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunctionVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunctionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_get_ControlPoint1(This, value) \
    ((This)->lpVtbl->get_ControlPoint1(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_get_ControlPoint2(This, value) \
    ((This)->lpVtbl->get_ControlPoint2(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IDistantLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.DistantLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIDistantLight_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIDistantLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IDistantLight[] = L"Windows.UI.Composition.IDistantLight";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIDistantLightVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_CoordinateSpace)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_CoordinateSpace)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* value);
    HRESULT (STDMETHODCALLTYPE* get_Direction)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_Direction)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIDistantLightVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIDistantLight
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIDistantLightVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight_get_Color(This, value) \
    ((This)->lpVtbl->get_Color(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight_put_Color(This, value) \
    ((This)->lpVtbl->put_Color(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight_get_CoordinateSpace(This, value) \
    ((This)->lpVtbl->get_CoordinateSpace(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight_put_CoordinateSpace(This, value) \
    ((This)->lpVtbl->put_CoordinateSpace(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight_get_Direction(This, value) \
    ((This)->lpVtbl->get_Direction(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight_put_Direction(This, value) \
    ((This)->lpVtbl->put_Direction(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIDistantLight;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIDistantLight_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.IDistantLight2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.DistantLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIDistantLight2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIDistantLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IDistantLight2[] = L"Windows.UI.Composition.IDistantLight2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIDistantLight2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Intensity)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Intensity)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight2* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIDistantLight2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIDistantLight2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIDistantLight2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight2_get_Intensity(This, value) \
    ((This)->lpVtbl->get_Intensity(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIDistantLight2_put_Intensity(This, value) \
    ((This)->lpVtbl->put_Intensity(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIDistantLight2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIDistantLight2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IDropShadow
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.DropShadow
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIDropShadow_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIDropShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IDropShadow[] = L"Windows.UI.Composition.IDropShadow";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIDropShadowVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BlurRadius)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlurRadius)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_Mask)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Mask)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_Opacity)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Opacity)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIDropShadowVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIDropShadow
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIDropShadowVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow_get_BlurRadius(This, value) \
    ((This)->lpVtbl->get_BlurRadius(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow_put_BlurRadius(This, value) \
    ((This)->lpVtbl->put_BlurRadius(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow_get_Color(This, value) \
    ((This)->lpVtbl->get_Color(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow_put_Color(This, value) \
    ((This)->lpVtbl->put_Color(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow_get_Mask(This, value) \
    ((This)->lpVtbl->get_Mask(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow_put_Mask(This, value) \
    ((This)->lpVtbl->put_Mask(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow_get_Offset(This, value) \
    ((This)->lpVtbl->get_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow_put_Offset(This, value) \
    ((This)->lpVtbl->put_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow_get_Opacity(This, value) \
    ((This)->lpVtbl->get_Opacity(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow_put_Opacity(This, value) \
    ((This)->lpVtbl->put_Opacity(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIDropShadow;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIDropShadow_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.IDropShadow2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.DropShadow
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIDropShadow2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIDropShadow2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IDropShadow2[] = L"Windows.UI.Composition.IDropShadow2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIDropShadow2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SourcePolicy)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow2* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionDropShadowSourcePolicy* value);
    HRESULT (STDMETHODCALLTYPE* put_SourcePolicy)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow2* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionDropShadowSourcePolicy value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIDropShadow2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIDropShadow2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIDropShadow2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow2_get_SourcePolicy(This, value) \
    ((This)->lpVtbl->get_SourcePolicy(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIDropShadow2_put_SourcePolicy(This, value) \
    ((This)->lpVtbl->put_SourcePolicy(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIDropShadow2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIDropShadow2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IExpressionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.ExpressionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IExpressionAnimation[] = L"Windows.UI.Composition.IExpressionAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Expression)(__x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Expression)(__x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation* This,
        HSTRING value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_get_Expression(This, value) \
    ((This)->lpVtbl->get_Expression(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_put_Expression(This, value) \
    ((This)->lpVtbl->put_Expression(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IImplicitAnimationCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.ImplicitAnimationCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IImplicitAnimationCollection[] = L"Windows.UI.Composition.IImplicitAnimationCollection";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollectionVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.IInsetClip
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.InsetClip
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIInsetClip_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIInsetClip_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IInsetClip[] = L"Windows.UI.Composition.IInsetClip";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIInsetClipVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BottomInset)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BottomInset)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LeftInset)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_LeftInset)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RightInset)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RightInset)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_TopInset)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_TopInset)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIInsetClipVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIInsetClip
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIInsetClipVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIInsetClip_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIInsetClip_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIInsetClip_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIInsetClip_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIInsetClip_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIInsetClip_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIInsetClip_get_BottomInset(This, value) \
    ((This)->lpVtbl->get_BottomInset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIInsetClip_put_BottomInset(This, value) \
    ((This)->lpVtbl->put_BottomInset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIInsetClip_get_LeftInset(This, value) \
    ((This)->lpVtbl->get_LeftInset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIInsetClip_put_LeftInset(This, value) \
    ((This)->lpVtbl->put_LeftInset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIInsetClip_get_RightInset(This, value) \
    ((This)->lpVtbl->get_RightInset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIInsetClip_put_RightInset(This, value) \
    ((This)->lpVtbl->put_RightInset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIInsetClip_get_TopInset(This, value) \
    ((This)->lpVtbl->get_TopInset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIInsetClip_put_TopInset(This, value) \
    ((This)->lpVtbl->put_TopInset(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIInsetClip;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIInsetClip_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.KeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IKeyFrameAnimation[] = L"Windows.UI.Composition.IKeyFrameAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DelayTime)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_DelayTime)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_Duration)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_IterationBehavior)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationIterationBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_IterationBehavior)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationIterationBehavior value);
    HRESULT (STDMETHODCALLTYPE* get_IterationCount)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_IterationCount)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_KeyFrameCount)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_StopBehavior)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationStopBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_StopBehavior)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationStopBehavior value);
    HRESULT (STDMETHODCALLTYPE* InsertExpressionKeyFrame)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* InsertExpressionKeyFrameWithEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        HSTRING value,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* easingFunction);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_get_DelayTime(This, value) \
    ((This)->lpVtbl->get_DelayTime(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_put_DelayTime(This, value) \
    ((This)->lpVtbl->put_DelayTime(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_get_Duration(This, value) \
    ((This)->lpVtbl->get_Duration(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_put_Duration(This, value) \
    ((This)->lpVtbl->put_Duration(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_get_IterationBehavior(This, value) \
    ((This)->lpVtbl->get_IterationBehavior(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_put_IterationBehavior(This, value) \
    ((This)->lpVtbl->put_IterationBehavior(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_get_IterationCount(This, value) \
    ((This)->lpVtbl->get_IterationCount(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_put_IterationCount(This, value) \
    ((This)->lpVtbl->put_IterationCount(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_get_KeyFrameCount(This, value) \
    ((This)->lpVtbl->get_KeyFrameCount(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_get_StopBehavior(This, value) \
    ((This)->lpVtbl->get_StopBehavior(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_put_StopBehavior(This, value) \
    ((This)->lpVtbl->put_StopBehavior(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_InsertExpressionKeyFrame(This, normalizedProgressKey, value) \
    ((This)->lpVtbl->InsertExpressionKeyFrame(This, normalizedProgressKey, value))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_InsertExpressionKeyFrameWithEasingFunction(This, normalizedProgressKey, value, easingFunction) \
    ((This)->lpVtbl->InsertExpressionKeyFrameWithEasingFunction(This, normalizedProgressKey, value, easingFunction))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IKeyFrameAnimation2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.KeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IKeyFrameAnimation2[] = L"Windows.UI.Composition.IKeyFrameAnimation2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Direction)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationDirection* value);
    HRESULT (STDMETHODCALLTYPE* put_Direction)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationDirection value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_get_Direction(This, value) \
    ((This)->lpVtbl->get_Direction(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_put_Direction(This, value) \
    ((This)->lpVtbl->put_Direction(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.IKeyFrameAnimation3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.KeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IKeyFrameAnimation3[] = L"Windows.UI.Composition.IKeyFrameAnimation3";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DelayBehavior)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationDelayBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_DelayBehavior)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationDelayBehavior value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_get_DelayBehavior(This, value) \
    ((This)->lpVtbl->get_DelayBehavior(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_put_DelayBehavior(This, value) \
    ((This)->lpVtbl->put_DelayBehavior(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.IKeyFrameAnimationFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.KeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IKeyFrameAnimationFactory[] = L"Windows.UI.Composition.IKeyFrameAnimationFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ILayerVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.LayerVisual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CILayerVisual_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CILayerVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ILayerVisual[] = L"Windows.UI.Composition.ILayerVisual";
typedef struct __x_ABI_CWindows_CUI_CComposition_CILayerVisualVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Effect)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Effect)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CILayerVisualVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CILayerVisual
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CILayerVisualVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CILayerVisual_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CILayerVisual_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CILayerVisual_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CILayerVisual_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CILayerVisual_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CILayerVisual_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CILayerVisual_get_Effect(This, value) \
    ((This)->lpVtbl->get_Effect(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CILayerVisual_put_Effect(This, value) \
    ((This)->lpVtbl->put_Effect(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CILayerVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CILayerVisual_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ILayerVisual2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.LayerVisual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CILayerVisual2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CILayerVisual2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ILayerVisual2[] = L"Windows.UI.Composition.ILayerVisual2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CILayerVisual2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Shadow)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShadow** value);
    HRESULT (STDMETHODCALLTYPE* put_Shadow)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShadow* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CILayerVisual2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CILayerVisual2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CILayerVisual2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CILayerVisual2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CILayerVisual2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CILayerVisual2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CILayerVisual2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CILayerVisual2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CILayerVisual2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CILayerVisual2_get_Shadow(This, value) \
    ((This)->lpVtbl->get_Shadow(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CILayerVisual2_put_Shadow(This, value) \
    ((This)->lpVtbl->put_Shadow(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CILayerVisual2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CILayerVisual2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ILinearEasingFunction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.LinearEasingFunction
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ILinearEasingFunction[] = L"Windows.UI.Composition.ILinearEasingFunction";
typedef struct __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunctionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunctionVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunctionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.INaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_INaturalMotionAnimation[] = L"Windows.UI.Composition.INaturalMotionAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DelayBehavior)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationDelayBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_DelayBehavior)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationDelayBehavior value);
    HRESULT (STDMETHODCALLTYPE* get_DelayTime)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_DelayTime)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_StopBehavior)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationStopBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_StopBehavior)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationStopBehavior value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_get_DelayBehavior(This, value) \
    ((This)->lpVtbl->get_DelayBehavior(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_put_DelayBehavior(This, value) \
    ((This)->lpVtbl->put_DelayBehavior(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_get_DelayTime(This, value) \
    ((This)->lpVtbl->get_DelayTime(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_put_DelayTime(This, value) \
    ((This)->lpVtbl->put_DelayTime(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_get_StopBehavior(This, value) \
    ((This)->lpVtbl->get_StopBehavior(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_put_StopBehavior(This, value) \
    ((This)->lpVtbl->put_StopBehavior(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.INaturalMotionAnimationFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_INaturalMotionAnimationFactory[] = L"Windows.UI.Composition.INaturalMotionAnimationFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IPathKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.PathKeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IPathKeyFrameAnimation[] = L"Windows.UI.Composition.IPathKeyFrameAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrame)(__x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPath* path);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrameWithEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPath* path,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* easingFunction);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_InsertKeyFrame(This, normalizedProgressKey, path) \
    ((This)->lpVtbl->InsertKeyFrame(This, normalizedProgressKey, path))

#define __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_InsertKeyFrameWithEasingFunction(This, normalizedProgressKey, path, easingFunction) \
    ((This)->lpVtbl->InsertKeyFrameWithEasingFunction(This, normalizedProgressKey, path, easingFunction))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.IPointLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.PointLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIPointLight_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIPointLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IPointLight[] = L"Windows.UI.Composition.IPointLight";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIPointLightVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_ConstantAttenuation)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_ConstantAttenuation)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_CoordinateSpace)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_CoordinateSpace)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* value);
    HRESULT (STDMETHODCALLTYPE* get_LinearAttenuation)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_LinearAttenuation)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_QuadraticAttenuation)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_QuadraticAttenuation)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIPointLightVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIPointLight
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIPointLightVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight_get_Color(This, value) \
    ((This)->lpVtbl->get_Color(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight_put_Color(This, value) \
    ((This)->lpVtbl->put_Color(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight_get_ConstantAttenuation(This, value) \
    ((This)->lpVtbl->get_ConstantAttenuation(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight_put_ConstantAttenuation(This, value) \
    ((This)->lpVtbl->put_ConstantAttenuation(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight_get_CoordinateSpace(This, value) \
    ((This)->lpVtbl->get_CoordinateSpace(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight_put_CoordinateSpace(This, value) \
    ((This)->lpVtbl->put_CoordinateSpace(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight_get_LinearAttenuation(This, value) \
    ((This)->lpVtbl->get_LinearAttenuation(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight_put_LinearAttenuation(This, value) \
    ((This)->lpVtbl->put_LinearAttenuation(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight_get_Offset(This, value) \
    ((This)->lpVtbl->get_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight_put_Offset(This, value) \
    ((This)->lpVtbl->put_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight_get_QuadraticAttenuation(This, value) \
    ((This)->lpVtbl->get_QuadraticAttenuation(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight_put_QuadraticAttenuation(This, value) \
    ((This)->lpVtbl->put_QuadraticAttenuation(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIPointLight;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIPointLight_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.IPointLight2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.PointLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIPointLight2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIPointLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IPointLight2[] = L"Windows.UI.Composition.IPointLight2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIPointLight2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIPointLight2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIPointLight2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIPointLight2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIPointLight2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIPointLight2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIPointLight2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Intensity)(__x_ABI_CWindows_CUI_CComposition_CIPointLight2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Intensity)(__x_ABI_CWindows_CUI_CComposition_CIPointLight2* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIPointLight2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIPointLight2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIPointLight2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight2_get_Intensity(This, value) \
    ((This)->lpVtbl->get_Intensity(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight2_put_Intensity(This, value) \
    ((This)->lpVtbl->put_Intensity(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIPointLight2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIPointLight2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IPointLight3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.PointLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIPointLight3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIPointLight3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IPointLight3[] = L"Windows.UI.Composition.IPointLight3";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIPointLight3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MinAttenuationCutoff)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MinAttenuationCutoff)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_MaxAttenuationCutoff)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxAttenuationCutoff)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIPointLight3Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIPointLight3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIPointLight3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight3_get_MinAttenuationCutoff(This, value) \
    ((This)->lpVtbl->get_MinAttenuationCutoff(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight3_put_MinAttenuationCutoff(This, value) \
    ((This)->lpVtbl->put_MinAttenuationCutoff(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight3_get_MaxAttenuationCutoff(This, value) \
    ((This)->lpVtbl->get_MaxAttenuationCutoff(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIPointLight3_put_MaxAttenuationCutoff(This, value) \
    ((This)->lpVtbl->put_MaxAttenuationCutoff(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIPointLight3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIPointLight3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.IQuaternionKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.QuaternionKeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IQuaternionKeyFrameAnimation[] = L"Windows.UI.Composition.IQuaternionKeyFrameAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrame)(__x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion value);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrameWithEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion value,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* easingFunction);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_InsertKeyFrame(This, normalizedProgressKey, value) \
    ((This)->lpVtbl->InsertKeyFrame(This, normalizedProgressKey, value))

#define __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_InsertKeyFrameWithEasingFunction(This, normalizedProgressKey, value, easingFunction) \
    ((This)->lpVtbl->InsertKeyFrameWithEasingFunction(This, normalizedProgressKey, value, easingFunction))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IRedirectVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.RedirectVisual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IRedirectVisual[] = L"Windows.UI.Composition.IRedirectVisual";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIRedirectVisualVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIRedirectVisual* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIRedirectVisual* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIRedirectVisual* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIRedirectVisual* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIRedirectVisual* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIRedirectVisual* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CUI_CComposition_CIRedirectVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CWindows_CUI_CComposition_CIRedirectVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIRedirectVisualVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIRedirectVisualVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_get_Source(This, value) \
    ((This)->lpVtbl->get_Source(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_put_Source(This, value) \
    ((This)->lpVtbl->put_Source(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIRedirectVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Composition.IRenderingDeviceReplacedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.RenderingDeviceReplacedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IRenderingDeviceReplacedEventArgs[] = L"Windows.UI.Composition.IRenderingDeviceReplacedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_GraphicsDevice)(__x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_get_GraphicsDevice(This, value) \
    ((This)->lpVtbl->get_GraphicsDevice(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IScalarKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.ScalarKeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IScalarKeyFrameAnimation[] = L"Windows.UI.Composition.IScalarKeyFrameAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrame)(__x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrameWithEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        FLOAT value,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* easingFunction);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_InsertKeyFrame(This, normalizedProgressKey, value) \
    ((This)->lpVtbl->InsertKeyFrame(This, normalizedProgressKey, value))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_InsertKeyFrameWithEasingFunction(This, normalizedProgressKey, value, easingFunction) \
    ((This)->lpVtbl->InsertKeyFrameWithEasingFunction(This, normalizedProgressKey, value, easingFunction))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IScalarNaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.ScalarNaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IScalarNaturalMotionAnimation[] = L"Windows.UI.Composition.IScalarNaturalMotionAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FinalValue)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
        __FIReference_1_float** value);
    HRESULT (STDMETHODCALLTYPE* put_FinalValue)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
        __FIReference_1_float* value);
    HRESULT (STDMETHODCALLTYPE* get_InitialValue)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
        __FIReference_1_float** value);
    HRESULT (STDMETHODCALLTYPE* put_InitialValue)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
        __FIReference_1_float* value);
    HRESULT (STDMETHODCALLTYPE* get_InitialVelocity)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_InitialVelocity)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_get_FinalValue(This, value) \
    ((This)->lpVtbl->get_FinalValue(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_put_FinalValue(This, value) \
    ((This)->lpVtbl->put_FinalValue(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_get_InitialValue(This, value) \
    ((This)->lpVtbl->get_InitialValue(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_put_InitialValue(This, value) \
    ((This)->lpVtbl->put_InitialValue(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_get_InitialVelocity(This, value) \
    ((This)->lpVtbl->get_InitialVelocity(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_put_InitialVelocity(This, value) \
    ((This)->lpVtbl->put_InitialVelocity(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IScalarNaturalMotionAnimationFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.ScalarNaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IScalarNaturalMotionAnimationFactory[] = L"Windows.UI.Composition.IScalarNaturalMotionAnimationFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IShapeVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.ShapeVisual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIShapeVisual_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIShapeVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IShapeVisual[] = L"Windows.UI.Composition.IShapeVisual";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIShapeVisualVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIShapeVisual* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIShapeVisual* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIShapeVisual* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIShapeVisual* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIShapeVisual* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIShapeVisual* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Shapes)(__x_ABI_CWindows_CUI_CComposition_CIShapeVisual* This,
        __FIVector_1_Windows__CUI__CComposition__CCompositionShape** value);
    HRESULT (STDMETHODCALLTYPE* get_ViewBox)(__x_ABI_CWindows_CUI_CComposition_CIShapeVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox** value);
    HRESULT (STDMETHODCALLTYPE* put_ViewBox)(__x_ABI_CWindows_CUI_CComposition_CIShapeVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIShapeVisualVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIShapeVisual
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIShapeVisualVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIShapeVisual_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIShapeVisual_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIShapeVisual_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIShapeVisual_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIShapeVisual_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIShapeVisual_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIShapeVisual_get_Shapes(This, value) \
    ((This)->lpVtbl->get_Shapes(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIShapeVisual_get_ViewBox(This, value) \
    ((This)->lpVtbl->get_ViewBox(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIShapeVisual_put_ViewBox(This, value) \
    ((This)->lpVtbl->put_ViewBox(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIShapeVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIShapeVisual_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ISpotLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.SpotLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpotLight_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CISpotLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ISpotLight[] = L"Windows.UI.Composition.ISpotLight";
typedef struct __x_ABI_CWindows_CUI_CComposition_CISpotLightVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ConstantAttenuation)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_ConstantAttenuation)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_CoordinateSpace)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_CoordinateSpace)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* value);
    HRESULT (STDMETHODCALLTYPE* get_Direction)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_Direction)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_InnerConeAngle)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_InnerConeAngle)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_InnerConeAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_InnerConeAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_InnerConeColor)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_InnerConeColor)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_LinearAttenuation)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_LinearAttenuation)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_OuterConeAngle)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_OuterConeAngle)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_OuterConeAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_OuterConeAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_OuterConeColor)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_OuterConeColor)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_QuadraticAttenuation)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_QuadraticAttenuation)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CISpotLightVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CISpotLight
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CISpotLightVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_get_ConstantAttenuation(This, value) \
    ((This)->lpVtbl->get_ConstantAttenuation(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_put_ConstantAttenuation(This, value) \
    ((This)->lpVtbl->put_ConstantAttenuation(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_get_CoordinateSpace(This, value) \
    ((This)->lpVtbl->get_CoordinateSpace(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_put_CoordinateSpace(This, value) \
    ((This)->lpVtbl->put_CoordinateSpace(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_get_Direction(This, value) \
    ((This)->lpVtbl->get_Direction(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_put_Direction(This, value) \
    ((This)->lpVtbl->put_Direction(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_get_InnerConeAngle(This, value) \
    ((This)->lpVtbl->get_InnerConeAngle(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_put_InnerConeAngle(This, value) \
    ((This)->lpVtbl->put_InnerConeAngle(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_get_InnerConeAngleInDegrees(This, value) \
    ((This)->lpVtbl->get_InnerConeAngleInDegrees(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_put_InnerConeAngleInDegrees(This, value) \
    ((This)->lpVtbl->put_InnerConeAngleInDegrees(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_get_InnerConeColor(This, value) \
    ((This)->lpVtbl->get_InnerConeColor(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_put_InnerConeColor(This, value) \
    ((This)->lpVtbl->put_InnerConeColor(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_get_LinearAttenuation(This, value) \
    ((This)->lpVtbl->get_LinearAttenuation(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_put_LinearAttenuation(This, value) \
    ((This)->lpVtbl->put_LinearAttenuation(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_get_Offset(This, value) \
    ((This)->lpVtbl->get_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_put_Offset(This, value) \
    ((This)->lpVtbl->put_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_get_OuterConeAngle(This, value) \
    ((This)->lpVtbl->get_OuterConeAngle(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_put_OuterConeAngle(This, value) \
    ((This)->lpVtbl->put_OuterConeAngle(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_get_OuterConeAngleInDegrees(This, value) \
    ((This)->lpVtbl->get_OuterConeAngleInDegrees(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_put_OuterConeAngleInDegrees(This, value) \
    ((This)->lpVtbl->put_OuterConeAngleInDegrees(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_get_OuterConeColor(This, value) \
    ((This)->lpVtbl->get_OuterConeColor(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_put_OuterConeColor(This, value) \
    ((This)->lpVtbl->put_OuterConeColor(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_get_QuadraticAttenuation(This, value) \
    ((This)->lpVtbl->get_QuadraticAttenuation(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight_put_QuadraticAttenuation(This, value) \
    ((This)->lpVtbl->put_QuadraticAttenuation(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpotLight;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpotLight_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.ISpotLight2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.SpotLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpotLight2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CISpotLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ISpotLight2[] = L"Windows.UI.Composition.ISpotLight2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CISpotLight2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_InnerConeIntensity)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_InnerConeIntensity)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_OuterConeIntensity)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_OuterConeIntensity)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CISpotLight2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CISpotLight2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CISpotLight2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight2_get_InnerConeIntensity(This, value) \
    ((This)->lpVtbl->get_InnerConeIntensity(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight2_put_InnerConeIntensity(This, value) \
    ((This)->lpVtbl->put_InnerConeIntensity(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight2_get_OuterConeIntensity(This, value) \
    ((This)->lpVtbl->get_OuterConeIntensity(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight2_put_OuterConeIntensity(This, value) \
    ((This)->lpVtbl->put_OuterConeIntensity(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpotLight2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpotLight2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ISpotLight3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.SpotLight
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpotLight3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CISpotLight3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ISpotLight3[] = L"Windows.UI.Composition.ISpotLight3";
typedef struct __x_ABI_CWindows_CUI_CComposition_CISpotLight3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MinAttenuationCutoff)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MinAttenuationCutoff)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_MaxAttenuationCutoff)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxAttenuationCutoff)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This,
        FLOAT value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CISpotLight3Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CISpotLight3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CISpotLight3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight3_get_MinAttenuationCutoff(This, value) \
    ((This)->lpVtbl->get_MinAttenuationCutoff(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight3_put_MinAttenuationCutoff(This, value) \
    ((This)->lpVtbl->put_MinAttenuationCutoff(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight3_get_MaxAttenuationCutoff(This, value) \
    ((This)->lpVtbl->get_MaxAttenuationCutoff(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpotLight3_put_MaxAttenuationCutoff(This, value) \
    ((This)->lpVtbl->put_MaxAttenuationCutoff(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpotLight3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpotLight3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Composition.ISpringScalarNaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.SpringScalarNaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ISpringScalarNaturalMotionAnimation[] = L"Windows.UI.Composition.ISpringScalarNaturalMotionAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DampingRatio)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_DampingRatio)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Period)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_Period)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_get_DampingRatio(This, value) \
    ((This)->lpVtbl->get_DampingRatio(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_put_DampingRatio(This, value) \
    ((This)->lpVtbl->put_DampingRatio(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_get_Period(This, value) \
    ((This)->lpVtbl->get_Period(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_put_Period(This, value) \
    ((This)->lpVtbl->put_Period(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ISpringVector2NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.SpringVector2NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ISpringVector2NaturalMotionAnimation[] = L"Windows.UI.Composition.ISpringVector2NaturalMotionAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DampingRatio)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_DampingRatio)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Period)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_Period)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_get_DampingRatio(This, value) \
    ((This)->lpVtbl->get_DampingRatio(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_put_DampingRatio(This, value) \
    ((This)->lpVtbl->put_DampingRatio(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_get_Period(This, value) \
    ((This)->lpVtbl->get_Period(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_put_Period(This, value) \
    ((This)->lpVtbl->put_Period(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ISpringVector3NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.SpringVector3NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ISpringVector3NaturalMotionAnimation[] = L"Windows.UI.Composition.ISpringVector3NaturalMotionAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DampingRatio)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_DampingRatio)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Period)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_Period)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_get_DampingRatio(This, value) \
    ((This)->lpVtbl->get_DampingRatio(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_put_DampingRatio(This, value) \
    ((This)->lpVtbl->put_DampingRatio(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_get_Period(This, value) \
    ((This)->lpVtbl->get_Period(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_put_Period(This, value) \
    ((This)->lpVtbl->put_Period(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.ISpriteVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.SpriteVisual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpriteVisual_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ISpriteVisual[] = L"Windows.UI.Composition.ISpriteVisual";
typedef struct __x_ABI_CWindows_CUI_CComposition_CISpriteVisualVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Brush)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Brush)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CISpriteVisualVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CISpriteVisual
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CISpriteVisualVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CISpriteVisual_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CISpriteVisual_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CISpriteVisual_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CISpriteVisual_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CISpriteVisual_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CISpriteVisual_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CISpriteVisual_get_Brush(This, value) \
    ((This)->lpVtbl->get_Brush(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpriteVisual_put_Brush(This, value) \
    ((This)->lpVtbl->put_Brush(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpriteVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpriteVisual_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.ISpriteVisual2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.SpriteVisual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_ISpriteVisual2[] = L"Windows.UI.Composition.ISpriteVisual2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Shadow)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShadow** value);
    HRESULT (STDMETHODCALLTYPE* put_Shadow)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShadow* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_get_Shadow(This, value) \
    ((This)->lpVtbl->get_Shadow(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_put_Shadow(This, value) \
    ((This)->lpVtbl->put_Shadow(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpriteVisual2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.IStepEasingFunction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.StepEasingFunction
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IStepEasingFunction[] = L"Windows.UI.Composition.IStepEasingFunction";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunctionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FinalStep)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_FinalStep)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_InitialStep)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_InitialStep)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_IsFinalStepSingleFrame)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsFinalStepSingleFrame)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsInitialStepSingleFrame)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsInitialStepSingleFrame)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StepCount)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_StepCount)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        INT32 value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunctionVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunctionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_get_FinalStep(This, value) \
    ((This)->lpVtbl->get_FinalStep(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_put_FinalStep(This, value) \
    ((This)->lpVtbl->put_FinalStep(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_get_InitialStep(This, value) \
    ((This)->lpVtbl->get_InitialStep(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_put_InitialStep(This, value) \
    ((This)->lpVtbl->put_InitialStep(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_get_IsFinalStepSingleFrame(This, value) \
    ((This)->lpVtbl->get_IsFinalStepSingleFrame(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_put_IsFinalStepSingleFrame(This, value) \
    ((This)->lpVtbl->put_IsFinalStepSingleFrame(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_get_IsInitialStepSingleFrame(This, value) \
    ((This)->lpVtbl->get_IsInitialStepSingleFrame(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_put_IsInitialStepSingleFrame(This, value) \
    ((This)->lpVtbl->put_IsInitialStepSingleFrame(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_get_StepCount(This, value) \
    ((This)->lpVtbl->get_StepCount(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_put_StepCount(This, value) \
    ((This)->lpVtbl->put_StepCount(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Composition.IVector2KeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Vector2KeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVector2KeyFrameAnimation[] = L"Windows.UI.Composition.IVector2KeyFrameAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrame)(__x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrameWithEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* easingFunction);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_InsertKeyFrame(This, normalizedProgressKey, value) \
    ((This)->lpVtbl->InsertKeyFrame(This, normalizedProgressKey, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_InsertKeyFrameWithEasingFunction(This, normalizedProgressKey, value, easingFunction) \
    ((This)->lpVtbl->InsertKeyFrameWithEasingFunction(This, normalizedProgressKey, value, easingFunction))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IVector2NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Vector2NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVector2NaturalMotionAnimation[] = L"Windows.UI.Composition.IVector2NaturalMotionAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FinalValue)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
        __FIReference_1_Windows__CFoundation__CNumerics__CVector2** value);
    HRESULT (STDMETHODCALLTYPE* put_FinalValue)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
        __FIReference_1_Windows__CFoundation__CNumerics__CVector2* value);
    HRESULT (STDMETHODCALLTYPE* get_InitialValue)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
        __FIReference_1_Windows__CFoundation__CNumerics__CVector2** value);
    HRESULT (STDMETHODCALLTYPE* put_InitialValue)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
        __FIReference_1_Windows__CFoundation__CNumerics__CVector2* value);
    HRESULT (STDMETHODCALLTYPE* get_InitialVelocity)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_InitialVelocity)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_get_FinalValue(This, value) \
    ((This)->lpVtbl->get_FinalValue(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_put_FinalValue(This, value) \
    ((This)->lpVtbl->put_FinalValue(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_get_InitialValue(This, value) \
    ((This)->lpVtbl->get_InitialValue(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_put_InitialValue(This, value) \
    ((This)->lpVtbl->put_InitialValue(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_get_InitialVelocity(This, value) \
    ((This)->lpVtbl->get_InitialVelocity(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_put_InitialVelocity(This, value) \
    ((This)->lpVtbl->put_InitialVelocity(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IVector2NaturalMotionAnimationFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Vector2NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVector2NaturalMotionAnimationFactory[] = L"Windows.UI.Composition.IVector2NaturalMotionAnimationFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IVector3KeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Vector3KeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVector3KeyFrameAnimation[] = L"Windows.UI.Composition.IVector3KeyFrameAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrame)(__x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrameWithEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* easingFunction);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_InsertKeyFrame(This, normalizedProgressKey, value) \
    ((This)->lpVtbl->InsertKeyFrame(This, normalizedProgressKey, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_InsertKeyFrameWithEasingFunction(This, normalizedProgressKey, value, easingFunction) \
    ((This)->lpVtbl->InsertKeyFrameWithEasingFunction(This, normalizedProgressKey, value, easingFunction))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IVector3NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Vector3NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVector3NaturalMotionAnimation[] = L"Windows.UI.Composition.IVector3NaturalMotionAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FinalValue)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
        __FIReference_1_Windows__CFoundation__CNumerics__CVector3** value);
    HRESULT (STDMETHODCALLTYPE* put_FinalValue)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
        __FIReference_1_Windows__CFoundation__CNumerics__CVector3* value);
    HRESULT (STDMETHODCALLTYPE* get_InitialValue)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
        __FIReference_1_Windows__CFoundation__CNumerics__CVector3** value);
    HRESULT (STDMETHODCALLTYPE* put_InitialValue)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
        __FIReference_1_Windows__CFoundation__CNumerics__CVector3* value);
    HRESULT (STDMETHODCALLTYPE* get_InitialVelocity)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_InitialVelocity)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_get_FinalValue(This, value) \
    ((This)->lpVtbl->get_FinalValue(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_put_FinalValue(This, value) \
    ((This)->lpVtbl->put_FinalValue(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_get_InitialValue(This, value) \
    ((This)->lpVtbl->get_InitialValue(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_put_InitialValue(This, value) \
    ((This)->lpVtbl->put_InitialValue(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_get_InitialVelocity(This, value) \
    ((This)->lpVtbl->get_InitialVelocity(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_put_InitialVelocity(This, value) \
    ((This)->lpVtbl->put_InitialVelocity(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IVector3NaturalMotionAnimationFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Vector3NaturalMotionAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVector3NaturalMotionAnimationFactory[] = L"Windows.UI.Composition.IVector3NaturalMotionAnimationFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Composition.IVector4KeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Vector4KeyFrameAnimation
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVector4KeyFrameAnimation[] = L"Windows.UI.Composition.IVector4KeyFrameAnimation";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrame)(__x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrameWithEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* easingFunction);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimationVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_InsertKeyFrame(This, normalizedProgressKey, value) \
    ((This)->lpVtbl->InsertKeyFrame(This, normalizedProgressKey, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_InsertKeyFrameWithEasingFunction(This, normalizedProgressKey, value, easingFunction) \
    ((This)->lpVtbl->InsertKeyFrameWithEasingFunction(This, normalizedProgressKey, value, easingFunction))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Visual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVisual_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVisual[] = L"Windows.UI.Composition.IVisual";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIVisualVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AnchorPoint)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_AnchorPoint)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_BackfaceVisibility)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionBackfaceVisibility* value);
    HRESULT (STDMETHODCALLTYPE* put_BackfaceVisibility)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionBackfaceVisibility value);
    HRESULT (STDMETHODCALLTYPE* get_BorderMode)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderMode)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_Clip)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionClip** value);
    HRESULT (STDMETHODCALLTYPE* put_Clip)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionClip* value);
    HRESULT (STDMETHODCALLTYPE* get_CompositeMode)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionCompositeMode* value);
    HRESULT (STDMETHODCALLTYPE* put_CompositeMode)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionCompositeMode value);
    HRESULT (STDMETHODCALLTYPE* get_IsVisible)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsVisible)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_Opacity)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Opacity)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion* value);
    HRESULT (STDMETHODCALLTYPE* put_Orientation)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion value);
    HRESULT (STDMETHODCALLTYPE* get_Parent)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CIContainerVisual** value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAxis)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAxis)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_Scale)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_Scale)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Size)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4* value);
    HRESULT (STDMETHODCALLTYPE* put_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIVisualVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIVisual
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVisualVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_get_AnchorPoint(This, value) \
    ((This)->lpVtbl->get_AnchorPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_put_AnchorPoint(This, value) \
    ((This)->lpVtbl->put_AnchorPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_get_BackfaceVisibility(This, value) \
    ((This)->lpVtbl->get_BackfaceVisibility(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_put_BackfaceVisibility(This, value) \
    ((This)->lpVtbl->put_BackfaceVisibility(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_get_BorderMode(This, value) \
    ((This)->lpVtbl->get_BorderMode(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_put_BorderMode(This, value) \
    ((This)->lpVtbl->put_BorderMode(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_get_CenterPoint(This, value) \
    ((This)->lpVtbl->get_CenterPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_put_CenterPoint(This, value) \
    ((This)->lpVtbl->put_CenterPoint(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_get_Clip(This, value) \
    ((This)->lpVtbl->get_Clip(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_put_Clip(This, value) \
    ((This)->lpVtbl->put_Clip(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_get_CompositeMode(This, value) \
    ((This)->lpVtbl->get_CompositeMode(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_put_CompositeMode(This, value) \
    ((This)->lpVtbl->put_CompositeMode(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_get_IsVisible(This, value) \
    ((This)->lpVtbl->get_IsVisible(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_put_IsVisible(This, value) \
    ((This)->lpVtbl->put_IsVisible(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_get_Offset(This, value) \
    ((This)->lpVtbl->get_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_put_Offset(This, value) \
    ((This)->lpVtbl->put_Offset(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_get_Opacity(This, value) \
    ((This)->lpVtbl->get_Opacity(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_put_Opacity(This, value) \
    ((This)->lpVtbl->put_Opacity(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_get_Orientation(This, value) \
    ((This)->lpVtbl->get_Orientation(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_put_Orientation(This, value) \
    ((This)->lpVtbl->put_Orientation(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_get_Parent(This, value) \
    ((This)->lpVtbl->get_Parent(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_get_RotationAngle(This, value) \
    ((This)->lpVtbl->get_RotationAngle(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_put_RotationAngle(This, value) \
    ((This)->lpVtbl->put_RotationAngle(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_get_RotationAngleInDegrees(This, value) \
    ((This)->lpVtbl->get_RotationAngleInDegrees(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_put_RotationAngleInDegrees(This, value) \
    ((This)->lpVtbl->put_RotationAngleInDegrees(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_get_RotationAxis(This, value) \
    ((This)->lpVtbl->get_RotationAxis(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_put_RotationAxis(This, value) \
    ((This)->lpVtbl->put_RotationAxis(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_get_Scale(This, value) \
    ((This)->lpVtbl->get_Scale(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_put_Scale(This, value) \
    ((This)->lpVtbl->put_Scale(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_get_Size(This, value) \
    ((This)->lpVtbl->get_Size(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_put_Size(This, value) \
    ((This)->lpVtbl->put_Size(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_get_TransformMatrix(This, value) \
    ((This)->lpVtbl->get_TransformMatrix(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual_put_TransformMatrix(This, value) \
    ((This)->lpVtbl->put_TransformMatrix(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVisual_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IVisual2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Visual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVisual2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVisual2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVisual2[] = L"Windows.UI.Composition.IVisual2";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIVisual2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ParentForTransform)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_ParentForTransform)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* value);
    HRESULT (STDMETHODCALLTYPE* get_RelativeOffsetAdjustment)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_RelativeOffsetAdjustment)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_RelativeSizeAdjustment)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_RelativeSizeAdjustment)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIVisual2Vtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIVisual2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVisual2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIVisual2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual2_get_ParentForTransform(This, value) \
    ((This)->lpVtbl->get_ParentForTransform(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual2_put_ParentForTransform(This, value) \
    ((This)->lpVtbl->put_ParentForTransform(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual2_get_RelativeOffsetAdjustment(This, value) \
    ((This)->lpVtbl->get_RelativeOffsetAdjustment(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual2_put_RelativeOffsetAdjustment(This, value) \
    ((This)->lpVtbl->put_RelativeOffsetAdjustment(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual2_get_RelativeSizeAdjustment(This, value) \
    ((This)->lpVtbl->get_RelativeSizeAdjustment(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisual2_put_RelativeSizeAdjustment(This, value) \
    ((This)->lpVtbl->put_RelativeSizeAdjustment(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVisual2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVisual2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Composition.IVisualCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.VisualCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVisualCollection[] = L"Windows.UI.Composition.IVisualCollection";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIVisualCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Count)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* InsertAbove)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* newChild,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* sibling);
    HRESULT (STDMETHODCALLTYPE* InsertAtBottom)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* newChild);
    HRESULT (STDMETHODCALLTYPE* InsertAtTop)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* newChild);
    HRESULT (STDMETHODCALLTYPE* InsertBelow)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* newChild,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* sibling);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* child);
    HRESULT (STDMETHODCALLTYPE* RemoveAll)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIVisualCollectionVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIVisualCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVisualCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIVisualCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualCollection_get_Count(This, value) \
    ((This)->lpVtbl->get_Count(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualCollection_InsertAbove(This, newChild, sibling) \
    ((This)->lpVtbl->InsertAbove(This, newChild, sibling))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualCollection_InsertAtBottom(This, newChild) \
    ((This)->lpVtbl->InsertAtBottom(This, newChild))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualCollection_InsertAtTop(This, newChild) \
    ((This)->lpVtbl->InsertAtTop(This, newChild))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualCollection_InsertBelow(This, newChild, sibling) \
    ((This)->lpVtbl->InsertBelow(This, newChild, sibling))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualCollection_Remove(This, child) \
    ((This)->lpVtbl->Remove(This, child))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualCollection_RemoveAll(This) \
    ((This)->lpVtbl->RemoveAll(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVisualCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IVisualElement
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualElement_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVisualElement[] = L"Windows.UI.Composition.IVisualElement";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIVisualElementVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVisualElement* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVisualElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVisualElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVisualElement* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVisualElement* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVisualElement* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIVisualElementVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIVisualElement
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVisualElementVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIVisualElement_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualElement_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualElement_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualElement_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualElement_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualElement_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVisualElement;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualElement_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Composition.IVisualFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.Visual
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVisualFactory[] = L"Windows.UI.Composition.IVisualFactory";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIVisualFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVisualFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVisualFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVisualFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVisualFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVisualFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVisualFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIVisualFactoryVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIVisualFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVisualFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIVisualFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVisualFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.UI.Composition.IVisualUnorderedCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Composition.VisualUnorderedCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Composition_IVisualUnorderedCollection[] = L"Windows.UI.Composition.IVisualUnorderedCollection";
typedef struct __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Count)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* Add)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* newVisual);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* visual);
    HRESULT (STDMETHODCALLTYPE* RemoveAll)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollectionVtbl;

interface __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_get_Count(This, value) \
    ((This)->lpVtbl->get_Count(This, value))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_Add(This, newVisual) \
    ((This)->lpVtbl->Add(This, newVisual))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_Remove(This, visual) \
    ((This)->lpVtbl->Remove(This, visual))

#define __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_RemoveAll(This) \
    ((This)->lpVtbl->RemoveAll(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.AmbientLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IAmbientLight ** Default Interface **
 *    Windows.UI.Composition.IAmbientLight2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_AmbientLight_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_AmbientLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_AmbientLight[] = L"Windows.UI.Composition.AmbientLight";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.AnimationController
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Composition.IAnimationControllerStatics interface starting with version 6.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IAnimationController ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_AnimationController_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_AnimationController_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_AnimationController[] = L"Windows.UI.Composition.AnimationController";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.AnimationPropertyInfo
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IAnimationPropertyInfo ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Composition_AnimationPropertyInfo_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_AnimationPropertyInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_AnimationPropertyInfo[] = L"Windows.UI.Composition.AnimationPropertyInfo";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Composition.BooleanKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IBooleanKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Composition_BooleanKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_BooleanKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_BooleanKeyFrameAnimation[] = L"Windows.UI.Composition.BooleanKeyFrameAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Composition.BounceScalarNaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IBounceScalarNaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_BounceScalarNaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_BounceScalarNaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_BounceScalarNaturalMotionAnimation[] = L"Windows.UI.Composition.BounceScalarNaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.BounceVector2NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IBounceVector2NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_BounceVector2NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_BounceVector2NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_BounceVector2NaturalMotionAnimation[] = L"Windows.UI.Composition.BounceVector2NaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.BounceVector3NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IBounceVector3NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_BounceVector3NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_BounceVector3NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_BounceVector3NaturalMotionAnimation[] = L"Windows.UI.Composition.BounceVector3NaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.ColorKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IColorKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_ColorKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_ColorKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_ColorKeyFrameAnimation[] = L"Windows.UI.Composition.ColorKeyFrameAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionAnimation ** Default Interface **
 *    Windows.UI.Composition.ICompositionAnimation2
 *    Windows.UI.Composition.ICompositionAnimation3
 *    Windows.UI.Composition.ICompositionAnimation4
 *    Windows.UI.Composition.ICompositionAnimationBase
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionAnimation[] = L"Windows.UI.Composition.CompositionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionAnimationGroup
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionAnimationGroup ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionAnimation>
 *    Windows.UI.Composition.ICompositionAnimationBase
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionAnimationGroup_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionAnimationGroup_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionAnimationGroup[] = L"Windows.UI.Composition.CompositionAnimationGroup";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.CompositionBackdropBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionBackdropBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionBackdropBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionBackdropBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionBackdropBrush[] = L"Windows.UI.Composition.CompositionBackdropBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.CompositionBatchCompletedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionBatchCompletedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionBatchCompletedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionBatchCompletedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionBatchCompletedEventArgs[] = L"Windows.UI.Composition.CompositionBatchCompletedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionBrush[] = L"Windows.UI.Composition.CompositionBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionCapabilities
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Composition.ICompositionCapabilitiesStatics interface starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionCapabilities ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionCapabilities_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionCapabilities_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionCapabilities[] = L"Windows.UI.Composition.CompositionCapabilities";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.UI.Composition.CompositionClip
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionClip ** Default Interface **
 *    Windows.UI.Composition.ICompositionClip2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionClip_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionClip_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionClip[] = L"Windows.UI.Composition.CompositionClip";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionColorBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionColorBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionColorBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionColorBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionColorBrush[] = L"Windows.UI.Composition.CompositionColorBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionColorGradientStop
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionColorGradientStop ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionColorGradientStop_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionColorGradientStop_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionColorGradientStop[] = L"Windows.UI.Composition.CompositionColorGradientStop";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.CompositionColorGradientStopCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionColorGradientStopCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionColorGradientStop>
 *    Windows.Foundation.Collections.IVector`1<Windows.UI.Composition.CompositionColorGradientStop>
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionColorGradientStopCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionColorGradientStopCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionColorGradientStopCollection[] = L"Windows.UI.Composition.CompositionColorGradientStopCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.CompositionCommitBatch
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionCommitBatch ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionCommitBatch_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionCommitBatch_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionCommitBatch[] = L"Windows.UI.Composition.CompositionCommitBatch";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionContainerShape
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionContainerShape ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionContainerShape_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionContainerShape_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionContainerShape[] = L"Windows.UI.Composition.CompositionContainerShape";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionDrawingSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionDrawingSurface ** Default Interface **
 *    Windows.UI.Composition.ICompositionDrawingSurface2
 *    Windows.UI.Composition.ICompositionSurface
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionDrawingSurface_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionDrawingSurface_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionDrawingSurface[] = L"Windows.UI.Composition.CompositionDrawingSurface";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionEasingFunction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionEasingFunction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionEasingFunction_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionEasingFunction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionEasingFunction[] = L"Windows.UI.Composition.CompositionEasingFunction";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionEffectBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionEffectBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionEffectBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionEffectBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionEffectBrush[] = L"Windows.UI.Composition.CompositionEffectBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionEffectFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionEffectFactory ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionEffectFactory_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionEffectFactory_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionEffectFactory[] = L"Windows.UI.Composition.CompositionEffectFactory";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionEffectSourceParameter
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.UI.Composition.ICompositionEffectSourceParameterFactory interface starting with version 2.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionEffectSourceParameter ** Default Interface **
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionEffectSourceParameter_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionEffectSourceParameter_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionEffectSourceParameter[] = L"Windows.UI.Composition.CompositionEffectSourceParameter";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionEllipseGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionEllipseGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionEllipseGeometry_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionEllipseGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionEllipseGeometry[] = L"Windows.UI.Composition.CompositionEllipseGeometry";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionGeometricClip
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionGeometricClip ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionGeometricClip_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionGeometricClip_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionGeometricClip[] = L"Windows.UI.Composition.CompositionGeometricClip";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Composition.CompositionGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionGeometry_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionGeometry[] = L"Windows.UI.Composition.CompositionGeometry";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionGradientBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionGradientBrush ** Default Interface **
 *    Windows.UI.Composition.ICompositionGradientBrush2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionGradientBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionGradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionGradientBrush[] = L"Windows.UI.Composition.CompositionGradientBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.CompositionGraphicsDevice
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionGraphicsDevice ** Default Interface **
 *    Windows.UI.Composition.ICompositionGraphicsDevice2
 *    Windows.UI.Composition.ICompositionGraphicsDevice3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionGraphicsDevice_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionGraphicsDevice_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionGraphicsDevice[] = L"Windows.UI.Composition.CompositionGraphicsDevice";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionLight ** Default Interface **
 *    Windows.UI.Composition.ICompositionLight2
 *    Windows.UI.Composition.ICompositionLight3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionLight_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionLight[] = L"Windows.UI.Composition.CompositionLight";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.CompositionLineGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionLineGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionLineGeometry_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionLineGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionLineGeometry[] = L"Windows.UI.Composition.CompositionLineGeometry";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionLinearGradientBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionLinearGradientBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionLinearGradientBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionLinearGradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionLinearGradientBrush[] = L"Windows.UI.Composition.CompositionLinearGradientBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.CompositionMaskBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionMaskBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionMaskBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionMaskBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionMaskBrush[] = L"Windows.UI.Composition.CompositionMaskBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.CompositionMipmapSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionMipmapSurface ** Default Interface **
 *    Windows.UI.Composition.ICompositionSurface
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionMipmapSurface_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionMipmapSurface_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionMipmapSurface[] = L"Windows.UI.Composition.CompositionMipmapSurface";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Composition.CompositionNineGridBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionNineGridBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionNineGridBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionNineGridBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionNineGridBrush[] = L"Windows.UI.Composition.CompositionNineGridBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.CompositionObject
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Composition.ICompositionObjectStatics interface starting with version 7.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionObject ** Default Interface **
 *    Windows.UI.Composition.ICompositionObject2
 *    Windows.UI.Composition.ICompositionObject3
 *    Windows.UI.Composition.ICompositionObject4
 *    Windows.Foundation.IClosable
 *    Windows.UI.Composition.IAnimationObject
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionObject_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionObject_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionObject[] = L"Windows.UI.Composition.CompositionObject";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionPath
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.UI.Composition.ICompositionPathFactory interface starting with version 6.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionPath ** Default Interface **
 *    Windows.Graphics.IGeometrySource2D
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionPath_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionPath_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionPath[] = L"Windows.UI.Composition.CompositionPath";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionPathGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionPathGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionPathGeometry_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionPathGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionPathGeometry[] = L"Windows.UI.Composition.CompositionPathGeometry";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionProjectedShadow
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionProjectedShadow ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadow_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadow_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionProjectedShadow[] = L"Windows.UI.Composition.CompositionProjectedShadow";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Composition.CompositionProjectedShadowCaster
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionProjectedShadowCaster ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadowCaster_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadowCaster_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionProjectedShadowCaster[] = L"Windows.UI.Composition.CompositionProjectedShadowCaster";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Composition.CompositionProjectedShadowCasterCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics interface starting with version 8.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionProjectedShadowCasterCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionProjectedShadowCaster>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadowCasterCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadowCasterCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionProjectedShadowCasterCollection[] = L"Windows.UI.Composition.CompositionProjectedShadowCasterCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Composition.CompositionProjectedShadowReceiver
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionProjectedShadowReceiver ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadowReceiver_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadowReceiver_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionProjectedShadowReceiver[] = L"Windows.UI.Composition.CompositionProjectedShadowReceiver";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionProjectedShadowReceiver>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadowReceiverUnorderedCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionProjectedShadowReceiverUnorderedCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionProjectedShadowReceiverUnorderedCollection[] = L"Windows.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Composition.CompositionPropertySet
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionPropertySet ** Default Interface **
 *    Windows.UI.Composition.ICompositionPropertySet2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionPropertySet_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionPropertySet_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionPropertySet[] = L"Windows.UI.Composition.CompositionPropertySet";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionRadialGradientBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionRadialGradientBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionRadialGradientBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionRadialGradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionRadialGradientBrush[] = L"Windows.UI.Composition.CompositionRadialGradientBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Composition.CompositionRectangleGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionRectangleGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionRectangleGeometry_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionRectangleGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionRectangleGeometry[] = L"Windows.UI.Composition.CompositionRectangleGeometry";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionRoundedRectangleGeometry
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionRoundedRectangleGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionRoundedRectangleGeometry_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionRoundedRectangleGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionRoundedRectangleGeometry[] = L"Windows.UI.Composition.CompositionRoundedRectangleGeometry";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionScopedBatch
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionScopedBatch ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionScopedBatch_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionScopedBatch_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionScopedBatch[] = L"Windows.UI.Composition.CompositionScopedBatch";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionShadow
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionShadow ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionShadow_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionShadow_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionShadow[] = L"Windows.UI.Composition.CompositionShadow";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.CompositionShape
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionShape ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionShape_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionShape_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionShape[] = L"Windows.UI.Composition.CompositionShape";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionShapeCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Windows.UI.Composition.CompositionShape> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionShape>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionShapeCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionShapeCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionShapeCollection[] = L"Windows.UI.Composition.CompositionShapeCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionSpriteShape
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionSpriteShape ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionSpriteShape_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionSpriteShape_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionSpriteShape[] = L"Windows.UI.Composition.CompositionSpriteShape";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionStrokeDashArray
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Single> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Single>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionStrokeDashArray_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionStrokeDashArray_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionStrokeDashArray[] = L"Windows.UI.Composition.CompositionStrokeDashArray";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionSurfaceBrush
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionSurfaceBrush ** Default Interface **
 *    Windows.UI.Composition.ICompositionSurfaceBrush2
 *    Windows.UI.Composition.ICompositionSurfaceBrush3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionSurfaceBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionSurfaceBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionSurfaceBrush[] = L"Windows.UI.Composition.CompositionSurfaceBrush";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionTarget
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionTarget ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionTarget_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionTarget_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionTarget[] = L"Windows.UI.Composition.CompositionTarget";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CompositionTransform
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionTransform ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionTransform_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionTransform[] = L"Windows.UI.Composition.CompositionTransform";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Composition.CompositionViewBox
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionViewBox ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionViewBox_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionViewBox_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionViewBox[] = L"Windows.UI.Composition.CompositionViewBox";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.CompositionVirtualDrawingSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionVirtualDrawingSurface ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionVirtualDrawingSurface_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionVirtualDrawingSurface_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionVirtualDrawingSurface[] = L"Windows.UI.Composition.CompositionVirtualDrawingSurface";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.UI.Composition.CompositionVisualSurface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositionVisualSurface ** Default Interface **
 *    Windows.UI.Composition.ICompositionSurface
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CompositionVisualSurface_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CompositionVisualSurface_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CompositionVisualSurface[] = L"Windows.UI.Composition.CompositionVisualSurface";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Composition.Compositor
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 2.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Composition.ICompositorStatics interface starting with version 6.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICompositor ** Default Interface **
 *    Windows.UI.Composition.ICompositor2
 *    Windows.UI.Composition.ICompositor3
 *    Windows.UI.Composition.ICompositor4
 *    Windows.UI.Composition.ICompositor5
 *    Windows.UI.Composition.ICompositor6
 *    Windows.UI.Composition.ICompositorWithProjectedShadow
 *    Windows.UI.Composition.ICompositorWithRadialGradient
 *    Windows.UI.Composition.ICompositorWithVisualSurface
 *    Windows.Foundation.IClosable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_Compositor_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_Compositor_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_Compositor[] = L"Windows.UI.Composition.Compositor";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.ContainerVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IContainerVisual ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_ContainerVisual_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_ContainerVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_ContainerVisual[] = L"Windows.UI.Composition.ContainerVisual";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.CubicBezierEasingFunction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ICubicBezierEasingFunction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_CubicBezierEasingFunction_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_CubicBezierEasingFunction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_CubicBezierEasingFunction[] = L"Windows.UI.Composition.CubicBezierEasingFunction";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.DistantLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IDistantLight ** Default Interface **
 *    Windows.UI.Composition.IDistantLight2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_DistantLight_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_DistantLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_DistantLight[] = L"Windows.UI.Composition.DistantLight";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.DropShadow
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IDropShadow ** Default Interface **
 *    Windows.UI.Composition.IDropShadow2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_DropShadow_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_DropShadow_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_DropShadow[] = L"Windows.UI.Composition.DropShadow";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.ExpressionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IExpressionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_ExpressionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_ExpressionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_ExpressionAnimation[] = L"Windows.UI.Composition.ExpressionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.ImplicitAnimationCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IImplicitAnimationCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.UI.Composition.ICompositionAnimationBase>>
 *    Windows.Foundation.Collections.IMap`2<String, Windows.UI.Composition.ICompositionAnimationBase>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_ImplicitAnimationCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_ImplicitAnimationCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_ImplicitAnimationCollection[] = L"Windows.UI.Composition.ImplicitAnimationCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.InitialValueExpressionCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IMap`2<String, String> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_InitialValueExpressionCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_InitialValueExpressionCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_InitialValueExpressionCollection[] = L"Windows.UI.Composition.InitialValueExpressionCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.InsetClip
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IInsetClip ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_InsetClip_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_InsetClip_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_InsetClip[] = L"Windows.UI.Composition.InsetClip";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.KeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IKeyFrameAnimation ** Default Interface **
 *    Windows.UI.Composition.IKeyFrameAnimation2
 *    Windows.UI.Composition.IKeyFrameAnimation3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_KeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_KeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_KeyFrameAnimation[] = L"Windows.UI.Composition.KeyFrameAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.LayerVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ILayerVisual ** Default Interface **
 *    Windows.UI.Composition.ILayerVisual2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_LayerVisual_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_LayerVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_LayerVisual[] = L"Windows.UI.Composition.LayerVisual";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.LinearEasingFunction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ILinearEasingFunction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_LinearEasingFunction_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_LinearEasingFunction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_LinearEasingFunction[] = L"Windows.UI.Composition.LinearEasingFunction";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.INaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_NaturalMotionAnimation[] = L"Windows.UI.Composition.NaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.PathKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IPathKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_PathKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_PathKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_PathKeyFrameAnimation[] = L"Windows.UI.Composition.PathKeyFrameAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.PointLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IPointLight ** Default Interface **
 *    Windows.UI.Composition.IPointLight2
 *    Windows.UI.Composition.IPointLight3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_PointLight_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_PointLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_PointLight[] = L"Windows.UI.Composition.PointLight";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.QuaternionKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IQuaternionKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_QuaternionKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_QuaternionKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_QuaternionKeyFrameAnimation[] = L"Windows.UI.Composition.QuaternionKeyFrameAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.RedirectVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IRedirectVisual ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Composition_RedirectVisual_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_RedirectVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_RedirectVisual[] = L"Windows.UI.Composition.RedirectVisual";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Composition.RenderingDeviceReplacedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IRenderingDeviceReplacedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_RenderingDeviceReplacedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_RenderingDeviceReplacedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_RenderingDeviceReplacedEventArgs[] = L"Windows.UI.Composition.RenderingDeviceReplacedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.ScalarKeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IScalarKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_ScalarKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_ScalarKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_ScalarKeyFrameAnimation[] = L"Windows.UI.Composition.ScalarKeyFrameAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.ScalarNaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IScalarNaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_ScalarNaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_ScalarNaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_ScalarNaturalMotionAnimation[] = L"Windows.UI.Composition.ScalarNaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.ShapeVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IShapeVisual ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Composition_ShapeVisual_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_ShapeVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_ShapeVisual[] = L"Windows.UI.Composition.ShapeVisual";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Composition.SpotLight
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ISpotLight ** Default Interface **
 *    Windows.UI.Composition.ISpotLight2
 *    Windows.UI.Composition.ISpotLight3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_SpotLight_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_SpotLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_SpotLight[] = L"Windows.UI.Composition.SpotLight";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.SpringScalarNaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ISpringScalarNaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_SpringScalarNaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_SpringScalarNaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_SpringScalarNaturalMotionAnimation[] = L"Windows.UI.Composition.SpringScalarNaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.SpringVector2NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ISpringVector2NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_SpringVector2NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_SpringVector2NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_SpringVector2NaturalMotionAnimation[] = L"Windows.UI.Composition.SpringVector2NaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.SpringVector3NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ISpringVector3NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_SpringVector3NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_SpringVector3NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_SpringVector3NaturalMotionAnimation[] = L"Windows.UI.Composition.SpringVector3NaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.SpriteVisual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.ISpriteVisual ** Default Interface **
 *    Windows.UI.Composition.ISpriteVisual2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_SpriteVisual_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_SpriteVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_SpriteVisual[] = L"Windows.UI.Composition.SpriteVisual";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.StepEasingFunction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IStepEasingFunction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_StepEasingFunction_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_StepEasingFunction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_StepEasingFunction[] = L"Windows.UI.Composition.StepEasingFunction";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Composition.Vector2KeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IVector2KeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_Vector2KeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_Vector2KeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_Vector2KeyFrameAnimation[] = L"Windows.UI.Composition.Vector2KeyFrameAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.Vector2NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IVector2NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_Vector2NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_Vector2NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_Vector2NaturalMotionAnimation[] = L"Windows.UI.Composition.Vector2NaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.Vector3KeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IVector3KeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_Vector3KeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_Vector3KeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_Vector3KeyFrameAnimation[] = L"Windows.UI.Composition.Vector3KeyFrameAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.Vector3NaturalMotionAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IVector3NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Composition_Vector3NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_Vector3NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_Vector3NaturalMotionAnimation[] = L"Windows.UI.Composition.Vector3NaturalMotionAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Class Windows.UI.Composition.Vector4KeyFrameAnimation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IVector4KeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_Vector4KeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_Vector4KeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_Vector4KeyFrameAnimation[] = L"Windows.UI.Composition.Vector4KeyFrameAnimation";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.Visual
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IVisual ** Default Interface **
 *    Windows.UI.Composition.IVisual2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_Visual_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_Visual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_Visual[] = L"Windows.UI.Composition.Visual";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.VisualCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IVisualCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.Visual>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_UI_Composition_VisualCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_VisualCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_VisualCollection[] = L"Windows.UI.Composition.VisualCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.UI.Composition.VisualUnorderedCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Composition.IVisualUnorderedCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.Visual>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Composition_VisualUnorderedCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Composition_VisualUnorderedCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Composition_VisualUnorderedCollection[] = L"Windows.UI.Composition.VisualUnorderedCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#endif // defined(__cplusplus)
#pragma pop_macro("MIDL_CONST_ID")
// Restore the original value of the 'DEPRECATED' macro
#pragma pop_macro("DEPRECATED")

#ifdef __clang__
#pragma clang diagnostic pop // deprecated-declarations
#else
#pragma warning(pop)
#endif
#endif // __windows2Eui2Ecomposition_p_h__

#endif // __windows2Eui2Ecomposition_h__
