
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif /*COM_NO_WINDOWS_H*/
#ifndef __windows2Eui2Examl_h__
#define __windows2Eui2Examl_h__
#ifndef __windows2Eui2Examl_p_h__
#define __windows2Eui2Examl_p_h__


#pragma once

//
// Deprecated attribute support
//

#pragma push_macro("DEPRECATED")
#undef DEPRECATED

#if !defined(DISABLE_WINRT_DEPRECATION)
#if defined(__cplusplus)
#if __cplusplus >= 201402
#define DEPRECATED(x) [[deprecated(x)]]
#define DEPRECATEDENUMERATOR(x) [[deprecated(x)]]
#elif defined(_MSC_VER)
#if _MSC_VER >= 1900
#define DEPRECATED(x) [[deprecated(x)]]
#define DEPRECATEDENUMERATOR(x) [[deprecated(x)]]
#else
#define DEPRECATED(x) __declspec(deprecated(x))
#define DEPRECATEDENUMERATOR(x)
#endif // _MSC_VER >= 1900
#else // Not Standard C++ or MSVC, ignore the construct.
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif  // C++ deprecation
#else // C - disable deprecation
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif
#else // Deprecation is disabled
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif  /* DEPRECATED */

// Disable Deprecation for this header, MIDL verifies that cross-type access is acceptable
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#else
#pragma warning(push)
#pragma warning(disable: 4996)
#endif

// Ensure that the setting of the /ns_prefix command line switch is consistent for all headers.
// If you get an error from the compiler indicating "warning C4005: 'CHECK_NS_PREFIX_STATE': macro redefinition", this
// indicates that you have included two different headers with different settings for the /ns_prefix MIDL command line switch
#if !defined(DISABLE_NS_PREFIX_CHECKS)
#define CHECK_NS_PREFIX_STATE "always"
#endif // !defined(DISABLE_NS_PREFIX_CHECKS)


#pragma push_macro("MIDL_CONST_ID")
#undef MIDL_CONST_ID
#define MIDL_CONST_ID const __declspec(selectany)


//  API Contract Inclusion Definitions
#if !defined(SPECIFIC_API_CONTRACT_DEFINITIONS)
#if !defined(WINDOWS_APPLICATIONMODEL_FULLTRUSTAPPCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_FULLTRUSTAPPCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_FULLTRUSTAPPCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_STARTUPTASKCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_STARTUPTASKCONTRACT_VERSION 0x30000
#endif // defined(WINDOWS_APPLICATIONMODEL_STARTUPTASKCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_ACTIVATEDEVENTSCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_ACTIVATION_ACTIVATEDEVENTSCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_ACTIVATEDEVENTSCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_ACTIVATIONCAMERASETTINGSCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_ACTIVATION_ACTIVATIONCAMERASETTINGSCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_ACTIVATIONCAMERASETTINGSCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_CONTACTACTIVATEDEVENTSCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_ACTIVATION_CONTACTACTIVATEDEVENTSCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_CONTACTACTIVATEDEVENTSCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_WEBUISEARCHACTIVATEDEVENTSCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_ACTIVATION_WEBUISEARCHACTIVATEDEVENTSCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_WEBUISEARCHACTIVATEDEVENTSCONTRACT_VERSION)

#if !defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)
#define WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION 0x40000
#endif // defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)

#if !defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)
#define WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION 0xa0000
#endif // defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)

#if !defined(WINDOWS_UI_CORE_COREWINDOWDIALOGSCONTRACT_VERSION)
#define WINDOWS_UI_CORE_COREWINDOWDIALOGSCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_UI_CORE_COREWINDOWDIALOGSCONTRACT_VERSION)

#endif // defined(SPECIFIC_API_CONTRACT_DEFINITIONS)


// Header files for imported files
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "windowscontracts.h"
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.h"
#include "Windows.ApplicationModel.Activation.h"
#include "Windows.ApplicationModel.Core.h"
#include "Windows.ApplicationModel.DataTransfer.h"
#include "Windows.ApplicationModel.DataTransfer.DragDrop.h"
#include "Windows.Foundation.Numerics.h"
#include "Windows.Graphics.Imaging.h"
#include "Windows.UI.h"
#include "Windows.UI.Composition.h"
#include "Windows.UI.Core.h"
#include "Windows.UI.Input.h"
#include "Windows.UI.Xaml.Automation.Peers.h"
#include "Windows.UI.Xaml.Controls.h"
#include "Windows.UI.Xaml.Controls.Primitives.h"
#include "Windows.UI.Xaml.Data.h"
#include "Windows.UI.Xaml.Input.h"
#include "Windows.UI.Xaml.Interop.h"
#include "Windows.UI.Xaml.Media.h"
#include "Windows.UI.Xaml.Media.Animation.h"
#include "Windows.UI.Xaml.Media.Imaging.h"
#include "Windows.UI.Xaml.Media.Media3D.h"
// Importing Collections header
#include <windows.foundation.collections.h>

#if defined(__cplusplus) && !defined(CINTERFACE)
/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IApplicationInitializationCallback;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback ABI::Windows::UI::Xaml::IApplicationInitializationCallback

#endif // ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IBindingFailedEventHandler;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler ABI::Windows::UI::Xaml::IBindingFailedEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ICreateDefaultValueCallback;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback ABI::Windows::UI::Xaml::ICreateDefaultValueCallback

#endif // ____x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyPropertyChangedCallback;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback ABI::Windows::UI::Xaml::IDependencyPropertyChangedCallback

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyPropertyChangedEventHandler;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler ABI::Windows::UI::Xaml::IDependencyPropertyChangedEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDragEventHandler;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler ABI::Windows::UI::Xaml::IDragEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IEnteredBackgroundEventHandler;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler ABI::Windows::UI::Xaml::IEnteredBackgroundEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IExceptionRoutedEventHandler;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler ABI::Windows::UI::Xaml::IExceptionRoutedEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ILeavingBackgroundEventHandler;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler ABI::Windows::UI::Xaml::ILeavingBackgroundEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IPropertyChangedCallback;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback ABI::Windows::UI::Xaml::IPropertyChangedCallback

#endif // ____x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IRoutedEventHandler;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler ABI::Windows::UI::Xaml::IRoutedEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISizeChangedEventHandler;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler ABI::Windows::UI::Xaml::ISizeChangedEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISuspendingEventHandler;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler ABI::Windows::UI::Xaml::ISuspendingEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUnhandledExceptionEventHandler;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler ABI::Windows::UI::Xaml::IUnhandledExceptionEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualStateChangedEventHandler;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler ABI::Windows::UI::Xaml::IVisualStateChangedEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IWindowActivatedEventHandler;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler ABI::Windows::UI::Xaml::IWindowActivatedEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IWindowClosedEventHandler;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler ABI::Windows::UI::Xaml::IWindowClosedEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IWindowSizeChangedEventHandler;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler ABI::Windows::UI::Xaml::IWindowSizeChangedEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IWindowVisibilityChangedEventHandler;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler ABI::Windows::UI::Xaml::IWindowVisibilityChangedEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IAdaptiveTrigger;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger ABI::Windows::UI::Xaml::IAdaptiveTrigger

#endif // ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IAdaptiveTriggerFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory ABI::Windows::UI::Xaml::IAdaptiveTriggerFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IAdaptiveTriggerStatics;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics ABI::Windows::UI::Xaml::IAdaptiveTriggerStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplication_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplication_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IApplication;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIApplication ABI::Windows::UI::Xaml::IApplication

#endif // ____x_ABI_CWindows_CUI_CXaml_CIApplication_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplication2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplication2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IApplication2;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIApplication2 ABI::Windows::UI::Xaml::IApplication2

#endif // ____x_ABI_CWindows_CUI_CXaml_CIApplication2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplication3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplication3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IApplication3;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIApplication3 ABI::Windows::UI::Xaml::IApplication3

#endif // ____x_ABI_CWindows_CUI_CXaml_CIApplication3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IApplicationFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory ABI::Windows::UI::Xaml::IApplicationFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IApplicationInitializationCallbackParams;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams ABI::Windows::UI::Xaml::IApplicationInitializationCallbackParams

#endif // ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IApplicationOverrides;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides ABI::Windows::UI::Xaml::IApplicationOverrides

#endif // ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IApplicationOverrides2;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2 ABI::Windows::UI::Xaml::IApplicationOverrides2

#endif // ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IApplicationStatics;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics ABI::Windows::UI::Xaml::IApplicationStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IBindingFailedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs ABI::Windows::UI::Xaml::IBindingFailedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IBringIntoViewOptions;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions ABI::Windows::UI::Xaml::IBringIntoViewOptions

#endif // ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IBringIntoViewOptions2;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2 ABI::Windows::UI::Xaml::IBringIntoViewOptions2

#endif // ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IBringIntoViewRequestedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs ABI::Windows::UI::Xaml::IBringIntoViewRequestedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBrushTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBrushTransition_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IBrushTransition;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIBrushTransition ABI::Windows::UI::Xaml::IBrushTransition

#endif // ____x_ABI_CWindows_CUI_CXaml_CIBrushTransition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IBrushTransitionFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory ABI::Windows::UI::Xaml::IBrushTransitionFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IColorPaletteResources;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources ABI::Windows::UI::Xaml::IColorPaletteResources

#endif // ____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IColorPaletteResourcesFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory ABI::Windows::UI::Xaml::IColorPaletteResourcesFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ICornerRadiusHelper;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper ABI::Windows::UI::Xaml::ICornerRadiusHelper

#endif // ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ICornerRadiusHelperStatics;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics ABI::Windows::UI::Xaml::ICornerRadiusHelperStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDataContextChangedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs ABI::Windows::UI::Xaml::IDataContextChangedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDataTemplate;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplate ABI::Windows::UI::Xaml::IDataTemplate

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDataTemplateExtension;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension ABI::Windows::UI::Xaml::IDataTemplateExtension

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDataTemplateFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory ABI::Windows::UI::Xaml::IDataTemplateFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDataTemplateKey;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey ABI::Windows::UI::Xaml::IDataTemplateKey

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDataTemplateKeyFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory ABI::Windows::UI::Xaml::IDataTemplateKeyFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDataTemplateStatics2;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2 ABI::Windows::UI::Xaml::IDataTemplateStatics2

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDebugSettings;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings ABI::Windows::UI::Xaml::IDebugSettings

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDebugSettings2;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2 ABI::Windows::UI::Xaml::IDebugSettings2

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDebugSettings3;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3 ABI::Windows::UI::Xaml::IDebugSettings3

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDebugSettings4;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings4 ABI::Windows::UI::Xaml::IDebugSettings4

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyObject;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject ABI::Windows::UI::Xaml::IDependencyObject

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyObject2;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2 ABI::Windows::UI::Xaml::IDependencyObject2

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyObjectCollectionFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory ABI::Windows::UI::Xaml::IDependencyObjectCollectionFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyObjectFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory ABI::Windows::UI::Xaml::IDependencyObjectFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyProperty;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty ABI::Windows::UI::Xaml::IDependencyProperty

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyPropertyChangedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs ABI::Windows::UI::Xaml::IDependencyPropertyChangedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyPropertyStatics;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics ABI::Windows::UI::Xaml::IDependencyPropertyStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDispatcherTimer;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer ABI::Windows::UI::Xaml::IDispatcherTimer

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDispatcherTimerFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory ABI::Windows::UI::Xaml::IDispatcherTimerFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDragEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs ABI::Windows::UI::Xaml::IDragEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDragEventArgs2;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2 ABI::Windows::UI::Xaml::IDragEventArgs2

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDragEventArgs3;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3 ABI::Windows::UI::Xaml::IDragEventArgs3

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDragOperationDeferral;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral ABI::Windows::UI::Xaml::IDragOperationDeferral

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDragStartingEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs ABI::Windows::UI::Xaml::IDragStartingEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDragStartingEventArgs2;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2 ABI::Windows::UI::Xaml::IDragStartingEventArgs2

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragUI_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragUI_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDragUI;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDragUI ABI::Windows::UI::Xaml::IDragUI

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragUI_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDragUIOverride;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride ABI::Windows::UI::Xaml::IDragUIOverride

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDropCompletedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs ABI::Windows::UI::Xaml::IDropCompletedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDurationHelper;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelper ABI::Windows::UI::Xaml::IDurationHelper

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDurationHelperStatics;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics ABI::Windows::UI::Xaml::IDurationHelperStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IEffectiveViewportChangedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs ABI::Windows::UI::Xaml::IEffectiveViewportChangedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIElementFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IElementFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIElementFactory ABI::Windows::UI::Xaml::IElementFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIElementFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IElementFactoryGetArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs ABI::Windows::UI::Xaml::IElementFactoryGetArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IElementFactoryGetArgsFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory ABI::Windows::UI::Xaml::IElementFactoryGetArgsFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IElementFactoryRecycleArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs ABI::Windows::UI::Xaml::IElementFactoryRecycleArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IElementFactoryRecycleArgsFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory ABI::Windows::UI::Xaml::IElementFactoryRecycleArgsFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IElementSoundPlayer;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer ABI::Windows::UI::Xaml::IElementSoundPlayer

#endif // ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IElementSoundPlayerStatics;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics ABI::Windows::UI::Xaml::IElementSoundPlayerStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IElementSoundPlayerStatics2;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2 ABI::Windows::UI::Xaml::IElementSoundPlayerStatics2

#endif // ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IEventTrigger;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger ABI::Windows::UI::Xaml::IEventTrigger

#endif // ____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IExceptionRoutedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs ABI::Windows::UI::Xaml::IExceptionRoutedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IExceptionRoutedEventArgsFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory ABI::Windows::UI::Xaml::IExceptionRoutedEventArgsFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElement;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement ABI::Windows::UI::Xaml::IFrameworkElement

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElement2;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2 ABI::Windows::UI::Xaml::IFrameworkElement2

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElement3;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3 ABI::Windows::UI::Xaml::IFrameworkElement3

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElement4;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4 ABI::Windows::UI::Xaml::IFrameworkElement4

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElement6;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6 ABI::Windows::UI::Xaml::IFrameworkElement6

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElement7;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7 ABI::Windows::UI::Xaml::IFrameworkElement7

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElementFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory ABI::Windows::UI::Xaml::IFrameworkElementFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElementOverrides;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides ABI::Windows::UI::Xaml::IFrameworkElementOverrides

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElementOverrides2;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2 ABI::Windows::UI::Xaml::IFrameworkElementOverrides2

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElementProtected7;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7 ABI::Windows::UI::Xaml::IFrameworkElementProtected7

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElementStatics;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics ABI::Windows::UI::Xaml::IFrameworkElementStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElementStatics2;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2 ABI::Windows::UI::Xaml::IFrameworkElementStatics2

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElementStatics4;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4 ABI::Windows::UI::Xaml::IFrameworkElementStatics4

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElementStatics5;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5 ABI::Windows::UI::Xaml::IFrameworkElementStatics5

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElementStatics6;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6 ABI::Windows::UI::Xaml::IFrameworkElementStatics6

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkTemplate;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate ABI::Windows::UI::Xaml::IFrameworkTemplate

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkTemplateFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory ABI::Windows::UI::Xaml::IFrameworkTemplateFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkView;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkView ABI::Windows::UI::Xaml::IFrameworkView

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkViewSource;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource ABI::Windows::UI::Xaml::IFrameworkViewSource

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IGridLengthHelper;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper ABI::Windows::UI::Xaml::IGridLengthHelper

#endif // ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IGridLengthHelperStatics;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics ABI::Windows::UI::Xaml::IGridLengthHelperStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IMediaFailedRoutedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs ABI::Windows::UI::Xaml::IMediaFailedRoutedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPointHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPointHelper_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IPointHelper;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIPointHelper ABI::Windows::UI::Xaml::IPointHelper

#endif // ____x_ABI_CWindows_CUI_CXaml_CIPointHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IPointHelperStatics;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics ABI::Windows::UI::Xaml::IPointHelperStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IPropertyMetadata;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata ABI::Windows::UI::Xaml::IPropertyMetadata

#endif // ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IPropertyMetadataFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory ABI::Windows::UI::Xaml::IPropertyMetadataFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IPropertyMetadataStatics;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics ABI::Windows::UI::Xaml::IPropertyMetadataStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IPropertyPath;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPath ABI::Windows::UI::Xaml::IPropertyPath

#endif // ____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IPropertyPathFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory ABI::Windows::UI::Xaml::IPropertyPathFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRectHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRectHelper_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IRectHelper;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIRectHelper ABI::Windows::UI::Xaml::IRectHelper

#endif // ____x_ABI_CWindows_CUI_CXaml_CIRectHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IRectHelperStatics;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics ABI::Windows::UI::Xaml::IRectHelperStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IResourceDictionary;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary ABI::Windows::UI::Xaml::IResourceDictionary

#endif // ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IResourceDictionaryFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory ABI::Windows::UI::Xaml::IResourceDictionaryFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IRoutedEvent;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent ABI::Windows::UI::Xaml::IRoutedEvent

#endif // ____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IRoutedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs ABI::Windows::UI::Xaml::IRoutedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IRoutedEventArgsFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory ABI::Windows::UI::Xaml::IRoutedEventArgsFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIScalarTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIScalarTransition_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IScalarTransition;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIScalarTransition ABI::Windows::UI::Xaml::IScalarTransition

#endif // ____x_ABI_CWindows_CUI_CXaml_CIScalarTransition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IScalarTransitionFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory ABI::Windows::UI::Xaml::IScalarTransitionFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetter_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISetter;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CISetter ABI::Windows::UI::Xaml::ISetter

#endif // ____x_ABI_CWindows_CUI_CXaml_CISetter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetter2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetter2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISetter2;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CISetter2 ABI::Windows::UI::Xaml::ISetter2

#endif // ____x_ABI_CWindows_CUI_CXaml_CISetter2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetterBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetterBase_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISetterBase;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CISetterBase ABI::Windows::UI::Xaml::ISetterBase

#endif // ____x_ABI_CWindows_CUI_CXaml_CISetterBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISetterBaseCollection;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection ABI::Windows::UI::Xaml::ISetterBaseCollection

#endif // ____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISetterBaseFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory ABI::Windows::UI::Xaml::ISetterBaseFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetterFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISetterFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CISetterFactory ABI::Windows::UI::Xaml::ISetterFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CISetterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISizeChangedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs ABI::Windows::UI::Xaml::ISizeChangedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISizeHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISizeHelper_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISizeHelper;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CISizeHelper ABI::Windows::UI::Xaml::ISizeHelper

#endif // ____x_ABI_CWindows_CUI_CXaml_CISizeHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISizeHelperStatics;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics ABI::Windows::UI::Xaml::ISizeHelperStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IStateTrigger;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIStateTrigger ABI::Windows::UI::Xaml::IStateTrigger

#endif // ____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IStateTriggerBase;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase ABI::Windows::UI::Xaml::IStateTriggerBase

#endif // ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IStateTriggerBaseFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory ABI::Windows::UI::Xaml::IStateTriggerBaseFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IStateTriggerBaseProtected;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected ABI::Windows::UI::Xaml::IStateTriggerBaseProtected

#endif // ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IStateTriggerStatics;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics ABI::Windows::UI::Xaml::IStateTriggerStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStyle_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStyle_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IStyle;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIStyle ABI::Windows::UI::Xaml::IStyle

#endif // ____x_ABI_CWindows_CUI_CXaml_CIStyle_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IStyleFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIStyleFactory ABI::Windows::UI::Xaml::IStyleFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ITargetPropertyPath;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath ABI::Windows::UI::Xaml::ITargetPropertyPath

#endif // ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ITargetPropertyPathFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory ABI::Windows::UI::Xaml::ITargetPropertyPathFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IThicknessHelper;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper ABI::Windows::UI::Xaml::IThicknessHelper

#endif // ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IThicknessHelperStatics;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics ABI::Windows::UI::Xaml::IThicknessHelperStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITriggerAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerAction_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ITriggerAction;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CITriggerAction ABI::Windows::UI::Xaml::ITriggerAction

#endif // ____x_ABI_CWindows_CUI_CXaml_CITriggerAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ITriggerActionFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory ABI::Windows::UI::Xaml::ITriggerActionFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITriggerBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerBase_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ITriggerBase;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CITriggerBase ABI::Windows::UI::Xaml::ITriggerBase

#endif // ____x_ABI_CWindows_CUI_CXaml_CITriggerBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ITriggerBaseFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory ABI::Windows::UI::Xaml::ITriggerBaseFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElement;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElement ABI::Windows::UI::Xaml::IUIElement

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement10_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement10_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElement10;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElement10 ABI::Windows::UI::Xaml::IUIElement10

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement10_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElement2;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2 ABI::Windows::UI::Xaml::IUIElement2

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElement3;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3 ABI::Windows::UI::Xaml::IUIElement3

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElement4;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4 ABI::Windows::UI::Xaml::IUIElement4

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement5_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElement5;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5 ABI::Windows::UI::Xaml::IUIElement5

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement7_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElement7;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElement7 ABI::Windows::UI::Xaml::IUIElement7

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement8_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElement8;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElement8 ABI::Windows::UI::Xaml::IUIElement8

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement9_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement9_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElement9;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9 ABI::Windows::UI::Xaml::IUIElement9

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement9_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory ABI::Windows::UI::Xaml::IUIElementFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementOverrides;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides ABI::Windows::UI::Xaml::IUIElementOverrides

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementOverrides7;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7 ABI::Windows::UI::Xaml::IUIElementOverrides7

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementOverrides8;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8 ABI::Windows::UI::Xaml::IUIElementOverrides8

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementOverrides9;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9 ABI::Windows::UI::Xaml::IUIElementOverrides9

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementStatics;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics ABI::Windows::UI::Xaml::IUIElementStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementStatics10;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10 ABI::Windows::UI::Xaml::IUIElementStatics10

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementStatics2;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2 ABI::Windows::UI::Xaml::IUIElementStatics2

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementStatics3;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3 ABI::Windows::UI::Xaml::IUIElementStatics3

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementStatics4;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4 ABI::Windows::UI::Xaml::IUIElementStatics4

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementStatics5;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5 ABI::Windows::UI::Xaml::IUIElementStatics5

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementStatics6;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6 ABI::Windows::UI::Xaml::IUIElementStatics6

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementStatics7;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7 ABI::Windows::UI::Xaml::IUIElementStatics7

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementStatics8;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8 ABI::Windows::UI::Xaml::IUIElementStatics8

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementStatics9;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9 ABI::Windows::UI::Xaml::IUIElementStatics9

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementWeakCollection;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection ABI::Windows::UI::Xaml::IUIElementWeakCollection

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementWeakCollectionFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory ABI::Windows::UI::Xaml::IUIElementWeakCollectionFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUnhandledExceptionEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs ABI::Windows::UI::Xaml::IUnhandledExceptionEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVector3Transition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVector3Transition_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVector3Transition;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIVector3Transition ABI::Windows::UI::Xaml::IVector3Transition

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVector3Transition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVector3TransitionFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory ABI::Windows::UI::Xaml::IVector3TransitionFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualState_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualState_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualState;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIVisualState ABI::Windows::UI::Xaml::IVisualState

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualState_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualState2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualState2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualState2;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIVisualState2 ABI::Windows::UI::Xaml::IVisualState2

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualState2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualStateChangedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs ABI::Windows::UI::Xaml::IVisualStateChangedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualStateGroup;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup ABI::Windows::UI::Xaml::IVisualStateGroup

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualStateManager;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager ABI::Windows::UI::Xaml::IVisualStateManager

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualStateManagerFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory ABI::Windows::UI::Xaml::IVisualStateManagerFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualStateManagerOverrides;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides ABI::Windows::UI::Xaml::IVisualStateManagerOverrides

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualStateManagerProtected;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected ABI::Windows::UI::Xaml::IVisualStateManagerProtected

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualStateManagerStatics;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics ABI::Windows::UI::Xaml::IVisualStateManagerStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualTransition;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition ABI::Windows::UI::Xaml::IVisualTransition

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualTransitionFactory;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory ABI::Windows::UI::Xaml::IVisualTransitionFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IWindow;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIWindow ABI::Windows::UI::Xaml::IWindow

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindow_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindow2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IWindow2;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIWindow2 ABI::Windows::UI::Xaml::IWindow2

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindow2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindow3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IWindow3;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIWindow3 ABI::Windows::UI::Xaml::IWindow3

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindow3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindow4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IWindow4;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIWindow4 ABI::Windows::UI::Xaml::IWindow4

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindow4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IWindowCreatedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs ABI::Windows::UI::Xaml::IWindowCreatedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IWindowStatics;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIWindowStatics ABI::Windows::UI::Xaml::IWindowStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIXamlRoot_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIXamlRoot_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IXamlRoot;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIXamlRoot ABI::Windows::UI::Xaml::IXamlRoot

#endif // ____x_ABI_CWindows_CUI_CXaml_CIXamlRoot_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IXamlRootChangedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs ABI::Windows::UI::Xaml::IXamlRootChangedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs_FWD_DEFINED__

// Parameterized interface forward declarations (C++)

// Collection interface definitions
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace DataTransfer {
                typedef enum DataPackageOperation : unsigned int DataPackageOperation;
            } /* DataTransfer */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_USE
#define DEF___FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("8b98aea9-64f0-5672-b30e-dfd9c2e4f6fe"))
IAsyncOperation<enum ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation> : IAsyncOperation_impl<enum ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.DataTransfer.DataPackageOperation>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<enum ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation> __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_t;
#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("add21d46-17df-5a43-a685-3262fce84643"))
IAsyncOperationCompletedHandler<enum ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation> : IAsyncOperationCompletedHandler_impl<enum ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.DataTransfer.DataPackageOperation>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<enum ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation> __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct Point Point;
        } /* Foundation */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CFoundation__CPoint_USE
#define DEF___FIIterator_1_Windows__CFoundation__CPoint_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c602b59e-0a8e-5e99-b478-2b564585278d"))
IIterator<struct ABI::Windows::Foundation::Point> : IIterator_impl<struct ABI::Windows::Foundation::Point>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Point>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<struct ABI::Windows::Foundation::Point> __FIIterator_1_Windows__CFoundation__CPoint_t;
#define __FIIterator_1_Windows__CFoundation__CPoint ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CFoundation__CPoint_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CFoundation__CPoint_USE */

#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CFoundation__CPoint_USE
#define DEF___FIIterable_1_Windows__CFoundation__CPoint_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c192280d-3a09-5423-9dc5-67b83ebde41d"))
IIterable<struct ABI::Windows::Foundation::Point> : IIterable_impl<struct ABI::Windows::Foundation::Point>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Point>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<struct ABI::Windows::Foundation::Point> __FIIterable_1_Windows__CFoundation__CPoint_t;
#define __FIIterable_1_Windows__CFoundation__CPoint ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CFoundation__CPoint_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CFoundation__CPoint_USE */

#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_USE
#define DEF___FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("377f6162-6e4d-574e-bf01-77f4fd021d0e"))
IIterator<__FIIterable_1_Windows__CFoundation__CPoint*> : IIterator_impl<__FIIterable_1_Windows__CFoundation__CPoint*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Point>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<__FIIterable_1_Windows__CFoundation__CPoint*> __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_t;
#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint ABI::Windows::Foundation::Collections::__FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_USE */

#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_USE
#define DEF___FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ae44597e-d411-5b7f-bbec-6a96c94a107a"))
IIterable<__FIIterable_1_Windows__CFoundation__CPoint*> : IIterable_impl<__FIIterable_1_Windows__CFoundation__CPoint*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Point>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<__FIIterable_1_Windows__CFoundation__CPoint*> __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_t;
#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint ABI::Windows::Foundation::Collections::__FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_USE */

#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000


#ifndef DEF___FIKeyValuePair_2_IInspectable_IInspectable_USE
#define DEF___FIKeyValuePair_2_IInspectable_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("59e7ae0c-c29d-5ad6-bef5-dedb52a198e1"))
IKeyValuePair<IInspectable*, IInspectable*> : IKeyValuePair_impl<IInspectable*, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IKeyValuePair`2<Object, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IKeyValuePair<IInspectable*, IInspectable*> __FIKeyValuePair_2_IInspectable_IInspectable_t;
#define __FIKeyValuePair_2_IInspectable_IInspectable ABI::Windows::Foundation::Collections::__FIKeyValuePair_2_IInspectable_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIKeyValuePair_2_IInspectable_IInspectable_USE */



#ifndef DEF___FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_USE
#define DEF___FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("31e55e8a-0f05-52fd-90d3-b04aa331aaa4"))
IIterator<__FIKeyValuePair_2_IInspectable_IInspectable*> : IIterator_impl<__FIKeyValuePair_2_IInspectable_IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Object, Object>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<__FIKeyValuePair_2_IInspectable_IInspectable*> __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_t;
#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable ABI::Windows::Foundation::Collections::__FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_USE */



#ifndef DEF___FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_USE
#define DEF___FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("33ac68f0-1084-529a-8a17-4e7c8adb7a0c"))
IIterable<__FIKeyValuePair_2_IInspectable_IInspectable*> : IIterable_impl<__FIKeyValuePair_2_IInspectable_IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Object, Object>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<__FIKeyValuePair_2_IInspectable_IInspectable*> __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_t;
#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable ABI::Windows::Foundation::Collections::__FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_USE */


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class DependencyObject;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CDependencyObject_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CDependencyObject_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("29f8d454-905d-587e-b9d8-bfd418805a65"))
IIterator<ABI::Windows::UI::Xaml::DependencyObject*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DependencyObject*, ABI::Windows::UI::Xaml::IDependencyObject*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.DependencyObject>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::DependencyObject*> __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_t;
#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CDependencyObject_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CDependencyObject_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CDependencyObject_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CDependencyObject_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f66c6bd3-55b4-5bbb-b82a-6d9ce383091a"))
IIterable<ABI::Windows::UI::Xaml::DependencyObject*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DependencyObject*, ABI::Windows::UI::Xaml::IDependencyObject*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.DependencyObject>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::DependencyObject*> __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_t;
#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CDependencyObject_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CDependencyObject_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    class KeyboardAccelerator;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IKeyboardAccelerator;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator ABI::Windows::UI::Xaml::Input::IKeyboardAccelerator

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8b6ac198-eaa0-50e6-9a35-32dfdf1f59e1"))
IIterator<ABI::Windows::UI::Xaml::Input::KeyboardAccelerator*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::KeyboardAccelerator*, ABI::Windows::UI::Xaml::Input::IKeyboardAccelerator*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Input.KeyboardAccelerator>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::Input::KeyboardAccelerator*> __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_t;
#define __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("af1e5ff1-d518-5521-b40e-6f524d04c129"))
IIterable<ABI::Windows::UI::Xaml::Input::KeyboardAccelerator*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::KeyboardAccelerator*, ABI::Windows::UI::Xaml::Input::IKeyboardAccelerator*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Input.KeyboardAccelerator>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::Input::KeyboardAccelerator*> __FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_t;
#define __FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    class Pointer;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIPointer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIPointer_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IPointer;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIPointer ABI::Windows::UI::Xaml::Input::IPointer

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIPointer_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8cb1347d-8888-5fb3-bffd-e6caf61b4f03"))
IIterator<ABI::Windows::UI::Xaml::Input::Pointer*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::Pointer*, ABI::Windows::UI::Xaml::Input::IPointer*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Input.Pointer>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::Input::Pointer*> __FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_t;
#define __FIIterator_1_Windows__CUI__CXaml__CInput__CPointer ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6cf9f859-2234-510d-860a-db328030cbcc"))
IIterable<ABI::Windows::UI::Xaml::Input::Pointer*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::Pointer*, ABI::Windows::UI::Xaml::Input::IPointer*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Input.Pointer>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::Input::Pointer*> __FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_t;
#define __FIIterable_1_Windows__CUI__CXaml__CInput__CPointer ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class XamlLight;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IXamlLight;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight ABI::Windows::UI::Xaml::Media::IXamlLight

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("af1b4914-a3e9-5f74-b04d-e086ce23aba6"))
IIterator<ABI::Windows::UI::Xaml::Media::XamlLight*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::XamlLight*, ABI::Windows::UI::Xaml::Media::IXamlLight*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.XamlLight>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::Media::XamlLight*> __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight_t;
#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("03229ead-2ba2-5101-9324-a2649db7e61d"))
IIterable<ABI::Windows::UI::Xaml::Media::XamlLight*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::XamlLight*, ABI::Windows::UI::Xaml::Media::IXamlLight*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Media.XamlLight>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::Media::XamlLight*> __FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight_t;
#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class ResourceDictionary;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("849a2f3a-2e5e-58a8-b76e-73450ea680c0"))
IIterator<ABI::Windows::UI::Xaml::ResourceDictionary*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::ResourceDictionary*, ABI::Windows::UI::Xaml::IResourceDictionary*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.ResourceDictionary>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::ResourceDictionary*> __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_t;
#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("eaf20635-a462-5397-bee1-f7a09504653b"))
IIterable<ABI::Windows::UI::Xaml::ResourceDictionary*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::ResourceDictionary*, ABI::Windows::UI::Xaml::IResourceDictionary*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.ResourceDictionary>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::ResourceDictionary*> __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_t;
#define __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class SetterBase;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CSetterBase_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CSetterBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3198322e-2527-58d1-8d92-9d22b977d255"))
IIterator<ABI::Windows::UI::Xaml::SetterBase*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::SetterBase*, ABI::Windows::UI::Xaml::ISetterBase*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.SetterBase>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::SetterBase*> __FIIterator_1_Windows__CUI__CXaml__CSetterBase_t;
#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CSetterBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CSetterBase_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CSetterBase_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CSetterBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("aafe70cb-90a8-5719-bd3e-f0b066ed1626"))
IIterable<ABI::Windows::UI::Xaml::SetterBase*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::SetterBase*, ABI::Windows::UI::Xaml::ISetterBase*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.SetterBase>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::SetterBase*> __FIIterable_1_Windows__CUI__CXaml__CSetterBase_t;
#define __FIIterable_1_Windows__CUI__CXaml__CSetterBase ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CSetterBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CSetterBase_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class StateTriggerBase;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d78b9c25-3214-54c6-8405-479344309277"))
IIterator<ABI::Windows::UI::Xaml::StateTriggerBase*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::StateTriggerBase*, ABI::Windows::UI::Xaml::IStateTriggerBase*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.StateTriggerBase>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::StateTriggerBase*> __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_t;
#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("073325bc-8f0f-56d8-b521-6be47644c554"))
IIterable<ABI::Windows::UI::Xaml::StateTriggerBase*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::StateTriggerBase*, ABI::Windows::UI::Xaml::IStateTriggerBase*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.StateTriggerBase>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::StateTriggerBase*> __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_t;
#define __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class TriggerAction;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CTriggerAction_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CTriggerAction_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fa0c6c2e-f81a-543c-b8b6-5c18d36711b0"))
IIterator<ABI::Windows::UI::Xaml::TriggerAction*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::TriggerAction*, ABI::Windows::UI::Xaml::ITriggerAction*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.TriggerAction>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::TriggerAction*> __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_t;
#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CTriggerAction_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CTriggerAction_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CTriggerAction_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CTriggerAction_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a9d34579-8a6a-58bf-85fd-0f37324e2397"))
IIterable<ABI::Windows::UI::Xaml::TriggerAction*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::TriggerAction*, ABI::Windows::UI::Xaml::ITriggerAction*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.TriggerAction>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::TriggerAction*> __FIIterable_1_Windows__CUI__CXaml__CTriggerAction_t;
#define __FIIterable_1_Windows__CUI__CXaml__CTriggerAction ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CTriggerAction_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CTriggerAction_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class TriggerBase;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CTriggerBase_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CTriggerBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d317c81a-5dda-59f6-8ce9-44f2877bfae8"))
IIterator<ABI::Windows::UI::Xaml::TriggerBase*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::TriggerBase*, ABI::Windows::UI::Xaml::ITriggerBase*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.TriggerBase>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::TriggerBase*> __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_t;
#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CTriggerBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CTriggerBase_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CTriggerBase_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CTriggerBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d697764f-4e15-5888-a2a5-7b4cf0eb07a5"))
IIterable<ABI::Windows::UI::Xaml::TriggerBase*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::TriggerBase*, ABI::Windows::UI::Xaml::ITriggerBase*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.TriggerBase>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::TriggerBase*> __FIIterable_1_Windows__CUI__CXaml__CTriggerBase_t;
#define __FIIterable_1_Windows__CUI__CXaml__CTriggerBase ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CTriggerBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CTriggerBase_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class UIElement;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CUIElement_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CUIElement_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1d1f9d60-d53b-57f7-b144-8f7c487846e8"))
IIterator<ABI::Windows::UI::Xaml::UIElement*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.UIElement>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::UIElement*> __FIIterator_1_Windows__CUI__CXaml__CUIElement_t;
#define __FIIterator_1_Windows__CUI__CXaml__CUIElement ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CUIElement_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CUIElement_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CUIElement_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CUIElement_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("42e26ae1-d357-57e8-bb48-f75c9ff69d91"))
IIterable<ABI::Windows::UI::Xaml::UIElement*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.UIElement>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::UIElement*> __FIIterable_1_Windows__CUI__CXaml__CUIElement_t;
#define __FIIterable_1_Windows__CUI__CXaml__CUIElement ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CUIElement_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CUIElement_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class VisualState;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CVisualState_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CVisualState_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f20bd8bc-6dda-5c71-bd39-c57137c5a4ed"))
IIterator<ABI::Windows::UI::Xaml::VisualState*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualState*, ABI::Windows::UI::Xaml::IVisualState*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.VisualState>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::VisualState*> __FIIterator_1_Windows__CUI__CXaml__CVisualState_t;
#define __FIIterator_1_Windows__CUI__CXaml__CVisualState ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CVisualState_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CVisualState_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CVisualState_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CVisualState_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1fb071a3-a064-5619-a94e-23c01a4cbf3a"))
IIterable<ABI::Windows::UI::Xaml::VisualState*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualState*, ABI::Windows::UI::Xaml::IVisualState*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.VisualState>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::VisualState*> __FIIterable_1_Windows__CUI__CXaml__CVisualState_t;
#define __FIIterable_1_Windows__CUI__CXaml__CVisualState ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CVisualState_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CVisualState_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class VisualStateGroup;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("09e95afc-3096-50c1-b05a-acae1a8cb92e"))
IIterator<ABI::Windows::UI::Xaml::VisualStateGroup*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualStateGroup*, ABI::Windows::UI::Xaml::IVisualStateGroup*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.VisualStateGroup>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::VisualStateGroup*> __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_t;
#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5d9ab411-e991-55b0-b16c-a400a50a93df"))
IIterable<ABI::Windows::UI::Xaml::VisualStateGroup*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualStateGroup*, ABI::Windows::UI::Xaml::IVisualStateGroup*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.VisualStateGroup>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::VisualStateGroup*> __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_t;
#define __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class VisualTransition;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CVisualTransition_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CVisualTransition_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5ae4cb71-a8b8-506b-b31b-62db11f66257"))
IIterator<ABI::Windows::UI::Xaml::VisualTransition*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualTransition*, ABI::Windows::UI::Xaml::IVisualTransition*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.VisualTransition>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::VisualTransition*> __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_t;
#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CVisualTransition_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CVisualTransition_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CVisualTransition_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CVisualTransition_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("017a8eb0-e942-5f25-a945-205a9470b9fc"))
IIterable<ABI::Windows::UI::Xaml::VisualTransition*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualTransition*, ABI::Windows::UI::Xaml::IVisualTransition*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.VisualTransition>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::VisualTransition*> __FIIterable_1_Windows__CUI__CXaml__CVisualTransition_t;
#define __FIIterable_1_Windows__CUI__CXaml__CVisualTransition ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CVisualTransition_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CVisualTransition_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#ifndef DEF___FIMapView_2_IInspectable_IInspectable_USE
#define DEF___FIMapView_2_IInspectable_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("efe76d10-cb60-50ad-8a4f-6885cd6212a1"))
IMapView<IInspectable*, IInspectable*> : IMapView_impl<IInspectable*, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IMapView`2<Object, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMapView<IInspectable*, IInspectable*> __FIMapView_2_IInspectable_IInspectable_t;
#define __FIMapView_2_IInspectable_IInspectable ABI::Windows::Foundation::Collections::__FIMapView_2_IInspectable_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMapView_2_IInspectable_IInspectable_USE */



#ifndef DEF___FIMap_2_IInspectable_IInspectable_USE
#define DEF___FIMap_2_IInspectable_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f5f69427-55ed-5512-8429-d4f6626dfcdd"))
IMap<IInspectable*, IInspectable*> : IMap_impl<IInspectable*, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IMap`2<Object, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMap<IInspectable*, IInspectable*> __FIMap_2_IInspectable_IInspectable_t;
#define __FIMap_2_IInspectable_IInspectable ABI::Windows::Foundation::Collections::__FIMap_2_IInspectable_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMap_2_IInspectable_IInspectable_USE */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fe750d77-1307-5df2-a021-1c7a8d6b80ad"))
IVectorView<ABI::Windows::UI::Xaml::DependencyObject*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DependencyObject*, ABI::Windows::UI::Xaml::IDependencyObject*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.DependencyObject>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::DependencyObject*> __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CDependencyObject_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CDependencyObject_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("771b857e-ab5c-5db8-a021-397c92cdc44c"))
IVector<ABI::Windows::UI::Xaml::DependencyObject*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DependencyObject*, ABI::Windows::UI::Xaml::IDependencyObject*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.DependencyObject>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Xaml::DependencyObject*> __FIVector_1_Windows__CUI__CXaml__CDependencyObject_t;
#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CDependencyObject_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CDependencyObject_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_USE
#define DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b62dec93-a7a5-5ff5-b2d2-6bd20ca0bd4d"))
VectorChangedEventHandler<ABI::Windows::UI::Xaml::DependencyObject*> : VectorChangedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DependencyObject*, ABI::Windows::UI::Xaml::IDependencyObject*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.VectorChangedEventHandler`1<Windows.UI.Xaml.DependencyObject>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef VectorChangedEventHandler<ABI::Windows::UI::Xaml::DependencyObject*> __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_t;
#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::__FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_USE
#define DEF___FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fac6f4d2-96fd-5ceb-80bf-46ac6529fc65"))
IObservableVector<ABI::Windows::UI::Xaml::DependencyObject*> : IObservableVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DependencyObject*, ABI::Windows::UI::Xaml::IDependencyObject*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IObservableVector`1<Windows.UI.Xaml.DependencyObject>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IObservableVector<ABI::Windows::UI::Xaml::DependencyObject*> __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_t;
#define __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::__FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4d5e3d08-e27c-5d05-a1dc-9885a51c3721"))
IVectorView<ABI::Windows::UI::Xaml::Input::KeyboardAccelerator*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::KeyboardAccelerator*, ABI::Windows::UI::Xaml::Input::IKeyboardAccelerator*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Input.KeyboardAccelerator>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::Input::KeyboardAccelerator*> __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6250f79f-7668-51e9-86a3-3821217a6631"))
IVectorView<ABI::Windows::UI::Xaml::Input::Pointer*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::Pointer*, ABI::Windows::UI::Xaml::Input::IPointer*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Input.Pointer>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::Input::Pointer*> __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("79432908-e055-5c13-bc00-255796d59f5b"))
IVectorView<ABI::Windows::UI::Xaml::Media::XamlLight*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::XamlLight*, ABI::Windows::UI::Xaml::Media::IXamlLight*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.XamlLight>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::Media::XamlLight*> __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("36ce8ed8-c1a9-55b7-86dc-b41b8ed8edf4"))
IVectorView<ABI::Windows::UI::Xaml::ResourceDictionary*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::ResourceDictionary*, ABI::Windows::UI::Xaml::IResourceDictionary*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.ResourceDictionary>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::ResourceDictionary*> __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CSetterBase_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CSetterBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("88eef29a-842b-55c2-a936-2b9d75e923e5"))
IVectorView<ABI::Windows::UI::Xaml::SetterBase*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::SetterBase*, ABI::Windows::UI::Xaml::ISetterBase*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.SetterBase>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::SetterBase*> __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CSetterBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CSetterBase_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("2bf3a979-a6dc-592b-98ee-cc7c3d9caab2"))
IVectorView<ABI::Windows::UI::Xaml::StateTriggerBase*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::StateTriggerBase*, ABI::Windows::UI::Xaml::IStateTriggerBase*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.StateTriggerBase>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::StateTriggerBase*> __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b6c7ce15-6a2f-5bbb-9efb-49be20b928a1"))
IVectorView<ABI::Windows::UI::Xaml::TriggerAction*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::TriggerAction*, ABI::Windows::UI::Xaml::ITriggerAction*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.TriggerAction>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::TriggerAction*> __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6c97f246-4010-5c09-9722-39fcc3d0647d"))
IVectorView<ABI::Windows::UI::Xaml::TriggerBase*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::TriggerBase*, ABI::Windows::UI::Xaml::ITriggerBase*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.TriggerBase>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::TriggerBase*> __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CUIElement_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CUIElement_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f3864c10-14a4-5516-b1d9-63b6579429b1"))
IVectorView<ABI::Windows::UI::Xaml::UIElement*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.UIElement>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::UIElement*> __FIVectorView_1_Windows__CUI__CXaml__CUIElement_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CUIElement_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CUIElement_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualState_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualState_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("eb031bb8-8028-5164-9699-1eb288383fa8"))
IVectorView<ABI::Windows::UI::Xaml::VisualState*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualState*, ABI::Windows::UI::Xaml::IVisualState*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.VisualState>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::VisualState*> __FIVectorView_1_Windows__CUI__CXaml__CVisualState_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CVisualState_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualState_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("adf1746e-8936-546a-9733-8626880c4ce1"))
IVectorView<ABI::Windows::UI::Xaml::VisualStateGroup*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualStateGroup*, ABI::Windows::UI::Xaml::IVisualStateGroup*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.VisualStateGroup>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::VisualStateGroup*> __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bb3d4d2f-3406-5f29-812a-bb1e437863da"))
IVectorView<ABI::Windows::UI::Xaml::VisualTransition*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualTransition*, ABI::Windows::UI::Xaml::IVisualTransition*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.VisualTransition>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::VisualTransition*> __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e4927feb-1e4a-5be3-bda3-62cf4e520258"))
IVector<ABI::Windows::UI::Xaml::Input::KeyboardAccelerator*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::KeyboardAccelerator*, ABI::Windows::UI::Xaml::Input::IKeyboardAccelerator*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Input.KeyboardAccelerator>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Xaml::Input::KeyboardAccelerator*> __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_t;
#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("883f90ff-8f3e-5dd2-947c-d7b305daa504"))
IVector<ABI::Windows::UI::Xaml::Media::XamlLight*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::XamlLight*, ABI::Windows::UI::Xaml::Media::IXamlLight*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Media.XamlLight>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Xaml::Media::XamlLight*> __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_t;
#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CResourceDictionary_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CResourceDictionary_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fe820a0c-694d-518b-8ec5-372993f6ceaf"))
IVector<ABI::Windows::UI::Xaml::ResourceDictionary*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::ResourceDictionary*, ABI::Windows::UI::Xaml::IResourceDictionary*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.ResourceDictionary>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Xaml::ResourceDictionary*> __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_t;
#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CResourceDictionary_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CResourceDictionary_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CSetterBase_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CSetterBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bd55a7fd-7501-5519-9ffb-d0074240db61"))
IVector<ABI::Windows::UI::Xaml::SetterBase*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::SetterBase*, ABI::Windows::UI::Xaml::ISetterBase*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.SetterBase>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Xaml::SetterBase*> __FIVector_1_Windows__CUI__CXaml__CSetterBase_t;
#define __FIVector_1_Windows__CUI__CXaml__CSetterBase ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CSetterBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CSetterBase_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("72dbaa30-9016-51d9-8500-4b215b5cb468"))
IVector<ABI::Windows::UI::Xaml::StateTriggerBase*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::StateTriggerBase*, ABI::Windows::UI::Xaml::IStateTriggerBase*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.StateTriggerBase>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Xaml::StateTriggerBase*> __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_t;
#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CTriggerAction_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CTriggerAction_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a488f35d-9ffc-5250-ac19-9416777b175a"))
IVector<ABI::Windows::UI::Xaml::TriggerAction*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::TriggerAction*, ABI::Windows::UI::Xaml::ITriggerAction*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.TriggerAction>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Xaml::TriggerAction*> __FIVector_1_Windows__CUI__CXaml__CTriggerAction_t;
#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CTriggerAction_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CTriggerAction_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CTriggerBase_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CTriggerBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("9149863b-b78b-5fb6-a0a1-9ebf6bbc3407"))
IVector<ABI::Windows::UI::Xaml::TriggerBase*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::TriggerBase*, ABI::Windows::UI::Xaml::ITriggerBase*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.TriggerBase>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Xaml::TriggerBase*> __FIVector_1_Windows__CUI__CXaml__CTriggerBase_t;
#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CTriggerBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CTriggerBase_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CUIElement_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CUIElement_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b4c1e3ac-8768-5b9d-a661-f63330b8507b"))
IVector<ABI::Windows::UI::Xaml::UIElement*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.UIElement>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Xaml::UIElement*> __FIVector_1_Windows__CUI__CXaml__CUIElement_t;
#define __FIVector_1_Windows__CUI__CXaml__CUIElement ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CUIElement_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CUIElement_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CVisualState_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CVisualState_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5b6d19b8-bc0c-5a77-a406-c01c12fd46c3"))
IVector<ABI::Windows::UI::Xaml::VisualState*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualState*, ABI::Windows::UI::Xaml::IVisualState*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.VisualState>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Xaml::VisualState*> __FIVector_1_Windows__CUI__CXaml__CVisualState_t;
#define __FIVector_1_Windows__CUI__CXaml__CVisualState ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CVisualState_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CVisualState_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("729a0392-675e-58e4-b6a3-0457bb9ea968"))
IVector<ABI::Windows::UI::Xaml::VisualStateGroup*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualStateGroup*, ABI::Windows::UI::Xaml::IVisualStateGroup*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.VisualStateGroup>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Xaml::VisualStateGroup*> __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_t;
#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CVisualTransition_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CVisualTransition_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5aebeb8c-7ef7-5975-ba0a-6c19a529bb72"))
IVector<ABI::Windows::UI::Xaml::VisualTransition*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualTransition*, ABI::Windows::UI::Xaml::IVisualTransition*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.VisualTransition>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Xaml::VisualTransition*> __FIVector_1_Windows__CUI__CXaml__CVisualTransition_t;
#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CVisualTransition_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CVisualTransition_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#ifndef DEF___FIEventHandler_1_IInspectable_USE
#define DEF___FIEventHandler_1_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c50898f6-c536-5f47-8583-8b2c2438a13b"))
IEventHandler<IInspectable*> : IEventHandler_impl<IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.EventHandler`1<Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IEventHandler<IInspectable*> __FIEventHandler_1_IInspectable_t;
#define __FIEventHandler_1_IInspectable ABI::Windows::Foundation::__FIEventHandler_1_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIEventHandler_1_IInspectable_USE */


namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct Rect Rect;
        } /* Foundation */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIReference_1_Windows__CFoundation__CRect_USE
#define DEF___FIReference_1_Windows__CFoundation__CRect_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("80423f11-054f-5eac-afd3-63b6ce15e77b"))
IReference<struct ABI::Windows::Foundation::Rect> : IReference_impl<struct ABI::Windows::Foundation::Rect>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Windows.Foundation.Rect>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<struct ABI::Windows::Foundation::Rect> __FIReference_1_Windows__CFoundation__CRect_t;
#define __FIReference_1_Windows__CFoundation__CRect ABI::Windows::Foundation::__FIReference_1_Windows__CFoundation__CRect_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Windows__CFoundation__CRect_USE */

#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            typedef struct Color Color;
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIReference_1_Windows__CUI__CColor_USE
#define DEF___FIReference_1_Windows__CUI__CColor_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("ab8e5d11-b0c1-5a21-95ae-f16bf3a37624"))
IReference<struct ABI::Windows::UI::Color> : IReference_impl<struct ABI::Windows::UI::Color>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Windows.UI.Color>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<struct ABI::Windows::UI::Color> __FIReference_1_Windows__CUI__CColor_t;
#define __FIReference_1_Windows__CUI__CColor ABI::Windows::Foundation::__FIReference_1_Windows__CUI__CColor_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Windows__CUI__CColor_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class FrameworkElement;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c229f252-dede-5d42-a01a-8479d56a7d2f"))
ITypedEventHandler<ABI::Windows::UI::Xaml::FrameworkElement*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::FrameworkElement*, ABI::Windows::UI::Xaml::IFrameworkElement*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.FrameworkElement, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::FrameworkElement*, IInspectable*> __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class DataContextChangedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("b01c8a21-de6f-5edd-8796-300e3fe66382"))
ITypedEventHandler<ABI::Windows::UI::Xaml::FrameworkElement*, ABI::Windows::UI::Xaml::DataContextChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::FrameworkElement*, ABI::Windows::UI::Xaml::IFrameworkElement*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DataContextChangedEventArgs*, ABI::Windows::UI::Xaml::IDataContextChangedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.FrameworkElement, Windows.UI.Xaml.DataContextChangedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::FrameworkElement*, ABI::Windows::UI::Xaml::DataContextChangedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class EffectiveViewportChangedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("515219d1-a1d0-5737-9019-9a755e93f6b2"))
ITypedEventHandler<ABI::Windows::UI::Xaml::FrameworkElement*, ABI::Windows::UI::Xaml::EffectiveViewportChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::FrameworkElement*, ABI::Windows::UI::Xaml::IFrameworkElement*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::EffectiveViewportChangedEventArgs*, ABI::Windows::UI::Xaml::IEffectiveViewportChangedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.FrameworkElement, Windows.UI.Xaml.EffectiveViewportChangedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::FrameworkElement*, ABI::Windows::UI::Xaml::EffectiveViewportChangedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class BringIntoViewRequestedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("2126cf26-9201-5d6b-845e-97e1c44b9ffd"))
ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::BringIntoViewRequestedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::BringIntoViewRequestedEventArgs*, ABI::Windows::UI::Xaml::IBringIntoViewRequestedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement, Windows.UI.Xaml.BringIntoViewRequestedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::BringIntoViewRequestedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class DragStartingEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("ecc4b13b-146c-5963-b8b3-024c5b9b95e4"))
ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::DragStartingEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DragStartingEventArgs*, ABI::Windows::UI::Xaml::IDragStartingEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement, Windows.UI.Xaml.DragStartingEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::DragStartingEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class DropCompletedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("ffd72e78-ec1f-5bcc-9d13-ff5fbb040562"))
ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::DropCompletedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DropCompletedEventArgs*, ABI::Windows::UI::Xaml::IDropCompletedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement, Windows.UI.Xaml.DropCompletedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::DropCompletedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    class AccessKeyDisplayDismissedEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IAccessKeyDisplayDismissedEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs ABI::Windows::UI::Xaml::Input::IAccessKeyDisplayDismissedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("2831903f-655e-5464-828c-56a8b4c65f1e"))
ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::Input::AccessKeyDisplayDismissedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::AccessKeyDisplayDismissedEventArgs*, ABI::Windows::UI::Xaml::Input::IAccessKeyDisplayDismissedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement, Windows.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::Input::AccessKeyDisplayDismissedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    class AccessKeyDisplayRequestedEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IAccessKeyDisplayRequestedEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs ABI::Windows::UI::Xaml::Input::IAccessKeyDisplayRequestedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("5871821a-2491-5cec-a457-21996ca4efaf"))
ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::Input::AccessKeyDisplayRequestedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::AccessKeyDisplayRequestedEventArgs*, ABI::Windows::UI::Xaml::Input::IAccessKeyDisplayRequestedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement, Windows.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::Input::AccessKeyDisplayRequestedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    class AccessKeyInvokedEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IAccessKeyInvokedEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs ABI::Windows::UI::Xaml::Input::IAccessKeyInvokedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a5c9a137-f716-5d8d-92c4-02f171936fa1"))
ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::Input::AccessKeyInvokedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::AccessKeyInvokedEventArgs*, ABI::Windows::UI::Xaml::Input::IAccessKeyInvokedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement, Windows.UI.Xaml.Input.AccessKeyInvokedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::Input::AccessKeyInvokedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    class CharacterReceivedRoutedEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface ICharacterReceivedRoutedEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs ABI::Windows::UI::Xaml::Input::ICharacterReceivedRoutedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("24330117-55d4-5789-8aa2-6cab1d0662a0"))
ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::Input::CharacterReceivedRoutedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::CharacterReceivedRoutedEventArgs*, ABI::Windows::UI::Xaml::Input::ICharacterReceivedRoutedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement, Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::Input::CharacterReceivedRoutedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    class ContextRequestedEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIContextRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIContextRequestedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IContextRequestedEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIContextRequestedEventArgs ABI::Windows::UI::Xaml::Input::IContextRequestedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIContextRequestedEventArgs_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("41d66b93-d17b-59b2-b916-8e813fecb9bd"))
ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::Input::ContextRequestedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::ContextRequestedEventArgs*, ABI::Windows::UI::Xaml::Input::IContextRequestedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement, Windows.UI.Xaml.Input.ContextRequestedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::Input::ContextRequestedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    class GettingFocusEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIGettingFocusEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIGettingFocusEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IGettingFocusEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIGettingFocusEventArgs ABI::Windows::UI::Xaml::Input::IGettingFocusEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIGettingFocusEventArgs_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("34f34b77-ec52-5eb6-affc-220cb52ca093"))
ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::Input::GettingFocusEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::GettingFocusEventArgs*, ABI::Windows::UI::Xaml::Input::IGettingFocusEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement, Windows.UI.Xaml.Input.GettingFocusEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::Input::GettingFocusEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    class LosingFocusEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CILosingFocusEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CILosingFocusEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface ILosingFocusEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CILosingFocusEventArgs ABI::Windows::UI::Xaml::Input::ILosingFocusEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CILosingFocusEventArgs_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a0f49f5f-c366-569a-895a-3a82d8801fe4"))
ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::Input::LosingFocusEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::LosingFocusEventArgs*, ABI::Windows::UI::Xaml::Input::ILosingFocusEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement, Windows.UI.Xaml.Input.LosingFocusEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::Input::LosingFocusEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    class NoFocusCandidateFoundEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface INoFocusCandidateFoundEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs ABI::Windows::UI::Xaml::Input::INoFocusCandidateFoundEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("d5de4415-b53c-5312-9e1b-ac2a19f04e71"))
ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::Input::NoFocusCandidateFoundEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::NoFocusCandidateFoundEventArgs*, ABI::Windows::UI::Xaml::Input::INoFocusCandidateFoundEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement, Windows.UI.Xaml.Input.NoFocusCandidateFoundEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::Input::NoFocusCandidateFoundEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    class ProcessKeyboardAcceleratorEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IProcessKeyboardAcceleratorEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs ABI::Windows::UI::Xaml::Input::IProcessKeyboardAcceleratorEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c134d249-476a-5146-b5d4-6c98f4e81461"))
ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::Input::ProcessKeyboardAcceleratorEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::ProcessKeyboardAcceleratorEventArgs*, ABI::Windows::UI::Xaml::Input::IProcessKeyboardAcceleratorEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement, Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::Input::ProcessKeyboardAcceleratorEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class RoutedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("657f28aa-8c76-501f-b032-d8dc93595e76"))
ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::RoutedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::RoutedEventArgs*, ABI::Windows::UI::Xaml::IRoutedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement, Windows.UI.Xaml.RoutedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::RoutedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class XamlRoot;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class XamlRootChangedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("b86311bb-2eef-5b2c-8d0d-c178f3979b6a"))
ITypedEventHandler<ABI::Windows::UI::Xaml::XamlRoot*, ABI::Windows::UI::Xaml::XamlRootChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::XamlRoot*, ABI::Windows::UI::Xaml::IXamlRoot*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::XamlRootChangedEventArgs*, ABI::Windows::UI::Xaml::IXamlRootChangedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.XamlRoot, Windows.UI.Xaml.XamlRootChangedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::XamlRoot*, ABI::Windows::UI::Xaml::XamlRootChangedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Activation {
                class BackgroundActivatedEventArgs;
            } /* Activation */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Activation {
                interface IBackgroundActivatedEventArgs;
            } /* Activation */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs ABI::Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Activation {
                class CachedFileUpdaterActivatedEventArgs;
            } /* Activation */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Activation {
                interface ICachedFileUpdaterActivatedEventArgs;
            } /* Activation */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs ABI::Windows::ApplicationModel::Activation::ICachedFileUpdaterActivatedEventArgs

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Activation {
                class FileActivatedEventArgs;
            } /* Activation */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Activation {
                interface IFileActivatedEventArgs;
            } /* Activation */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs ABI::Windows::ApplicationModel::Activation::IFileActivatedEventArgs

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Activation {
                class FileOpenPickerActivatedEventArgs;
            } /* Activation */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Activation {
                interface IFileOpenPickerActivatedEventArgs;
            } /* Activation */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs ABI::Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Activation {
                class FileSavePickerActivatedEventArgs;
            } /* Activation */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Activation {
                interface IFileSavePickerActivatedEventArgs;
            } /* Activation */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs ABI::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Activation {
                interface IActivatedEventArgs;
            } /* Activation */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs ABI::Windows::ApplicationModel::Activation::IActivatedEventArgs

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Activation {
                class LaunchActivatedEventArgs;
            } /* Activation */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Activation {
                interface ILaunchActivatedEventArgs;
            } /* Activation */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs ABI::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Activation {
                class SearchActivatedEventArgs;
            } /* Activation */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Activation {
                interface ISearchActivatedEventArgs;
            } /* Activation */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs ABI::Windows::ApplicationModel::Activation::ISearchActivatedEventArgs

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Activation {
                class ShareTargetActivatedEventArgs;
            } /* Activation */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Activation {
                interface IShareTargetActivatedEventArgs;
            } /* Activation */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs ABI::Windows::ApplicationModel::Activation::IShareTargetActivatedEventArgs

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Core {
                interface IFrameworkView;
            } /* Core */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView ABI::Windows::ApplicationModel::Core::IFrameworkView

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace Core {
                interface IFrameworkViewSource;
            } /* Core */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource ABI::Windows::ApplicationModel::Core::IFrameworkViewSource

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace DataTransfer {
                class DataPackage;
            } /* DataTransfer */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace DataTransfer {
                interface IDataPackage;
            } /* DataTransfer */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage ABI::Windows::ApplicationModel::DataTransfer::IDataPackage

#endif // ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace DataTransfer {
                class DataPackageView;
            } /* DataTransfer */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackageView_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackageView_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace DataTransfer {
                interface IDataPackageView;
            } /* DataTransfer */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackageView ABI::Windows::ApplicationModel::DataTransfer::IDataPackageView

#endif // ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackageView_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace DataTransfer {
                namespace DragDrop {
                    typedef enum DragDropModifiers : unsigned int DragDropModifiers;
                } /* DragDrop */
            } /* DataTransfer */
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            class EnteredBackgroundEventArgs;
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            interface IEnteredBackgroundEventArgs;
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs ABI::Windows::ApplicationModel::IEnteredBackgroundEventArgs

#endif // ____x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            class LeavingBackgroundEventArgs;
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            interface ILeavingBackgroundEventArgs;
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs ABI::Windows::ApplicationModel::ILeavingBackgroundEventArgs

#endif // ____x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            class SuspendingEventArgs;
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            interface ISuspendingEventArgs;
        } /* ApplicationModel */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs ABI::Windows::ApplicationModel::ISuspendingEventArgs

#endif // ____x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Collections {
                interface IVectorChangedEventArgs;
            } /* Collections */
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs ABI::Windows::Foundation::Collections::IVectorChangedEventArgs

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IPropertyValue;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIPropertyValue ABI::Windows::Foundation::IPropertyValue

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Numerics {
                typedef struct Matrix4x4 Matrix4x4;
            } /* Numerics */
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Numerics {
                typedef struct Vector2 Vector2;
            } /* Numerics */
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Numerics {
                typedef struct Vector3 Vector3;
            } /* Numerics */
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct Size Size;
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct TimeSpan TimeSpan;
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            class Uri;
        } /* Foundation */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IUriRuntimeClass;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIUriRuntimeClass ABI::Windows::Foundation::IUriRuntimeClass

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Graphics {
            namespace Imaging {
                class SoftwareBitmap;
            } /* Imaging */
        } /* Graphics */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Graphics {
            namespace Imaging {
                interface ISoftwareBitmap;
            } /* Imaging */
        } /* Graphics */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap ABI::Windows::Graphics::Imaging::ISoftwareBitmap

#endif // ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class AnimationPropertyInfo;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IAnimationPropertyInfo;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo ABI::Windows::UI::Composition::IAnimationPropertyInfo

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                class Compositor;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositor;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositor ABI::Windows::UI::Composition::ICompositor

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IAnimationObject;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIAnimationObject ABI::Windows::UI::Composition::IAnimationObject

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface ICompositionAnimationBase;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase ABI::Windows::UI::Composition::ICompositionAnimationBase

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Composition {
                interface IVisualElement;
            } /* Composition */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CComposition_CIVisualElement ABI::Windows::UI::Composition::IVisualElement

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Core {
                class CoreDispatcher;
            } /* Core */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CCore_CICoreDispatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CICoreDispatcher_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Core {
                interface ICoreDispatcher;
            } /* Core */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CCore_CICoreDispatcher ABI::Windows::UI::Core::ICoreDispatcher

#endif // ____x_ABI_CWindows_CUI_CCore_CICoreDispatcher_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Core {
                class CoreWindow;
            } /* Core */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CCore_CICoreWindow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CICoreWindow_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Core {
                interface ICoreWindow;
            } /* Core */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CCore_CICoreWindow ABI::Windows::UI::Core::ICoreWindow

#endif // ____x_ABI_CWindows_CUI_CCore_CICoreWindow_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Core {
                class CoreWindowEventArgs;
            } /* Core */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CCore_CICoreWindowEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CICoreWindowEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Core {
                interface ICoreWindowEventArgs;
            } /* Core */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CCore_CICoreWindowEventArgs ABI::Windows::UI::Core::ICoreWindowEventArgs

#endif // ____x_ABI_CWindows_CUI_CCore_CICoreWindowEventArgs_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Core {
                class VisibilityChangedEventArgs;
            } /* Core */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CCore_CIVisibilityChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CIVisibilityChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Core {
                interface IVisibilityChangedEventArgs;
            } /* Core */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CCore_CIVisibilityChangedEventArgs ABI::Windows::UI::Core::IVisibilityChangedEventArgs

#endif // ____x_ABI_CWindows_CUI_CCore_CIVisibilityChangedEventArgs_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Core {
                class WindowActivatedEventArgs;
            } /* Core */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CCore_CIWindowActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CIWindowActivatedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Core {
                interface IWindowActivatedEventArgs;
            } /* Core */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CCore_CIWindowActivatedEventArgs ABI::Windows::UI::Core::IWindowActivatedEventArgs

#endif // ____x_ABI_CWindows_CUI_CCore_CIWindowActivatedEventArgs_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Core {
                class WindowSizeChangedEventArgs;
            } /* Core */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CCore_CIWindowSizeChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CIWindowSizeChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Core {
                interface IWindowSizeChangedEventArgs;
            } /* Core */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CCore_CIWindowSizeChangedEventArgs ABI::Windows::UI::Core::IWindowSizeChangedEventArgs

#endif // ____x_ABI_CWindows_CUI_CCore_CIWindowSizeChangedEventArgs_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Input {
                class PointerPoint;
            } /* Input */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CInput_CIPointerPoint_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CIPointerPoint_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Input {
                interface IPointerPoint;
            } /* Input */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CInput_CIPointerPoint ABI::Windows::UI::Input::IPointerPoint

#endif // ____x_ABI_CWindows_CUI_CInput_CIPointerPoint_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            class UIContext;
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CIUIContext_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CIUIContext_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            interface IUIContext;
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CIUIContext ABI::Windows::UI::IUIContext

#endif // ____x_ABI_CWindows_CUI_CIUIContext_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class AutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class ContainerContentChangingEventArgs;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IContainerContentChangingEventArgs;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs ABI::Windows::UI::Xaml::Controls::IContainerContentChangingEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class Control;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IControl;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl ABI::Windows::UI::Xaml::Controls::IControl

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        typedef enum ComponentResourceLocation : int ComponentResourceLocation;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        class FlyoutBase;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        interface IFlyoutBase;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase ABI::Windows::UI::Xaml::Controls::Primitives::IFlyoutBase

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Data {
                    class BindingBase;
                } /* Data */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Data {
                    interface IBindingBase;
                } /* Data */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase ABI::Windows::UI::Xaml::Data::IBindingBase

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Data {
                    class BindingExpression;
                } /* Data */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Data {
                    interface IBindingExpression;
                } /* Data */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression ABI::Windows::UI::Xaml::Data::IBindingExpression

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IDoubleTappedEventHandler;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedEventHandler ABI::Windows::UI::Xaml::Input::IDoubleTappedEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IHoldingEventHandler;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingEventHandler ABI::Windows::UI::Xaml::Input::IHoldingEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IKeyEventHandler;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyEventHandler ABI::Windows::UI::Xaml::Input::IKeyEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyEventHandler_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    typedef enum KeyTipPlacementMode : int KeyTipPlacementMode;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    class KeyboardAcceleratorInvokedEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IKeyboardAcceleratorInvokedEventArgs;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs ABI::Windows::UI::Xaml::Input::IKeyboardAcceleratorInvokedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    typedef enum KeyboardAcceleratorPlacementMode : int KeyboardAcceleratorPlacementMode;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    typedef enum KeyboardNavigationMode : int KeyboardNavigationMode;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IManipulationCompletedEventHandler;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedEventHandler ABI::Windows::UI::Xaml::Input::IManipulationCompletedEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IManipulationDeltaEventHandler;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaEventHandler ABI::Windows::UI::Xaml::Input::IManipulationDeltaEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IManipulationInertiaStartingEventHandler;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler ABI::Windows::UI::Xaml::Input::IManipulationInertiaStartingEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    typedef enum ManipulationModes : unsigned int ManipulationModes;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IManipulationStartedEventHandler;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedEventHandler ABI::Windows::UI::Xaml::Input::IManipulationStartedEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IManipulationStartingEventHandler;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingEventHandler ABI::Windows::UI::Xaml::Input::IManipulationStartingEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IPointerEventHandler;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler ABI::Windows::UI::Xaml::Input::IPointerEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface IRightTappedEventHandler;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedEventHandler ABI::Windows::UI::Xaml::Input::IRightTappedEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CITappedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CITappedEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    interface ITappedEventHandler;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CInput_CITappedEventHandler ABI::Windows::UI::Xaml::Input::ITappedEventHandler

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CITappedEventHandler_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    typedef enum XYFocusKeyboardNavigationMode : int XYFocusKeyboardNavigationMode;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    typedef enum XYFocusNavigationStrategy : int XYFocusNavigationStrategy;
                } /* Input */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Interop {
                    typedef struct TypeName TypeName;
                } /* Interop */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        class EasingFunctionBase;
                    } /* Animation */
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IEasingFunctionBase;
                    } /* Animation */
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBase

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        class Storyboard;
                    } /* Animation */
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IStoryboard;
                    } /* Animation */
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard ABI::Windows::UI::Xaml::Media::Animation::IStoryboard

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        class TransitionCollection;
                    } /* Animation */
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        class Transition;
                    } /* Animation */
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ITransition;
                    } /* Animation */
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition ABI::Windows::UI::Xaml::Media::Animation::ITransition

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0f149913-d622-5dde-b6e3-7835c2ab54b7"))
IIterator<ABI::Windows::UI::Xaml::Media::Animation::Transition*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Transition*, ABI::Windows::UI::Xaml::Media::Animation::ITransition*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.Animation.Transition>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::Media::Animation::Transition*> __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("feb51398-4fdb-5112-8a9b-6a8786ca01ce"))
IIterable<ABI::Windows::UI::Xaml::Media::Animation::Transition*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Transition*, ABI::Windows::UI::Xaml::Media::Animation::ITransition*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Media.Animation.Transition>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::Media::Animation::Transition*> __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("43b475a1-3811-5992-be44-ab41a825d355"))
IVectorView<ABI::Windows::UI::Xaml::Media::Animation::Transition*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Transition*, ABI::Windows::UI::Xaml::Media::Animation::ITransition*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.Animation.Transition>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::Media::Animation::Transition*> __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e798571f-7e3e-5e1a-aa55-cbc93b83f821"))
IVector<ABI::Windows::UI::Xaml::Media::Animation::Transition*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Transition*, ABI::Windows::UI::Xaml::Media::Animation::ITransition*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Media.Animation.Transition>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Xaml::Media::Animation::Transition*> __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class Brush;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IBrush;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush ABI::Windows::UI::Xaml::Media::IBrush

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class CacheMode;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ICacheMode;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode ABI::Windows::UI::Xaml::Media::ICacheMode

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    typedef enum ElementCompositeMode : int ElementCompositeMode;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class GeneralTransform;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGeneralTransform;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform ABI::Windows::UI::Xaml::Media::IGeneralTransform

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Imaging {
                        class BitmapImage;
                    } /* Imaging */
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Imaging {
                        interface IBitmapImage;
                    } /* Imaging */
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage ABI::Windows::UI::Xaml::Media::Imaging::IBitmapImage

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Media3D {
                        class Transform3D;
                    } /* Media3D */
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CMedia3D_CITransform3D_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CMedia3D_CITransform3D_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Media3D {
                        interface ITransform3D;
                    } /* Media3D */
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CMedia_CMedia3D_CITransform3D ABI::Windows::UI::Xaml::Media::Media3D::ITransform3D

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CMedia3D_CITransform3D_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class Projection;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IProjection;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection ABI::Windows::UI::Xaml::Media::IProjection

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class RectangleGeometry;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IRectangleGeometry;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry ABI::Windows::UI::Xaml::Media::IRectangleGeometry

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class Shadow;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IShadow;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIShadow ABI::Windows::UI::Xaml::Media::IShadow

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class Transform;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITransform;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform ABI::Windows::UI::Xaml::Media::ITransform

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef enum ApplicationHighContrastAdjustment : unsigned int ApplicationHighContrastAdjustment;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef enum ApplicationRequiresPointerMode : int ApplicationRequiresPointerMode;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef enum ApplicationTheme : int ApplicationTheme;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef enum DurationType : int DurationType;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef enum ElementHighContrastAdjustment : unsigned int ElementHighContrastAdjustment;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef enum ElementSoundKind : int ElementSoundKind;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef enum ElementSoundPlayerState : int ElementSoundPlayerState;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef enum ElementSpatialAudioMode : int ElementSpatialAudioMode;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef enum ElementTheme : int ElementTheme;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef enum FlowDirection : int FlowDirection;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef enum FocusVisualKind : int FocusVisualKind;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef enum GridUnitType : int GridUnitType;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef enum HorizontalAlignment : int HorizontalAlignment;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef enum Vector3TransitionComponents : unsigned int Vector3TransitionComponents;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef enum VerticalAlignment : int VerticalAlignment;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef enum Visibility : int Visibility;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef struct CornerRadius CornerRadius;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef struct Duration Duration;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef struct GridLength GridLength;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                typedef struct Thickness Thickness;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class AdaptiveTrigger;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class Application;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class ApplicationInitializationCallbackParams;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class BindingFailedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class BringIntoViewOptions;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class BrushTransition;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class ColorPaletteResources;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class DataTemplate;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class DataTemplateKey;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class DebugSettings;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class DependencyObjectCollection;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class DependencyProperty;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class DependencyPropertyChangedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class DispatcherTimer;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class DragEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class DragOperationDeferral;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class DragUI;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class DragUIOverride;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class ElementFactoryGetArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class ElementFactoryRecycleArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class ExceptionRoutedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class FrameworkTemplate;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class PropertyMetadata;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class PropertyPath;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class RoutedEvent;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class ScalarTransition;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class Setter;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class SetterBaseCollection;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class SizeChangedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class Style;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class TargetPropertyPath;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class TriggerActionCollection;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class TriggerCollection;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class UIElementWeakCollection;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class UnhandledExceptionEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class Vector3Transition;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class VisualStateChangedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class VisualStateManager;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class Window;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class WindowCreatedEventArgs;
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

/*
 *
 * Struct Windows.UI.Xaml.ApplicationHighContrastAdjustment
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum ApplicationHighContrastAdjustment : unsigned int
                {
                    ApplicationHighContrastAdjustment_None = 0,
                    ApplicationHighContrastAdjustment_Auto = 0xffffffff,
                };

                DEFINE_ENUM_FLAG_OPERATORS(ApplicationHighContrastAdjustment)
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Struct Windows.UI.Xaml.ApplicationRequiresPointerMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum ApplicationRequiresPointerMode : int
                {
                    ApplicationRequiresPointerMode_Auto = 0,
                    ApplicationRequiresPointerMode_WhenRequested = 1,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.UI.Xaml.ApplicationTheme
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum ApplicationTheme : int
                {
                    ApplicationTheme_Light = 0,
                    ApplicationTheme_Dark = 1,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.AutomationTextAttributesEnum
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum AutomationTextAttributesEnum : int
                {
                    AutomationTextAttributesEnum_AnimationStyleAttribute = 40000,
                    AutomationTextAttributesEnum_BackgroundColorAttribute = 40001,
                    AutomationTextAttributesEnum_BulletStyleAttribute = 40002,
                    AutomationTextAttributesEnum_CapStyleAttribute = 40003,
                    AutomationTextAttributesEnum_CultureAttribute = 40004,
                    AutomationTextAttributesEnum_FontNameAttribute = 40005,
                    AutomationTextAttributesEnum_FontSizeAttribute = 40006,
                    AutomationTextAttributesEnum_FontWeightAttribute = 40007,
                    AutomationTextAttributesEnum_ForegroundColorAttribute = 40008,
                    AutomationTextAttributesEnum_HorizontalTextAlignmentAttribute = 40009,
                    AutomationTextAttributesEnum_IndentationFirstLineAttribute = 40010,
                    AutomationTextAttributesEnum_IndentationLeadingAttribute = 40011,
                    AutomationTextAttributesEnum_IndentationTrailingAttribute = 40012,
                    AutomationTextAttributesEnum_IsHiddenAttribute = 40013,
                    AutomationTextAttributesEnum_IsItalicAttribute = 40014,
                    AutomationTextAttributesEnum_IsReadOnlyAttribute = 40015,
                    AutomationTextAttributesEnum_IsSubscriptAttribute = 40016,
                    AutomationTextAttributesEnum_IsSuperscriptAttribute = 40017,
                    AutomationTextAttributesEnum_MarginBottomAttribute = 40018,
                    AutomationTextAttributesEnum_MarginLeadingAttribute = 40019,
                    AutomationTextAttributesEnum_MarginTopAttribute = 40020,
                    AutomationTextAttributesEnum_MarginTrailingAttribute = 40021,
                    AutomationTextAttributesEnum_OutlineStylesAttribute = 40022,
                    AutomationTextAttributesEnum_OverlineColorAttribute = 40023,
                    AutomationTextAttributesEnum_OverlineStyleAttribute = 40024,
                    AutomationTextAttributesEnum_StrikethroughColorAttribute = 40025,
                    AutomationTextAttributesEnum_StrikethroughStyleAttribute = 40026,
                    AutomationTextAttributesEnum_TabsAttribute = 40027,
                    AutomationTextAttributesEnum_TextFlowDirectionsAttribute = 40028,
                    AutomationTextAttributesEnum_UnderlineColorAttribute = 40029,
                    AutomationTextAttributesEnum_UnderlineStyleAttribute = 40030,
                    AutomationTextAttributesEnum_AnnotationTypesAttribute = 40031,
                    AutomationTextAttributesEnum_AnnotationObjectsAttribute = 40032,
                    AutomationTextAttributesEnum_StyleNameAttribute = 40033,
                    AutomationTextAttributesEnum_StyleIdAttribute = 40034,
                    AutomationTextAttributesEnum_LinkAttribute = 40035,
                    AutomationTextAttributesEnum_IsActiveAttribute = 40036,
                    AutomationTextAttributesEnum_SelectionActiveEndAttribute = 40037,
                    AutomationTextAttributesEnum_CaretPositionAttribute = 40038,
                    AutomationTextAttributesEnum_CaretBidiModeAttribute = 40039,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.DurationType
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum DurationType : int
                {
                    DurationType_Automatic = 0,
                    DurationType_TimeSpan = 1,
                    DurationType_Forever = 2,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.ElementHighContrastAdjustment
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum ElementHighContrastAdjustment : unsigned int
                {
                    ElementHighContrastAdjustment_None = 0,
                    ElementHighContrastAdjustment_Application = 0x80000000,
                    ElementHighContrastAdjustment_Auto = 0xffffffff,
                };

                DEFINE_ENUM_FLAG_OPERATORS(ElementHighContrastAdjustment)
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Struct Windows.UI.Xaml.ElementSoundKind
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum ElementSoundKind : int
                {
                    ElementSoundKind_Focus = 0,
                    ElementSoundKind_Invoke = 1,
                    ElementSoundKind_Show = 2,
                    ElementSoundKind_Hide = 3,
                    ElementSoundKind_MovePrevious = 4,
                    ElementSoundKind_MoveNext = 5,
                    ElementSoundKind_GoBack = 6,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.UI.Xaml.ElementSoundMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum ElementSoundMode : int
                {
                    ElementSoundMode_Default = 0,
                    ElementSoundMode_FocusOnly = 1,
                    ElementSoundMode_Off = 2,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.UI.Xaml.ElementSoundPlayerState
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum ElementSoundPlayerState : int
                {
                    ElementSoundPlayerState_Auto = 0,
                    ElementSoundPlayerState_Off = 1,
                    ElementSoundPlayerState_On = 2,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.UI.Xaml.ElementSpatialAudioMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum ElementSpatialAudioMode : int
                {
                    ElementSpatialAudioMode_Auto = 0,
                    ElementSpatialAudioMode_Off = 1,
                    ElementSpatialAudioMode_On = 2,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Struct Windows.UI.Xaml.ElementTheme
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum ElementTheme : int
                {
                    ElementTheme_Default = 0,
                    ElementTheme_Light = 1,
                    ElementTheme_Dark = 2,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.FlowDirection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum FlowDirection : int
                {
                    FlowDirection_LeftToRight = 0,
                    FlowDirection_RightToLeft = 1,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.FocusState
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum FocusState : int
                {
                    FocusState_Unfocused = 0,
                    FocusState_Pointer = 1,
                    FocusState_Keyboard = 2,
                    FocusState_Programmatic = 3,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.FocusVisualKind
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum FocusVisualKind : int
                {
                    FocusVisualKind_DottedLine = 0,
                    FocusVisualKind_HighVisibility = 1,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
                    FocusVisualKind_Reveal = 2,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.UI.Xaml.FontCapitals
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum FontCapitals : int
                {
                    FontCapitals_Normal = 0,
                    FontCapitals_AllSmallCaps = 1,
                    FontCapitals_SmallCaps = 2,
                    FontCapitals_AllPetiteCaps = 3,
                    FontCapitals_PetiteCaps = 4,
                    FontCapitals_Unicase = 5,
                    FontCapitals_Titling = 6,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.FontEastAsianLanguage
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum FontEastAsianLanguage : int
                {
                    FontEastAsianLanguage_Normal = 0,
                    FontEastAsianLanguage_HojoKanji = 1,
                    FontEastAsianLanguage_Jis04 = 2,
                    FontEastAsianLanguage_Jis78 = 3,
                    FontEastAsianLanguage_Jis83 = 4,
                    FontEastAsianLanguage_Jis90 = 5,
                    FontEastAsianLanguage_NlcKanji = 6,
                    FontEastAsianLanguage_Simplified = 7,
                    FontEastAsianLanguage_Traditional = 8,
                    FontEastAsianLanguage_TraditionalNames = 9,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.FontEastAsianWidths
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum FontEastAsianWidths : int
                {
                    FontEastAsianWidths_Normal = 0,
                    FontEastAsianWidths_Full = 1,
                    FontEastAsianWidths_Half = 2,
                    FontEastAsianWidths_Proportional = 3,
                    FontEastAsianWidths_Quarter = 4,
                    FontEastAsianWidths_Third = 5,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.FontFraction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum FontFraction : int
                {
                    FontFraction_Normal = 0,
                    FontFraction_Stacked = 1,
                    FontFraction_Slashed = 2,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.FontNumeralAlignment
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum FontNumeralAlignment : int
                {
                    FontNumeralAlignment_Normal = 0,
                    FontNumeralAlignment_Proportional = 1,
                    FontNumeralAlignment_Tabular = 2,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.FontNumeralStyle
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum FontNumeralStyle : int
                {
                    FontNumeralStyle_Normal = 0,
                    FontNumeralStyle_Lining = 1,
                    FontNumeralStyle_OldStyle = 2,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.FontVariants
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum FontVariants : int
                {
                    FontVariants_Normal = 0,
                    FontVariants_Superscript = 1,
                    FontVariants_Subscript = 2,
                    FontVariants_Ordinal = 3,
                    FontVariants_Inferior = 4,
                    FontVariants_Ruby = 5,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.GridUnitType
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum GridUnitType : int
                {
                    GridUnitType_Auto = 0,
                    GridUnitType_Pixel = 1,
                    GridUnitType_Star = 2,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.HorizontalAlignment
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum HorizontalAlignment : int
                {
                    HorizontalAlignment_Left = 0,
                    HorizontalAlignment_Center = 1,
                    HorizontalAlignment_Right = 2,
                    HorizontalAlignment_Stretch = 3,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.LineStackingStrategy
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum LineStackingStrategy : int
                {
                    LineStackingStrategy_MaxHeight = 0,
                    LineStackingStrategy_BlockLineHeight = 1,
                    LineStackingStrategy_BaselineToBaseline = 2,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.OpticalMarginAlignment
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum OpticalMarginAlignment : int
                {
                    OpticalMarginAlignment_None = 0,
                    OpticalMarginAlignment_TrimSideBearings = 1,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.TextAlignment
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum TextAlignment : int
                {
                    TextAlignment_Center = 0,
                    TextAlignment_Left = 1,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
                    TextAlignment_Start = 1,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
                    TextAlignment_Right = 2,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
                    TextAlignment_End = 2,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
                    TextAlignment_Justify = 3,
                    TextAlignment_DetectFromContent = 4,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.TextLineBounds
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum TextLineBounds : int
                {
                    TextLineBounds_Full = 0,
                    TextLineBounds_TrimToCapHeight = 1,
                    TextLineBounds_TrimToBaseline = 2,
                    TextLineBounds_Tight = 3,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.TextReadingOrder
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum TextReadingOrder : int
                {
                    TextReadingOrder_Default
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                    DEPRECATEDENUMERATOR("Consider using UseFlowDirection, which is an improved version of Default. For more info, see MSDN.")
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                    = 0,
                    TextReadingOrder_UseFlowDirection = 0,
                    TextReadingOrder_DetectFromContent = 1,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.TextTrimming
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum TextTrimming : int
                {
                    TextTrimming_None = 0,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                    TextTrimming_CharacterEllipsis = 1,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                    TextTrimming_WordEllipsis = 2,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                    TextTrimming_Clip = 3,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.TextWrapping
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum TextWrapping : int
                {
                    TextWrapping_NoWrap = 1,
                    TextWrapping_Wrap = 2,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                    TextWrapping_WrapWholeWords = 3,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.Vector3TransitionComponents
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum Vector3TransitionComponents : unsigned int
                {
                    Vector3TransitionComponents_X = 0x1,
                    Vector3TransitionComponents_Y = 0x2,
                    Vector3TransitionComponents_Z = 0x4,
                };

                DEFINE_ENUM_FLAG_OPERATORS(Vector3TransitionComponents)
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Struct Windows.UI.Xaml.VerticalAlignment
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum VerticalAlignment : int
                {
                    VerticalAlignment_Top = 0,
                    VerticalAlignment_Center = 1,
                    VerticalAlignment_Bottom = 2,
                    VerticalAlignment_Stretch = 3,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.Visibility
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                enum Visibility : int
                {
                    Visibility_Visible = 0,
                    Visibility_Collapsed = 1,
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.CornerRadius
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                struct CornerRadius
                {
                    DOUBLE TopLeft;
                    DOUBLE TopRight;
                    DOUBLE BottomRight;
                    DOUBLE BottomLeft;
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.Duration
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                struct Duration
                {
                    ABI::Windows::Foundation::TimeSpan TimeSpan;
                    ABI::Windows::UI::Xaml::DurationType Type;
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.GridLength
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                struct GridLength
                {
                    DOUBLE Value;
                    ABI::Windows::UI::Xaml::GridUnitType GridUnitType;
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.Thickness
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                struct Thickness
                {
                    DOUBLE Left;
                    DOUBLE Top;
                    DOUBLE Right;
                    DOUBLE Bottom;
                };
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.ApplicationInitializationCallback
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("b6351c55-c284-46e4-8310-fb0967fab76f")
                IApplicationInitializationCallback : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        ABI::Windows::UI::Xaml::IApplicationInitializationCallbackParams* p
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IApplicationInitializationCallback = _uuidof(IApplicationInitializationCallback);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.BindingFailedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("136b1782-54ba-420d-a1aa-82828721cde6")
                IBindingFailedEventHandler : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        IInspectable* sender,
                        ABI::Windows::UI::Xaml::IBindingFailedEventArgs* e
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IBindingFailedEventHandler = _uuidof(IBindingFailedEventHandler);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.CreateDefaultValueCallback
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("d6ecb12c-15b5-4ec8-b95c-cdd208f08153")
                ICreateDefaultValueCallback : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        IInspectable** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICreateDefaultValueCallback = _uuidof(ICreateDefaultValueCallback);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.DependencyPropertyChangedCallback
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("45883d16-27bf-4bc1-ac26-94c1601f3a49")
                IDependencyPropertyChangedCallback : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        ABI::Windows::UI::Xaml::IDependencyObject* sender,
                        ABI::Windows::UI::Xaml::IDependencyProperty* dp
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDependencyPropertyChangedCallback = _uuidof(IDependencyPropertyChangedCallback);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.DependencyPropertyChangedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("09223e5a-75be-4499-8180-1ddc005421c0")
                IDependencyPropertyChangedEventHandler : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        IInspectable* sender,
                        ABI::Windows::UI::Xaml::IDependencyPropertyChangedEventArgs* e
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDependencyPropertyChangedEventHandler = _uuidof(IDependencyPropertyChangedEventHandler);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.DragEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("2ab1a205-1e73-4bcf-aabc-57b97e21961d")
                IDragEventHandler : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        IInspectable* sender,
                        ABI::Windows::UI::Xaml::IDragEventArgs* e
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDragEventHandler = _uuidof(IDragEventHandler);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.EnteredBackgroundEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("93a956ae-1d7f-438b-b7b8-227d96b609c0")
                IEnteredBackgroundEventHandler : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        IInspectable* sender,
                        ABI::Windows::ApplicationModel::IEnteredBackgroundEventArgs* e
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IEnteredBackgroundEventHandler = _uuidof(IEnteredBackgroundEventHandler);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Delegate Windows.UI.Xaml.ExceptionRoutedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("68e0e810-f6ea-42bc-855b-5d9b67e6a262")
                IExceptionRoutedEventHandler : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        IInspectable* sender,
                        ABI::Windows::UI::Xaml::IExceptionRoutedEventArgs* e
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IExceptionRoutedEventHandler = _uuidof(IExceptionRoutedEventHandler);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.LeavingBackgroundEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("aaad5dad-4fc6-4aa4-b7cf-877e36ada4f6")
                ILeavingBackgroundEventHandler : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        IInspectable* sender,
                        ABI::Windows::ApplicationModel::ILeavingBackgroundEventArgs* e
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ILeavingBackgroundEventHandler = _uuidof(ILeavingBackgroundEventHandler);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Delegate Windows.UI.Xaml.PropertyChangedCallback
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("5a9f8a25-d142-44a4-8231-fd676724f29b")
                IPropertyChangedCallback : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        ABI::Windows::UI::Xaml::IDependencyObject* d,
                        ABI::Windows::UI::Xaml::IDependencyPropertyChangedEventArgs* e
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IPropertyChangedCallback = _uuidof(IPropertyChangedCallback);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.RoutedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("a856e674-b0b6-4bc3-bba8-1ba06e40d4b5")
                IRoutedEventHandler : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        IInspectable* sender,
                        ABI::Windows::UI::Xaml::IRoutedEventArgs* e
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IRoutedEventHandler = _uuidof(IRoutedEventHandler);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.SizeChangedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("1115b13c-25d2-480b-89dc-eb3dcbd6b7fa")
                ISizeChangedEventHandler : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        IInspectable* sender,
                        ABI::Windows::UI::Xaml::ISizeChangedEventArgs* e
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ISizeChangedEventHandler = _uuidof(ISizeChangedEventHandler);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.SuspendingEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("23429465-e36a-40e2-b139-a4704602a6e1")
                ISuspendingEventHandler : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        IInspectable* sender,
                        ABI::Windows::ApplicationModel::ISuspendingEventArgs* e
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ISuspendingEventHandler = _uuidof(ISuspendingEventHandler);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.UnhandledExceptionEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("9274e6bd-49a1-4958-beee-d0e19587b6e3")
                IUnhandledExceptionEventHandler : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        IInspectable* sender,
                        ABI::Windows::UI::Xaml::IUnhandledExceptionEventArgs* e
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUnhandledExceptionEventHandler = _uuidof(IUnhandledExceptionEventHandler);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.VisualStateChangedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("e6d5bbd5-e029-43a6-b36d-84a81042d774")
                IVisualStateChangedEventHandler : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        IInspectable* sender,
                        ABI::Windows::UI::Xaml::IVisualStateChangedEventArgs* e
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVisualStateChangedEventHandler = _uuidof(IVisualStateChangedEventHandler);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.WindowActivatedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("18026348-8619-4c7b-b534-ced45d9de219")
                IWindowActivatedEventHandler : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        IInspectable* sender,
                        ABI::Windows::UI::Core::IWindowActivatedEventArgs* e
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IWindowActivatedEventHandler = _uuidof(IWindowActivatedEventHandler);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.WindowClosedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("0db89161-20d7-45df-9122-ba89576703ba")
                IWindowClosedEventHandler : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        IInspectable* sender,
                        ABI::Windows::UI::Core::ICoreWindowEventArgs* e
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IWindowClosedEventHandler = _uuidof(IWindowClosedEventHandler);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.WindowSizeChangedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("5c21c742-2ced-4fd9-ba38-7118d40e966b")
                IWindowSizeChangedEventHandler : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        IInspectable* sender,
                        ABI::Windows::UI::Core::IWindowSizeChangedEventArgs* e
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IWindowSizeChangedEventHandler = _uuidof(IWindowSizeChangedEventHandler);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.WindowVisibilityChangedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("10406ad6-b090-4a4a-b2ad-d682df27130f")
                IWindowVisibilityChangedEventHandler : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        IInspectable* sender,
                        ABI::Windows::UI::Core::IVisibilityChangedEventArgs* e
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IWindowVisibilityChangedEventHandler = _uuidof(IWindowVisibilityChangedEventHandler);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IAdaptiveTrigger
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.AdaptiveTrigger
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IAdaptiveTrigger[] = L"Windows.UI.Xaml.IAdaptiveTrigger";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("a5f04119-0cd9-49f1-a23f-44e547ab9f1a")
                IAdaptiveTrigger : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_MinWindowWidth(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MinWindowWidth(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MinWindowHeight(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MinWindowHeight(
                        DOUBLE value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAdaptiveTrigger = _uuidof(IAdaptiveTrigger);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IAdaptiveTriggerFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.AdaptiveTrigger
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IAdaptiveTriggerFactory[] = L"Windows.UI.Xaml.IAdaptiveTriggerFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("c966d482-5aeb-4841-9247-c1a0bdd6f59f")
                IAdaptiveTriggerFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IAdaptiveTrigger** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAdaptiveTriggerFactory = _uuidof(IAdaptiveTriggerFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IAdaptiveTriggerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.AdaptiveTrigger
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IAdaptiveTriggerStatics[] = L"Windows.UI.Xaml.IAdaptiveTriggerStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("b92e29ea-1615-4350-9c3b-92b2986bf444")
                IAdaptiveTriggerStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_MinWindowWidthProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MinWindowHeightProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAdaptiveTriggerStatics = _uuidof(IAdaptiveTriggerStatics);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IApplication
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Application
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplication_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIApplication_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplication[] = L"Windows.UI.Xaml.IApplication";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("74b861a1-7487-46a9-9a6e-c78b512726c5")
                IApplication : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Resources(
                        ABI::Windows::UI::Xaml::IResourceDictionary** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Resources(
                        ABI::Windows::UI::Xaml::IResourceDictionary* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_DebugSettings(
                        ABI::Windows::UI::Xaml::IDebugSettings** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RequestedTheme(
                        ABI::Windows::UI::Xaml::ApplicationTheme* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RequestedTheme(
                        ABI::Windows::UI::Xaml::ApplicationTheme value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_UnhandledException(
                        ABI::Windows::UI::Xaml::IUnhandledExceptionEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_UnhandledException(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_Suspending(
                        ABI::Windows::UI::Xaml::ISuspendingEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_Suspending(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_Resuming(
                        __FIEventHandler_1_IInspectable* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_Resuming(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Exit(void) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IApplication = _uuidof(IApplication);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplication;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplication_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IApplication2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Application
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplication2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIApplication2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplication2[] = L"Windows.UI.Xaml.IApplication2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("019104be-522a-5904-f52f-de72010429e0")
                IApplication2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_FocusVisualKind(
                        ABI::Windows::UI::Xaml::FocusVisualKind* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_FocusVisualKind(
                        ABI::Windows::UI::Xaml::FocusVisualKind value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RequiresPointerMode(
                        ABI::Windows::UI::Xaml::ApplicationRequiresPointerMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RequiresPointerMode(
                        ABI::Windows::UI::Xaml::ApplicationRequiresPointerMode value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_LeavingBackground(
                        ABI::Windows::UI::Xaml::ILeavingBackgroundEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_LeavingBackground(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_EnteredBackground(
                        ABI::Windows::UI::Xaml::IEnteredBackgroundEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_EnteredBackground(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IApplication2 = _uuidof(IApplication2);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplication2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplication2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IApplication3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Application
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplication3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIApplication3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplication3[] = L"Windows.UI.Xaml.IApplication3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("b775ad7c-18b8-45ca-a1b0-dc483e4b1028")
                IApplication3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_HighContrastAdjustment(
                        ABI::Windows::UI::Xaml::ApplicationHighContrastAdjustment* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_HighContrastAdjustment(
                        ABI::Windows::UI::Xaml::ApplicationHighContrastAdjustment value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IApplication3 = _uuidof(IApplication3);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplication3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplication3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Xaml.IApplicationFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Application
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplicationFactory[] = L"Windows.UI.Xaml.IApplicationFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("93bbe361-be5a-4ee3-b4a3-95118dc97a89")
                IApplicationFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IApplication** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IApplicationFactory = _uuidof(IApplicationFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplicationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IApplicationInitializationCallbackParams
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ApplicationInitializationCallbackParams
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplicationInitializationCallbackParams[] = L"Windows.UI.Xaml.IApplicationInitializationCallbackParams";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("751b792e-5772-4488-8b87-f547faa64474")
                IApplicationInitializationCallbackParams : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IApplicationInitializationCallbackParams = _uuidof(IApplicationInitializationCallbackParams);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IApplicationOverrides
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Application
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplicationOverrides[] = L"Windows.UI.Xaml.IApplicationOverrides";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("25f99ff7-9347-459a-9fac-b2d0e11c1a0f")
                IApplicationOverrides : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE OnActivated(
                        ABI::Windows::ApplicationModel::Activation::IActivatedEventArgs* args
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE OnLaunched(
                        ABI::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs* args
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE OnFileActivated(
                        ABI::Windows::ApplicationModel::Activation::IFileActivatedEventArgs* args
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE OnSearchActivated(
                        ABI::Windows::ApplicationModel::Activation::ISearchActivatedEventArgs* args
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE OnShareTargetActivated(
                        ABI::Windows::ApplicationModel::Activation::IShareTargetActivatedEventArgs* args
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE OnFileOpenPickerActivated(
                        ABI::Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs* args
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE OnFileSavePickerActivated(
                        ABI::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs* args
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE OnCachedFileUpdaterActivated(
                        ABI::Windows::ApplicationModel::Activation::ICachedFileUpdaterActivatedEventArgs* args
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE OnWindowCreated(
                        ABI::Windows::UI::Xaml::IWindowCreatedEventArgs* args
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IApplicationOverrides = _uuidof(IApplicationOverrides);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IApplicationOverrides2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Application
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplicationOverrides2[] = L"Windows.UI.Xaml.IApplicationOverrides2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("db5cd2b9-d3b4-558c-c64e-0434fd1bd889")
                IApplicationOverrides2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE OnBackgroundActivated(
                        ABI::Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs* args
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IApplicationOverrides2 = _uuidof(IApplicationOverrides2);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IApplicationStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Application
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplicationStatics[] = L"Windows.UI.Xaml.IApplicationStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("06499997-f7b4-45fe-b763-7577d1d3cb4a")
                IApplicationStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Current(
                        ABI::Windows::UI::Xaml::IApplication** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Start(
                        ABI::Windows::UI::Xaml::IApplicationInitializationCallback* callback
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE LoadComponent(
                        IInspectable* component,
                        ABI::Windows::Foundation::IUriRuntimeClass* resourceLocator
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE LoadComponentWithResourceLocation(
                        IInspectable* component,
                        ABI::Windows::Foundation::IUriRuntimeClass* resourceLocator,
                        ABI::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation componentResourceLocation
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IApplicationStatics = _uuidof(IApplicationStatics);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplicationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IBindingFailedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.BindingFailedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IBindingFailedEventArgs[] = L"Windows.UI.Xaml.IBindingFailedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("32c1d013-4dbd-446d-bbb8-0de35048a449")
                IBindingFailedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Message(
                        HSTRING* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IBindingFailedEventArgs = _uuidof(IBindingFailedEventArgs);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IBringIntoViewOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.BringIntoViewOptions
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IBringIntoViewOptions[] = L"Windows.UI.Xaml.IBringIntoViewOptions";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("19bdd1b5-c7cb-46d9-a4dd-a1bbe83ef2fb")
                IBringIntoViewOptions : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AnimationDesired(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AnimationDesired(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TargetRect(
                        __FIReference_1_Windows__CFoundation__CRect** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TargetRect(
                        __FIReference_1_Windows__CFoundation__CRect* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IBringIntoViewOptions = _uuidof(IBringIntoViewOptions);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Xaml.IBringIntoViewOptions2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.BringIntoViewOptions
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IBringIntoViewOptions2[] = L"Windows.UI.Xaml.IBringIntoViewOptions2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("e855e08e-64b6-1211-bddb-1fddbb6e8231")
                IBringIntoViewOptions2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_HorizontalAlignmentRatio(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_HorizontalAlignmentRatio(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VerticalAlignmentRatio(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_VerticalAlignmentRatio(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_HorizontalOffset(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_HorizontalOffset(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VerticalOffset(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_VerticalOffset(
                        DOUBLE value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IBringIntoViewOptions2 = _uuidof(IBringIntoViewOptions2);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Xaml.IBringIntoViewRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.BringIntoViewRequestedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IBringIntoViewRequestedEventArgs[] = L"Windows.UI.Xaml.IBringIntoViewRequestedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("0e629ec4-2206-4c8b-94ae-bdb66a4ebfd1")
                IBringIntoViewRequestedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_TargetElement(
                        ABI::Windows::UI::Xaml::IUIElement** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TargetElement(
                        ABI::Windows::UI::Xaml::IUIElement* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AnimationDesired(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AnimationDesired(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TargetRect(
                        ABI::Windows::Foundation::Rect* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TargetRect(
                        ABI::Windows::Foundation::Rect value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_HorizontalAlignmentRatio(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VerticalAlignmentRatio(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_HorizontalOffset(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_HorizontalOffset(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VerticalOffset(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_VerticalOffset(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Handled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Handled(
                        boolean value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IBringIntoViewRequestedEventArgs = _uuidof(IBringIntoViewRequestedEventArgs);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Xaml.IBrushTransition
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.BrushTransition
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIBrushTransition_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIBrushTransition_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IBrushTransition[] = L"Windows.UI.Xaml.IBrushTransition";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("1116972c-9dad-5429-a7dd-b2b7d061ab8e")
                IBrushTransition : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Duration(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Duration(
                        ABI::Windows::Foundation::TimeSpan value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IBrushTransition = _uuidof(IBrushTransition);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIBrushTransition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIBrushTransition_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IBrushTransitionFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.BrushTransition
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IBrushTransitionFactory[] = L"Windows.UI.Xaml.IBrushTransitionFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("3dbe7368-13d4-510c-a215-7539f4787b52")
                IBrushTransitionFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IBrushTransition** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IBrushTransitionFactory = _uuidof(IBrushTransitionFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IColorPaletteResources
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ColorPaletteResources
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IColorPaletteResources[] = L"Windows.UI.Xaml.IColorPaletteResources";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("258088c4-aef2-5d3f-833b-c36db6278ed9")
                IColorPaletteResources : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AltHigh(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AltHigh(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AltLow(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AltLow(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AltMedium(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AltMedium(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AltMediumHigh(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AltMediumHigh(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AltMediumLow(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AltMediumLow(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BaseHigh(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BaseHigh(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BaseLow(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BaseLow(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BaseMedium(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BaseMedium(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BaseMediumHigh(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BaseMediumHigh(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BaseMediumLow(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BaseMediumLow(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ChromeAltLow(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ChromeAltLow(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ChromeBlackHigh(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ChromeBlackHigh(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ChromeBlackLow(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ChromeBlackLow(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ChromeBlackMediumLow(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ChromeBlackMediumLow(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ChromeBlackMedium(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ChromeBlackMedium(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ChromeDisabledHigh(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ChromeDisabledHigh(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ChromeDisabledLow(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ChromeDisabledLow(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ChromeHigh(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ChromeHigh(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ChromeLow(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ChromeLow(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ChromeMedium(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ChromeMedium(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ChromeMediumLow(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ChromeMediumLow(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ChromeWhite(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ChromeWhite(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ChromeGray(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ChromeGray(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ListLow(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ListLow(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ListMedium(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ListMedium(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ErrorText(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ErrorText(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Accent(
                        __FIReference_1_Windows__CUI__CColor** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Accent(
                        __FIReference_1_Windows__CUI__CColor* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IColorPaletteResources = _uuidof(IColorPaletteResources);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IColorPaletteResourcesFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ColorPaletteResources
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IColorPaletteResourcesFactory[] = L"Windows.UI.Xaml.IColorPaletteResourcesFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("a57f0783-1876-5cc0-8ea5-bc77b17e0f7e")
                IColorPaletteResourcesFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IColorPaletteResources** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IColorPaletteResourcesFactory = _uuidof(IColorPaletteResourcesFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.ICornerRadiusHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.CornerRadiusHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ICornerRadiusHelper[] = L"Windows.UI.Xaml.ICornerRadiusHelper";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("fd7be182-1cdb-4288-b8c8-85ee79297bfc")
                ICornerRadiusHelper : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ICornerRadiusHelper = _uuidof(ICornerRadiusHelper);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ICornerRadiusHelperStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.CornerRadiusHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ICornerRadiusHelperStatics[] = L"Windows.UI.Xaml.ICornerRadiusHelperStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("f4a1f659-d4d4-451f-a387-d6bf4b2451d4")
                ICornerRadiusHelperStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE FromRadii(
                        DOUBLE topLeft,
                        DOUBLE topRight,
                        DOUBLE bottomRight,
                        DOUBLE bottomLeft,
                        ABI::Windows::UI::Xaml::CornerRadius* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE FromUniformRadius(
                        DOUBLE uniformRadius,
                        ABI::Windows::UI::Xaml::CornerRadius* result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICornerRadiusHelperStatics = _uuidof(ICornerRadiusHelperStatics);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDataContextChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DataContextChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataContextChangedEventArgs[] = L"Windows.UI.Xaml.IDataContextChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("7da68e21-0b8f-4f9f-a143-f8e7780136a2")
                IDataContextChangedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_NewValue(
                        IInspectable** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Handled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Handled(
                        boolean value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDataContextChangedEventArgs = _uuidof(IDataContextChangedEventArgs);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDataTemplate
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DataTemplate
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataTemplate[] = L"Windows.UI.Xaml.IDataTemplate";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("9910aec7-8ab5-4118-9bc6-09f45a35073d")
                IDataTemplate : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE LoadContent(
                        ABI::Windows::UI::Xaml::IDependencyObject** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDataTemplate = _uuidof(IDataTemplate);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataTemplate;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDataTemplateExtension
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataTemplateExtension[] = L"Windows.UI.Xaml.IDataTemplateExtension";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("595e9547-cdff-4b92-b773-ab396878f353")
                IDataTemplateExtension : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE ResetTemplate(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ProcessBinding(
                        UINT32 phase,
                        boolean* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ProcessBindings(
                        ABI::Windows::UI::Xaml::Controls::IContainerContentChangingEventArgs* arg,
                        INT32* result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDataTemplateExtension = _uuidof(IDataTemplateExtension);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDataTemplateFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DataTemplate
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataTemplateFactory[] = L"Windows.UI.Xaml.IDataTemplateFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("51ed9d7e-2b53-475b-9c88-0c1832c8351a")
                IDataTemplateFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IDataTemplate** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDataTemplateFactory = _uuidof(IDataTemplateFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDataTemplateKey
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DataTemplateKey
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataTemplateKey[] = L"Windows.UI.Xaml.IDataTemplateKey";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("873b6c28-cceb-4b61-86fa-b2cec39cc2fa")
                IDataTemplateKey : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_DataType(
                        IInspectable** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_DataType(
                        IInspectable* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDataTemplateKey = _uuidof(IDataTemplateKey);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDataTemplateKeyFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DataTemplateKey
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataTemplateKeyFactory[] = L"Windows.UI.Xaml.IDataTemplateKeyFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("e96b2959-d982-4152-91cb-de0e4dfd7693")
                IDataTemplateKeyFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IDataTemplateKey** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithType(
                        IInspectable* dataType,
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IDataTemplateKey** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDataTemplateKeyFactory = _uuidof(IDataTemplateKeyFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDataTemplateStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DataTemplate
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataTemplateStatics2[] = L"Windows.UI.Xaml.IDataTemplateStatics2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("8af77d73-aa01-471e-bedd-8bad86219b77")
                IDataTemplateStatics2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_ExtensionInstanceProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetExtensionInstance(
                        ABI::Windows::UI::Xaml::IFrameworkElement* element,
                        ABI::Windows::UI::Xaml::IDataTemplateExtension** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetExtensionInstance(
                        ABI::Windows::UI::Xaml::IFrameworkElement* element,
                        ABI::Windows::UI::Xaml::IDataTemplateExtension* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDataTemplateStatics2 = _uuidof(IDataTemplateStatics2);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDebugSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DebugSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDebugSettings[] = L"Windows.UI.Xaml.IDebugSettings";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("3d451f98-c6a7-4d17-8398-d83a067183d8")
                IDebugSettings : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_EnableFrameRateCounter(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_EnableFrameRateCounter(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsBindingTracingEnabled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsBindingTracingEnabled(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsOverdrawHeatMapEnabled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsOverdrawHeatMapEnabled(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_BindingFailed(
                        ABI::Windows::UI::Xaml::IBindingFailedEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_BindingFailed(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDebugSettings = _uuidof(IDebugSettings);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDebugSettings;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDebugSettings2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DebugSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDebugSettings2[] = L"Windows.UI.Xaml.IDebugSettings2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("48d37585-e1a6-469b-83c8-30825037119e")
                IDebugSettings2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_EnableRedrawRegions(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_EnableRedrawRegions(
                        boolean value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDebugSettings2 = _uuidof(IDebugSettings2);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDebugSettings2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDebugSettings3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DebugSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDebugSettings3[] = L"Windows.UI.Xaml.IDebugSettings3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("e6bb5022-0625-479f-8e32-4b583d73b7ac")
                IDebugSettings3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_IsTextPerformanceVisualizationEnabled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsTextPerformanceVisualizationEnabled(
                        boolean value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDebugSettings3 = _uuidof(IDebugSettings3);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDebugSettings3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDebugSettings4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DebugSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDebugSettings4[] = L"Windows.UI.Xaml.IDebugSettings4";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("c9001e45-e824-5a5f-866c-e20cec88a8fc")
                IDebugSettings4 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_FailFastOnErrors(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_FailFastOnErrors(
                        boolean value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDebugSettings4 = _uuidof(IDebugSettings4);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDebugSettings4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IDependencyObject
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DependencyObject
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyObject[] = L"Windows.UI.Xaml.IDependencyObject";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("5c526665-f60e-4912-af59-5fe0680f089d")
                IDependencyObject : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE GetValue(
                        ABI::Windows::UI::Xaml::IDependencyProperty* dp,
                        IInspectable** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetValue(
                        ABI::Windows::UI::Xaml::IDependencyProperty* dp,
                        IInspectable* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ClearValue(
                        ABI::Windows::UI::Xaml::IDependencyProperty* dp
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ReadLocalValue(
                        ABI::Windows::UI::Xaml::IDependencyProperty* dp,
                        IInspectable** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetAnimationBaseValue(
                        ABI::Windows::UI::Xaml::IDependencyProperty* dp,
                        IInspectable** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Dispatcher(
                        ABI::Windows::UI::Core::ICoreDispatcher** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDependencyObject = _uuidof(IDependencyObject);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyObject;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDependencyObject2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DependencyObject
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyObject2[] = L"Windows.UI.Xaml.IDependencyObject2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("29fed85d-3d22-43a1-add0-17027c08b212")
                IDependencyObject2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE RegisterPropertyChangedCallback(
                        ABI::Windows::UI::Xaml::IDependencyProperty* dp,
                        ABI::Windows::UI::Xaml::IDependencyPropertyChangedCallback* callback,
                        INT64* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE UnregisterPropertyChangedCallback(
                        ABI::Windows::UI::Xaml::IDependencyProperty* dp,
                        INT64 token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDependencyObject2 = _uuidof(IDependencyObject2);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyObject2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDependencyObjectCollectionFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DependencyObjectCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyObjectCollectionFactory[] = L"Windows.UI.Xaml.IDependencyObjectCollectionFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("051e79ff-b3a8-49ee-b5af-ac8f68b649e4")
                IDependencyObjectCollectionFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDependencyObjectCollectionFactory = _uuidof(IDependencyObjectCollectionFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDependencyObjectFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DependencyObject
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyObjectFactory[] = L"Windows.UI.Xaml.IDependencyObjectFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("9a03af92-7d8a-4937-884f-ecf34fe02acb")
                IDependencyObjectFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IDependencyObject** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDependencyObjectFactory = _uuidof(IDependencyObjectFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDependencyProperty
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DependencyProperty
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyProperty[] = L"Windows.UI.Xaml.IDependencyProperty";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("85b13970-9bc4-4e96-acf1-30c8fd3d55c8")
                IDependencyProperty : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE GetMetadata(
                        ABI::Windows::UI::Xaml::Interop::TypeName forType,
                        ABI::Windows::UI::Xaml::IPropertyMetadata** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDependencyProperty = _uuidof(IDependencyProperty);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyProperty;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDependencyPropertyChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DependencyPropertyChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyPropertyChangedEventArgs[] = L"Windows.UI.Xaml.IDependencyPropertyChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("81212c2b-24d0-4957-abc3-224470a93a4e")
                IDependencyPropertyChangedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Property(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_OldValue(
                        IInspectable** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_NewValue(
                        IInspectable** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDependencyPropertyChangedEventArgs = _uuidof(IDependencyPropertyChangedEventArgs);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDependencyPropertyStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DependencyProperty
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyPropertyStatics[] = L"Windows.UI.Xaml.IDependencyPropertyStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("49e5f28f-8259-4d5c-aae0-83d56dbb68d9")
                IDependencyPropertyStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_UnsetValue(
                        IInspectable** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Register(
                        HSTRING name,
                        ABI::Windows::UI::Xaml::Interop::TypeName propertyType,
                        ABI::Windows::UI::Xaml::Interop::TypeName ownerType,
                        ABI::Windows::UI::Xaml::IPropertyMetadata* typeMetadata,
                        ABI::Windows::UI::Xaml::IDependencyProperty** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE RegisterAttached(
                        HSTRING name,
                        ABI::Windows::UI::Xaml::Interop::TypeName propertyType,
                        ABI::Windows::UI::Xaml::Interop::TypeName ownerType,
                        ABI::Windows::UI::Xaml::IPropertyMetadata* defaultMetadata,
                        ABI::Windows::UI::Xaml::IDependencyProperty** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDependencyPropertyStatics = _uuidof(IDependencyPropertyStatics);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDispatcherTimer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DispatcherTimer
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDispatcherTimer[] = L"Windows.UI.Xaml.IDispatcherTimer";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("d160ce46-cd22-4f5f-8c97-40e61da3e2dc")
                IDispatcherTimer : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Interval(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Interval(
                        ABI::Windows::Foundation::TimeSpan value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsEnabled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_Tick(
                        __FIEventHandler_1_IInspectable* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_Tick(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Start(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Stop(void) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDispatcherTimer = _uuidof(IDispatcherTimer);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDispatcherTimerFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DispatcherTimer
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDispatcherTimerFactory[] = L"Windows.UI.Xaml.IDispatcherTimerFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("e9961e6e-3626-403a-afe0-040d58165632")
                IDispatcherTimerFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IDispatcherTimer** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDispatcherTimerFactory = _uuidof(IDispatcherTimerFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDragEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DragEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragEventArgs[] = L"Windows.UI.Xaml.IDragEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("b440c7c3-02b4-4980-9342-25dae1c0f188")
                IDragEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Handled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Handled(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Data(
                        ABI::Windows::ApplicationModel::DataTransfer::IDataPackage** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Data(
                        ABI::Windows::ApplicationModel::DataTransfer::IDataPackage* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetPosition(
                        ABI::Windows::UI::Xaml::IUIElement* relativeTo,
                        ABI::Windows::Foundation::Point* result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDragEventArgs = _uuidof(IDragEventArgs);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDragEventArgs2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DragEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragEventArgs2[] = L"Windows.UI.Xaml.IDragEventArgs2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("26336658-2917-411d-bfc3-2f22471cbbe7")
                IDragEventArgs2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_DataView(
                        ABI::Windows::ApplicationModel::DataTransfer::IDataPackageView** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_DragUIOverride(
                        ABI::Windows::UI::Xaml::IDragUIOverride** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Modifiers(
                        ABI::Windows::ApplicationModel::DataTransfer::DragDrop::DragDropModifiers* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AcceptedOperation(
                        ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AcceptedOperation(
                        ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetDeferral(
                        ABI::Windows::UI::Xaml::IDragOperationDeferral** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDragEventArgs2 = _uuidof(IDragEventArgs2);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDragEventArgs3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DragEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragEventArgs3[] = L"Windows.UI.Xaml.IDragEventArgs3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("d04fc3c6-8119-427a-8152-5f9550cc0416")
                IDragEventArgs3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AllowedOperations(
                        ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDragEventArgs3 = _uuidof(IDragEventArgs3);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IDragOperationDeferral
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DragOperationDeferral
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragOperationDeferral[] = L"Windows.UI.Xaml.IDragOperationDeferral";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("ba73ecba-1b73-4086-b3d3-c223beea1633")
                IDragOperationDeferral : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Complete(void) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDragOperationDeferral = _uuidof(IDragOperationDeferral);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDragStartingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DragStartingEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragStartingEventArgs[] = L"Windows.UI.Xaml.IDragStartingEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("6800d3fa-90b8-46f9-8e30-5ac25f73f0f9")
                IDragStartingEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Cancel(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Cancel(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Data(
                        ABI::Windows::ApplicationModel::DataTransfer::IDataPackage** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_DragUI(
                        ABI::Windows::UI::Xaml::IDragUI** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetDeferral(
                        ABI::Windows::UI::Xaml::IDragOperationDeferral** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetPosition(
                        ABI::Windows::UI::Xaml::IUIElement* relativeTo,
                        ABI::Windows::Foundation::Point* result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDragStartingEventArgs = _uuidof(IDragStartingEventArgs);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDragStartingEventArgs2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DragStartingEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragStartingEventArgs2[] = L"Windows.UI.Xaml.IDragStartingEventArgs2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("d855e08e-44b6-4211-bd0b-7fddbb6e8231")
                IDragStartingEventArgs2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AllowedOperations(
                        ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AllowedOperations(
                        ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDragStartingEventArgs2 = _uuidof(IDragStartingEventArgs2);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IDragUI
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DragUI
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragUI_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDragUI_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragUI[] = L"Windows.UI.Xaml.IDragUI";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("2d9bd838-7c60-4842-9170-346fe10a226a")
                IDragUI : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE SetContentFromBitmapImage(
                        ABI::Windows::UI::Xaml::Media::Imaging::IBitmapImage* bitmapImage
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetContentFromBitmapImageWithAnchorPoint(
                        ABI::Windows::UI::Xaml::Media::Imaging::IBitmapImage* bitmapImage,
                        ABI::Windows::Foundation::Point anchorPoint
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetContentFromSoftwareBitmap(
                        ABI::Windows::Graphics::Imaging::ISoftwareBitmap* softwareBitmap
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetContentFromSoftwareBitmapWithAnchorPoint(
                        ABI::Windows::Graphics::Imaging::ISoftwareBitmap* softwareBitmap,
                        ABI::Windows::Foundation::Point anchorPoint
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetContentFromDataPackage(void) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDragUI = _uuidof(IDragUI);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragUI;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragUI_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDragUIOverride
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DragUIOverride
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragUIOverride[] = L"Windows.UI.Xaml.IDragUIOverride";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("bd6c9dfa-c961-4861-b7a5-bf4fe4a8a6ef")
                IDragUIOverride : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Caption(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Caption(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsContentVisible(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsContentVisible(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsCaptionVisible(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsCaptionVisible(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsGlyphVisible(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsGlyphVisible(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Clear(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetContentFromBitmapImage(
                        ABI::Windows::UI::Xaml::Media::Imaging::IBitmapImage* bitmapImage
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetContentFromBitmapImageWithAnchorPoint(
                        ABI::Windows::UI::Xaml::Media::Imaging::IBitmapImage* bitmapImage,
                        ABI::Windows::Foundation::Point anchorPoint
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetContentFromSoftwareBitmap(
                        ABI::Windows::Graphics::Imaging::ISoftwareBitmap* softwareBitmap
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetContentFromSoftwareBitmapWithAnchorPoint(
                        ABI::Windows::Graphics::Imaging::ISoftwareBitmap* softwareBitmap,
                        ABI::Windows::Foundation::Point anchorPoint
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDragUIOverride = _uuidof(IDragUIOverride);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragUIOverride;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDropCompletedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DropCompletedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDropCompletedEventArgs[] = L"Windows.UI.Xaml.IDropCompletedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("6c4fc188-95bc-4261-9ec5-21cab677b734")
                IDropCompletedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_DropResult(
                        ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDropCompletedEventArgs = _uuidof(IDropCompletedEventArgs);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDurationHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DurationHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDurationHelper[] = L"Windows.UI.Xaml.IDurationHelper";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("25c1659f-4497-4135-940f-ee96f4d6e934")
                IDurationHelper : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IDurationHelper = _uuidof(IDurationHelper);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDurationHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDurationHelperStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DurationHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDurationHelperStatics[] = L"Windows.UI.Xaml.IDurationHelperStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("bc88093e-3547-4ec0-b519-ffa8f9c4838c")
                IDurationHelperStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Automatic(
                        ABI::Windows::UI::Xaml::Duration* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Forever(
                        ABI::Windows::UI::Xaml::Duration* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Compare(
                        ABI::Windows::UI::Xaml::Duration duration1,
                        ABI::Windows::UI::Xaml::Duration duration2,
                        INT32* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE FromTimeSpan(
                        ABI::Windows::Foundation::TimeSpan timeSpan,
                        ABI::Windows::UI::Xaml::Duration* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetHasTimeSpan(
                        ABI::Windows::UI::Xaml::Duration target,
                        boolean* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Add(
                        ABI::Windows::UI::Xaml::Duration target,
                        ABI::Windows::UI::Xaml::Duration duration,
                        ABI::Windows::UI::Xaml::Duration* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Equals(
                        ABI::Windows::UI::Xaml::Duration target,
                        ABI::Windows::UI::Xaml::Duration value,
                        boolean* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Subtract(
                        ABI::Windows::UI::Xaml::Duration target,
                        ABI::Windows::UI::Xaml::Duration duration,
                        ABI::Windows::UI::Xaml::Duration* result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IDurationHelperStatics = _uuidof(IDurationHelperStatics);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IEffectiveViewportChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.EffectiveViewportChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IEffectiveViewportChangedEventArgs[] = L"Windows.UI.Xaml.IEffectiveViewportChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("55ee2e81-1c18-59ed-bd3d-c4ca8fa7d190")
                IEffectiveViewportChangedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_EffectiveViewport(
                        ABI::Windows::Foundation::Rect* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MaxViewport(
                        ABI::Windows::Foundation::Rect* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BringIntoViewDistanceX(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BringIntoViewDistanceY(
                        DOUBLE* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IEffectiveViewportChangedEventArgs = _uuidof(IEffectiveViewportChangedEventArgs);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IElementFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IElementFactory[] = L"Windows.UI.Xaml.IElementFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("17d2ad90-1370-55c8-80e1-78b49004a9e1")
                IElementFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE GetElement(
                        ABI::Windows::UI::Xaml::IElementFactoryGetArgs* args,
                        ABI::Windows::UI::Xaml::IUIElement** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE RecycleElement(
                        ABI::Windows::UI::Xaml::IElementFactoryRecycleArgs* args
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IElementFactory = _uuidof(IElementFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIElementFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IElementFactoryGetArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ElementFactoryGetArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IElementFactoryGetArgs[] = L"Windows.UI.Xaml.IElementFactoryGetArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("fb508774-41a3-5829-9255-cf452d041df4")
                IElementFactoryGetArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Data(
                        IInspectable** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Data(
                        IInspectable* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Parent(
                        ABI::Windows::UI::Xaml::IUIElement** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Parent(
                        ABI::Windows::UI::Xaml::IUIElement* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IElementFactoryGetArgs = _uuidof(IElementFactoryGetArgs);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IElementFactoryGetArgsFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ElementFactoryGetArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IElementFactoryGetArgsFactory[] = L"Windows.UI.Xaml.IElementFactoryGetArgsFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("c3b6dae7-883b-5fd7-be80-2059d877e783")
                IElementFactoryGetArgsFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IElementFactoryGetArgs** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IElementFactoryGetArgsFactory = _uuidof(IElementFactoryGetArgsFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IElementFactoryRecycleArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ElementFactoryRecycleArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IElementFactoryRecycleArgs[] = L"Windows.UI.Xaml.IElementFactoryRecycleArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("86f16b14-37e8-5dd8-a90c-25d3710318b0")
                IElementFactoryRecycleArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Element(
                        ABI::Windows::UI::Xaml::IUIElement** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Element(
                        ABI::Windows::UI::Xaml::IUIElement* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Parent(
                        ABI::Windows::UI::Xaml::IUIElement** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Parent(
                        ABI::Windows::UI::Xaml::IUIElement* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IElementFactoryRecycleArgs = _uuidof(IElementFactoryRecycleArgs);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IElementFactoryRecycleArgsFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ElementFactoryRecycleArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IElementFactoryRecycleArgsFactory[] = L"Windows.UI.Xaml.IElementFactoryRecycleArgsFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("8d926509-ea0d-541b-8271-f9e9118f5e7c")
                IElementFactoryRecycleArgsFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IElementFactoryRecycleArgs** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IElementFactoryRecycleArgsFactory = _uuidof(IElementFactoryRecycleArgsFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IElementSoundPlayer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ElementSoundPlayer
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IElementSoundPlayer[] = L"Windows.UI.Xaml.IElementSoundPlayer";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("387773a5-f036-460c-9b81-f3d6ea43f6f2")
                IElementSoundPlayer : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IElementSoundPlayer = _uuidof(IElementSoundPlayer);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IElementSoundPlayerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ElementSoundPlayer
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IElementSoundPlayerStatics[] = L"Windows.UI.Xaml.IElementSoundPlayerStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("217a9004-981d-41c9-b152-ada911a4b13a")
                IElementSoundPlayerStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Volume(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Volume(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_State(
                        ABI::Windows::UI::Xaml::ElementSoundPlayerState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_State(
                        ABI::Windows::UI::Xaml::ElementSoundPlayerState value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Play(
                        ABI::Windows::UI::Xaml::ElementSoundKind sound
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IElementSoundPlayerStatics = _uuidof(IElementSoundPlayerStatics);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IElementSoundPlayerStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ElementSoundPlayer
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IElementSoundPlayerStatics2[] = L"Windows.UI.Xaml.IElementSoundPlayerStatics2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("f2505956-ed41-48d7-aae8-f2abcb444929")
                IElementSoundPlayerStatics2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_SpatialAudioMode(
                        ABI::Windows::UI::Xaml::ElementSpatialAudioMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_SpatialAudioMode(
                        ABI::Windows::UI::Xaml::ElementSpatialAudioMode value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IElementSoundPlayerStatics2 = _uuidof(IElementSoundPlayerStatics2);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Xaml.IEventTrigger
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.EventTrigger
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IEventTrigger[] = L"Windows.UI.Xaml.IEventTrigger";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("def8f855-0b49-4087-b1a9-b8b38488f786")
                IEventTrigger : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_RoutedEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RoutedEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Actions(
                        __FIVector_1_Windows__CUI__CXaml__CTriggerAction** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IEventTrigger = _uuidof(IEventTrigger);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIEventTrigger;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IExceptionRoutedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ExceptionRoutedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IExceptionRoutedEventArgs[] = L"Windows.UI.Xaml.IExceptionRoutedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("dd9ff16a-4b62-4a6c-a49d-0671ef6136be")
                IExceptionRoutedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_ErrorMessage(
                        HSTRING* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IExceptionRoutedEventArgs = _uuidof(IExceptionRoutedEventArgs);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IExceptionRoutedEventArgsFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ExceptionRoutedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IExceptionRoutedEventArgsFactory[] = L"Windows.UI.Xaml.IExceptionRoutedEventArgsFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("bba9826d-5d7a-44e7-b893-b2ae0dd24273")
                IExceptionRoutedEventArgsFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IExceptionRoutedEventArgsFactory = _uuidof(IExceptionRoutedEventArgsFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElement
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElement[] = L"Windows.UI.Xaml.IFrameworkElement";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("a391d09b-4a99-4b7c-9d8d-6fa5d01f6fbf")
                IFrameworkElement : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Triggers(
                        __FIVector_1_Windows__CUI__CXaml__CTriggerBase** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Resources(
                        ABI::Windows::UI::Xaml::IResourceDictionary** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Resources(
                        ABI::Windows::UI::Xaml::IResourceDictionary* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Tag(
                        IInspectable** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Tag(
                        IInspectable* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Language(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Language(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ActualWidth(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ActualHeight(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Width(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Width(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Height(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Height(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MinWidth(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MinWidth(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MaxWidth(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MaxWidth(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MinHeight(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MinHeight(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MaxHeight(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MaxHeight(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_HorizontalAlignment(
                        ABI::Windows::UI::Xaml::HorizontalAlignment* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_HorizontalAlignment(
                        ABI::Windows::UI::Xaml::HorizontalAlignment value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VerticalAlignment(
                        ABI::Windows::UI::Xaml::VerticalAlignment* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_VerticalAlignment(
                        ABI::Windows::UI::Xaml::VerticalAlignment value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Margin(
                        ABI::Windows::UI::Xaml::Thickness* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Margin(
                        ABI::Windows::UI::Xaml::Thickness value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Name(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Name(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BaseUri(
                        ABI::Windows::Foundation::IUriRuntimeClass** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_DataContext(
                        IInspectable** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_DataContext(
                        IInspectable* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Style(
                        ABI::Windows::UI::Xaml::IStyle** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Style(
                        ABI::Windows::UI::Xaml::IStyle* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Parent(
                        ABI::Windows::UI::Xaml::IDependencyObject** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_FlowDirection(
                        ABI::Windows::UI::Xaml::FlowDirection* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_FlowDirection(
                        ABI::Windows::UI::Xaml::FlowDirection value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_Loaded(
                        ABI::Windows::UI::Xaml::IRoutedEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_Loaded(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_Unloaded(
                        ABI::Windows::UI::Xaml::IRoutedEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_Unloaded(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_SizeChanged(
                        ABI::Windows::UI::Xaml::ISizeChangedEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_SizeChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_LayoutUpdated(
                        __FIEventHandler_1_IInspectable* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_LayoutUpdated(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE FindName(
                        HSTRING name,
                        IInspectable** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetBinding(
                        ABI::Windows::UI::Xaml::IDependencyProperty* dp,
                        ABI::Windows::UI::Xaml::Data::IBindingBase* binding
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkElement = _uuidof(IFrameworkElement);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElement;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElement2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElement2[] = L"Windows.UI.Xaml.IFrameworkElement2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("f19104be-422a-4904-a52f-ee72010429e5")
                IFrameworkElement2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_RequestedTheme(
                        ABI::Windows::UI::Xaml::ElementTheme* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RequestedTheme(
                        ABI::Windows::UI::Xaml::ElementTheme value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_DataContextChanged(
                        __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_DataContextChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetBindingExpression(
                        ABI::Windows::UI::Xaml::IDependencyProperty* dp,
                        ABI::Windows::UI::Xaml::Data::IBindingExpression** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkElement2 = _uuidof(IFrameworkElement2);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElement3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElement3[] = L"Windows.UI.Xaml.IFrameworkElement3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("c81c2720-5c52-4bbe-a199-2b1e34f00f70")
                IFrameworkElement3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE add_Loading(
                        __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_Loading(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkElement3 = _uuidof(IFrameworkElement3);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElement4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElement4[] = L"Windows.UI.Xaml.IFrameworkElement4";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("6b765bb3-fba3-4404-bdee-1a45d1ca5f21")
                IFrameworkElement4 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AllowFocusOnInteraction(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AllowFocusOnInteraction(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_FocusVisualMargin(
                        ABI::Windows::UI::Xaml::Thickness* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_FocusVisualMargin(
                        ABI::Windows::UI::Xaml::Thickness value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_FocusVisualSecondaryThickness(
                        ABI::Windows::UI::Xaml::Thickness* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_FocusVisualSecondaryThickness(
                        ABI::Windows::UI::Xaml::Thickness value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_FocusVisualPrimaryThickness(
                        ABI::Windows::UI::Xaml::Thickness* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_FocusVisualPrimaryThickness(
                        ABI::Windows::UI::Xaml::Thickness value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_FocusVisualSecondaryBrush(
                        ABI::Windows::UI::Xaml::Media::IBrush** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_FocusVisualSecondaryBrush(
                        ABI::Windows::UI::Xaml::Media::IBrush* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_FocusVisualPrimaryBrush(
                        ABI::Windows::UI::Xaml::Media::IBrush** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_FocusVisualPrimaryBrush(
                        ABI::Windows::UI::Xaml::Media::IBrush* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AllowFocusWhenDisabled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AllowFocusWhenDisabled(
                        boolean value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkElement4 = _uuidof(IFrameworkElement4);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElement6
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElement6[] = L"Windows.UI.Xaml.IFrameworkElement6";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("792a5d91-62a1-40bf-a0ce-f9c131fcb7a7")
                IFrameworkElement6 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_ActualTheme(
                        ABI::Windows::UI::Xaml::ElementTheme* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_ActualThemeChanged(
                        __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_ActualThemeChanged(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkElement6 = _uuidof(IFrameworkElement6);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElement7
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElement7[] = L"Windows.UI.Xaml.IFrameworkElement7";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("2263886c-c069-570f-b9cc-9e21dd028d8e")
                IFrameworkElement7 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_IsLoaded(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_EffectiveViewportChanged(
                        __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_EffectiveViewportChanged(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkElement7 = _uuidof(IFrameworkElement7);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElementFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementFactory[] = L"Windows.UI.Xaml.IFrameworkElementFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("deaee126-03ca-4966-b576-604cce93b5e8")
                IFrameworkElementFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IFrameworkElement** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkElementFactory = _uuidof(IFrameworkElementFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElementOverrides
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementOverrides[] = L"Windows.UI.Xaml.IFrameworkElementOverrides";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("da007e54-b3c2-4b9a-aa8e-d3f071262b97")
                IFrameworkElementOverrides : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE MeasureOverride(
                        ABI::Windows::Foundation::Size availableSize,
                        ABI::Windows::Foundation::Size* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ArrangeOverride(
                        ABI::Windows::Foundation::Size finalSize,
                        ABI::Windows::Foundation::Size* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE OnApplyTemplate(void) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkElementOverrides = _uuidof(IFrameworkElementOverrides);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElementOverrides2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementOverrides2[] = L"Windows.UI.Xaml.IFrameworkElementOverrides2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("cb5cd2b9-e3b4-458c-b64e-1434fd1bd88a")
                IFrameworkElementOverrides2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE GoToElementStateCore(
                        HSTRING stateName,
                        boolean useTransitions,
                        boolean* result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkElementOverrides2 = _uuidof(IFrameworkElementOverrides2);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElementProtected7
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementProtected7[] = L"Windows.UI.Xaml.IFrameworkElementProtected7";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("65aa0480-22e3-5103-ad2a-b626f88ca5ae")
                IFrameworkElementProtected7 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE InvalidateViewport(void) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkElementProtected7 = _uuidof(IFrameworkElementProtected7);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElementStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementStatics[] = L"Windows.UI.Xaml.IFrameworkElementStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("48383032-fbeb-4f8a-aed2-ee21fb27a57b")
                IFrameworkElementStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_TagProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_LanguageProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ActualWidthProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ActualHeightProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_WidthProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_HeightProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MinWidthProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MaxWidthProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MinHeightProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MaxHeightProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_HorizontalAlignmentProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VerticalAlignmentProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MarginProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_NameProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_DataContextProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StyleProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_FlowDirectionProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkElementStatics = _uuidof(IFrameworkElementStatics);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElementStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementStatics2[] = L"Windows.UI.Xaml.IFrameworkElementStatics2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("9695db02-c0d8-4fa2-b100-3fa2df8b9538")
                IFrameworkElementStatics2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_RequestedThemeProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkElementStatics2 = _uuidof(IFrameworkElementStatics2);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElementStatics4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementStatics4[] = L"Windows.UI.Xaml.IFrameworkElementStatics4";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("9c41b155-c5d8-4663-bff2-d8d54fb5dbb3")
                IFrameworkElementStatics4 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AllowFocusOnInteractionProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_FocusVisualMarginProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_FocusVisualSecondaryThicknessProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_FocusVisualPrimaryThicknessProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_FocusVisualSecondaryBrushProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_FocusVisualPrimaryBrushProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AllowFocusWhenDisabledProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkElementStatics4 = _uuidof(IFrameworkElementStatics4);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElementStatics5
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementStatics5[] = L"Windows.UI.Xaml.IFrameworkElementStatics5";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("525d3941-0b3c-4be6-9978-19a8025c09d8")
                IFrameworkElementStatics5 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE DeferTree(
                        ABI::Windows::UI::Xaml::IDependencyObject* element
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkElementStatics5 = _uuidof(IFrameworkElementStatics5);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElementStatics6
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementStatics6[] = L"Windows.UI.Xaml.IFrameworkElementStatics6";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("fcc1529a-69db-4582-a7be-cf6a1cfdacd0")
                IFrameworkElementStatics6 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_ActualThemeProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkElementStatics6 = _uuidof(IFrameworkElementStatics6);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkTemplate
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkTemplate
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkTemplate[] = L"Windows.UI.Xaml.IFrameworkTemplate";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("a1e254d8-a446-4a27-9a9d-a0f59e1258a5")
                IFrameworkTemplate : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkTemplate = _uuidof(IFrameworkTemplate);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkTemplateFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkTemplate
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkTemplateFactory[] = L"Windows.UI.Xaml.IFrameworkTemplateFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("1a78a0a5-937d-46d4-832b-94ff14dab061")
                IFrameworkTemplateFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IFrameworkTemplate** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkTemplateFactory = _uuidof(IFrameworkTemplateFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkView
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkView
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkView[] = L"Windows.UI.Xaml.IFrameworkView";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("ddba664b-b603-47aa-942d-3833174f0d80")
                IFrameworkView : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkView = _uuidof(IFrameworkView);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkView;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkViewSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkViewSource
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkViewSource[] = L"Windows.UI.Xaml.IFrameworkViewSource";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("e3b077da-35ad-4b09-b5b2-27420041ba9f")
                IFrameworkViewSource : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IFrameworkViewSource = _uuidof(IFrameworkViewSource);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IGridLengthHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.GridLengthHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IGridLengthHelper[] = L"Windows.UI.Xaml.IGridLengthHelper";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("7a826ce1-07a0-4083-b6d1-b1d917b976ac")
                IGridLengthHelper : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IGridLengthHelper = _uuidof(IGridLengthHelper);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IGridLengthHelperStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.GridLengthHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IGridLengthHelperStatics[] = L"Windows.UI.Xaml.IGridLengthHelperStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("9d457b9b-019f-4266-8872-215f198f6a9d")
                IGridLengthHelperStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Auto(
                        ABI::Windows::UI::Xaml::GridLength* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE FromPixels(
                        DOUBLE pixels,
                        ABI::Windows::UI::Xaml::GridLength* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE FromValueAndType(
                        DOUBLE value,
                        ABI::Windows::UI::Xaml::GridUnitType type,
                        ABI::Windows::UI::Xaml::GridLength* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetIsAbsolute(
                        ABI::Windows::UI::Xaml::GridLength target,
                        boolean* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetIsAuto(
                        ABI::Windows::UI::Xaml::GridLength target,
                        boolean* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetIsStar(
                        ABI::Windows::UI::Xaml::GridLength target,
                        boolean* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Equals(
                        ABI::Windows::UI::Xaml::GridLength target,
                        ABI::Windows::UI::Xaml::GridLength value,
                        boolean* result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IGridLengthHelperStatics = _uuidof(IGridLengthHelperStatics);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IMediaFailedRoutedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.MediaFailedRoutedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IMediaFailedRoutedEventArgs[] = L"Windows.UI.Xaml.IMediaFailedRoutedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("46d1fa8d-5149-4153-ba3c-b03e64ee531e")
                IMediaFailedRoutedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_ErrorTrace(
                        HSTRING* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaFailedRoutedEventArgs = _uuidof(IMediaFailedRoutedEventArgs);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IPointHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.PointHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPointHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIPointHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPointHelper[] = L"Windows.UI.Xaml.IPointHelper";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("727bdd92-64b0-49cf-a321-a9793e73e2e7")
                IPointHelper : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IPointHelper = _uuidof(IPointHelper);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPointHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPointHelper_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IPointHelperStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.PointHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPointHelperStatics[] = L"Windows.UI.Xaml.IPointHelperStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("015aca75-76d8-4b7e-8a33-7d79204691ee")
                IPointHelperStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE FromCoordinates(
                        FLOAT x,
                        FLOAT y,
                        ABI::Windows::Foundation::Point* result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IPointHelperStatics = _uuidof(IPointHelperStatics);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IPropertyMetadata
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.PropertyMetadata
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPropertyMetadata[] = L"Windows.UI.Xaml.IPropertyMetadata";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("814ef30d-8d18-448a-8644-f2cb51e70380")
                IPropertyMetadata : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_DefaultValue(
                        IInspectable** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CreateDefaultValueCallback(
                        ABI::Windows::UI::Xaml::ICreateDefaultValueCallback** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IPropertyMetadata = _uuidof(IPropertyMetadata);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IPropertyMetadataFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.PropertyMetadata
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPropertyMetadataFactory[] = L"Windows.UI.Xaml.IPropertyMetadataFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("c1b81cc0-57cd-4f2f-b0a9-e1801b28f76b")
                IPropertyMetadataFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithDefaultValue(
                        IInspectable* defaultValue,
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IPropertyMetadata** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithDefaultValueAndCallback(
                        IInspectable* defaultValue,
                        ABI::Windows::UI::Xaml::IPropertyChangedCallback* propertyChangedCallback,
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IPropertyMetadata** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IPropertyMetadataFactory = _uuidof(IPropertyMetadataFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IPropertyMetadataStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.PropertyMetadata
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPropertyMetadataStatics[] = L"Windows.UI.Xaml.IPropertyMetadataStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("3b01077a-6e06-45e9-8b5c-af243458c062")
                IPropertyMetadataStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateWithDefaultValue(
                        IInspectable* defaultValue,
                        ABI::Windows::UI::Xaml::IPropertyMetadata** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateWithDefaultValueAndCallback(
                        IInspectable* defaultValue,
                        ABI::Windows::UI::Xaml::IPropertyChangedCallback* propertyChangedCallback,
                        ABI::Windows::UI::Xaml::IPropertyMetadata** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateWithFactory(
                        ABI::Windows::UI::Xaml::ICreateDefaultValueCallback* createDefaultValueCallback,
                        ABI::Windows::UI::Xaml::IPropertyMetadata** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateWithFactoryAndCallback(
                        ABI::Windows::UI::Xaml::ICreateDefaultValueCallback* createDefaultValueCallback,
                        ABI::Windows::UI::Xaml::IPropertyChangedCallback* propertyChangedCallback,
                        ABI::Windows::UI::Xaml::IPropertyMetadata** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IPropertyMetadataStatics = _uuidof(IPropertyMetadataStatics);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IPropertyPath
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.PropertyPath
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPropertyPath[] = L"Windows.UI.Xaml.IPropertyPath";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("300e5d8a-1ff3-4d2c-95ec-27f81debacb8")
                IPropertyPath : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Path(
                        HSTRING* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IPropertyPath = _uuidof(IPropertyPath);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPropertyPath;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IPropertyPathFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.PropertyPath
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPropertyPathFactory[] = L"Windows.UI.Xaml.IPropertyPathFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("4e4cdf99-9826-4e56-847c-ca055f162905")
                IPropertyPathFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        HSTRING path,
                        ABI::Windows::UI::Xaml::IPropertyPath** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IPropertyPathFactory = _uuidof(IPropertyPathFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IRectHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.RectHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIRectHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIRectHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IRectHelper[] = L"Windows.UI.Xaml.IRectHelper";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("a38781e2-4bfb-4ee2-afe5-89f31b37478d")
                IRectHelper : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IRectHelper = _uuidof(IRectHelper);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIRectHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIRectHelper_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IRectHelperStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.RectHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IRectHelperStatics[] = L"Windows.UI.Xaml.IRectHelperStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("5ee163e4-c17e-494f-b580-2f0574fc3a15")
                IRectHelperStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Empty(
                        ABI::Windows::Foundation::Rect* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE FromCoordinatesAndDimensions(
                        FLOAT x,
                        FLOAT y,
                        FLOAT width,
                        FLOAT height,
                        ABI::Windows::Foundation::Rect* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE FromPoints(
                        ABI::Windows::Foundation::Point point1,
                        ABI::Windows::Foundation::Point point2,
                        ABI::Windows::Foundation::Rect* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE FromLocationAndSize(
                        ABI::Windows::Foundation::Point location,
                        ABI::Windows::Foundation::Size size,
                        ABI::Windows::Foundation::Rect* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetIsEmpty(
                        ABI::Windows::Foundation::Rect target,
                        boolean* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetBottom(
                        ABI::Windows::Foundation::Rect target,
                        FLOAT* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetLeft(
                        ABI::Windows::Foundation::Rect target,
                        FLOAT* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetRight(
                        ABI::Windows::Foundation::Rect target,
                        FLOAT* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetTop(
                        ABI::Windows::Foundation::Rect target,
                        FLOAT* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Contains(
                        ABI::Windows::Foundation::Rect target,
                        ABI::Windows::Foundation::Point point,
                        boolean* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Equals(
                        ABI::Windows::Foundation::Rect target,
                        ABI::Windows::Foundation::Rect value,
                        boolean* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Intersect(
                        ABI::Windows::Foundation::Rect target,
                        ABI::Windows::Foundation::Rect rect,
                        ABI::Windows::Foundation::Rect* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE UnionWithPoint(
                        ABI::Windows::Foundation::Rect target,
                        ABI::Windows::Foundation::Point point,
                        ABI::Windows::Foundation::Rect* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE UnionWithRect(
                        ABI::Windows::Foundation::Rect target,
                        ABI::Windows::Foundation::Rect rect,
                        ABI::Windows::Foundation::Rect* result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IRectHelperStatics = _uuidof(IRectHelperStatics);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IResourceDictionary
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ResourceDictionary
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IResourceDictionary[] = L"Windows.UI.Xaml.IResourceDictionary";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("c1ea4f24-d6de-4191-8e3a-f48601f7489c")
                IResourceDictionary : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Source(
                        ABI::Windows::Foundation::IUriRuntimeClass** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Source(
                        ABI::Windows::Foundation::IUriRuntimeClass* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MergedDictionaries(
                        __FIVector_1_Windows__CUI__CXaml__CResourceDictionary** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ThemeDictionaries(
                        __FIMap_2_IInspectable_IInspectable** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IResourceDictionary = _uuidof(IResourceDictionary);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIResourceDictionary;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IResourceDictionaryFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ResourceDictionary
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IResourceDictionaryFactory[] = L"Windows.UI.Xaml.IResourceDictionaryFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("ea3639b5-31b7-4271-92c9-7c9584a91c22")
                IResourceDictionaryFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IResourceDictionary** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IResourceDictionaryFactory = _uuidof(IResourceDictionaryFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IRoutedEvent
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.RoutedEvent
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IRoutedEvent[] = L"Windows.UI.Xaml.IRoutedEvent";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("a6b25818-43c1-4c70-865c-7bdd5a32e327")
                IRoutedEvent : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IRoutedEvent = _uuidof(IRoutedEvent);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIRoutedEvent;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IRoutedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.RoutedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IRoutedEventArgs[] = L"Windows.UI.Xaml.IRoutedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("5c985ac6-d802-4b38-a223-bf070c43fedf")
                IRoutedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_OriginalSource(
                        IInspectable** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IRoutedEventArgs = _uuidof(IRoutedEventArgs);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IRoutedEventArgsFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.RoutedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IRoutedEventArgsFactory[] = L"Windows.UI.Xaml.IRoutedEventArgsFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("b61c4d87-70e5-412e-b520-1a41ee76bbf4")
                IRoutedEventArgsFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IRoutedEventArgs** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IRoutedEventArgsFactory = _uuidof(IRoutedEventArgsFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IScalarTransition
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ScalarTransition
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIScalarTransition_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIScalarTransition_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IScalarTransition[] = L"Windows.UI.Xaml.IScalarTransition";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("4cb68238-e15d-524e-a73c-9d4dcfbea226")
                IScalarTransition : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Duration(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Duration(
                        ABI::Windows::Foundation::TimeSpan value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IScalarTransition = _uuidof(IScalarTransition);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIScalarTransition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIScalarTransition_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IScalarTransitionFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ScalarTransition
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IScalarTransitionFactory[] = L"Windows.UI.Xaml.IScalarTransitionFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("c9b1e9ee-90da-5ddd-be64-3e47977ea280")
                IScalarTransitionFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IScalarTransition** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IScalarTransitionFactory = _uuidof(IScalarTransitionFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.ISetter
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Setter
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISetter_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISetter_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISetter[] = L"Windows.UI.Xaml.ISetter";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("a73ded29-b4ae-4a81-be85-e690ba0d3b6e")
                ISetter : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Property(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Property(
                        ABI::Windows::UI::Xaml::IDependencyProperty* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Value(
                        IInspectable** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Value(
                        IInspectable* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ISetter = _uuidof(ISetter);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISetter;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISetter_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ISetter2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Setter
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISetter2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISetter2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISetter2[] = L"Windows.UI.Xaml.ISetter2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("70169561-05b1-4fa3-9d53-8e0c8c747afc")
                ISetter2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Target(
                        ABI::Windows::UI::Xaml::ITargetPropertyPath** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Target(
                        ABI::Windows::UI::Xaml::ITargetPropertyPath* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ISetter2 = _uuidof(ISetter2);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISetter2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISetter2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ISetterBase
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.SetterBase
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISetterBase_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISetterBase_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISetterBase[] = L"Windows.UI.Xaml.ISetterBase";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("418be27c-2ac4-4f22-8097-dea3aeeb2fb3")
                ISetterBase : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_IsSealed(
                        boolean* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ISetterBase = _uuidof(ISetterBase);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISetterBase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISetterBase_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ISetterBaseCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.SetterBaseCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISetterBaseCollection[] = L"Windows.UI.Xaml.ISetterBaseCollection";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("03c40ca8-909e-4117-811c-a4529496bdf1")
                ISetterBaseCollection : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_IsSealed(
                        boolean* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ISetterBaseCollection = _uuidof(ISetterBaseCollection);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ISetterBaseFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.SetterBase
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISetterBaseFactory[] = L"Windows.UI.Xaml.ISetterBaseFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("81f8ad60-1ce8-469d-a667-16e37cef8ba9")
                ISetterBaseFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ISetterBaseFactory = _uuidof(ISetterBaseFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ISetterFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Setter
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISetterFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISetterFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISetterFactory[] = L"Windows.UI.Xaml.ISetterFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("d3ca3d42-09b1-49d5-8891-e7b5648e02a2")
                ISetterFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        ABI::Windows::UI::Xaml::IDependencyProperty* targetProperty,
                        IInspectable* value,
                        ABI::Windows::UI::Xaml::ISetter** instance
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ISetterFactory = _uuidof(ISetterFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISetterFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISetterFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ISizeChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.SizeChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISizeChangedEventArgs[] = L"Windows.UI.Xaml.ISizeChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("d5312e60-5cc1-42a1-920c-1af46be2f986")
                ISizeChangedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_PreviousSize(
                        ABI::Windows::Foundation::Size* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_NewSize(
                        ABI::Windows::Foundation::Size* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ISizeChangedEventArgs = _uuidof(ISizeChangedEventArgs);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ISizeHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.SizeHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISizeHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISizeHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISizeHelper[] = L"Windows.UI.Xaml.ISizeHelper";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("e7225a94-5d03-4a03-ba94-967fc68fcefe")
                ISizeHelper : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ISizeHelper = _uuidof(ISizeHelper);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISizeHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISizeHelper_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ISizeHelperStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.SizeHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISizeHelperStatics[] = L"Windows.UI.Xaml.ISizeHelperStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("6286c5b2-cf78-4915-aa40-76004a165f5e")
                ISizeHelperStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Empty(
                        ABI::Windows::Foundation::Size* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE FromDimensions(
                        FLOAT width,
                        FLOAT height,
                        ABI::Windows::Foundation::Size* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetIsEmpty(
                        ABI::Windows::Foundation::Size target,
                        boolean* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Equals(
                        ABI::Windows::Foundation::Size target,
                        ABI::Windows::Foundation::Size value,
                        boolean* result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ISizeHelperStatics = _uuidof(ISizeHelperStatics);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IStateTrigger
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.StateTrigger
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStateTrigger[] = L"Windows.UI.Xaml.IStateTrigger";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("67adef2e-d8d9-49f7-a1fd-2e35eedd23cd")
                IStateTrigger : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_IsActive(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsActive(
                        boolean value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IStateTrigger = _uuidof(IStateTrigger);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStateTrigger;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IStateTriggerBase
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.StateTriggerBase
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStateTriggerBase[] = L"Windows.UI.Xaml.IStateTriggerBase";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("48b20698-af06-466c-8052-93666dde0e49")
                IStateTriggerBase : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IStateTriggerBase = _uuidof(IStateTriggerBase);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IStateTriggerBaseFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.StateTriggerBase
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStateTriggerBaseFactory[] = L"Windows.UI.Xaml.IStateTriggerBaseFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("970e2c4b-bfaf-47b0-be42-c1d711bb2e9f")
                IStateTriggerBaseFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IStateTriggerBase** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IStateTriggerBaseFactory = _uuidof(IStateTriggerBaseFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IStateTriggerBaseProtected
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.StateTriggerBase
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStateTriggerBaseProtected[] = L"Windows.UI.Xaml.IStateTriggerBaseProtected";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("3c41e253-8d14-4216-994c-f9930429f6e5")
                IStateTriggerBaseProtected : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE SetActive(
                        boolean IsActive
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IStateTriggerBaseProtected = _uuidof(IStateTriggerBaseProtected);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IStateTriggerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.StateTrigger
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStateTriggerStatics[] = L"Windows.UI.Xaml.IStateTriggerStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("71e95c90-b3fe-4dd3-a8a8-44a2ce25e0b8")
                IStateTriggerStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_IsActiveProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IStateTriggerStatics = _uuidof(IStateTriggerStatics);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IStyle
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Style
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStyle_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIStyle_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStyle[] = L"Windows.UI.Xaml.IStyle";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("c4a9f225-9db7-4a7d-b6d1-f74edb9293c2")
                IStyle : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_IsSealed(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Setters(
                        ABI::Windows::UI::Xaml::ISetterBaseCollection** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TargetType(
                        ABI::Windows::UI::Xaml::Interop::TypeName* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TargetType(
                        ABI::Windows::UI::Xaml::Interop::TypeName value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BasedOn(
                        ABI::Windows::UI::Xaml::IStyle** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BasedOn(
                        ABI::Windows::UI::Xaml::IStyle* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Seal(void) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IStyle = _uuidof(IStyle);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStyle;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStyle_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IStyleFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Style
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStyleFactory[] = L"Windows.UI.Xaml.IStyleFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("a36824e3-3d81-4ce5-aa51-8b410f602fcd")
                IStyleFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        ABI::Windows::UI::Xaml::Interop::TypeName targetType,
                        ABI::Windows::UI::Xaml::IStyle** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IStyleFactory = _uuidof(IStyleFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStyleFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ITargetPropertyPath
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.TargetPropertyPath
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ITargetPropertyPath[] = L"Windows.UI.Xaml.ITargetPropertyPath";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("40740f8e-085f-4ced-be70-6f47acf15ad0")
                ITargetPropertyPath : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Path(
                        ABI::Windows::UI::Xaml::IPropertyPath** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Path(
                        ABI::Windows::UI::Xaml::IPropertyPath* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Target(
                        IInspectable** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Target(
                        IInspectable* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ITargetPropertyPath = _uuidof(ITargetPropertyPath);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ITargetPropertyPathFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.TargetPropertyPath
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ITargetPropertyPathFactory[] = L"Windows.UI.Xaml.ITargetPropertyPathFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("88eeccc8-99e2-4a44-9907-b44bc86e2bbe")
                ITargetPropertyPathFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        ABI::Windows::UI::Xaml::IDependencyProperty* targetProperty,
                        ABI::Windows::UI::Xaml::ITargetPropertyPath** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ITargetPropertyPathFactory = _uuidof(ITargetPropertyPathFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IThicknessHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ThicknessHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IThicknessHelper[] = L"Windows.UI.Xaml.IThicknessHelper";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("a86bae4b-1e8f-4eeb-9013-0b2838a97b34")
                IThicknessHelper : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IThicknessHelper = _uuidof(IThicknessHelper);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIThicknessHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IThicknessHelperStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ThicknessHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IThicknessHelperStatics[] = L"Windows.UI.Xaml.IThicknessHelperStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("c0991a7c-070c-4da6-8784-01ca800eb73a")
                IThicknessHelperStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE FromLengths(
                        DOUBLE left,
                        DOUBLE top,
                        DOUBLE right,
                        DOUBLE bottom,
                        ABI::Windows::UI::Xaml::Thickness* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE FromUniformLength(
                        DOUBLE uniformLength,
                        ABI::Windows::UI::Xaml::Thickness* result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IThicknessHelperStatics = _uuidof(IThicknessHelperStatics);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ITriggerAction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.TriggerAction
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerAction_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerAction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ITriggerAction[] = L"Windows.UI.Xaml.ITriggerAction";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("a2c0df02-63d5-4b46-9b83-0868d3079621")
                ITriggerAction : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ITriggerAction = _uuidof(ITriggerAction);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CITriggerAction;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerAction_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ITriggerActionFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.TriggerAction
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ITriggerActionFactory[] = L"Windows.UI.Xaml.ITriggerActionFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("68d2c0b9-3289-414f-8f6e-c6b97aedda03")
                ITriggerActionFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ITriggerActionFactory = _uuidof(ITriggerActionFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ITriggerBase
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.TriggerBase
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerBase_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerBase_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ITriggerBase[] = L"Windows.UI.Xaml.ITriggerBase";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("e7ea222f-dee6-4393-a8b2-8923d641f395")
                ITriggerBase : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ITriggerBase = _uuidof(ITriggerBase);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CITriggerBase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerBase_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ITriggerBaseFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.TriggerBase
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ITriggerBaseFactory[] = L"Windows.UI.Xaml.ITriggerBaseFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("6a3b9e57-fc5d-42d0-8cb9-ca50667af746")
                ITriggerBaseFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_ITriggerBaseFactory = _uuidof(ITriggerBaseFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IUIElement
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement[] = L"Windows.UI.Xaml.IUIElement";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("676d0be9-b65c-41c6-ba40-58cf87f201c1")
                IUIElement : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_DesiredSize(
                        ABI::Windows::Foundation::Size* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AllowDrop(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AllowDrop(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Opacity(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Opacity(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Clip(
                        ABI::Windows::UI::Xaml::Media::IRectangleGeometry** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Clip(
                        ABI::Windows::UI::Xaml::Media::IRectangleGeometry* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RenderTransform(
                        ABI::Windows::UI::Xaml::Media::ITransform** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RenderTransform(
                        ABI::Windows::UI::Xaml::Media::ITransform* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Projection(
                        ABI::Windows::UI::Xaml::Media::IProjection** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Projection(
                        ABI::Windows::UI::Xaml::Media::IProjection* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RenderTransformOrigin(
                        ABI::Windows::Foundation::Point* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RenderTransformOrigin(
                        ABI::Windows::Foundation::Point value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsHitTestVisible(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsHitTestVisible(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Visibility(
                        ABI::Windows::UI::Xaml::Visibility* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Visibility(
                        ABI::Windows::UI::Xaml::Visibility value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RenderSize(
                        ABI::Windows::Foundation::Size* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_UseLayoutRounding(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_UseLayoutRounding(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Transitions(
                        __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Transitions(
                        __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CacheMode(
                        ABI::Windows::UI::Xaml::Media::ICacheMode** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CacheMode(
                        ABI::Windows::UI::Xaml::Media::ICacheMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsTapEnabled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsTapEnabled(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsDoubleTapEnabled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsDoubleTapEnabled(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsRightTapEnabled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsRightTapEnabled(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsHoldingEnabled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsHoldingEnabled(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ManipulationMode(
                        ABI::Windows::UI::Xaml::Input::ManipulationModes* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ManipulationMode(
                        ABI::Windows::UI::Xaml::Input::ManipulationModes value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PointerCaptures(
                        __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_KeyUp(
                        ABI::Windows::UI::Xaml::Input::IKeyEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_KeyUp(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_KeyDown(
                        ABI::Windows::UI::Xaml::Input::IKeyEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_KeyDown(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_GotFocus(
                        ABI::Windows::UI::Xaml::IRoutedEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_GotFocus(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_LostFocus(
                        ABI::Windows::UI::Xaml::IRoutedEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_LostFocus(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_DragEnter(
                        ABI::Windows::UI::Xaml::IDragEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_DragEnter(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_DragLeave(
                        ABI::Windows::UI::Xaml::IDragEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_DragLeave(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_DragOver(
                        ABI::Windows::UI::Xaml::IDragEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_DragOver(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_Drop(
                        ABI::Windows::UI::Xaml::IDragEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_Drop(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_PointerPressed(
                        ABI::Windows::UI::Xaml::Input::IPointerEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_PointerPressed(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_PointerMoved(
                        ABI::Windows::UI::Xaml::Input::IPointerEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_PointerMoved(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_PointerReleased(
                        ABI::Windows::UI::Xaml::Input::IPointerEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_PointerReleased(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_PointerEntered(
                        ABI::Windows::UI::Xaml::Input::IPointerEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_PointerEntered(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_PointerExited(
                        ABI::Windows::UI::Xaml::Input::IPointerEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_PointerExited(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_PointerCaptureLost(
                        ABI::Windows::UI::Xaml::Input::IPointerEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_PointerCaptureLost(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_PointerCanceled(
                        ABI::Windows::UI::Xaml::Input::IPointerEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_PointerCanceled(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_PointerWheelChanged(
                        ABI::Windows::UI::Xaml::Input::IPointerEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_PointerWheelChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_Tapped(
                        ABI::Windows::UI::Xaml::Input::ITappedEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_Tapped(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_DoubleTapped(
                        ABI::Windows::UI::Xaml::Input::IDoubleTappedEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_DoubleTapped(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_Holding(
                        ABI::Windows::UI::Xaml::Input::IHoldingEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_Holding(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_RightTapped(
                        ABI::Windows::UI::Xaml::Input::IRightTappedEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_RightTapped(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_ManipulationStarting(
                        ABI::Windows::UI::Xaml::Input::IManipulationStartingEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_ManipulationStarting(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_ManipulationInertiaStarting(
                        ABI::Windows::UI::Xaml::Input::IManipulationInertiaStartingEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_ManipulationInertiaStarting(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_ManipulationStarted(
                        ABI::Windows::UI::Xaml::Input::IManipulationStartedEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_ManipulationStarted(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_ManipulationDelta(
                        ABI::Windows::UI::Xaml::Input::IManipulationDeltaEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_ManipulationDelta(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_ManipulationCompleted(
                        ABI::Windows::UI::Xaml::Input::IManipulationCompletedEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_ManipulationCompleted(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Measure(
                        ABI::Windows::Foundation::Size availableSize
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Arrange(
                        ABI::Windows::Foundation::Rect finalRect
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CapturePointer(
                        ABI::Windows::UI::Xaml::Input::IPointer* value,
                        boolean* result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ReleasePointerCapture(
                        ABI::Windows::UI::Xaml::Input::IPointer* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ReleasePointerCaptures(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE AddHandler(
                        ABI::Windows::UI::Xaml::IRoutedEvent* routedEvent,
                        IInspectable* handler,
                        boolean handledEventsToo
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE RemoveHandler(
                        ABI::Windows::UI::Xaml::IRoutedEvent* routedEvent,
                        IInspectable* handler
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE TransformToVisual(
                        ABI::Windows::UI::Xaml::IUIElement* visual,
                        ABI::Windows::UI::Xaml::Media::IGeneralTransform** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InvalidateMeasure(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InvalidateArrange(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE UpdateLayout(void) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElement = _uuidof(IUIElement);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IUIElement10
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement10_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement10_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement10[] = L"Windows.UI.Xaml.IUIElement10";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("d531c629-ad2c-5f6b-adcf-fb87287d18d7")
                IUIElement10 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_ActualOffset(
                        ABI::Windows::Foundation::Numerics::Vector3* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ActualSize(
                        ABI::Windows::Foundation::Numerics::Vector2* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_XamlRoot(
                        ABI::Windows::UI::Xaml::IXamlRoot** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_XamlRoot(
                        ABI::Windows::UI::Xaml::IXamlRoot* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_UIContext(
                        ABI::Windows::UI::IUIContext** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Shadow(
                        ABI::Windows::UI::Xaml::Media::IShadow** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Shadow(
                        ABI::Windows::UI::Xaml::Media::IShadow* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElement10 = _uuidof(IUIElement10);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement10;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement10_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Xaml.IUIElement2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement2[] = L"Windows.UI.Xaml.IUIElement2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("676d0bf9-b66c-41d6-ba50-58cf87f201d1")
                IUIElement2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_CompositeMode(
                        ABI::Windows::UI::Xaml::Media::ElementCompositeMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CompositeMode(
                        ABI::Windows::UI::Xaml::Media::ElementCompositeMode value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CancelDirectManipulations(
                        boolean* result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElement2 = _uuidof(IUIElement2);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IUIElement3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement3[] = L"Windows.UI.Xaml.IUIElement3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("bc2b28f1-26f2-4aab-b256-3b5350881e37")
                IUIElement3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Transform3D(
                        ABI::Windows::UI::Xaml::Media::Media3D::ITransform3D** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Transform3D(
                        ABI::Windows::UI::Xaml::Media::Media3D::ITransform3D* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CanDrag(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CanDrag(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_DragStarting(
                        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_DragStarting(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_DropCompleted(
                        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_DropCompleted(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StartDragAsync(
                        ABI::Windows::UI::Input::IPointerPoint* pointerPoint,
                        __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation** operation
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElement3 = _uuidof(IUIElement3);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IUIElement4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement4[] = L"Windows.UI.Xaml.IUIElement4";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("69145cd4-199a-4657-9e57-e99e8f136712")
                IUIElement4 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_ContextFlyout(
                        ABI::Windows::UI::Xaml::Controls::Primitives::IFlyoutBase** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ContextFlyout(
                        ABI::Windows::UI::Xaml::Controls::Primitives::IFlyoutBase* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ExitDisplayModeOnAccessKeyInvoked(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ExitDisplayModeOnAccessKeyInvoked(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsAccessKeyScope(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsAccessKeyScope(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AccessKeyScopeOwner(
                        ABI::Windows::UI::Xaml::IDependencyObject** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AccessKeyScopeOwner(
                        ABI::Windows::UI::Xaml::IDependencyObject* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AccessKey(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AccessKey(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_ContextRequested(
                        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_ContextRequested(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_ContextCanceled(
                        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_ContextCanceled(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_AccessKeyDisplayRequested(
                        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_AccessKeyDisplayRequested(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_AccessKeyDisplayDismissed(
                        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_AccessKeyDisplayDismissed(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_AccessKeyInvoked(
                        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_AccessKeyInvoked(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElement4 = _uuidof(IUIElement4);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IUIElement5
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement5[] = L"Windows.UI.Xaml.IUIElement5";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("8eed9bc2-a58c-4453-af0f-a92ee06d0317")
                IUIElement5 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Lights(
                        __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_KeyTipPlacementMode(
                        ABI::Windows::UI::Xaml::Input::KeyTipPlacementMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_KeyTipPlacementMode(
                        ABI::Windows::UI::Xaml::Input::KeyTipPlacementMode value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_KeyTipHorizontalOffset(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_KeyTipHorizontalOffset(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_KeyTipVerticalOffset(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_KeyTipVerticalOffset(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_XYFocusKeyboardNavigation(
                        ABI::Windows::UI::Xaml::Input::XYFocusKeyboardNavigationMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_XYFocusKeyboardNavigation(
                        ABI::Windows::UI::Xaml::Input::XYFocusKeyboardNavigationMode value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_XYFocusUpNavigationStrategy(
                        ABI::Windows::UI::Xaml::Input::XYFocusNavigationStrategy* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_XYFocusUpNavigationStrategy(
                        ABI::Windows::UI::Xaml::Input::XYFocusNavigationStrategy value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_XYFocusDownNavigationStrategy(
                        ABI::Windows::UI::Xaml::Input::XYFocusNavigationStrategy* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_XYFocusDownNavigationStrategy(
                        ABI::Windows::UI::Xaml::Input::XYFocusNavigationStrategy value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_XYFocusLeftNavigationStrategy(
                        ABI::Windows::UI::Xaml::Input::XYFocusNavigationStrategy* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_XYFocusLeftNavigationStrategy(
                        ABI::Windows::UI::Xaml::Input::XYFocusNavigationStrategy value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_XYFocusRightNavigationStrategy(
                        ABI::Windows::UI::Xaml::Input::XYFocusNavigationStrategy* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_XYFocusRightNavigationStrategy(
                        ABI::Windows::UI::Xaml::Input::XYFocusNavigationStrategy value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_HighContrastAdjustment(
                        ABI::Windows::UI::Xaml::ElementHighContrastAdjustment* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_HighContrastAdjustment(
                        ABI::Windows::UI::Xaml::ElementHighContrastAdjustment value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TabFocusNavigation(
                        ABI::Windows::UI::Xaml::Input::KeyboardNavigationMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TabFocusNavigation(
                        ABI::Windows::UI::Xaml::Input::KeyboardNavigationMode value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_GettingFocus(
                        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_GettingFocus(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_LosingFocus(
                        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_LosingFocus(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_NoFocusCandidateFound(
                        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_NoFocusCandidateFound(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StartBringIntoView(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StartBringIntoViewWithOptions(
                        ABI::Windows::UI::Xaml::IBringIntoViewOptions* options
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElement5 = _uuidof(IUIElement5);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement5_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Xaml.IUIElement7
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement7_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement7_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement7[] = L"Windows.UI.Xaml.IUIElement7";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("cafc4968-6369-4249-80f9-3d656319e811")
                IUIElement7 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_KeyboardAccelerators(
                        __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_CharacterReceived(
                        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_CharacterReceived(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_ProcessKeyboardAccelerators(
                        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_ProcessKeyboardAccelerators(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_PreviewKeyDown(
                        ABI::Windows::UI::Xaml::Input::IKeyEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_PreviewKeyDown(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_PreviewKeyUp(
                        ABI::Windows::UI::Xaml::Input::IKeyEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_PreviewKeyUp(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE TryInvokeKeyboardAccelerator(
                        ABI::Windows::UI::Xaml::Input::IProcessKeyboardAcceleratorEventArgs* args
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElement7 = _uuidof(IUIElement7);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement7_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Xaml.IUIElement8
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement8_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement8_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement8[] = L"Windows.UI.Xaml.IUIElement8";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("3ab70e85-d508-4477-b6f8-0e435701c836")
                IUIElement8 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_KeyTipTarget(
                        ABI::Windows::UI::Xaml::IDependencyObject** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_KeyTipTarget(
                        ABI::Windows::UI::Xaml::IDependencyObject* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_KeyboardAcceleratorPlacementTarget(
                        ABI::Windows::UI::Xaml::IDependencyObject** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_KeyboardAcceleratorPlacementTarget(
                        ABI::Windows::UI::Xaml::IDependencyObject* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_KeyboardAcceleratorPlacementMode(
                        ABI::Windows::UI::Xaml::Input::KeyboardAcceleratorPlacementMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_KeyboardAcceleratorPlacementMode(
                        ABI::Windows::UI::Xaml::Input::KeyboardAcceleratorPlacementMode value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_BringIntoViewRequested(
                        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_BringIntoViewRequested(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElement8 = _uuidof(IUIElement8);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement8;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement8_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Xaml.IUIElement9
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement9_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement9_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement9[] = L"Windows.UI.Xaml.IUIElement9";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("b4a04776-4e88-50ca-8f2b-08940d6c5f94")
                IUIElement9 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_CanBeScrollAnchor(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CanBeScrollAnchor(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_OpacityTransition(
                        ABI::Windows::UI::Xaml::IScalarTransition** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_OpacityTransition(
                        ABI::Windows::UI::Xaml::IScalarTransition* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Translation(
                        ABI::Windows::Foundation::Numerics::Vector3* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Translation(
                        ABI::Windows::Foundation::Numerics::Vector3 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TranslationTransition(
                        ABI::Windows::UI::Xaml::IVector3Transition** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TranslationTransition(
                        ABI::Windows::UI::Xaml::IVector3Transition* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Rotation(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Rotation(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RotationTransition(
                        ABI::Windows::UI::Xaml::IScalarTransition** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RotationTransition(
                        ABI::Windows::UI::Xaml::IScalarTransition* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Scale(
                        ABI::Windows::Foundation::Numerics::Vector3* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Scale(
                        ABI::Windows::Foundation::Numerics::Vector3 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ScaleTransition(
                        ABI::Windows::UI::Xaml::IVector3Transition** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ScaleTransition(
                        ABI::Windows::UI::Xaml::IVector3Transition* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TransformMatrix(
                        ABI::Windows::Foundation::Numerics::Matrix4x4* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TransformMatrix(
                        ABI::Windows::Foundation::Numerics::Matrix4x4 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CenterPoint(
                        ABI::Windows::Foundation::Numerics::Vector3* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CenterPoint(
                        ABI::Windows::Foundation::Numerics::Vector3 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RotationAxis(
                        ABI::Windows::Foundation::Numerics::Vector3* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RotationAxis(
                        ABI::Windows::Foundation::Numerics::Vector3 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StartAnimation(
                        ABI::Windows::UI::Composition::ICompositionAnimationBase* animation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StopAnimation(
                        ABI::Windows::UI::Composition::ICompositionAnimationBase* animation
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElement9 = _uuidof(IUIElement9);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement9;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement9_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementFactory[] = L"Windows.UI.Xaml.IUIElementFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("b9ee93fe-a338-419f-ac32-91dcaadf5d08")
                IUIElementFactory : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IUIElementFactory = _uuidof(IUIElementFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementOverrides
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementOverrides[] = L"Windows.UI.Xaml.IUIElementOverrides";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("608d2f1d-7858-4aeb-89e4-b54e2c7ed3d3")
                IUIElementOverrides : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE OnCreateAutomationPeer(
                        ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE OnDisconnectVisualChildren(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE FindSubElementsForTouchTargeting(
                        ABI::Windows::Foundation::Point point,
                        ABI::Windows::Foundation::Rect boundingRect,
                        __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElementOverrides = _uuidof(IUIElementOverrides);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementOverrides7
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementOverrides7[] = L"Windows.UI.Xaml.IUIElementOverrides7";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("b97f7f68-c29b-4c99-a1c3-952619d6e720")
                IUIElementOverrides7 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE GetChildrenInTabFocusOrder(
                        __FIIterable_1_Windows__CUI__CXaml__CDependencyObject** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE OnProcessKeyboardAccelerators(
                        ABI::Windows::UI::Xaml::Input::IProcessKeyboardAcceleratorEventArgs* args
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElementOverrides7 = _uuidof(IUIElementOverrides7);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementOverrides8
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementOverrides8[] = L"Windows.UI.Xaml.IUIElementOverrides8";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("4a5a645c-548d-48cf-b998-7844d6e235a1")
                IUIElementOverrides8 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE OnKeyboardAcceleratorInvoked(
                        ABI::Windows::UI::Xaml::Input::IKeyboardAcceleratorInvokedEventArgs* args
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE OnBringIntoViewRequested(
                        ABI::Windows::UI::Xaml::IBringIntoViewRequestedEventArgs* e
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElementOverrides8 = _uuidof(IUIElementOverrides8);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementOverrides9
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementOverrides9[] = L"Windows.UI.Xaml.IUIElementOverrides9";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("9a6e5973-6d63-54f2-90fa-62813b20b7b9")
                IUIElementOverrides9 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE PopulatePropertyInfoOverride(
                        HSTRING propertyName,
                        ABI::Windows::UI::Composition::IAnimationPropertyInfo* animationPropertyInfo
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElementOverrides9 = _uuidof(IUIElementOverrides9);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics[] = L"Windows.UI.Xaml.IUIElementStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("58d3573b-f52c-45be-988b-a5869564873c")
                IUIElementStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_KeyDownEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_KeyUpEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PointerEnteredEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PointerPressedEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PointerMovedEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PointerReleasedEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PointerExitedEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PointerCaptureLostEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PointerCanceledEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PointerWheelChangedEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TappedEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_DoubleTappedEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_HoldingEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RightTappedEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ManipulationStartingEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ManipulationInertiaStartingEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ManipulationStartedEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ManipulationDeltaEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ManipulationCompletedEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_DragEnterEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_DragLeaveEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_DragOverEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_DropEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AllowDropProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_OpacityProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ClipProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RenderTransformProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ProjectionProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RenderTransformOriginProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsHitTestVisibleProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VisibilityProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_UseLayoutRoundingProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TransitionsProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CacheModeProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsTapEnabledProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsDoubleTapEnabledProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsRightTapEnabledProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsHoldingEnabledProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ManipulationModeProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PointerCapturesProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElementStatics = _uuidof(IUIElementStatics);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics10
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics10[] = L"Windows.UI.Xaml.IUIElementStatics10";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("60d25362-4b3e-53da-8b78-38db94ae8f26")
                IUIElementStatics10 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_ShadowProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElementStatics10 = _uuidof(IUIElementStatics10);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics2[] = L"Windows.UI.Xaml.IUIElementStatics2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("58d3574b-f53c-45be-989b-a5869564874c")
                IUIElementStatics2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_CompositeModeProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElementStatics2 = _uuidof(IUIElementStatics2);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics3[] = L"Windows.UI.Xaml.IUIElementStatics3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("d1f87ade-eca1-4561-a32b-64601b4e0597")
                IUIElementStatics3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Transform3DProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CanDragProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE TryStartDirectManipulation(
                        ABI::Windows::UI::Xaml::Input::IPointer* value,
                        boolean* result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElementStatics3 = _uuidof(IUIElementStatics3);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics4[] = L"Windows.UI.Xaml.IUIElementStatics4";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("1d157d61-16af-411f-b774-272375a4ac2c")
                IUIElementStatics4 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_ContextFlyoutProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ExitDisplayModeOnAccessKeyInvokedProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsAccessKeyScopeProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AccessKeyScopeOwnerProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AccessKeyProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElementStatics4 = _uuidof(IUIElementStatics4);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics5
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics5[] = L"Windows.UI.Xaml.IUIElementStatics5";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("59bd7d91-8fa3-4c65-ba1b-40df38556cbb")
                IUIElementStatics5 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_LightsProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_KeyTipPlacementModeProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_KeyTipHorizontalOffsetProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_KeyTipVerticalOffsetProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_XYFocusKeyboardNavigationProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_XYFocusUpNavigationStrategyProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_XYFocusDownNavigationStrategyProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_XYFocusLeftNavigationStrategyProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_XYFocusRightNavigationStrategyProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_HighContrastAdjustmentProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TabFocusNavigationProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElementStatics5 = _uuidof(IUIElementStatics5);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics6
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics6[] = L"Windows.UI.Xaml.IUIElementStatics6";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("647e03b7-036a-4dea-9540-1dd7fd1266f1")
                IUIElementStatics6 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_GettingFocusEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_LosingFocusEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_NoFocusCandidateFoundEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElementStatics6 = _uuidof(IUIElementStatics6);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics7
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics7[] = L"Windows.UI.Xaml.IUIElementStatics7";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("da9b4493-a695-4145-ae93-888024396a0f")
                IUIElementStatics7 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_PreviewKeyDownEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CharacterReceivedEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PreviewKeyUpEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElementStatics7 = _uuidof(IUIElementStatics7);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics8
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics8[] = L"Windows.UI.Xaml.IUIElementStatics8";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("17be3487-4875-4915-b0b1-a4c0f851df3f")
                IUIElementStatics8 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_BringIntoViewRequestedEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ContextRequestedEvent(
                        ABI::Windows::UI::Xaml::IRoutedEvent** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_KeyTipTargetProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_KeyboardAcceleratorPlacementTargetProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_KeyboardAcceleratorPlacementModeProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE RegisterAsScrollPort(
                        ABI::Windows::UI::Xaml::IUIElement* element
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElementStatics8 = _uuidof(IUIElementStatics8);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics9
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics9[] = L"Windows.UI.Xaml.IUIElementStatics9";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("71467e77-8ca3-5ed7-95db-d51cdad77f81")
                IUIElementStatics9 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_CanBeScrollAnchorProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElementStatics9 = _uuidof(IUIElementStatics9);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementWeakCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElementWeakCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementWeakCollection[] = L"Windows.UI.Xaml.IUIElementWeakCollection";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("10341223-e66d-519e-acf8-556bd244eac3")
                IUIElementWeakCollection : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IUIElementWeakCollection = _uuidof(IUIElementWeakCollection);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementWeakCollectionFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElementWeakCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementWeakCollectionFactory[] = L"Windows.UI.Xaml.IUIElementWeakCollectionFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("57242561-188a-5304-8792-a43f35d90f99")
                IUIElementWeakCollectionFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IUIElementWeakCollection** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUIElementWeakCollectionFactory = _uuidof(IUIElementWeakCollectionFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Xaml.IUnhandledExceptionEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UnhandledExceptionEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUnhandledExceptionEventArgs[] = L"Windows.UI.Xaml.IUnhandledExceptionEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("7230269c-054e-4cf3-86c5-be90eb6863d5")
                IUnhandledExceptionEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Exception(
                        HRESULT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Message(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Handled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Handled(
                        boolean value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IUnhandledExceptionEventArgs = _uuidof(IUnhandledExceptionEventArgs);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVector3Transition
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Vector3Transition
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVector3Transition_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVector3Transition_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVector3Transition[] = L"Windows.UI.Xaml.IVector3Transition";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("d2e209dc-c4a2-5101-9a68-fa0150505589")
                IVector3Transition : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Duration(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Duration(
                        ABI::Windows::Foundation::TimeSpan value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Components(
                        ABI::Windows::UI::Xaml::Vector3TransitionComponents* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Components(
                        ABI::Windows::UI::Xaml::Vector3TransitionComponents value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVector3Transition = _uuidof(IVector3Transition);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVector3Transition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVector3Transition_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IVector3TransitionFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Vector3Transition
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVector3TransitionFactory[] = L"Windows.UI.Xaml.IVector3TransitionFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("c3706699-ee9b-50dc-8807-f51d5a759495")
                IVector3TransitionFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IVector3Transition** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVector3TransitionFactory = _uuidof(IVector3TransitionFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IVisualState
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualState
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualState_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualState_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualState[] = L"Windows.UI.Xaml.IVisualState";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("6320affc-c31a-4450-afde-f6ea7bd1f586")
                IVisualState : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Name(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Storyboard(
                        ABI::Windows::UI::Xaml::Media::Animation::IStoryboard** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Storyboard(
                        ABI::Windows::UI::Xaml::Media::Animation::IStoryboard* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVisualState = _uuidof(IVisualState);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualState;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualState_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualState2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualState
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualState2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualState2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualState2[] = L"Windows.UI.Xaml.IVisualState2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("0fa0f896-64c0-45fb-8d24-fb83298c0d93")
                IVisualState2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Setters(
                        ABI::Windows::UI::Xaml::ISetterBaseCollection** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StateTriggers(
                        __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVisualState2 = _uuidof(IVisualState2);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualState2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualState2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualStateChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualStateChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateChangedEventArgs[] = L"Windows.UI.Xaml.IVisualStateChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("fe216ab1-f31f-4791-8989-c70e1d9b59ff")
                IVisualStateChangedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_OldState(
                        ABI::Windows::UI::Xaml::IVisualState** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_OldState(
                        ABI::Windows::UI::Xaml::IVisualState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_NewState(
                        ABI::Windows::UI::Xaml::IVisualState** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_NewState(
                        ABI::Windows::UI::Xaml::IVisualState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Control(
                        ABI::Windows::UI::Xaml::Controls::IControl** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Control(
                        ABI::Windows::UI::Xaml::Controls::IControl* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVisualStateChangedEventArgs = _uuidof(IVisualStateChangedEventArgs);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualStateGroup
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualStateGroup
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateGroup[] = L"Windows.UI.Xaml.IVisualStateGroup";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("e4f9d9a4-e028-44de-9b15-4929ae0a26c2")
                IVisualStateGroup : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Name(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Transitions(
                        __FIVector_1_Windows__CUI__CXaml__CVisualTransition** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_States(
                        __FIVector_1_Windows__CUI__CXaml__CVisualState** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CurrentState(
                        ABI::Windows::UI::Xaml::IVisualState** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_CurrentStateChanged(
                        ABI::Windows::UI::Xaml::IVisualStateChangedEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_CurrentStateChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_CurrentStateChanging(
                        ABI::Windows::UI::Xaml::IVisualStateChangedEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_CurrentStateChanging(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVisualStateGroup = _uuidof(IVisualStateGroup);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualStateManager
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualStateManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateManager[] = L"Windows.UI.Xaml.IVisualStateManager";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("6fda9f9a-6fab-4112-9258-1006a3c3476e")
                IVisualStateManager : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IVisualStateManager = _uuidof(IVisualStateManager);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateManager;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualStateManagerFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualStateManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateManagerFactory[] = L"Windows.UI.Xaml.IVisualStateManagerFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("85e598fd-a575-47b6-9e30-383cd08585f2")
                IVisualStateManagerFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IVisualStateManager** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVisualStateManagerFactory = _uuidof(IVisualStateManagerFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualStateManagerOverrides
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualStateManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateManagerOverrides[] = L"Windows.UI.Xaml.IVisualStateManagerOverrides";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("4a66910e-7979-43c8-8ff4-ec6122750006")
                IVisualStateManagerOverrides : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE GoToStateCore(
                        ABI::Windows::UI::Xaml::Controls::IControl* control,
                        ABI::Windows::UI::Xaml::IFrameworkElement* templateRoot,
                        HSTRING stateName,
                        ABI::Windows::UI::Xaml::IVisualStateGroup* group,
                        ABI::Windows::UI::Xaml::IVisualState* state,
                        boolean useTransitions,
                        boolean* result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVisualStateManagerOverrides = _uuidof(IVisualStateManagerOverrides);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualStateManagerProtected
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualStateManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateManagerProtected[] = L"Windows.UI.Xaml.IVisualStateManagerProtected";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("4b3b8640-b0b7-404c-9ef4-d949640e245d")
                IVisualStateManagerProtected : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE RaiseCurrentStateChanging(
                        ABI::Windows::UI::Xaml::IVisualStateGroup* stateGroup,
                        ABI::Windows::UI::Xaml::IVisualState* oldState,
                        ABI::Windows::UI::Xaml::IVisualState* newState,
                        ABI::Windows::UI::Xaml::Controls::IControl* control
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE RaiseCurrentStateChanged(
                        ABI::Windows::UI::Xaml::IVisualStateGroup* stateGroup,
                        ABI::Windows::UI::Xaml::IVisualState* oldState,
                        ABI::Windows::UI::Xaml::IVisualState* newState,
                        ABI::Windows::UI::Xaml::Controls::IControl* control
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVisualStateManagerProtected = _uuidof(IVisualStateManagerProtected);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualStateManagerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualStateManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateManagerStatics[] = L"Windows.UI.Xaml.IVisualStateManagerStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("01d0e9e0-d713-414e-a74e-e63ec7ac8c3d")
                IVisualStateManagerStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE GetVisualStateGroups(
                        ABI::Windows::UI::Xaml::IFrameworkElement* obj,
                        __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CustomVisualStateManagerProperty(
                        ABI::Windows::UI::Xaml::IDependencyProperty** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetCustomVisualStateManager(
                        ABI::Windows::UI::Xaml::IFrameworkElement* obj,
                        ABI::Windows::UI::Xaml::IVisualStateManager** result
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetCustomVisualStateManager(
                        ABI::Windows::UI::Xaml::IFrameworkElement* obj,
                        ABI::Windows::UI::Xaml::IVisualStateManager* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GoToState(
                        ABI::Windows::UI::Xaml::Controls::IControl* control,
                        HSTRING stateName,
                        boolean useTransitions,
                        boolean* result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVisualStateManagerStatics = _uuidof(IVisualStateManagerStatics);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualTransition
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualTransition
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualTransition[] = L"Windows.UI.Xaml.IVisualTransition";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("55c5905e-2bc7-400d-aaa4-1a2981491ee0")
                IVisualTransition : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_GeneratedDuration(
                        ABI::Windows::UI::Xaml::Duration* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_GeneratedDuration(
                        ABI::Windows::UI::Xaml::Duration value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_GeneratedEasingFunction(
                        ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBase** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_GeneratedEasingFunction(
                        ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBase* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_To(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_To(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_From(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_From(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Storyboard(
                        ABI::Windows::UI::Xaml::Media::Animation::IStoryboard** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Storyboard(
                        ABI::Windows::UI::Xaml::Media::Animation::IStoryboard* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVisualTransition = _uuidof(IVisualTransition);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualTransition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualTransitionFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualTransition
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualTransitionFactory[] = L"Windows.UI.Xaml.IVisualTransitionFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("ea75864f-d1e0-4dae-b429-89fc322724f4")
                IVisualTransitionFactory : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                        IInspectable* baseInterface,
                        IInspectable** innerInterface,
                        ABI::Windows::UI::Xaml::IVisualTransition** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVisualTransitionFactory = _uuidof(IVisualTransitionFactory);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IWindow
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Window
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IWindow[] = L"Windows.UI.Xaml.IWindow";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("3276167d-c9f6-462d-9de2-ae4c1fd8c2e5")
                IWindow : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Bounds(
                        ABI::Windows::Foundation::Rect* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Visible(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Content(
                        ABI::Windows::UI::Xaml::IUIElement** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Content(
                        ABI::Windows::UI::Xaml::IUIElement* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CoreWindow(
                        ABI::Windows::UI::Core::ICoreWindow** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Dispatcher(
                        ABI::Windows::UI::Core::ICoreDispatcher** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_Activated(
                        ABI::Windows::UI::Xaml::IWindowActivatedEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_Activated(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_Closed(
                        ABI::Windows::UI::Xaml::IWindowClosedEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_Closed(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_SizeChanged(
                        ABI::Windows::UI::Xaml::IWindowSizeChangedEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_SizeChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_VisibilityChanged(
                        ABI::Windows::UI::Xaml::IWindowVisibilityChangedEventHandler* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_VisibilityChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Activate(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Close(void) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IWindow = _uuidof(IWindow);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindow;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IWindow2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Window
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IWindow2[] = L"Windows.UI.Xaml.IWindow2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("d384759f-34f6-4482-8435-f552f9b24cc8")
                IWindow2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE SetTitleBar(
                        ABI::Windows::UI::Xaml::IUIElement* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IWindow2 = _uuidof(IWindow2);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindow2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IWindow3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Window
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IWindow3[] = L"Windows.UI.Xaml.IWindow3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("b70bdc9d-1c35-462a-9b97-808d5af9f28e")
                IWindow3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Compositor(
                        ABI::Windows::UI::Composition::ICompositor** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IWindow3 = _uuidof(IWindow3);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindow3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Xaml.IWindow4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Window
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IWindow4[] = L"Windows.UI.Xaml.IWindow4";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("bfe1b8ce-6c40-50f9-854c-7021d2bc9de6")
                IWindow4 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_UIContext(
                        ABI::Windows::UI::IUIContext** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IWindow4 = _uuidof(IWindow4);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindow4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Xaml.IWindowCreatedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.WindowCreatedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IWindowCreatedEventArgs[] = L"Windows.UI.Xaml.IWindowCreatedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("31b71470-feff-4654-af48-9b398ab5772b")
                IWindowCreatedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Window(
                        ABI::Windows::UI::Xaml::IWindow** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IWindowCreatedEventArgs = _uuidof(IWindowCreatedEventArgs);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IWindowStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Window
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IWindowStatics[] = L"Windows.UI.Xaml.IWindowStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("93328409-4ea1-4afa-83dc-0c4e73e88bb1")
                IWindowStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Current(
                        ABI::Windows::UI::Xaml::IWindow** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IWindowStatics = _uuidof(IWindowStatics);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindowStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IXamlRoot
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.XamlRoot
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIXamlRoot_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIXamlRoot_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IXamlRoot[] = L"Windows.UI.Xaml.IXamlRoot";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("34b50756-1696-5b6d-8e9b-c71464ccad5a")
                IXamlRoot : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Content(
                        ABI::Windows::UI::Xaml::IUIElement** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Size(
                        ABI::Windows::Foundation::Size* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RasterizationScale(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsHostVisible(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_UIContext(
                        ABI::Windows::UI::IUIContext** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_Changed(
                        __FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_Changed(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IXamlRoot = _uuidof(IXamlRoot);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIXamlRoot;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIXamlRoot_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Xaml.IXamlRootChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.XamlRootChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IXamlRootChangedEventArgs[] = L"Windows.UI.Xaml.IXamlRootChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                MIDL_INTERFACE("92d71c21-d23c-5a17-bcb8-001504b6bb19")
                IXamlRootChangedEventArgs : public IInspectable
                {
                public:
                };

                extern MIDL_CONST_ID IID& IID_IXamlRootChangedEventArgs = _uuidof(IXamlRootChangedEventArgs);
            } /* Xaml */
        } /* UI */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Xaml.AdaptiveTrigger
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IAdaptiveTriggerStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IAdaptiveTrigger ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_AdaptiveTrigger_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_AdaptiveTrigger_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_AdaptiveTrigger[] = L"Windows.UI.Xaml.AdaptiveTrigger";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.Application
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IApplicationStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IApplication ** Default Interface **
 *    Windows.UI.Xaml.IApplication2
 *    Windows.UI.Xaml.IApplication3
 *    Windows.UI.Xaml.IApplicationOverrides
 *    Windows.UI.Xaml.IApplicationOverrides2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Application_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Application_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Application[] = L"Windows.UI.Xaml.Application";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.ApplicationInitializationCallbackParams
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IApplicationInitializationCallbackParams ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ApplicationInitializationCallbackParams_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ApplicationInitializationCallbackParams_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ApplicationInitializationCallbackParams[] = L"Windows.UI.Xaml.ApplicationInitializationCallbackParams";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.BindingFailedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IBindingFailedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_BindingFailedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_BindingFailedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_BindingFailedEventArgs[] = L"Windows.UI.Xaml.BindingFailedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.BringIntoViewOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IBringIntoViewOptions ** Default Interface **
 *    Windows.UI.Xaml.IBringIntoViewOptions2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_BringIntoViewOptions_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_BringIntoViewOptions_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_BringIntoViewOptions[] = L"Windows.UI.Xaml.BringIntoViewOptions";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.UI.Xaml.BringIntoViewRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IBringIntoViewRequestedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_BringIntoViewRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_BringIntoViewRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_BringIntoViewRequestedEventArgs[] = L"Windows.UI.Xaml.BringIntoViewRequestedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Xaml.BrushTransition
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IBrushTransition ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_BrushTransition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_BrushTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_BrushTransition[] = L"Windows.UI.Xaml.BrushTransition";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Xaml.ColorPaletteResources
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IColorPaletteResources ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ColorPaletteResources_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ColorPaletteResources_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ColorPaletteResources[] = L"Windows.UI.Xaml.ColorPaletteResources";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Xaml.CornerRadiusHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.ICornerRadiusHelperStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.ICornerRadiusHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_CornerRadiusHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_CornerRadiusHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_CornerRadiusHelper[] = L"Windows.UI.Xaml.CornerRadiusHelper";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DataContextChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDataContextChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DataContextChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DataContextChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DataContextChangedEventArgs[] = L"Windows.UI.Xaml.DataContextChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DataTemplate
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IDataTemplateStatics2 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDataTemplate ** Default Interface **
 *    Windows.UI.Xaml.IElementFactory
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DataTemplate_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DataTemplate_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DataTemplate[] = L"Windows.UI.Xaml.DataTemplate";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DataTemplateKey
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDataTemplateKey ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DataTemplateKey_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DataTemplateKey_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DataTemplateKey[] = L"Windows.UI.Xaml.DataTemplateKey";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DebugSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDebugSettings ** Default Interface **
 *    Windows.UI.Xaml.IDebugSettings2
 *    Windows.UI.Xaml.IDebugSettings3
 *    Windows.UI.Xaml.IDebugSettings4
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DebugSettings_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DebugSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DebugSettings[] = L"Windows.UI.Xaml.DebugSettings";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DependencyObject
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDependencyObject ** Default Interface **
 *    Windows.UI.Xaml.IDependencyObject2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DependencyObject_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DependencyObject_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DependencyObject[] = L"Windows.UI.Xaml.DependencyObject";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DependencyObjectCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IObservableVector`1<Windows.UI.Xaml.DependencyObject> ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.DependencyObject>
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.DependencyObject>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DependencyObjectCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DependencyObjectCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DependencyObjectCollection[] = L"Windows.UI.Xaml.DependencyObjectCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DependencyProperty
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IDependencyPropertyStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDependencyProperty ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DependencyProperty_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DependencyProperty_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DependencyProperty[] = L"Windows.UI.Xaml.DependencyProperty";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DependencyPropertyChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDependencyPropertyChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DependencyPropertyChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DependencyPropertyChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DependencyPropertyChangedEventArgs[] = L"Windows.UI.Xaml.DependencyPropertyChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DispatcherTimer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDispatcherTimer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DispatcherTimer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DispatcherTimer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DispatcherTimer[] = L"Windows.UI.Xaml.DispatcherTimer";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DragEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDragEventArgs ** Default Interface **
 *    Windows.UI.Xaml.IDragEventArgs2
 *    Windows.UI.Xaml.IDragEventArgs3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DragEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DragEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DragEventArgs[] = L"Windows.UI.Xaml.DragEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DragOperationDeferral
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDragOperationDeferral ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DragOperationDeferral_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DragOperationDeferral_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DragOperationDeferral[] = L"Windows.UI.Xaml.DragOperationDeferral";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DragStartingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDragStartingEventArgs ** Default Interface **
 *    Windows.UI.Xaml.IDragStartingEventArgs2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DragStartingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DragStartingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DragStartingEventArgs[] = L"Windows.UI.Xaml.DragStartingEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DragUI
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDragUI ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DragUI_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DragUI_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DragUI[] = L"Windows.UI.Xaml.DragUI";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DragUIOverride
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDragUIOverride ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DragUIOverride_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DragUIOverride_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DragUIOverride[] = L"Windows.UI.Xaml.DragUIOverride";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DropCompletedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDropCompletedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DropCompletedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DropCompletedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DropCompletedEventArgs[] = L"Windows.UI.Xaml.DropCompletedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DurationHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IDurationHelperStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDurationHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DurationHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DurationHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DurationHelper[] = L"Windows.UI.Xaml.DurationHelper";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.EffectiveViewportChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IEffectiveViewportChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_EffectiveViewportChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_EffectiveViewportChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_EffectiveViewportChangedEventArgs[] = L"Windows.UI.Xaml.EffectiveViewportChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Xaml.ElementFactoryGetArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IElementFactoryGetArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ElementFactoryGetArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ElementFactoryGetArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ElementFactoryGetArgs[] = L"Windows.UI.Xaml.ElementFactoryGetArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Xaml.ElementFactoryRecycleArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IElementFactoryRecycleArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ElementFactoryRecycleArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ElementFactoryRecycleArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ElementFactoryRecycleArgs[] = L"Windows.UI.Xaml.ElementFactoryRecycleArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Xaml.ElementSoundPlayer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IElementSoundPlayerStatics2 interface starting with version 6.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IElementSoundPlayerStatics interface starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IElementSoundPlayer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ElementSoundPlayer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ElementSoundPlayer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ElementSoundPlayer[] = L"Windows.UI.Xaml.ElementSoundPlayer";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Xaml.EventTrigger
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IEventTrigger ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_EventTrigger_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_EventTrigger_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_EventTrigger[] = L"Windows.UI.Xaml.EventTrigger";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.ExceptionRoutedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IExceptionRoutedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ExceptionRoutedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ExceptionRoutedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ExceptionRoutedEventArgs[] = L"Windows.UI.Xaml.ExceptionRoutedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.FrameworkElement
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IFrameworkElementStatics6 interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IFrameworkElementStatics5 interface starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IFrameworkElementStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IFrameworkElementStatics4 interface starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IFrameworkElementStatics2 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IFrameworkElement ** Default Interface **
 *    Windows.UI.Xaml.IFrameworkElement2
 *    Windows.UI.Xaml.IFrameworkElement3
 *    Windows.UI.Xaml.IFrameworkElement4
 *    Windows.UI.Xaml.IFrameworkElement6
 *    Windows.UI.Xaml.IFrameworkElement7
 *    Windows.UI.Xaml.IFrameworkElementProtected7
 *    Windows.UI.Xaml.IFrameworkElementOverrides
 *    Windows.UI.Xaml.IFrameworkElementOverrides2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_FrameworkElement_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_FrameworkElement_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_FrameworkElement[] = L"Windows.UI.Xaml.FrameworkElement";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.FrameworkTemplate
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IFrameworkTemplate ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_FrameworkTemplate_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_FrameworkTemplate_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_FrameworkTemplate[] = L"Windows.UI.Xaml.FrameworkTemplate";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.FrameworkView
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IFrameworkView ** Default Interface **
 *    Windows.ApplicationModel.Core.IFrameworkView
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_FrameworkView_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_FrameworkView_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_FrameworkView[] = L"Windows.UI.Xaml.FrameworkView";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.FrameworkViewSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IFrameworkViewSource ** Default Interface **
 *    Windows.ApplicationModel.Core.IFrameworkViewSource
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_FrameworkViewSource_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_FrameworkViewSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_FrameworkViewSource[] = L"Windows.UI.Xaml.FrameworkViewSource";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.GridLengthHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IGridLengthHelperStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IGridLengthHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_GridLengthHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_GridLengthHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_GridLengthHelper[] = L"Windows.UI.Xaml.GridLengthHelper";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.MediaFailedRoutedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IMediaFailedRoutedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_MediaFailedRoutedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_MediaFailedRoutedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_MediaFailedRoutedEventArgs[] = L"Windows.UI.Xaml.MediaFailedRoutedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.PointHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IPointHelperStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IPointHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_PointHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_PointHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_PointHelper[] = L"Windows.UI.Xaml.PointHelper";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.PropertyMetadata
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IPropertyMetadataStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IPropertyMetadata ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_PropertyMetadata_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_PropertyMetadata_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_PropertyMetadata[] = L"Windows.UI.Xaml.PropertyMetadata";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.PropertyPath
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.UI.Xaml.IPropertyPathFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IPropertyPath ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_PropertyPath_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_PropertyPath_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_PropertyPath[] = L"Windows.UI.Xaml.PropertyPath";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.RectHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IRectHelperStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IRectHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_RectHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_RectHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_RectHelper[] = L"Windows.UI.Xaml.RectHelper";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.ResourceDictionary
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IResourceDictionary ** Default Interface **
 *    Windows.Foundation.Collections.IMap`2<Object, Object>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Object, Object>>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ResourceDictionary_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ResourceDictionary_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ResourceDictionary[] = L"Windows.UI.Xaml.ResourceDictionary";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.RoutedEvent
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IRoutedEvent ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_RoutedEvent_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_RoutedEvent_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_RoutedEvent[] = L"Windows.UI.Xaml.RoutedEvent";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.RoutedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IRoutedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_RoutedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_RoutedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_RoutedEventArgs[] = L"Windows.UI.Xaml.RoutedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.ScalarTransition
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IScalarTransition ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ScalarTransition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ScalarTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ScalarTransition[] = L"Windows.UI.Xaml.ScalarTransition";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Xaml.Setter
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Type can be activated via the Windows.UI.Xaml.ISetterFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.ISetter ** Default Interface **
 *    Windows.UI.Xaml.ISetter2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Setter_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Setter_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Setter[] = L"Windows.UI.Xaml.Setter";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.SetterBase
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.ISetterBase ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_SetterBase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_SetterBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_SetterBase[] = L"Windows.UI.Xaml.SetterBase";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.SetterBaseCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.ISetterBaseCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.SetterBase>
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.SetterBase>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_SetterBaseCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_SetterBaseCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_SetterBaseCollection[] = L"Windows.UI.Xaml.SetterBaseCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.SizeChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.ISizeChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_SizeChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_SizeChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_SizeChangedEventArgs[] = L"Windows.UI.Xaml.SizeChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.SizeHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.ISizeHelperStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.ISizeHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_SizeHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_SizeHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_SizeHelper[] = L"Windows.UI.Xaml.SizeHelper";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.StateTrigger
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IStateTriggerStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IStateTrigger ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_StateTrigger_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_StateTrigger_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_StateTrigger[] = L"Windows.UI.Xaml.StateTrigger";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.StateTriggerBase
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IStateTriggerBase ** Default Interface **
 *    Windows.UI.Xaml.IStateTriggerBaseProtected
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_StateTriggerBase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_StateTriggerBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_StateTriggerBase[] = L"Windows.UI.Xaml.StateTriggerBase";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.Style
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.UI.Xaml.IStyleFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IStyle ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Style_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Style_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Style[] = L"Windows.UI.Xaml.Style";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.TargetPropertyPath
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Type can be activated via the Windows.UI.Xaml.ITargetPropertyPathFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.ITargetPropertyPath ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_TargetPropertyPath_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_TargetPropertyPath_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_TargetPropertyPath[] = L"Windows.UI.Xaml.TargetPropertyPath";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.ThicknessHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IThicknessHelperStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IThicknessHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ThicknessHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ThicknessHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ThicknessHelper[] = L"Windows.UI.Xaml.ThicknessHelper";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.TriggerAction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.ITriggerAction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_TriggerAction_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_TriggerAction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_TriggerAction[] = L"Windows.UI.Xaml.TriggerAction";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.TriggerActionCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.TriggerAction> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.TriggerAction>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_TriggerActionCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_TriggerActionCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_TriggerActionCollection[] = L"Windows.UI.Xaml.TriggerActionCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.TriggerBase
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.ITriggerBase ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_TriggerBase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_TriggerBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_TriggerBase[] = L"Windows.UI.Xaml.TriggerBase";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.TriggerCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.TriggerBase> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.TriggerBase>
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_TriggerCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_TriggerCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_TriggerCollection[] = L"Windows.UI.Xaml.TriggerCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.UIElement
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics3 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics9 interface starting with version 7.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics2 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics6 interface starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics5 interface starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics4 interface starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics8 interface starting with version 6.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics10 interface starting with version 8.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics7 interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IUIElement ** Default Interface **
 *    Windows.UI.Xaml.IUIElement2
 *    Windows.UI.Xaml.IUIElement3
 *    Windows.UI.Xaml.IUIElement4
 *    Windows.UI.Xaml.IUIElement5
 *    Windows.UI.Xaml.IUIElement7
 *    Windows.UI.Xaml.IUIElement8
 *    Windows.UI.Xaml.IUIElement9
 *    Windows.UI.Xaml.IUIElement10
 *    Windows.UI.Xaml.IUIElementOverrides
 *    Windows.UI.Xaml.IUIElementOverrides7
 *    Windows.UI.Xaml.IUIElementOverrides8
 *    Windows.UI.Xaml.IUIElementOverrides9
 *    Windows.UI.Composition.IAnimationObject
 *    Windows.UI.Composition.IVisualElement
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_UIElement_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_UIElement_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_UIElement[] = L"Windows.UI.Xaml.UIElement";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.UIElementWeakCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IUIElementWeakCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.UIElement>
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.UIElement>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_UIElementWeakCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_UIElementWeakCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_UIElementWeakCollection[] = L"Windows.UI.Xaml.UIElementWeakCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Xaml.UnhandledExceptionEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IUnhandledExceptionEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_UnhandledExceptionEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_UnhandledExceptionEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_UnhandledExceptionEventArgs[] = L"Windows.UI.Xaml.UnhandledExceptionEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.Vector3Transition
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IVector3Transition ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Vector3Transition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Vector3Transition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Vector3Transition[] = L"Windows.UI.Xaml.Vector3Transition";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Xaml.VisualState
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IVisualState ** Default Interface **
 *    Windows.UI.Xaml.IVisualState2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_VisualState_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_VisualState_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_VisualState[] = L"Windows.UI.Xaml.VisualState";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.VisualStateChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IVisualStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_VisualStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_VisualStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_VisualStateChangedEventArgs[] = L"Windows.UI.Xaml.VisualStateChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.VisualStateGroup
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IVisualStateGroup ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_VisualStateGroup_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_VisualStateGroup_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_VisualStateGroup[] = L"Windows.UI.Xaml.VisualStateGroup";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.VisualStateManager
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IVisualStateManagerStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IVisualStateManager ** Default Interface **
 *    Windows.UI.Xaml.IVisualStateManagerProtected
 *    Windows.UI.Xaml.IVisualStateManagerOverrides
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_VisualStateManager_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_VisualStateManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_VisualStateManager[] = L"Windows.UI.Xaml.VisualStateManager";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.VisualTransition
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IVisualTransition ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_VisualTransition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_VisualTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_VisualTransition[] = L"Windows.UI.Xaml.VisualTransition";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.Window
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IWindowStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IWindow ** Default Interface **
 *    Windows.UI.Xaml.IWindow2
 *    Windows.UI.Xaml.IWindow3
 *    Windows.UI.Xaml.IWindow4
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Window_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Window_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Window[] = L"Windows.UI.Xaml.Window";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.WindowCreatedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IWindowCreatedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_WindowCreatedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_WindowCreatedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_WindowCreatedEventArgs[] = L"Windows.UI.Xaml.WindowCreatedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.XamlRoot
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IXamlRoot ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_XamlRoot_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_XamlRoot_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_XamlRoot[] = L"Windows.UI.Xaml.XamlRoot";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Xaml.XamlRootChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IXamlRootChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_XamlRootChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_XamlRootChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_XamlRootChangedEventArgs[] = L"Windows.UI.Xaml.XamlRootChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

#else // !defined(__cplusplus)
/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback;

#endif // ____x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler __x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler __x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplication_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplication_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIApplication __x_ABI_CWindows_CUI_CXaml_CIApplication;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIApplication_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplication2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplication2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIApplication2 __x_ABI_CWindows_CUI_CXaml_CIApplication2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIApplication2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplication3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplication3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIApplication3 __x_ABI_CWindows_CUI_CXaml_CIApplication3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIApplication3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2 __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2 __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBrushTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBrushTransition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIBrushTransition __x_ABI_CWindows_CUI_CXaml_CIBrushTransition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIBrushTransition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory __x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper;

#endif // ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplate __x_ABI_CWindows_CUI_CXaml_CIDataTemplate;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2 __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDebugSettings __x_ABI_CWindows_CUI_CXaml_CIDebugSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2 __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3 __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDebugSettings4 __x_ABI_CWindows_CUI_CXaml_CIDebugSettings4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject __x_ABI_CWindows_CUI_CXaml_CIDependencyObject;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2 __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2 __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3 __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2 __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragUI_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragUI_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDragUI __x_ABI_CWindows_CUI_CXaml_CIDragUI;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragUI_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDurationHelper __x_ABI_CWindows_CUI_CXaml_CIDurationHelper;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIElementFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIElementFactory __x_ABI_CWindows_CUI_CXaml_CIElementFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIElementFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2 __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIEventTrigger __x_ABI_CWindows_CUI_CXaml_CIEventTrigger;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkView __x_ABI_CWindows_CUI_CXaml_CIFrameworkView;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPointHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPointHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIPointHelper __x_ABI_CWindows_CUI_CXaml_CIPointHelper;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIPointHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIPropertyPath __x_ABI_CWindows_CUI_CXaml_CIPropertyPath;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRectHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRectHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIRectHelper __x_ABI_CWindows_CUI_CXaml_CIRectHelper;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIRectHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIScalarTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIScalarTransition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIScalarTransition __x_ABI_CWindows_CUI_CXaml_CIScalarTransition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIScalarTransition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory __x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetter_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISetter __x_ABI_CWindows_CUI_CXaml_CISetter;

#endif // ____x_ABI_CWindows_CUI_CXaml_CISetter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetter2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetter2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISetter2 __x_ABI_CWindows_CUI_CXaml_CISetter2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CISetter2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetterBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetterBase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISetterBase __x_ABI_CWindows_CUI_CXaml_CISetterBase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CISetterBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection;

#endif // ____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetterFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISetterFactory __x_ABI_CWindows_CUI_CXaml_CISetterFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CISetterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISizeHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISizeHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISizeHelper __x_ABI_CWindows_CUI_CXaml_CISizeHelper;

#endif // ____x_ABI_CWindows_CUI_CXaml_CISizeHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIStateTrigger __x_ABI_CWindows_CUI_CXaml_CIStateTrigger;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStyle_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStyle_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIStyle __x_ABI_CWindows_CUI_CXaml_CIStyle;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIStyle_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIStyleFactory __x_ABI_CWindows_CUI_CXaml_CIStyleFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath;

#endif // ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITriggerAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerAction_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CITriggerAction __x_ABI_CWindows_CUI_CXaml_CITriggerAction;

#endif // ____x_ABI_CWindows_CUI_CXaml_CITriggerAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITriggerBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerBase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CITriggerBase __x_ABI_CWindows_CUI_CXaml_CITriggerBase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CITriggerBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement __x_ABI_CWindows_CUI_CXaml_CIUIElement;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement10_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement10_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement10 __x_ABI_CWindows_CUI_CXaml_CIUIElement10;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement10_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement2 __x_ABI_CWindows_CUI_CXaml_CIUIElement2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement3 __x_ABI_CWindows_CUI_CXaml_CIUIElement3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement4 __x_ABI_CWindows_CUI_CXaml_CIUIElement4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement5_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement5 __x_ABI_CWindows_CUI_CXaml_CIUIElement5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement7_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement7 __x_ABI_CWindows_CUI_CXaml_CIUIElement7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement8_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement8 __x_ABI_CWindows_CUI_CXaml_CIUIElement8;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement9_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement9_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement9 __x_ABI_CWindows_CUI_CXaml_CIUIElement9;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement9_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7 __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8 __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9 __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10 __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2 __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3 __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4 __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5 __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6 __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7 __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8 __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9 __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVector3Transition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVector3Transition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVector3Transition __x_ABI_CWindows_CUI_CXaml_CIVector3Transition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVector3Transition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory __x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualState_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualState_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualState __x_ABI_CWindows_CUI_CXaml_CIVisualState;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualState_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualState2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualState2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualState2 __x_ABI_CWindows_CUI_CXaml_CIVisualState2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualState2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualTransition __x_ABI_CWindows_CUI_CXaml_CIVisualTransition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIWindow __x_ABI_CWindows_CUI_CXaml_CIWindow;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindow_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindow2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIWindow2 __x_ABI_CWindows_CUI_CXaml_CIWindow2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindow2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindow3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIWindow3 __x_ABI_CWindows_CUI_CXaml_CIWindow3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindow3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindow4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIWindow4 __x_ABI_CWindows_CUI_CXaml_CIWindow4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindow4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIWindowStatics __x_ABI_CWindows_CUI_CXaml_CIWindowStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIXamlRoot_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIXamlRoot_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIXamlRoot __x_ABI_CWindows_CUI_CXaml_CIXamlRoot;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIXamlRoot_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation;

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation;

typedef struct __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation* This,
        enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperationVtbl;

interface __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation* This,
        __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperationVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CFoundation__CPoint __FIIterator_1_Windows__CFoundation__CPoint;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CFoundation__CPoint;

typedef struct __FIIterator_1_Windows__CFoundation__CPointVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CFoundation__CPoint* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CFoundation__CPoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CFoundation__CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CFoundation__CPoint* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CFoundation__CPoint* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CFoundation__CPoint* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CFoundation__CPoint* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CFoundation__CPoint* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CFoundation__CPoint* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CFoundation__CPoint* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CFoundation_CPoint* items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CFoundation__CPointVtbl;

interface __FIIterator_1_Windows__CFoundation__CPoint
{
    CONST_VTBL struct __FIIterator_1_Windows__CFoundation__CPointVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CFoundation__CPoint_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CFoundation__CPoint_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CFoundation__CPoint_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CFoundation__CPoint_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CFoundation__CPoint_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CFoundation__CPoint_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CFoundation__CPoint_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CFoundation__CPoint_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CFoundation__CPoint_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CFoundation__CPoint_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CFoundation__CPoint __FIIterable_1_Windows__CFoundation__CPoint;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CFoundation__CPoint;

typedef struct __FIIterable_1_Windows__CFoundation__CPointVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CFoundation__CPoint* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CFoundation__CPoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CFoundation__CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CFoundation__CPoint* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CFoundation__CPoint* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CFoundation__CPoint* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CFoundation__CPoint* This,
        __FIIterator_1_Windows__CFoundation__CPoint** result);

    END_INTERFACE
} __FIIterable_1_Windows__CFoundation__CPointVtbl;

interface __FIIterable_1_Windows__CFoundation__CPoint
{
    CONST_VTBL struct __FIIterable_1_Windows__CFoundation__CPointVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CFoundation__CPoint_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CFoundation__CPoint_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CFoundation__CPoint_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CFoundation__CPoint_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CFoundation__CPoint_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CFoundation__CPoint_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CFoundation__CPoint_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__)
#define ____FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__

typedef interface __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint;

typedef struct __FIIterator_1___FIIterable_1_Windows__CFoundation__CPointVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint* This,
        __FIIterable_1_Windows__CFoundation__CPoint** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint* This,
        UINT32 itemsLength,
        __FIIterable_1_Windows__CFoundation__CPoint** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1___FIIterable_1_Windows__CFoundation__CPointVtbl;

interface __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint
{
    CONST_VTBL struct __FIIterator_1___FIIterable_1_Windows__CFoundation__CPointVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__)
#define ____FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__

typedef interface __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint;

typedef struct __FIIterable_1___FIIterable_1_Windows__CFoundation__CPointVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint* This,
        __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint** result);

    END_INTERFACE
} __FIIterable_1___FIIterable_1_Windows__CFoundation__CPointVtbl;

interface __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint
{
    CONST_VTBL struct __FIIterable_1___FIIterable_1_Windows__CFoundation__CPointVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#if !defined(____FIKeyValuePair_2_IInspectable_IInspectable_INTERFACE_DEFINED__)
#define ____FIKeyValuePair_2_IInspectable_IInspectable_INTERFACE_DEFINED__

typedef interface __FIKeyValuePair_2_IInspectable_IInspectable __FIKeyValuePair_2_IInspectable_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIKeyValuePair_2_IInspectable_IInspectable;

typedef struct __FIKeyValuePair_2_IInspectable_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIKeyValuePair_2_IInspectable_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIKeyValuePair_2_IInspectable_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIKeyValuePair_2_IInspectable_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIKeyValuePair_2_IInspectable_IInspectable* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIKeyValuePair_2_IInspectable_IInspectable* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIKeyValuePair_2_IInspectable_IInspectable* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Key)(__FIKeyValuePair_2_IInspectable_IInspectable* This,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIKeyValuePair_2_IInspectable_IInspectable* This,
        IInspectable** result);

    END_INTERFACE
} __FIKeyValuePair_2_IInspectable_IInspectableVtbl;

interface __FIKeyValuePair_2_IInspectable_IInspectable
{
    CONST_VTBL struct __FIKeyValuePair_2_IInspectable_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIKeyValuePair_2_IInspectable_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIKeyValuePair_2_IInspectable_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIKeyValuePair_2_IInspectable_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIKeyValuePair_2_IInspectable_IInspectable_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIKeyValuePair_2_IInspectable_IInspectable_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIKeyValuePair_2_IInspectable_IInspectable_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIKeyValuePair_2_IInspectable_IInspectable_get_Key(This, result) \
    ((This)->lpVtbl->get_Key(This, result))

#define __FIKeyValuePair_2_IInspectable_IInspectable_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIKeyValuePair_2_IInspectable_IInspectable_INTERFACE_DEFINED__

#if !defined(____FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_INTERFACE_DEFINED__)
#define ____FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_INTERFACE_DEFINED__

typedef interface __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable;

typedef struct __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable* This,
        __FIKeyValuePair_2_IInspectable_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable* This,
        UINT32 itemsLength,
        __FIKeyValuePair_2_IInspectable_IInspectable** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectableVtbl;

interface __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable
{
    CONST_VTBL struct __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_INTERFACE_DEFINED__

#if !defined(____FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_INTERFACE_DEFINED__)
#define ____FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_INTERFACE_DEFINED__

typedef interface __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable;

typedef struct __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable* This,
        __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable** result);

    END_INTERFACE
} __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectableVtbl;

interface __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable
{
    CONST_VTBL struct __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_INTERFACE_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CDependencyObject __FIIterator_1_Windows__CUI__CXaml__CDependencyObject;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CDependencyObject;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CXaml__CDependencyObject* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CXaml__CDependencyObject* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CXaml__CDependencyObject* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CXaml__CDependencyObject* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CXaml__CDependencyObject* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CXaml__CDependencyObject* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CXaml__CDependencyObject* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CXaml__CDependencyObject* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CXaml__CDependencyObject* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CXaml__CDependencyObject* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CDependencyObjectVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CDependencyObjectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CDependencyObject __FIIterable_1_Windows__CUI__CXaml__CDependencyObject;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CDependencyObject;

typedef struct __FIIterable_1_Windows__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CXaml__CDependencyObject* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CXaml__CDependencyObject* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CXaml__CDependencyObject* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CXaml__CDependencyObject* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CXaml__CDependencyObject* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CXaml__CDependencyObject* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CXaml__CDependencyObject* This,
        __FIIterator_1_Windows__CUI__CXaml__CDependencyObject** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CDependencyObjectVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CDependencyObjectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator __FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator;

typedef struct __FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        __FIIterator_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIPointer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIPointer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIPointer __x_ABI_CWindows_CUI_CXaml_CInput_CIPointer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIPointer_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CInput__CPointer __FIIterator_1_Windows__CUI__CXaml__CInput__CPointer;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CInput__CPointer;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CInput__CPointerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CXaml__CInput__CPointer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CXaml__CInput__CPointer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CXaml__CInput__CPointer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CXaml__CInput__CPointer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CXaml__CInput__CPointer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CXaml__CInput__CPointer* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CXaml__CInput__CPointer* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointer** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CXaml__CInput__CPointer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CXaml__CInput__CPointer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CXaml__CInput__CPointer* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointer** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CInput__CPointerVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CInput__CPointer
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CInput__CPointerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CInput__CPointer __FIIterable_1_Windows__CUI__CXaml__CInput__CPointer;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CInput__CPointer;

typedef struct __FIIterable_1_Windows__CUI__CXaml__CInput__CPointerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CXaml__CInput__CPointer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CXaml__CInput__CPointer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CXaml__CInput__CPointer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CXaml__CInput__CPointer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CXaml__CInput__CPointer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CXaml__CInput__CPointer* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CXaml__CInput__CPointer* This,
        __FIIterator_1_Windows__CUI__CXaml__CInput__CPointer** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CInput__CPointerVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CInput__CPointer
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CInput__CPointerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight __x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLightVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLightVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLightVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight __FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight;

typedef struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLightVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        __FIIterator_1_Windows__CUI__CXaml__CMedia__CXamlLight** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLightVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLightVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CResourceDictionary;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CResourceDictionaryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CXaml__CResourceDictionary* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CXaml__CResourceDictionary* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CXaml__CResourceDictionary* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CXaml__CResourceDictionary* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CXaml__CResourceDictionary* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CXaml__CResourceDictionary* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CXaml__CResourceDictionary* This,
        __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CXaml__CResourceDictionary* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CXaml__CResourceDictionary* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CXaml__CResourceDictionary* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CResourceDictionaryVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CResourceDictionaryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CResourceDictionary;

typedef struct __FIIterable_1_Windows__CUI__CXaml__CResourceDictionaryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CXaml__CResourceDictionary* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CXaml__CResourceDictionary* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CXaml__CResourceDictionary* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CXaml__CResourceDictionary* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CXaml__CResourceDictionary* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CXaml__CResourceDictionary* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CXaml__CResourceDictionary* This,
        __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CResourceDictionaryVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CResourceDictionaryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CSetterBase __FIIterator_1_Windows__CUI__CXaml__CSetterBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CSetterBase;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CSetterBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CXaml__CSetterBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CXaml__CSetterBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CXaml__CSetterBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CXaml__CSetterBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CXaml__CSetterBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CXaml__CSetterBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CXaml__CSetterBase* This,
        __x_ABI_CWindows_CUI_CXaml_CISetterBase** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CXaml__CSetterBase* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CXaml__CSetterBase* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CXaml__CSetterBase* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CISetterBase** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CSetterBaseVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CSetterBase
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CSetterBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CSetterBase __FIIterable_1_Windows__CUI__CXaml__CSetterBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CSetterBase;

typedef struct __FIIterable_1_Windows__CUI__CXaml__CSetterBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CXaml__CSetterBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CXaml__CSetterBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CXaml__CSetterBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CXaml__CSetterBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CXaml__CSetterBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CXaml__CSetterBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CXaml__CSetterBase* This,
        __FIIterator_1_Windows__CUI__CXaml__CSetterBase** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CSetterBaseVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CSetterBase
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CSetterBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CSetterBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CXaml__CSetterBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CXaml__CSetterBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CXaml__CSetterBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CXaml__CSetterBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CXaml__CSetterBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CXaml__CSetterBase_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase;

typedef struct __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CTriggerAction __FIIterator_1_Windows__CUI__CXaml__CTriggerAction;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CTriggerAction;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CTriggerActionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CXaml__CTriggerAction* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CXaml__CTriggerAction* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CXaml__CTriggerAction* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CXaml__CTriggerAction* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CXaml__CTriggerAction* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CXaml__CTriggerAction* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CXaml__CTriggerAction* This,
        __x_ABI_CWindows_CUI_CXaml_CITriggerAction** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CXaml__CTriggerAction* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CXaml__CTriggerAction* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CXaml__CTriggerAction* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CITriggerAction** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CTriggerActionVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CTriggerAction
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CTriggerActionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CTriggerAction __FIIterable_1_Windows__CUI__CXaml__CTriggerAction;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CTriggerAction;

typedef struct __FIIterable_1_Windows__CUI__CXaml__CTriggerActionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CXaml__CTriggerAction* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CXaml__CTriggerAction* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CXaml__CTriggerAction* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CXaml__CTriggerAction* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CXaml__CTriggerAction* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CXaml__CTriggerAction* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CXaml__CTriggerAction* This,
        __FIIterator_1_Windows__CUI__CXaml__CTriggerAction** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CTriggerActionVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CTriggerAction
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CTriggerActionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerAction_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerAction_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerAction_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerAction_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerAction_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerAction_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerAction_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CTriggerBase __FIIterator_1_Windows__CUI__CXaml__CTriggerBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CTriggerBase;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CTriggerBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CXaml__CTriggerBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CXaml__CTriggerBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CXaml__CTriggerBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CXaml__CTriggerBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CXaml__CTriggerBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CXaml__CTriggerBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CXaml__CTriggerBase* This,
        __x_ABI_CWindows_CUI_CXaml_CITriggerBase** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CXaml__CTriggerBase* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CXaml__CTriggerBase* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CXaml__CTriggerBase* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CITriggerBase** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CTriggerBaseVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CTriggerBase
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CTriggerBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CTriggerBase __FIIterable_1_Windows__CUI__CXaml__CTriggerBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CTriggerBase;

typedef struct __FIIterable_1_Windows__CUI__CXaml__CTriggerBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CXaml__CTriggerBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CXaml__CTriggerBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CXaml__CTriggerBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CXaml__CTriggerBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CXaml__CTriggerBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CXaml__CTriggerBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CXaml__CTriggerBase* This,
        __FIIterator_1_Windows__CUI__CXaml__CTriggerBase** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CTriggerBaseVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CTriggerBase
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CTriggerBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerBase_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CUIElement __FIIterator_1_Windows__CUI__CXaml__CUIElement;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CUIElement;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CUIElementVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CXaml__CUIElement* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CXaml__CUIElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CXaml__CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CXaml__CUIElement* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CXaml__CUIElement* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CXaml__CUIElement* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CXaml__CUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CXaml__CUIElement* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CXaml__CUIElement* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CXaml__CUIElement* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CUIElementVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CUIElement
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CUIElementVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CUIElement __FIIterable_1_Windows__CUI__CXaml__CUIElement;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CUIElement;

typedef struct __FIIterable_1_Windows__CUI__CXaml__CUIElementVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CXaml__CUIElement* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CXaml__CUIElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CXaml__CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CXaml__CUIElement* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CXaml__CUIElement* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CXaml__CUIElement* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CXaml__CUIElement* This,
        __FIIterator_1_Windows__CUI__CXaml__CUIElement** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CUIElementVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CUIElement
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CUIElementVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CUIElement_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CXaml__CUIElement_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CXaml__CUIElement_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CXaml__CUIElement_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CXaml__CUIElement_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CXaml__CUIElement_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CXaml__CUIElement_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CVisualState __FIIterator_1_Windows__CUI__CXaml__CVisualState;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CVisualState;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CVisualStateVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CXaml__CVisualState* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CXaml__CVisualState* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CXaml__CVisualState* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CXaml__CVisualState* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CXaml__CVisualState* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CXaml__CVisualState* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CXaml__CVisualState* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CXaml__CVisualState* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CXaml__CVisualState* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CXaml__CVisualState* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CVisualStateVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CVisualState
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CVisualStateVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CVisualState __FIIterable_1_Windows__CUI__CXaml__CVisualState;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CVisualState;

typedef struct __FIIterable_1_Windows__CUI__CXaml__CVisualStateVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CXaml__CVisualState* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CXaml__CVisualState* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CXaml__CVisualState* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CXaml__CVisualState* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CXaml__CVisualState* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CXaml__CVisualState* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CXaml__CVisualState* This,
        __FIIterator_1_Windows__CUI__CXaml__CVisualState** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CVisualStateVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CVisualState
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CVisualStateVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CVisualState_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CXaml__CVisualState_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CXaml__CVisualState_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CXaml__CVisualState_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CXaml__CVisualState_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CXaml__CVisualState_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CXaml__CVisualState_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroupVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroupVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroupVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup;

typedef struct __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroupVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroupVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroupVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CVisualTransition __FIIterator_1_Windows__CUI__CXaml__CVisualTransition;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CVisualTransition;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CVisualTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CXaml__CVisualTransition* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CXaml__CVisualTransition* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CXaml__CVisualTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CXaml__CVisualTransition* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CXaml__CVisualTransition* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CXaml__CVisualTransition* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CXaml__CVisualTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualTransition** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CXaml__CVisualTransition* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CXaml__CVisualTransition* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CXaml__CVisualTransition* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIVisualTransition** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CVisualTransitionVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CVisualTransition
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CVisualTransitionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CVisualTransition __FIIterable_1_Windows__CUI__CXaml__CVisualTransition;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CVisualTransition;

typedef struct __FIIterable_1_Windows__CUI__CXaml__CVisualTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CXaml__CVisualTransition* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CXaml__CVisualTransition* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CXaml__CVisualTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CXaml__CVisualTransition* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CXaml__CVisualTransition* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CXaml__CVisualTransition* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CXaml__CVisualTransition* This,
        __FIIterator_1_Windows__CUI__CXaml__CVisualTransition** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CVisualTransitionVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CVisualTransition
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CVisualTransitionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CVisualTransition_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CXaml__CVisualTransition_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CXaml__CVisualTransition_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CXaml__CVisualTransition_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CXaml__CVisualTransition_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CXaml__CVisualTransition_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CXaml__CVisualTransition_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef interface __FIMapView_2_IInspectable_IInspectable __FIMapView_2_IInspectable_IInspectable;

#if !defined(____FIMapView_2_IInspectable_IInspectable_INTERFACE_DEFINED__)
#define ____FIMapView_2_IInspectable_IInspectable_INTERFACE_DEFINED__

typedef interface __FIMapView_2_IInspectable_IInspectable __FIMapView_2_IInspectable_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMapView_2_IInspectable_IInspectable;

typedef struct __FIMapView_2_IInspectable_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIMapView_2_IInspectable_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIMapView_2_IInspectable_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIMapView_2_IInspectable_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIMapView_2_IInspectable_IInspectable* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIMapView_2_IInspectable_IInspectable* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIMapView_2_IInspectable_IInspectable* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Lookup)(__FIMapView_2_IInspectable_IInspectable* This,
        IInspectable* key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIMapView_2_IInspectable_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__FIMapView_2_IInspectable_IInspectable* This,
        IInspectable* key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__FIMapView_2_IInspectable_IInspectable* This,
        __FIMapView_2_IInspectable_IInspectable** first,
        __FIMapView_2_IInspectable_IInspectable** second);

    END_INTERFACE
} __FIMapView_2_IInspectable_IInspectableVtbl;

interface __FIMapView_2_IInspectable_IInspectable
{
    CONST_VTBL struct __FIMapView_2_IInspectable_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIMapView_2_IInspectable_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIMapView_2_IInspectable_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIMapView_2_IInspectable_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIMapView_2_IInspectable_IInspectable_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIMapView_2_IInspectable_IInspectable_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIMapView_2_IInspectable_IInspectable_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIMapView_2_IInspectable_IInspectable_Lookup(This, key, result) \
    ((This)->lpVtbl->Lookup(This, key, result))

#define __FIMapView_2_IInspectable_IInspectable_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIMapView_2_IInspectable_IInspectable_HasKey(This, key, result) \
    ((This)->lpVtbl->HasKey(This, key, result))

#define __FIMapView_2_IInspectable_IInspectable_Split(This, first, second) \
    ((This)->lpVtbl->Split(This, first, second))

#endif /* COBJMACROS */

#endif // ____FIMapView_2_IInspectable_IInspectable_INTERFACE_DEFINED__

#if !defined(____FIMap_2_IInspectable_IInspectable_INTERFACE_DEFINED__)
#define ____FIMap_2_IInspectable_IInspectable_INTERFACE_DEFINED__

typedef interface __FIMap_2_IInspectable_IInspectable __FIMap_2_IInspectable_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMap_2_IInspectable_IInspectable;

typedef struct __FIMap_2_IInspectable_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIMap_2_IInspectable_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIMap_2_IInspectable_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIMap_2_IInspectable_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIMap_2_IInspectable_IInspectable* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIMap_2_IInspectable_IInspectable* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIMap_2_IInspectable_IInspectable* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Lookup)(__FIMap_2_IInspectable_IInspectable* This,
        IInspectable* key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIMap_2_IInspectable_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__FIMap_2_IInspectable_IInspectable* This,
        IInspectable* key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIMap_2_IInspectable_IInspectable* This,
        __FIMapView_2_IInspectable_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__FIMap_2_IInspectable_IInspectable* This,
        IInspectable* key,
        IInspectable* value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__FIMap_2_IInspectable_IInspectable* This,
        IInspectable* key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIMap_2_IInspectable_IInspectable* This);

    END_INTERFACE
} __FIMap_2_IInspectable_IInspectableVtbl;

interface __FIMap_2_IInspectable_IInspectable
{
    CONST_VTBL struct __FIMap_2_IInspectable_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIMap_2_IInspectable_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIMap_2_IInspectable_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIMap_2_IInspectable_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIMap_2_IInspectable_IInspectable_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIMap_2_IInspectable_IInspectable_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIMap_2_IInspectable_IInspectable_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIMap_2_IInspectable_IInspectable_Lookup(This, key, result) \
    ((This)->lpVtbl->Lookup(This, key, result))

#define __FIMap_2_IInspectable_IInspectable_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIMap_2_IInspectable_IInspectable_HasKey(This, key, result) \
    ((This)->lpVtbl->HasKey(This, key, result))

#define __FIMap_2_IInspectable_IInspectable_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIMap_2_IInspectable_IInspectable_Insert(This, key, value, result) \
    ((This)->lpVtbl->Insert(This, key, value, result))

#define __FIMap_2_IInspectable_IInspectable_Remove(This, key) \
    ((This)->lpVtbl->Remove(This, key))

#define __FIMap_2_IInspectable_IInspectable_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#endif /* COBJMACROS */

#endif // ____FIMap_2_IInspectable_IInspectable_INTERFACE_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CDependencyObject;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CUI__CXaml__CDependencyObject* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CUI__CXaml__CDependencyObject* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CUI__CXaml__CDependencyObject* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CUI__CXaml__CDependencyObject* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CUI__CXaml__CDependencyObject* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CUI__CXaml__CDependencyObject* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CUI__CXaml__CDependencyObject* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CUI__CXaml__CDependencyObject* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CUI__CXaml__CDependencyObject* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CUI__CXaml__CDependencyObject* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CDependencyObjectVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CDependencyObjectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CXaml__CDependencyObject __FIVector_1_Windows__CUI__CXaml__CDependencyObject;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CDependencyObject;

typedef struct __FIVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CUI__CXaml__CDependencyObject* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CUI__CXaml__CDependencyObject* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CUI__CXaml__CDependencyObject* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CUI__CXaml__CDependencyObject* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** items);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl;

interface __FIVector_1_Windows__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef interface __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
#define ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

typedef interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject;

typedef struct __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject* This,
        __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject* sender,
        __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs* event);

    END_INTERFACE
} __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObjectVtbl;

interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObjectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_Invoke(This, sender, event) \
    ((This)->lpVtbl->Invoke(This, sender, event))

#endif /* COBJMACROS */

#endif // ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
#define ____FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

typedef interface __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject;

typedef struct __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_VectorChanged)(__FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject* vhnd,
        EventRegistrationToken* result);
    HRESULT (STDMETHODCALLTYPE* remove_VectorChanged)(__FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject* This,
        EventRegistrationToken token);

    END_INTERFACE
} __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl;

interface __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_add_VectorChanged(This, vhnd, result) \
    ((This)->lpVtbl->add_VectorChanged(This, vhnd, result))

#define __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_remove_VectorChanged(This, token) \
    ((This)->lpVtbl->remove_VectorChanged(This, token))

#endif /* COBJMACROS */

#endif // ____FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointer** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointer* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointer** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointerVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLightVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLightVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLightVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionaryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary* This,
        __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionaryVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionaryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CSetterBase __FIVectorView_1_Windows__CUI__CXaml__CSetterBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CSetterBase;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CSetterBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CUI__CXaml__CSetterBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CUI__CXaml__CSetterBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CUI__CXaml__CSetterBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CUI__CXaml__CSetterBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CUI__CXaml__CSetterBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CUI__CXaml__CSetterBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CUI__CXaml__CSetterBase* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CISetterBase** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CUI__CXaml__CSetterBase* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CUI__CXaml__CSetterBase* This,
        __x_ABI_CWindows_CUI_CXaml_CISetterBase* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CUI__CXaml__CSetterBase* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CISetterBase** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CSetterBaseVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CSetterBase
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CSetterBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CTriggerAction;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CTriggerActionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerAction* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerAction* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerAction* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerAction* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerAction* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerAction* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerAction* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CITriggerAction** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerAction* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerAction* This,
        __x_ABI_CWindows_CUI_CXaml_CITriggerAction* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerAction* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CITriggerAction** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CTriggerActionVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CTriggerActionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CTriggerBase;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CTriggerBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerBase* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CITriggerBase** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerBase* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerBase* This,
        __x_ABI_CWindows_CUI_CXaml_CITriggerBase* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CUI__CXaml__CTriggerBase* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CITriggerBase** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CTriggerBaseVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CTriggerBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CUIElement __FIVectorView_1_Windows__CUI__CXaml__CUIElement;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CUIElement;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CUIElementVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CUI__CXaml__CUIElement* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CUI__CXaml__CUIElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CUI__CXaml__CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CUI__CXaml__CUIElement* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CUI__CXaml__CUIElement* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CUI__CXaml__CUIElement* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CUI__CXaml__CUIElement* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CUI__CXaml__CUIElement* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CUI__CXaml__CUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CUI__CXaml__CUIElement* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CUIElementVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CUIElement
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CUIElementVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CVisualState __FIVectorView_1_Windows__CUI__CXaml__CVisualState;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CVisualState;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CVisualStateVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CUI__CXaml__CVisualState* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CUI__CXaml__CVisualState* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CUI__CXaml__CVisualState* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CUI__CXaml__CVisualState* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CUI__CXaml__CVisualState* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CUI__CXaml__CVisualState* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CUI__CXaml__CVisualState* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CUI__CXaml__CVisualState* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CUI__CXaml__CVisualState* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CUI__CXaml__CVisualState* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CVisualStateVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CVisualState
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CVisualStateVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroupVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroupVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroupVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CVisualTransition;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CVisualTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CUI__CXaml__CVisualTransition* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CUI__CXaml__CVisualTransition* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CUI__CXaml__CVisualTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CUI__CXaml__CVisualTransition* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CUI__CXaml__CVisualTransition* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CUI__CXaml__CVisualTransition* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CUI__CXaml__CVisualTransition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIVisualTransition** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CUI__CXaml__CVisualTransition* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CUI__CXaml__CVisualTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualTransition* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CUI__CXaml__CVisualTransition* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIVisualTransition** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CVisualTransitionVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CVisualTransitionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator;

typedef struct __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        __FIVectorView_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAccelerator** items);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl;

interface __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight;

typedef struct __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLightVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        __FIVectorView_1_Windows__CUI__CXaml__CMedia__CXamlLight** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIXamlLight** items);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLightVtbl;

interface __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLightVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CXaml__CResourceDictionary __FIVector_1_Windows__CUI__CXaml__CResourceDictionary;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CResourceDictionary;

typedef struct __FIVector_1_Windows__CUI__CXaml__CResourceDictionaryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CUI__CXaml__CResourceDictionary* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CUI__CXaml__CResourceDictionary* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CUI__CXaml__CResourceDictionary* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CUI__CXaml__CResourceDictionary* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CUI__CXaml__CResourceDictionary* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CUI__CXaml__CResourceDictionary* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CUI__CXaml__CResourceDictionary* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CUI__CXaml__CResourceDictionary* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CUI__CXaml__CResourceDictionary* This,
        __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CUI__CXaml__CResourceDictionary* This,
        __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CUI__CXaml__CResourceDictionary* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CUI__CXaml__CResourceDictionary* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CUI__CXaml__CResourceDictionary* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CUI__CXaml__CResourceDictionary* This,
        __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CUI__CXaml__CResourceDictionary* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CUI__CXaml__CResourceDictionary* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CUI__CXaml__CResourceDictionary* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CUI__CXaml__CResourceDictionary* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary** items);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CResourceDictionaryVtbl;

interface __FIVector_1_Windows__CUI__CXaml__CResourceDictionary
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CResourceDictionaryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CXaml__CSetterBase __FIVector_1_Windows__CUI__CXaml__CSetterBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CSetterBase;

typedef struct __FIVector_1_Windows__CUI__CXaml__CSetterBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CUI__CXaml__CSetterBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CUI__CXaml__CSetterBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CUI__CXaml__CSetterBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CUI__CXaml__CSetterBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CUI__CXaml__CSetterBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CUI__CXaml__CSetterBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CUI__CXaml__CSetterBase* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CISetterBase** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CUI__CXaml__CSetterBase* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CUI__CXaml__CSetterBase* This,
        __FIVectorView_1_Windows__CUI__CXaml__CSetterBase** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CUI__CXaml__CSetterBase* This,
        __x_ABI_CWindows_CUI_CXaml_CISetterBase* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CUI__CXaml__CSetterBase* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CISetterBase* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CUI__CXaml__CSetterBase* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CISetterBase* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CUI__CXaml__CSetterBase* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CUI__CXaml__CSetterBase* This,
        __x_ABI_CWindows_CUI_CXaml_CISetterBase* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CUI__CXaml__CSetterBase* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CUI__CXaml__CSetterBase* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CUI__CXaml__CSetterBase* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CISetterBase** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CUI__CXaml__CSetterBase* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CISetterBase** items);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CSetterBaseVtbl;

interface __FIVector_1_Windows__CUI__CXaml__CSetterBase
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CSetterBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CStateTriggerBase;

typedef struct __FIVector_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase** items);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl;

interface __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CXaml__CTriggerAction __FIVector_1_Windows__CUI__CXaml__CTriggerAction;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CTriggerAction;

typedef struct __FIVector_1_Windows__CUI__CXaml__CTriggerActionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CUI__CXaml__CTriggerAction* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CUI__CXaml__CTriggerAction* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CUI__CXaml__CTriggerAction* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CUI__CXaml__CTriggerAction* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CUI__CXaml__CTriggerAction* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CUI__CXaml__CTriggerAction* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CUI__CXaml__CTriggerAction* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CITriggerAction** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CUI__CXaml__CTriggerAction* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CUI__CXaml__CTriggerAction* This,
        __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CUI__CXaml__CTriggerAction* This,
        __x_ABI_CWindows_CUI_CXaml_CITriggerAction* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CUI__CXaml__CTriggerAction* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CITriggerAction* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CUI__CXaml__CTriggerAction* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CITriggerAction* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CUI__CXaml__CTriggerAction* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CUI__CXaml__CTriggerAction* This,
        __x_ABI_CWindows_CUI_CXaml_CITriggerAction* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CUI__CXaml__CTriggerAction* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CUI__CXaml__CTriggerAction* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CUI__CXaml__CTriggerAction* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CITriggerAction** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CUI__CXaml__CTriggerAction* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CITriggerAction** items);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CTriggerActionVtbl;

interface __FIVector_1_Windows__CUI__CXaml__CTriggerAction
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CTriggerActionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CXaml__CTriggerBase __FIVector_1_Windows__CUI__CXaml__CTriggerBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CTriggerBase;

typedef struct __FIVector_1_Windows__CUI__CXaml__CTriggerBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CUI__CXaml__CTriggerBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CUI__CXaml__CTriggerBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CUI__CXaml__CTriggerBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CUI__CXaml__CTriggerBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CUI__CXaml__CTriggerBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CUI__CXaml__CTriggerBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CUI__CXaml__CTriggerBase* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CITriggerBase** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CUI__CXaml__CTriggerBase* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CUI__CXaml__CTriggerBase* This,
        __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CUI__CXaml__CTriggerBase* This,
        __x_ABI_CWindows_CUI_CXaml_CITriggerBase* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CUI__CXaml__CTriggerBase* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CITriggerBase* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CUI__CXaml__CTriggerBase* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CITriggerBase* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CUI__CXaml__CTriggerBase* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CUI__CXaml__CTriggerBase* This,
        __x_ABI_CWindows_CUI_CXaml_CITriggerBase* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CUI__CXaml__CTriggerBase* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CUI__CXaml__CTriggerBase* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CUI__CXaml__CTriggerBase* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CITriggerBase** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CUI__CXaml__CTriggerBase* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CITriggerBase** items);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CTriggerBaseVtbl;

interface __FIVector_1_Windows__CUI__CXaml__CTriggerBase
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CTriggerBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CXaml__CUIElement __FIVector_1_Windows__CUI__CXaml__CUIElement;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CUIElement;

typedef struct __FIVector_1_Windows__CUI__CXaml__CUIElementVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CUI__CXaml__CUIElement* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CUI__CXaml__CUIElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CUI__CXaml__CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CUI__CXaml__CUIElement* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CUI__CXaml__CUIElement* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CUI__CXaml__CUIElement* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CUI__CXaml__CUIElement* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CUI__CXaml__CUIElement* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CUI__CXaml__CUIElement* This,
        __FIVectorView_1_Windows__CUI__CXaml__CUIElement** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CUI__CXaml__CUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CUI__CXaml__CUIElement* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CUI__CXaml__CUIElement* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CUI__CXaml__CUIElement* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CUI__CXaml__CUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CUI__CXaml__CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CUI__CXaml__CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CUI__CXaml__CUIElement* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CUI__CXaml__CUIElement* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** items);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CUIElementVtbl;

interface __FIVector_1_Windows__CUI__CXaml__CUIElement
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CUIElementVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CXaml__CVisualState __FIVector_1_Windows__CUI__CXaml__CVisualState;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CVisualState;

typedef struct __FIVector_1_Windows__CUI__CXaml__CVisualStateVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CUI__CXaml__CVisualState* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CUI__CXaml__CVisualState* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CUI__CXaml__CVisualState* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CUI__CXaml__CVisualState* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CUI__CXaml__CVisualState* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CUI__CXaml__CVisualState* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CUI__CXaml__CVisualState* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CUI__CXaml__CVisualState* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CUI__CXaml__CVisualState* This,
        __FIVectorView_1_Windows__CUI__CXaml__CVisualState** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CUI__CXaml__CVisualState* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CUI__CXaml__CVisualState* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CUI__CXaml__CVisualState* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CUI__CXaml__CVisualState* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CUI__CXaml__CVisualState* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CUI__CXaml__CVisualState* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CUI__CXaml__CVisualState* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CUI__CXaml__CVisualState* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CUI__CXaml__CVisualState* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState** items);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CVisualStateVtbl;

interface __FIVector_1_Windows__CUI__CXaml__CVisualState
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CVisualStateVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CVisualStateGroup;

typedef struct __FIVector_1_Windows__CUI__CXaml__CVisualStateGroupVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup** items);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CVisualStateGroupVtbl;

interface __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CVisualStateGroupVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CXaml__CVisualTransition __FIVector_1_Windows__CUI__CXaml__CVisualTransition;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CVisualTransition;

typedef struct __FIVector_1_Windows__CUI__CXaml__CVisualTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CUI__CXaml__CVisualTransition* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CUI__CXaml__CVisualTransition* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CUI__CXaml__CVisualTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CUI__CXaml__CVisualTransition* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CUI__CXaml__CVisualTransition* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CUI__CXaml__CVisualTransition* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CUI__CXaml__CVisualTransition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIVisualTransition** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CUI__CXaml__CVisualTransition* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CUI__CXaml__CVisualTransition* This,
        __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CUI__CXaml__CVisualTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualTransition* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CUI__CXaml__CVisualTransition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIVisualTransition* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CUI__CXaml__CVisualTransition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIVisualTransition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CUI__CXaml__CVisualTransition* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CUI__CXaml__CVisualTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualTransition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CUI__CXaml__CVisualTransition* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CUI__CXaml__CVisualTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CUI__CXaml__CVisualTransition* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIVisualTransition** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CUI__CXaml__CVisualTransition* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIVisualTransition** items);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CVisualTransitionVtbl;

interface __FIVector_1_Windows__CUI__CXaml__CVisualTransition
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CVisualTransitionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if !defined(____FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
#define ____FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

typedef interface __FIEventHandler_1_IInspectable __FIEventHandler_1_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIEventHandler_1_IInspectable;

typedef struct __FIEventHandler_1_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIEventHandler_1_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIEventHandler_1_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIEventHandler_1_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIEventHandler_1_IInspectable* This,
        IInspectable* sender,
        IInspectable* args);

    END_INTERFACE
} __FIEventHandler_1_IInspectableVtbl;

interface __FIEventHandler_1_IInspectable
{
    CONST_VTBL struct __FIEventHandler_1_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIEventHandler_1_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIEventHandler_1_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIEventHandler_1_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIEventHandler_1_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000
#if !defined(____FIReference_1_Windows__CFoundation__CRect_INTERFACE_DEFINED__)
#define ____FIReference_1_Windows__CFoundation__CRect_INTERFACE_DEFINED__

typedef interface __FIReference_1_Windows__CFoundation__CRect __FIReference_1_Windows__CFoundation__CRect;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Windows__CFoundation__CRect;

typedef struct __FIReference_1_Windows__CFoundation__CRectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_Windows__CFoundation__CRect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_Windows__CFoundation__CRect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_Windows__CFoundation__CRect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_Windows__CFoundation__CRect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_Windows__CFoundation__CRect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_Windows__CFoundation__CRect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_Windows__CFoundation__CRect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* result);

    END_INTERFACE
} __FIReference_1_Windows__CFoundation__CRectVtbl;

interface __FIReference_1_Windows__CFoundation__CRect
{
    CONST_VTBL struct __FIReference_1_Windows__CFoundation__CRectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_Windows__CFoundation__CRect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_Windows__CFoundation__CRect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_Windows__CFoundation__CRect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_Windows__CFoundation__CRect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_Windows__CFoundation__CRect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_Windows__CFoundation__CRect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_Windows__CFoundation__CRect_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_Windows__CFoundation__CRect_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIReference_1_Windows__CUI__CColor_INTERFACE_DEFINED__)
#define ____FIReference_1_Windows__CUI__CColor_INTERFACE_DEFINED__

typedef interface __FIReference_1_Windows__CUI__CColor __FIReference_1_Windows__CUI__CColor;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Windows__CUI__CColor;

typedef struct __FIReference_1_Windows__CUI__CColorVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_Windows__CUI__CColor* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_Windows__CUI__CColor* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_Windows__CUI__CColor* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_Windows__CUI__CColor* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_Windows__CUI__CColor* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_Windows__CUI__CColor* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_Windows__CUI__CColor* This,
        struct __x_ABI_CWindows_CUI_CColor* result);

    END_INTERFACE
} __FIReference_1_Windows__CUI__CColorVtbl;

interface __FIReference_1_Windows__CUI__CColor
{
    CONST_VTBL struct __FIReference_1_Windows__CUI__CColorVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_Windows__CUI__CColor_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_Windows__CUI__CColor_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_Windows__CUI__CColor_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_Windows__CUI__CColor_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_Windows__CUI__CColor_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_Windows__CUI__CColor_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_Windows__CUI__CColor_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_Windows__CUI__CColor_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIContextRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIContextRequestedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIContextRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIContextRequestedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIContextRequestedEventArgs_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIContextRequestedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIGettingFocusEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIGettingFocusEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIGettingFocusEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIGettingFocusEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIGettingFocusEventArgs_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIGettingFocusEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CILosingFocusEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CILosingFocusEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CILosingFocusEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CILosingFocusEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CILosingFocusEventArgs_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CInput_CILosingFocusEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIXamlRoot* sender,
        __x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs __x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs __x_ABI_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs __x_ABI_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs __x_ABI_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs __x_ABI_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs __x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs __x_ABI_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs __x_ABI_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs __x_ABI_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage;

#endif // ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackageView_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackageView_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackageView __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackageView;

#endif // ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackageView_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CDragDropModifiers __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CDragDropModifiers;

#ifndef ____x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs __x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs __x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs __x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 __x_ABI_CWindows_CFoundation_CNumerics_CVector2;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 __x_ABI_CWindows_CFoundation_CNumerics_CVector3;

typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap;

#endif // ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositor __x_ABI_CWindows_CUI_CComposition_CICompositor;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIAnimationObject __x_ABI_CWindows_CUI_CComposition_CIAnimationObject;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CComposition_CIVisualElement __x_ABI_CWindows_CUI_CComposition_CIVisualElement;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CCore_CICoreDispatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CICoreDispatcher_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CCore_CICoreDispatcher __x_ABI_CWindows_CUI_CCore_CICoreDispatcher;

#endif // ____x_ABI_CWindows_CUI_CCore_CICoreDispatcher_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CCore_CICoreWindow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CICoreWindow_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CCore_CICoreWindow __x_ABI_CWindows_CUI_CCore_CICoreWindow;

#endif // ____x_ABI_CWindows_CUI_CCore_CICoreWindow_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CCore_CICoreWindowEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CICoreWindowEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CCore_CICoreWindowEventArgs __x_ABI_CWindows_CUI_CCore_CICoreWindowEventArgs;

#endif // ____x_ABI_CWindows_CUI_CCore_CICoreWindowEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CCore_CIVisibilityChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CIVisibilityChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CCore_CIVisibilityChangedEventArgs __x_ABI_CWindows_CUI_CCore_CIVisibilityChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CCore_CIVisibilityChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CCore_CIWindowActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CIWindowActivatedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CCore_CIWindowActivatedEventArgs __x_ABI_CWindows_CUI_CCore_CIWindowActivatedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CCore_CIWindowActivatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CCore_CIWindowSizeChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CIWindowSizeChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CCore_CIWindowSizeChangedEventArgs __x_ABI_CWindows_CUI_CCore_CIWindowSizeChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CCore_CIWindowSizeChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CIPointerPoint_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CIPointerPoint_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CInput_CIPointerPoint __x_ABI_CWindows_CUI_CInput_CIPointerPoint;

#endif // ____x_ABI_CWindows_CUI_CInput_CIPointerPoint_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CIUIContext_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CIUIContext_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CIUIContext __x_ABI_CWindows_CUI_CIUIContext;

#endif // ____x_ABI_CWindows_CUI_CIUIContext_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl __x_ABI_CWindows_CUI_CXaml_CControls_CIControl;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedEventHandler __x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingEventHandler __x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyEventHandler __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyEventHandler_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CInput_CKeyTipPlacementMode __x_ABI_CWindows_CUI_CXaml_CInput_CKeyTipPlacementMode;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardAcceleratorPlacementMode __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardAcceleratorPlacementMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardNavigationMode __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardNavigationMode;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedEventHandler __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaEventHandler __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CInput_CManipulationModes __x_ABI_CWindows_CUI_CXaml_CInput_CManipulationModes;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedEventHandler __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingEventHandler __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedEventHandler __x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CITappedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CITappedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CITappedEventHandler __x_ABI_CWindows_CUI_CXaml_CInput_CITappedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CITappedEventHandler_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusKeyboardNavigationMode __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusKeyboardNavigationMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy;

typedef struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;

typedef struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition** result);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;

typedef struct __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** items);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CElementCompositeMode __x_ABI_CWindows_CUI_CXaml_CMedia_CElementCompositeMode;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CMedia3D_CITransform3D_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CMedia3D_CITransform3D_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CMedia3D_CITransform3D __x_ABI_CWindows_CUI_CXaml_CMedia_CMedia3D_CITransform3D;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CMedia3D_CITransform3D_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIShadow __x_ABI_CWindows_CUI_CXaml_CMedia_CIShadow;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CApplicationHighContrastAdjustment __x_ABI_CWindows_CUI_CXaml_CApplicationHighContrastAdjustment;

typedef enum __x_ABI_CWindows_CUI_CXaml_CApplicationRequiresPointerMode __x_ABI_CWindows_CUI_CXaml_CApplicationRequiresPointerMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CApplicationTheme __x_ABI_CWindows_CUI_CXaml_CApplicationTheme;

typedef enum __x_ABI_CWindows_CUI_CXaml_CDurationType __x_ABI_CWindows_CUI_CXaml_CDurationType;

typedef enum __x_ABI_CWindows_CUI_CXaml_CElementHighContrastAdjustment __x_ABI_CWindows_CUI_CXaml_CElementHighContrastAdjustment;

typedef enum __x_ABI_CWindows_CUI_CXaml_CElementSoundKind __x_ABI_CWindows_CUI_CXaml_CElementSoundKind;

typedef enum __x_ABI_CWindows_CUI_CXaml_CElementSoundPlayerState __x_ABI_CWindows_CUI_CXaml_CElementSoundPlayerState;

typedef enum __x_ABI_CWindows_CUI_CXaml_CElementSpatialAudioMode __x_ABI_CWindows_CUI_CXaml_CElementSpatialAudioMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CElementTheme __x_ABI_CWindows_CUI_CXaml_CElementTheme;

typedef enum __x_ABI_CWindows_CUI_CXaml_CFlowDirection __x_ABI_CWindows_CUI_CXaml_CFlowDirection;

typedef enum __x_ABI_CWindows_CUI_CXaml_CFocusVisualKind __x_ABI_CWindows_CUI_CXaml_CFocusVisualKind;

typedef enum __x_ABI_CWindows_CUI_CXaml_CGridUnitType __x_ABI_CWindows_CUI_CXaml_CGridUnitType;

typedef enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment;

typedef enum __x_ABI_CWindows_CUI_CXaml_CVector3TransitionComponents __x_ABI_CWindows_CUI_CXaml_CVector3TransitionComponents;

typedef enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment;

typedef enum __x_ABI_CWindows_CUI_CXaml_CVisibility __x_ABI_CWindows_CUI_CXaml_CVisibility;

typedef struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius __x_ABI_CWindows_CUI_CXaml_CCornerRadius;

typedef struct __x_ABI_CWindows_CUI_CXaml_CDuration __x_ABI_CWindows_CUI_CXaml_CDuration;

typedef struct __x_ABI_CWindows_CUI_CXaml_CGridLength __x_ABI_CWindows_CUI_CXaml_CGridLength;

typedef struct __x_ABI_CWindows_CUI_CXaml_CThickness __x_ABI_CWindows_CUI_CXaml_CThickness;

/*
 *
 * Struct Windows.UI.Xaml.ApplicationHighContrastAdjustment
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
enum __x_ABI_CWindows_CUI_CXaml_CApplicationHighContrastAdjustment
{
    ApplicationHighContrastAdjustment_None = 0,
    ApplicationHighContrastAdjustment_Auto = 0xffffffff,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Struct Windows.UI.Xaml.ApplicationRequiresPointerMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
enum __x_ABI_CWindows_CUI_CXaml_CApplicationRequiresPointerMode
{
    ApplicationRequiresPointerMode_Auto = 0,
    ApplicationRequiresPointerMode_WhenRequested = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.UI.Xaml.ApplicationTheme
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CApplicationTheme
{
    ApplicationTheme_Light = 0,
    ApplicationTheme_Dark = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.AutomationTextAttributesEnum
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CAutomationTextAttributesEnum
{
    AutomationTextAttributesEnum_AnimationStyleAttribute = 40000,
    AutomationTextAttributesEnum_BackgroundColorAttribute = 40001,
    AutomationTextAttributesEnum_BulletStyleAttribute = 40002,
    AutomationTextAttributesEnum_CapStyleAttribute = 40003,
    AutomationTextAttributesEnum_CultureAttribute = 40004,
    AutomationTextAttributesEnum_FontNameAttribute = 40005,
    AutomationTextAttributesEnum_FontSizeAttribute = 40006,
    AutomationTextAttributesEnum_FontWeightAttribute = 40007,
    AutomationTextAttributesEnum_ForegroundColorAttribute = 40008,
    AutomationTextAttributesEnum_HorizontalTextAlignmentAttribute = 40009,
    AutomationTextAttributesEnum_IndentationFirstLineAttribute = 40010,
    AutomationTextAttributesEnum_IndentationLeadingAttribute = 40011,
    AutomationTextAttributesEnum_IndentationTrailingAttribute = 40012,
    AutomationTextAttributesEnum_IsHiddenAttribute = 40013,
    AutomationTextAttributesEnum_IsItalicAttribute = 40014,
    AutomationTextAttributesEnum_IsReadOnlyAttribute = 40015,
    AutomationTextAttributesEnum_IsSubscriptAttribute = 40016,
    AutomationTextAttributesEnum_IsSuperscriptAttribute = 40017,
    AutomationTextAttributesEnum_MarginBottomAttribute = 40018,
    AutomationTextAttributesEnum_MarginLeadingAttribute = 40019,
    AutomationTextAttributesEnum_MarginTopAttribute = 40020,
    AutomationTextAttributesEnum_MarginTrailingAttribute = 40021,
    AutomationTextAttributesEnum_OutlineStylesAttribute = 40022,
    AutomationTextAttributesEnum_OverlineColorAttribute = 40023,
    AutomationTextAttributesEnum_OverlineStyleAttribute = 40024,
    AutomationTextAttributesEnum_StrikethroughColorAttribute = 40025,
    AutomationTextAttributesEnum_StrikethroughStyleAttribute = 40026,
    AutomationTextAttributesEnum_TabsAttribute = 40027,
    AutomationTextAttributesEnum_TextFlowDirectionsAttribute = 40028,
    AutomationTextAttributesEnum_UnderlineColorAttribute = 40029,
    AutomationTextAttributesEnum_UnderlineStyleAttribute = 40030,
    AutomationTextAttributesEnum_AnnotationTypesAttribute = 40031,
    AutomationTextAttributesEnum_AnnotationObjectsAttribute = 40032,
    AutomationTextAttributesEnum_StyleNameAttribute = 40033,
    AutomationTextAttributesEnum_StyleIdAttribute = 40034,
    AutomationTextAttributesEnum_LinkAttribute = 40035,
    AutomationTextAttributesEnum_IsActiveAttribute = 40036,
    AutomationTextAttributesEnum_SelectionActiveEndAttribute = 40037,
    AutomationTextAttributesEnum_CaretPositionAttribute = 40038,
    AutomationTextAttributesEnum_CaretBidiModeAttribute = 40039,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.DurationType
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CDurationType
{
    DurationType_Automatic = 0,
    DurationType_TimeSpan = 1,
    DurationType_Forever = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.ElementHighContrastAdjustment
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
enum __x_ABI_CWindows_CUI_CXaml_CElementHighContrastAdjustment
{
    ElementHighContrastAdjustment_None = 0,
    ElementHighContrastAdjustment_Application = 0x80000000,
    ElementHighContrastAdjustment_Auto = 0xffffffff,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Struct Windows.UI.Xaml.ElementSoundKind
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
enum __x_ABI_CWindows_CUI_CXaml_CElementSoundKind
{
    ElementSoundKind_Focus = 0,
    ElementSoundKind_Invoke = 1,
    ElementSoundKind_Show = 2,
    ElementSoundKind_Hide = 3,
    ElementSoundKind_MovePrevious = 4,
    ElementSoundKind_MoveNext = 5,
    ElementSoundKind_GoBack = 6,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.UI.Xaml.ElementSoundMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
enum __x_ABI_CWindows_CUI_CXaml_CElementSoundMode
{
    ElementSoundMode_Default = 0,
    ElementSoundMode_FocusOnly = 1,
    ElementSoundMode_Off = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.UI.Xaml.ElementSoundPlayerState
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
enum __x_ABI_CWindows_CUI_CXaml_CElementSoundPlayerState
{
    ElementSoundPlayerState_Auto = 0,
    ElementSoundPlayerState_Off = 1,
    ElementSoundPlayerState_On = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.UI.Xaml.ElementSpatialAudioMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
enum __x_ABI_CWindows_CUI_CXaml_CElementSpatialAudioMode
{
    ElementSpatialAudioMode_Auto = 0,
    ElementSpatialAudioMode_Off = 1,
    ElementSpatialAudioMode_On = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Struct Windows.UI.Xaml.ElementTheme
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CElementTheme
{
    ElementTheme_Default = 0,
    ElementTheme_Light = 1,
    ElementTheme_Dark = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.FlowDirection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CFlowDirection
{
    FlowDirection_LeftToRight = 0,
    FlowDirection_RightToLeft = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.FocusState
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CFocusState
{
    FocusState_Unfocused = 0,
    FocusState_Pointer = 1,
    FocusState_Keyboard = 2,
    FocusState_Programmatic = 3,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.FocusVisualKind
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
enum __x_ABI_CWindows_CUI_CXaml_CFocusVisualKind
{
    FocusVisualKind_DottedLine = 0,
    FocusVisualKind_HighVisibility = 1,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
    FocusVisualKind_Reveal = 2,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.UI.Xaml.FontCapitals
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CFontCapitals
{
    FontCapitals_Normal = 0,
    FontCapitals_AllSmallCaps = 1,
    FontCapitals_SmallCaps = 2,
    FontCapitals_AllPetiteCaps = 3,
    FontCapitals_PetiteCaps = 4,
    FontCapitals_Unicase = 5,
    FontCapitals_Titling = 6,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.FontEastAsianLanguage
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CFontEastAsianLanguage
{
    FontEastAsianLanguage_Normal = 0,
    FontEastAsianLanguage_HojoKanji = 1,
    FontEastAsianLanguage_Jis04 = 2,
    FontEastAsianLanguage_Jis78 = 3,
    FontEastAsianLanguage_Jis83 = 4,
    FontEastAsianLanguage_Jis90 = 5,
    FontEastAsianLanguage_NlcKanji = 6,
    FontEastAsianLanguage_Simplified = 7,
    FontEastAsianLanguage_Traditional = 8,
    FontEastAsianLanguage_TraditionalNames = 9,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.FontEastAsianWidths
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CFontEastAsianWidths
{
    FontEastAsianWidths_Normal = 0,
    FontEastAsianWidths_Full = 1,
    FontEastAsianWidths_Half = 2,
    FontEastAsianWidths_Proportional = 3,
    FontEastAsianWidths_Quarter = 4,
    FontEastAsianWidths_Third = 5,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.FontFraction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CFontFraction
{
    FontFraction_Normal = 0,
    FontFraction_Stacked = 1,
    FontFraction_Slashed = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.FontNumeralAlignment
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CFontNumeralAlignment
{
    FontNumeralAlignment_Normal = 0,
    FontNumeralAlignment_Proportional = 1,
    FontNumeralAlignment_Tabular = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.FontNumeralStyle
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CFontNumeralStyle
{
    FontNumeralStyle_Normal = 0,
    FontNumeralStyle_Lining = 1,
    FontNumeralStyle_OldStyle = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.FontVariants
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CFontVariants
{
    FontVariants_Normal = 0,
    FontVariants_Superscript = 1,
    FontVariants_Subscript = 2,
    FontVariants_Ordinal = 3,
    FontVariants_Inferior = 4,
    FontVariants_Ruby = 5,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.GridUnitType
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CGridUnitType
{
    GridUnitType_Auto = 0,
    GridUnitType_Pixel = 1,
    GridUnitType_Star = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.HorizontalAlignment
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment
{
    HorizontalAlignment_Left = 0,
    HorizontalAlignment_Center = 1,
    HorizontalAlignment_Right = 2,
    HorizontalAlignment_Stretch = 3,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.LineStackingStrategy
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy
{
    LineStackingStrategy_MaxHeight = 0,
    LineStackingStrategy_BlockLineHeight = 1,
    LineStackingStrategy_BaselineToBaseline = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.OpticalMarginAlignment
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment
{
    OpticalMarginAlignment_None = 0,
    OpticalMarginAlignment_TrimSideBearings = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.TextAlignment
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment
{
    TextAlignment_Center = 0,
    TextAlignment_Left = 1,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
    TextAlignment_Start = 1,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
    TextAlignment_Right = 2,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
    TextAlignment_End = 2,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
    TextAlignment_Justify = 3,
    TextAlignment_DetectFromContent = 4,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.TextLineBounds
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CTextLineBounds
{
    TextLineBounds_Full = 0,
    TextLineBounds_TrimToCapHeight = 1,
    TextLineBounds_TrimToBaseline = 2,
    TextLineBounds_Tight = 3,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.TextReadingOrder
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder
{
    TextReadingOrder_Default
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    DEPRECATEDENUMERATOR("Consider using UseFlowDirection, which is an improved version of Default. For more info, see MSDN.")
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    = 0,
    TextReadingOrder_UseFlowDirection = 0,
    TextReadingOrder_DetectFromContent = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.TextTrimming
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CTextTrimming
{
    TextTrimming_None = 0,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    TextTrimming_CharacterEllipsis = 1,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    TextTrimming_WordEllipsis = 2,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    TextTrimming_Clip = 3,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.TextWrapping
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CTextWrapping
{
    TextWrapping_NoWrap = 1,
    TextWrapping_Wrap = 2,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    TextWrapping_WrapWholeWords = 3,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.Vector3TransitionComponents
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
enum __x_ABI_CWindows_CUI_CXaml_CVector3TransitionComponents
{
    Vector3TransitionComponents_X = 0x1,
    Vector3TransitionComponents_Y = 0x2,
    Vector3TransitionComponents_Z = 0x4,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Struct Windows.UI.Xaml.VerticalAlignment
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment
{
    VerticalAlignment_Top = 0,
    VerticalAlignment_Center = 1,
    VerticalAlignment_Bottom = 2,
    VerticalAlignment_Stretch = 3,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.Visibility
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CUI_CXaml_CVisibility
{
    Visibility_Visible = 0,
    Visibility_Collapsed = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.CornerRadius
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius
{
    DOUBLE TopLeft;
    DOUBLE TopRight;
    DOUBLE BottomRight;
    DOUBLE BottomLeft;
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.Duration
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
struct __x_ABI_CWindows_CUI_CXaml_CDuration
{
    struct __x_ABI_CWindows_CFoundation_CTimeSpan TimeSpan;
    enum __x_ABI_CWindows_CUI_CXaml_CDurationType Type;
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.GridLength
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
struct __x_ABI_CWindows_CUI_CXaml_CGridLength
{
    DOUBLE Value;
    enum __x_ABI_CWindows_CUI_CXaml_CGridUnitType GridUnitType;
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.UI.Xaml.Thickness
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
struct __x_ABI_CWindows_CUI_CXaml_CThickness
{
    DOUBLE Left;
    DOUBLE Top;
    DOUBLE Right;
    DOUBLE Bottom;
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.ApplicationInitializationCallback
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback* This,
        __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams* p);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_Invoke(This, p) \
    ((This)->lpVtbl->Invoke(This, p))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.BindingFailedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandlerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs* e);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandlerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandlerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_Invoke(This, sender, e) \
    ((This)->lpVtbl->Invoke(This, sender, e))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.CreateDefaultValueCallback
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallbackVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback* This,
        IInspectable** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallbackVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallbackVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_Invoke(This, result) \
    ((This)->lpVtbl->Invoke(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.DependencyPropertyChangedCallback
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallbackVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* sender,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* dp);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallbackVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallbackVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_Invoke(This, sender, dp) \
    ((This)->lpVtbl->Invoke(This, sender, dp))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.DependencyPropertyChangedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandlerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs* e);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandlerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandlerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_Invoke(This, sender, e) \
    ((This)->lpVtbl->Invoke(This, sender, e))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.DragEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDragEventHandlerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDragEventHandler* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDragEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDragEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CIDragEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs* e);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDragEventHandlerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDragEventHandlerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_Invoke(This, sender, e) \
    ((This)->lpVtbl->Invoke(This, sender, e))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.EnteredBackgroundEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandlerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs* e);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandlerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandlerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler_Invoke(This, sender, e) \
    ((This)->lpVtbl->Invoke(This, sender, e))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Delegate Windows.UI.Xaml.ExceptionRoutedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandlerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs* e);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandlerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandlerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_Invoke(This, sender, e) \
    ((This)->lpVtbl->Invoke(This, sender, e))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.LeavingBackgroundEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandlerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs* e);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandlerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandlerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler_Invoke(This, sender, e) \
    ((This)->lpVtbl->Invoke(This, sender, e))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Delegate Windows.UI.Xaml.PropertyChangedCallback
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallbackVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* d,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs* e);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallbackVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallbackVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_Invoke(This, d, e) \
    ((This)->lpVtbl->Invoke(This, d, e))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.RoutedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandlerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs* e);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandlerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandlerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_Invoke(This, sender, e) \
    ((This)->lpVtbl->Invoke(This, sender, e))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.SizeChangedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandlerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs* e);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandlerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandlerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_Invoke(This, sender, e) \
    ((This)->lpVtbl->Invoke(This, sender, e))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.SuspendingEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandlerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs* e);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandlerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandlerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_Invoke(This, sender, e) \
    ((This)->lpVtbl->Invoke(This, sender, e))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.UnhandledExceptionEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandlerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs* e);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandlerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandlerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_Invoke(This, sender, e) \
    ((This)->lpVtbl->Invoke(This, sender, e))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.VisualStateChangedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandlerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs* e);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandlerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandlerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_Invoke(This, sender, e) \
    ((This)->lpVtbl->Invoke(This, sender, e))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.WindowActivatedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandlerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CCore_CIWindowActivatedEventArgs* e);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandlerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandlerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_Invoke(This, sender, e) \
    ((This)->lpVtbl->Invoke(This, sender, e))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.WindowClosedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandlerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CCore_CICoreWindowEventArgs* e);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandlerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandlerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_Invoke(This, sender, e) \
    ((This)->lpVtbl->Invoke(This, sender, e))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.WindowSizeChangedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandlerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CCore_CIWindowSizeChangedEventArgs* e);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandlerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandlerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_Invoke(This, sender, e) \
    ((This)->lpVtbl->Invoke(This, sender, e))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.UI.Xaml.WindowVisibilityChangedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandlerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CCore_CIVisibilityChangedEventArgs* e);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandlerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandlerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_Invoke(This, sender, e) \
    ((This)->lpVtbl->Invoke(This, sender, e))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IAdaptiveTrigger
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.AdaptiveTrigger
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IAdaptiveTrigger[] = L"Windows.UI.Xaml.IAdaptiveTrigger";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MinWindowWidth)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MinWindowWidth)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MinWindowHeight)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MinWindowHeight)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger* This,
        DOUBLE value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_get_MinWindowWidth(This, value) \
    ((This)->lpVtbl->get_MinWindowWidth(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_put_MinWindowWidth(This, value) \
    ((This)->lpVtbl->put_MinWindowWidth(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_get_MinWindowHeight(This, value) \
    ((This)->lpVtbl->get_MinWindowHeight(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_put_MinWindowHeight(This, value) \
    ((This)->lpVtbl->put_MinWindowHeight(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IAdaptiveTriggerFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.AdaptiveTrigger
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IAdaptiveTriggerFactory[] = L"Windows.UI.Xaml.IAdaptiveTriggerFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IAdaptiveTriggerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.AdaptiveTrigger
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IAdaptiveTriggerStatics[] = L"Windows.UI.Xaml.IAdaptiveTriggerStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MinWindowWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinWindowHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_get_MinWindowWidthProperty(This, value) \
    ((This)->lpVtbl->get_MinWindowWidthProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_get_MinWindowHeightProperty(This, value) \
    ((This)->lpVtbl->get_MinWindowHeightProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IApplication
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Application
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplication_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIApplication_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplication[] = L"Windows.UI.Xaml.IApplication";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIApplicationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIApplication* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIApplication* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIApplication* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIApplication* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIApplication* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIApplication* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Resources)(__x_ABI_CWindows_CUI_CXaml_CIApplication* This,
        __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary** value);
    HRESULT (STDMETHODCALLTYPE* put_Resources)(__x_ABI_CWindows_CUI_CXaml_CIApplication* This,
        __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary* value);
    HRESULT (STDMETHODCALLTYPE* get_DebugSettings)(__x_ABI_CWindows_CUI_CXaml_CIApplication* This,
        __x_ABI_CWindows_CUI_CXaml_CIDebugSettings** value);
    HRESULT (STDMETHODCALLTYPE* get_RequestedTheme)(__x_ABI_CWindows_CUI_CXaml_CIApplication* This,
        enum __x_ABI_CWindows_CUI_CXaml_CApplicationTheme* value);
    HRESULT (STDMETHODCALLTYPE* put_RequestedTheme)(__x_ABI_CWindows_CUI_CXaml_CIApplication* This,
        enum __x_ABI_CWindows_CUI_CXaml_CApplicationTheme value);
    HRESULT (STDMETHODCALLTYPE* add_UnhandledException)(__x_ABI_CWindows_CUI_CXaml_CIApplication* This,
        __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_UnhandledException)(__x_ABI_CWindows_CUI_CXaml_CIApplication* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Suspending)(__x_ABI_CWindows_CUI_CXaml_CIApplication* This,
        __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Suspending)(__x_ABI_CWindows_CUI_CXaml_CIApplication* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Resuming)(__x_ABI_CWindows_CUI_CXaml_CIApplication* This,
        __FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Resuming)(__x_ABI_CWindows_CUI_CXaml_CIApplication* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Exit)(__x_ABI_CWindows_CUI_CXaml_CIApplication* This);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIApplicationVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIApplication
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIApplicationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_get_Resources(This, value) \
    ((This)->lpVtbl->get_Resources(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_put_Resources(This, value) \
    ((This)->lpVtbl->put_Resources(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_get_DebugSettings(This, value) \
    ((This)->lpVtbl->get_DebugSettings(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_get_RequestedTheme(This, value) \
    ((This)->lpVtbl->get_RequestedTheme(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_put_RequestedTheme(This, value) \
    ((This)->lpVtbl->put_RequestedTheme(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_add_UnhandledException(This, handler, token) \
    ((This)->lpVtbl->add_UnhandledException(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_remove_UnhandledException(This, token) \
    ((This)->lpVtbl->remove_UnhandledException(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_add_Suspending(This, handler, token) \
    ((This)->lpVtbl->add_Suspending(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_remove_Suspending(This, token) \
    ((This)->lpVtbl->remove_Suspending(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_add_Resuming(This, handler, token) \
    ((This)->lpVtbl->add_Resuming(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_remove_Resuming(This, token) \
    ((This)->lpVtbl->remove_Resuming(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_Exit(This) \
    ((This)->lpVtbl->Exit(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplication;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplication_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IApplication2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Application
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplication2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIApplication2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplication2[] = L"Windows.UI.Xaml.IApplication2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIApplication2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIApplication2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIApplication2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIApplication2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIApplication2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIApplication2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIApplication2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FocusVisualKind)(__x_ABI_CWindows_CUI_CXaml_CIApplication2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CFocusVisualKind* value);
    HRESULT (STDMETHODCALLTYPE* put_FocusVisualKind)(__x_ABI_CWindows_CUI_CXaml_CIApplication2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CFocusVisualKind value);
    HRESULT (STDMETHODCALLTYPE* get_RequiresPointerMode)(__x_ABI_CWindows_CUI_CXaml_CIApplication2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CApplicationRequiresPointerMode* value);
    HRESULT (STDMETHODCALLTYPE* put_RequiresPointerMode)(__x_ABI_CWindows_CUI_CXaml_CIApplication2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CApplicationRequiresPointerMode value);
    HRESULT (STDMETHODCALLTYPE* add_LeavingBackground)(__x_ABI_CWindows_CUI_CXaml_CIApplication2* This,
        __x_ABI_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LeavingBackground)(__x_ABI_CWindows_CUI_CXaml_CIApplication2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_EnteredBackground)(__x_ABI_CWindows_CUI_CXaml_CIApplication2* This,
        __x_ABI_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_EnteredBackground)(__x_ABI_CWindows_CUI_CXaml_CIApplication2* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIApplication2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIApplication2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIApplication2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIApplication2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication2_get_FocusVisualKind(This, value) \
    ((This)->lpVtbl->get_FocusVisualKind(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication2_put_FocusVisualKind(This, value) \
    ((This)->lpVtbl->put_FocusVisualKind(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication2_get_RequiresPointerMode(This, value) \
    ((This)->lpVtbl->get_RequiresPointerMode(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication2_put_RequiresPointerMode(This, value) \
    ((This)->lpVtbl->put_RequiresPointerMode(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication2_add_LeavingBackground(This, handler, token) \
    ((This)->lpVtbl->add_LeavingBackground(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication2_remove_LeavingBackground(This, token) \
    ((This)->lpVtbl->remove_LeavingBackground(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication2_add_EnteredBackground(This, handler, token) \
    ((This)->lpVtbl->add_EnteredBackground(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication2_remove_EnteredBackground(This, token) \
    ((This)->lpVtbl->remove_EnteredBackground(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplication2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplication2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IApplication3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Application
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplication3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIApplication3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplication3[] = L"Windows.UI.Xaml.IApplication3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIApplication3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIApplication3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIApplication3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIApplication3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIApplication3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIApplication3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIApplication3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_HighContrastAdjustment)(__x_ABI_CWindows_CUI_CXaml_CIApplication3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CApplicationHighContrastAdjustment* value);
    HRESULT (STDMETHODCALLTYPE* put_HighContrastAdjustment)(__x_ABI_CWindows_CUI_CXaml_CIApplication3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CApplicationHighContrastAdjustment value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIApplication3Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIApplication3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIApplication3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIApplication3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication3_get_HighContrastAdjustment(This, value) \
    ((This)->lpVtbl->get_HighContrastAdjustment(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIApplication3_put_HighContrastAdjustment(This, value) \
    ((This)->lpVtbl->put_HighContrastAdjustment(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplication3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplication3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Xaml.IApplicationFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Application
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplicationFactory[] = L"Windows.UI.Xaml.IApplicationFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIApplicationFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIApplicationFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIApplicationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIApplicationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIApplicationFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIApplicationFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIApplicationFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIApplicationFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIApplication** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIApplicationFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIApplicationFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplicationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IApplicationInitializationCallbackParams
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ApplicationInitializationCallbackParams
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplicationInitializationCallbackParams[] = L"Windows.UI.Xaml.IApplicationInitializationCallbackParams";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParamsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParamsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParamsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IApplicationOverrides
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Application
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplicationOverrides[] = L"Windows.UI.Xaml.IApplicationOverrides";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIApplicationOverridesVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* OnActivated)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides* This,
        __x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs* args);
    HRESULT (STDMETHODCALLTYPE* OnLaunched)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides* This,
        __x_ABI_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs* args);
    HRESULT (STDMETHODCALLTYPE* OnFileActivated)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides* This,
        __x_ABI_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs* args);
    HRESULT (STDMETHODCALLTYPE* OnSearchActivated)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides* This,
        __x_ABI_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs* args);
    HRESULT (STDMETHODCALLTYPE* OnShareTargetActivated)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides* This,
        __x_ABI_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs* args);
    HRESULT (STDMETHODCALLTYPE* OnFileOpenPickerActivated)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides* This,
        __x_ABI_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs* args);
    HRESULT (STDMETHODCALLTYPE* OnFileSavePickerActivated)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides* This,
        __x_ABI_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs* args);
    HRESULT (STDMETHODCALLTYPE* OnCachedFileUpdaterActivated)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides* This,
        __x_ABI_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs* args);
    HRESULT (STDMETHODCALLTYPE* OnWindowCreated)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs* args);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIApplicationOverridesVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIApplicationOverridesVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_OnActivated(This, args) \
    ((This)->lpVtbl->OnActivated(This, args))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_OnLaunched(This, args) \
    ((This)->lpVtbl->OnLaunched(This, args))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_OnFileActivated(This, args) \
    ((This)->lpVtbl->OnFileActivated(This, args))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_OnSearchActivated(This, args) \
    ((This)->lpVtbl->OnSearchActivated(This, args))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_OnShareTargetActivated(This, args) \
    ((This)->lpVtbl->OnShareTargetActivated(This, args))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_OnFileOpenPickerActivated(This, args) \
    ((This)->lpVtbl->OnFileOpenPickerActivated(This, args))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_OnFileSavePickerActivated(This, args) \
    ((This)->lpVtbl->OnFileSavePickerActivated(This, args))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_OnCachedFileUpdaterActivated(This, args) \
    ((This)->lpVtbl->OnCachedFileUpdaterActivated(This, args))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_OnWindowCreated(This, args) \
    ((This)->lpVtbl->OnWindowCreated(This, args))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IApplicationOverrides2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Application
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplicationOverrides2[] = L"Windows.UI.Xaml.IApplicationOverrides2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* OnBackgroundActivated)(__x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2* This,
        __x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs* args);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_OnBackgroundActivated(This, args) \
    ((This)->lpVtbl->OnBackgroundActivated(This, args))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IApplicationStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Application
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplicationStatics[] = L"Windows.UI.Xaml.IApplicationStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIApplicationStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIApplicationStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIApplicationStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIApplicationStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIApplicationStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIApplicationStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIApplicationStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_CWindows_CUI_CXaml_CIApplicationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIApplication** value);
    HRESULT (STDMETHODCALLTYPE* Start)(__x_ABI_CWindows_CUI_CXaml_CIApplicationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback* callback);
    HRESULT (STDMETHODCALLTYPE* LoadComponent)(__x_ABI_CWindows_CUI_CXaml_CIApplicationStatics* This,
        IInspectable* component,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* resourceLocator);
    HRESULT (STDMETHODCALLTYPE* LoadComponentWithResourceLocation)(__x_ABI_CWindows_CUI_CXaml_CIApplicationStatics* This,
        IInspectable* component,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* resourceLocator,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation componentResourceLocation);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIApplicationStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIApplicationStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_get_Current(This, value) \
    ((This)->lpVtbl->get_Current(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_Start(This, callback) \
    ((This)->lpVtbl->Start(This, callback))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_LoadComponent(This, component, resourceLocator) \
    ((This)->lpVtbl->LoadComponent(This, component, resourceLocator))

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_LoadComponentWithResourceLocation(This, component, resourceLocator, componentResourceLocation) \
    ((This)->lpVtbl->LoadComponentWithResourceLocation(This, component, resourceLocator, componentResourceLocation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplicationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IBindingFailedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.BindingFailedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IBindingFailedEventArgs[] = L"Windows.UI.Xaml.IBindingFailedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs* This,
        HSTRING* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_get_Message(This, value) \
    ((This)->lpVtbl->get_Message(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IBringIntoViewOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.BringIntoViewOptions
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IBringIntoViewOptions[] = L"Windows.UI.Xaml.IBringIntoViewOptions";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptionsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AnimationDesired)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AnimationDesired)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TargetRect)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions* This,
        __FIReference_1_Windows__CFoundation__CRect** value);
    HRESULT (STDMETHODCALLTYPE* put_TargetRect)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions* This,
        __FIReference_1_Windows__CFoundation__CRect* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptionsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptionsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_get_AnimationDesired(This, value) \
    ((This)->lpVtbl->get_AnimationDesired(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_put_AnimationDesired(This, value) \
    ((This)->lpVtbl->put_AnimationDesired(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_get_TargetRect(This, value) \
    ((This)->lpVtbl->get_TargetRect(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_put_TargetRect(This, value) \
    ((This)->lpVtbl->put_TargetRect(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Xaml.IBringIntoViewOptions2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.BringIntoViewOptions
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IBringIntoViewOptions2[] = L"Windows.UI.Xaml.IBringIntoViewOptions2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalAlignmentRatio)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalAlignmentRatio)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalAlignmentRatio)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalAlignmentRatio)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2* This,
        DOUBLE value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_get_HorizontalAlignmentRatio(This, value) \
    ((This)->lpVtbl->get_HorizontalAlignmentRatio(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_put_HorizontalAlignmentRatio(This, value) \
    ((This)->lpVtbl->put_HorizontalAlignmentRatio(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_get_VerticalAlignmentRatio(This, value) \
    ((This)->lpVtbl->get_VerticalAlignmentRatio(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_put_VerticalAlignmentRatio(This, value) \
    ((This)->lpVtbl->put_VerticalAlignmentRatio(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_get_HorizontalOffset(This, value) \
    ((This)->lpVtbl->get_HorizontalOffset(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_put_HorizontalOffset(This, value) \
    ((This)->lpVtbl->put_HorizontalOffset(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_get_VerticalOffset(This, value) \
    ((This)->lpVtbl->get_VerticalOffset(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_put_VerticalOffset(This, value) \
    ((This)->lpVtbl->put_VerticalOffset(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Xaml.IBringIntoViewRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.BringIntoViewRequestedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IBringIntoViewRequestedEventArgs[] = L"Windows.UI.Xaml.IBringIntoViewRequestedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TargetElement)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_TargetElement)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_AnimationDesired)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AnimationDesired)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TargetRect)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetRect)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalAlignmentRatio)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalAlignmentRatio)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* This,
        boolean value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_get_TargetElement(This, value) \
    ((This)->lpVtbl->get_TargetElement(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_put_TargetElement(This, value) \
    ((This)->lpVtbl->put_TargetElement(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_get_AnimationDesired(This, value) \
    ((This)->lpVtbl->get_AnimationDesired(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_put_AnimationDesired(This, value) \
    ((This)->lpVtbl->put_AnimationDesired(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_get_TargetRect(This, value) \
    ((This)->lpVtbl->get_TargetRect(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_put_TargetRect(This, value) \
    ((This)->lpVtbl->put_TargetRect(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_get_HorizontalAlignmentRatio(This, value) \
    ((This)->lpVtbl->get_HorizontalAlignmentRatio(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_get_VerticalAlignmentRatio(This, value) \
    ((This)->lpVtbl->get_VerticalAlignmentRatio(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_get_HorizontalOffset(This, value) \
    ((This)->lpVtbl->get_HorizontalOffset(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_put_HorizontalOffset(This, value) \
    ((This)->lpVtbl->put_HorizontalOffset(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_get_VerticalOffset(This, value) \
    ((This)->lpVtbl->get_VerticalOffset(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_put_VerticalOffset(This, value) \
    ((This)->lpVtbl->put_VerticalOffset(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_get_Handled(This, value) \
    ((This)->lpVtbl->get_Handled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_put_Handled(This, value) \
    ((This)->lpVtbl->put_Handled(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Xaml.IBrushTransition
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.BrushTransition
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIBrushTransition_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIBrushTransition_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IBrushTransition[] = L"Windows.UI.Xaml.IBrushTransition";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIBrushTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIBrushTransition* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIBrushTransition* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIBrushTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIBrushTransition* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIBrushTransition* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIBrushTransition* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CUI_CXaml_CIBrushTransition* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_Duration)(__x_ABI_CWindows_CUI_CXaml_CIBrushTransition* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIBrushTransitionVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIBrushTransition
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIBrushTransitionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIBrushTransition_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIBrushTransition_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIBrushTransition_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIBrushTransition_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIBrushTransition_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIBrushTransition_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIBrushTransition_get_Duration(This, value) \
    ((This)->lpVtbl->get_Duration(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIBrushTransition_put_Duration(This, value) \
    ((This)->lpVtbl->put_Duration(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIBrushTransition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIBrushTransition_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IBrushTransitionFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.BrushTransition
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IBrushTransitionFactory[] = L"Windows.UI.Xaml.IBrushTransitionFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIBrushTransition** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIBrushTransitionFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IColorPaletteResources
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ColorPaletteResources
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IColorPaletteResources[] = L"Windows.UI.Xaml.IColorPaletteResources";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AltHigh)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_AltHigh)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_AltLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_AltLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_AltMedium)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_AltMedium)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_AltMediumHigh)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_AltMediumHigh)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_AltMediumLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_AltMediumLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_BaseHigh)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_BaseHigh)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_BaseLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_BaseLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_BaseMedium)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_BaseMedium)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_BaseMediumHigh)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_BaseMediumHigh)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_BaseMediumLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_BaseMediumLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ChromeAltLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ChromeAltLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ChromeBlackHigh)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ChromeBlackHigh)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ChromeBlackLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ChromeBlackLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ChromeBlackMediumLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ChromeBlackMediumLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ChromeBlackMedium)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ChromeBlackMedium)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ChromeDisabledHigh)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ChromeDisabledHigh)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ChromeDisabledLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ChromeDisabledLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ChromeHigh)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ChromeHigh)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ChromeLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ChromeLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ChromeMedium)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ChromeMedium)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ChromeMediumLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ChromeMediumLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ChromeWhite)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ChromeWhite)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ChromeGray)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ChromeGray)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ListLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ListLow)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ListMedium)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ListMedium)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorText)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ErrorText)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_Accent)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_Accent)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources* This,
        __FIReference_1_Windows__CUI__CColor* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_AltHigh(This, value) \
    ((This)->lpVtbl->get_AltHigh(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_AltHigh(This, value) \
    ((This)->lpVtbl->put_AltHigh(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_AltLow(This, value) \
    ((This)->lpVtbl->get_AltLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_AltLow(This, value) \
    ((This)->lpVtbl->put_AltLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_AltMedium(This, value) \
    ((This)->lpVtbl->get_AltMedium(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_AltMedium(This, value) \
    ((This)->lpVtbl->put_AltMedium(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_AltMediumHigh(This, value) \
    ((This)->lpVtbl->get_AltMediumHigh(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_AltMediumHigh(This, value) \
    ((This)->lpVtbl->put_AltMediumHigh(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_AltMediumLow(This, value) \
    ((This)->lpVtbl->get_AltMediumLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_AltMediumLow(This, value) \
    ((This)->lpVtbl->put_AltMediumLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_BaseHigh(This, value) \
    ((This)->lpVtbl->get_BaseHigh(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_BaseHigh(This, value) \
    ((This)->lpVtbl->put_BaseHigh(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_BaseLow(This, value) \
    ((This)->lpVtbl->get_BaseLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_BaseLow(This, value) \
    ((This)->lpVtbl->put_BaseLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_BaseMedium(This, value) \
    ((This)->lpVtbl->get_BaseMedium(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_BaseMedium(This, value) \
    ((This)->lpVtbl->put_BaseMedium(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_BaseMediumHigh(This, value) \
    ((This)->lpVtbl->get_BaseMediumHigh(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_BaseMediumHigh(This, value) \
    ((This)->lpVtbl->put_BaseMediumHigh(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_BaseMediumLow(This, value) \
    ((This)->lpVtbl->get_BaseMediumLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_BaseMediumLow(This, value) \
    ((This)->lpVtbl->put_BaseMediumLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_ChromeAltLow(This, value) \
    ((This)->lpVtbl->get_ChromeAltLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_ChromeAltLow(This, value) \
    ((This)->lpVtbl->put_ChromeAltLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_ChromeBlackHigh(This, value) \
    ((This)->lpVtbl->get_ChromeBlackHigh(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_ChromeBlackHigh(This, value) \
    ((This)->lpVtbl->put_ChromeBlackHigh(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_ChromeBlackLow(This, value) \
    ((This)->lpVtbl->get_ChromeBlackLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_ChromeBlackLow(This, value) \
    ((This)->lpVtbl->put_ChromeBlackLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_ChromeBlackMediumLow(This, value) \
    ((This)->lpVtbl->get_ChromeBlackMediumLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_ChromeBlackMediumLow(This, value) \
    ((This)->lpVtbl->put_ChromeBlackMediumLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_ChromeBlackMedium(This, value) \
    ((This)->lpVtbl->get_ChromeBlackMedium(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_ChromeBlackMedium(This, value) \
    ((This)->lpVtbl->put_ChromeBlackMedium(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_ChromeDisabledHigh(This, value) \
    ((This)->lpVtbl->get_ChromeDisabledHigh(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_ChromeDisabledHigh(This, value) \
    ((This)->lpVtbl->put_ChromeDisabledHigh(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_ChromeDisabledLow(This, value) \
    ((This)->lpVtbl->get_ChromeDisabledLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_ChromeDisabledLow(This, value) \
    ((This)->lpVtbl->put_ChromeDisabledLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_ChromeHigh(This, value) \
    ((This)->lpVtbl->get_ChromeHigh(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_ChromeHigh(This, value) \
    ((This)->lpVtbl->put_ChromeHigh(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_ChromeLow(This, value) \
    ((This)->lpVtbl->get_ChromeLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_ChromeLow(This, value) \
    ((This)->lpVtbl->put_ChromeLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_ChromeMedium(This, value) \
    ((This)->lpVtbl->get_ChromeMedium(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_ChromeMedium(This, value) \
    ((This)->lpVtbl->put_ChromeMedium(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_ChromeMediumLow(This, value) \
    ((This)->lpVtbl->get_ChromeMediumLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_ChromeMediumLow(This, value) \
    ((This)->lpVtbl->put_ChromeMediumLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_ChromeWhite(This, value) \
    ((This)->lpVtbl->get_ChromeWhite(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_ChromeWhite(This, value) \
    ((This)->lpVtbl->put_ChromeWhite(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_ChromeGray(This, value) \
    ((This)->lpVtbl->get_ChromeGray(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_ChromeGray(This, value) \
    ((This)->lpVtbl->put_ChromeGray(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_ListLow(This, value) \
    ((This)->lpVtbl->get_ListLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_ListLow(This, value) \
    ((This)->lpVtbl->put_ListLow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_ListMedium(This, value) \
    ((This)->lpVtbl->get_ListMedium(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_ListMedium(This, value) \
    ((This)->lpVtbl->put_ListMedium(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_ErrorText(This, value) \
    ((This)->lpVtbl->get_ErrorText(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_ErrorText(This, value) \
    ((This)->lpVtbl->put_ErrorText(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_get_Accent(This, value) \
    ((This)->lpVtbl->get_Accent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_put_Accent(This, value) \
    ((This)->lpVtbl->put_Accent(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IColorPaletteResourcesFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ColorPaletteResources
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IColorPaletteResourcesFactory[] = L"Windows.UI.Xaml.IColorPaletteResourcesFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResources** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIColorPaletteResourcesFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.ICornerRadiusHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.CornerRadiusHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ICornerRadiusHelper[] = L"Windows.UI.Xaml.ICornerRadiusHelper";
typedef struct __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ICornerRadiusHelperStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.CornerRadiusHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ICornerRadiusHelperStatics[] = L"Windows.UI.Xaml.ICornerRadiusHelperStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* FromRadii)(__x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics* This,
        DOUBLE topLeft,
        DOUBLE topRight,
        DOUBLE bottomRight,
        DOUBLE bottomLeft,
        struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius* result);
    HRESULT (STDMETHODCALLTYPE* FromUniformRadius)(__x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics* This,
        DOUBLE uniformRadius,
        struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius* result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_FromRadii(This, topLeft, topRight, bottomRight, bottomLeft, result) \
    ((This)->lpVtbl->FromRadii(This, topLeft, topRight, bottomRight, bottomLeft, result))

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_FromUniformRadius(This, uniformRadius, result) \
    ((This)->lpVtbl->FromUniformRadius(This, uniformRadius, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDataContextChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DataContextChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataContextChangedEventArgs[] = L"Windows.UI.Xaml.IDataContextChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NewValue)(__x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs* This,
        boolean value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_get_NewValue(This, value) \
    ((This)->lpVtbl->get_NewValue(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_get_Handled(This, value) \
    ((This)->lpVtbl->get_Handled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_put_Handled(This, value) \
    ((This)->lpVtbl->put_Handled(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDataTemplate
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DataTemplate
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataTemplate[] = L"Windows.UI.Xaml.IDataTemplate";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplate* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplate* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplate* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplate* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplate* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplate* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* LoadContent)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplate* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDataTemplateVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplate
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplate_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplate_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplate_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplate_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplate_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplate_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplate_LoadContent(This, result) \
    ((This)->lpVtbl->LoadContent(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataTemplate;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDataTemplateExtension
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataTemplateExtension[] = L"Windows.UI.Xaml.IDataTemplateExtension";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtensionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ResetTemplate)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension* This);
    HRESULT (STDMETHODCALLTYPE* ProcessBinding)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension* This,
        UINT32 phase,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* ProcessBindings)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs* arg,
        INT32* result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtensionVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtensionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_ResetTemplate(This) \
    ((This)->lpVtbl->ResetTemplate(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_ProcessBinding(This, phase, result) \
    ((This)->lpVtbl->ProcessBinding(This, phase, result))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_ProcessBindings(This, arg, result) \
    ((This)->lpVtbl->ProcessBindings(This, arg, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDataTemplateFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DataTemplate
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataTemplateFactory[] = L"Windows.UI.Xaml.IDataTemplateFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDataTemplateKey
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DataTemplateKey
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataTemplateKey[] = L"Windows.UI.Xaml.IDataTemplateKey";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DataType)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_DataType)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey* This,
        IInspectable* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_get_DataType(This, value) \
    ((This)->lpVtbl->get_DataType(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_put_DataType(This, value) \
    ((This)->lpVtbl->put_DataType(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDataTemplateKeyFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DataTemplateKey
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataTemplateKeyFactory[] = L"Windows.UI.Xaml.IDataTemplateKeyFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey** value);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithType)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory* This,
        IInspectable* dataType,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_CreateInstanceWithType(This, dataType, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithType(This, dataType, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDataTemplateStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DataTemplate
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataTemplateStatics2[] = L"Windows.UI.Xaml.IDataTemplateStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ExtensionInstanceProperty)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetExtensionInstance)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* element,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension** result);
    HRESULT (STDMETHODCALLTYPE* SetExtensionInstance)(__x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* element,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_get_ExtensionInstanceProperty(This, value) \
    ((This)->lpVtbl->get_ExtensionInstanceProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_GetExtensionInstance(This, element, result) \
    ((This)->lpVtbl->GetExtensionInstance(This, element, result))

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_SetExtensionInstance(This, element, value) \
    ((This)->lpVtbl->SetExtensionInstance(This, element, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDebugSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DebugSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDebugSettings[] = L"Windows.UI.Xaml.IDebugSettings";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDebugSettingsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_EnableFrameRateCounter)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_EnableFrameRateCounter)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsBindingTracingEnabled)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsBindingTracingEnabled)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsOverdrawHeatMapEnabled)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsOverdrawHeatMapEnabled)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_BindingFailed)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings* This,
        __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BindingFailed)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDebugSettingsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDebugSettings
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDebugSettingsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_get_EnableFrameRateCounter(This, value) \
    ((This)->lpVtbl->get_EnableFrameRateCounter(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_put_EnableFrameRateCounter(This, value) \
    ((This)->lpVtbl->put_EnableFrameRateCounter(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_get_IsBindingTracingEnabled(This, value) \
    ((This)->lpVtbl->get_IsBindingTracingEnabled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_put_IsBindingTracingEnabled(This, value) \
    ((This)->lpVtbl->put_IsBindingTracingEnabled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_get_IsOverdrawHeatMapEnabled(This, value) \
    ((This)->lpVtbl->get_IsOverdrawHeatMapEnabled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_put_IsOverdrawHeatMapEnabled(This, value) \
    ((This)->lpVtbl->put_IsOverdrawHeatMapEnabled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_add_BindingFailed(This, handler, token) \
    ((This)->lpVtbl->add_BindingFailed(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_remove_BindingFailed(This, token) \
    ((This)->lpVtbl->remove_BindingFailed(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDebugSettings;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDebugSettings2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DebugSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDebugSettings2[] = L"Windows.UI.Xaml.IDebugSettings2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_EnableRedrawRegions)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_EnableRedrawRegions)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings2* This,
        boolean value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_get_EnableRedrawRegions(This, value) \
    ((This)->lpVtbl->get_EnableRedrawRegions(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_put_EnableRedrawRegions(This, value) \
    ((This)->lpVtbl->put_EnableRedrawRegions(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDebugSettings2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDebugSettings3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DebugSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDebugSettings3[] = L"Windows.UI.Xaml.IDebugSettings3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsTextPerformanceVisualizationEnabled)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTextPerformanceVisualizationEnabled)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings3* This,
        boolean value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_get_IsTextPerformanceVisualizationEnabled(This, value) \
    ((This)->lpVtbl->get_IsTextPerformanceVisualizationEnabled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_put_IsTextPerformanceVisualizationEnabled(This, value) \
    ((This)->lpVtbl->put_IsTextPerformanceVisualizationEnabled(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDebugSettings3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDebugSettings4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DebugSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDebugSettings4[] = L"Windows.UI.Xaml.IDebugSettings4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDebugSettings4Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings4* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings4* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings4* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings4* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings4* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FailFastOnErrors)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_FailFastOnErrors)(__x_ABI_CWindows_CUI_CXaml_CIDebugSettings4* This,
        boolean value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDebugSettings4Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDebugSettings4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDebugSettings4Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_get_FailFastOnErrors(This, value) \
    ((This)->lpVtbl->get_FailFastOnErrors(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_put_FailFastOnErrors(This, value) \
    ((This)->lpVtbl->put_FailFastOnErrors(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDebugSettings4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IDependencyObject
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DependencyObject
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyObject[] = L"Windows.UI.Xaml.IDependencyObject";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetValue)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* dp,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* SetValue)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* dp,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* ClearValue)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* dp);
    HRESULT (STDMETHODCALLTYPE* ReadLocalValue)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* dp,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* GetAnimationBaseValue)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* dp,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Dispatcher)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject* This,
        __x_ABI_CWindows_CUI_CCore_CICoreDispatcher** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_GetValue(This, dp, result) \
    ((This)->lpVtbl->GetValue(This, dp, result))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_SetValue(This, dp, value) \
    ((This)->lpVtbl->SetValue(This, dp, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_ClearValue(This, dp) \
    ((This)->lpVtbl->ClearValue(This, dp))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_ReadLocalValue(This, dp, result) \
    ((This)->lpVtbl->ReadLocalValue(This, dp, result))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_GetAnimationBaseValue(This, dp, result) \
    ((This)->lpVtbl->GetAnimationBaseValue(This, dp, result))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_get_Dispatcher(This, value) \
    ((This)->lpVtbl->get_Dispatcher(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyObject;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDependencyObject2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DependencyObject
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyObject2[] = L"Windows.UI.Xaml.IDependencyObject2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* RegisterPropertyChangedCallback)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* dp,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback* callback,
        INT64* result);
    HRESULT (STDMETHODCALLTYPE* UnregisterPropertyChangedCallback)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObject2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* dp,
        INT64 token);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_RegisterPropertyChangedCallback(This, dp, callback, result) \
    ((This)->lpVtbl->RegisterPropertyChangedCallback(This, dp, callback, result))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_UnregisterPropertyChangedCallback(This, dp, token) \
    ((This)->lpVtbl->UnregisterPropertyChangedCallback(This, dp, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyObject2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDependencyObjectCollectionFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DependencyObjectCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyObjectCollectionFactory[] = L"Windows.UI.Xaml.IDependencyObjectCollectionFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDependencyObjectFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DependencyObject
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyObjectFactory[] = L"Windows.UI.Xaml.IDependencyObjectFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDependencyProperty
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DependencyProperty
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyProperty[] = L"Windows.UI.Xaml.IDependencyProperty";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetMetadata)(__x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName forType,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_GetMetadata(This, forType, result) \
    ((This)->lpVtbl->GetMetadata(This, forType, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyProperty;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDependencyPropertyChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DependencyPropertyChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyPropertyChangedEventArgs[] = L"Windows.UI.Xaml.IDependencyPropertyChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Property)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OldValue)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_NewValue)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs* This,
        IInspectable** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_get_Property(This, value) \
    ((This)->lpVtbl->get_Property(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_get_OldValue(This, value) \
    ((This)->lpVtbl->get_OldValue(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_get_NewValue(This, value) \
    ((This)->lpVtbl->get_NewValue(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDependencyPropertyStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DependencyProperty
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyPropertyStatics[] = L"Windows.UI.Xaml.IDependencyPropertyStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_UnsetValue)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* Register)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics* This,
        HSTRING name,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName propertyType,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName ownerType,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata* typeMetadata,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** result);
    HRESULT (STDMETHODCALLTYPE* RegisterAttached)(__x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics* This,
        HSTRING name,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName propertyType,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName ownerType,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata* defaultMetadata,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_get_UnsetValue(This, value) \
    ((This)->lpVtbl->get_UnsetValue(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_Register(This, name, propertyType, ownerType, typeMetadata, result) \
    ((This)->lpVtbl->Register(This, name, propertyType, ownerType, typeMetadata, result))

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_RegisterAttached(This, name, propertyType, ownerType, defaultMetadata, result) \
    ((This)->lpVtbl->RegisterAttached(This, name, propertyType, ownerType, defaultMetadata, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDispatcherTimer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DispatcherTimer
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDispatcherTimer[] = L"Windows.UI.Xaml.IDispatcherTimer";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Interval)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_Interval)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_IsEnabled)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_Tick)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer* This,
        __FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Tick)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Start)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer* This);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_get_Interval(This, value) \
    ((This)->lpVtbl->get_Interval(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_put_Interval(This, value) \
    ((This)->lpVtbl->put_Interval(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_get_IsEnabled(This, value) \
    ((This)->lpVtbl->get_IsEnabled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_add_Tick(This, handler, token) \
    ((This)->lpVtbl->add_Tick(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_remove_Tick(This, token) \
    ((This)->lpVtbl->remove_Tick(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_Start(This) \
    ((This)->lpVtbl->Start(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_Stop(This) \
    ((This)->lpVtbl->Stop(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDispatcherTimerFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DispatcherTimer
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDispatcherTimerFactory[] = L"Windows.UI.Xaml.IDispatcherTimerFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDragEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DragEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragEventArgs[] = L"Windows.UI.Xaml.IDragEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDragEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Data)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage** value);
    HRESULT (STDMETHODCALLTYPE* put_Data)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage* value);
    HRESULT (STDMETHODCALLTYPE* GetPosition)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* relativeTo,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDragEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDragEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_get_Handled(This, value) \
    ((This)->lpVtbl->get_Handled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_put_Handled(This, value) \
    ((This)->lpVtbl->put_Handled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_get_Data(This, value) \
    ((This)->lpVtbl->get_Data(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_put_Data(This, value) \
    ((This)->lpVtbl->put_Data(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_GetPosition(This, relativeTo, result) \
    ((This)->lpVtbl->GetPosition(This, relativeTo, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDragEventArgs2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DragEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragEventArgs2[] = L"Windows.UI.Xaml.IDragEventArgs2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DataView)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2* This,
        __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackageView** value);
    HRESULT (STDMETHODCALLTYPE* get_DragUIOverride)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride** value);
    HRESULT (STDMETHODCALLTYPE* get_Modifiers)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2* This,
        enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CDragDropModifiers* value);
    HRESULT (STDMETHODCALLTYPE* get_AcceptedOperation)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2* This,
        enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* value);
    HRESULT (STDMETHODCALLTYPE* put_AcceptedOperation)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2* This,
        enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_get_DataView(This, value) \
    ((This)->lpVtbl->get_DataView(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_get_DragUIOverride(This, value) \
    ((This)->lpVtbl->get_DragUIOverride(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_get_Modifiers(This, value) \
    ((This)->lpVtbl->get_Modifiers(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_get_AcceptedOperation(This, value) \
    ((This)->lpVtbl->get_AcceptedOperation(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_put_AcceptedOperation(This, value) \
    ((This)->lpVtbl->put_AcceptedOperation(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_GetDeferral(This, result) \
    ((This)->lpVtbl->GetDeferral(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDragEventArgs3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DragEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragEventArgs3[] = L"Windows.UI.Xaml.IDragEventArgs3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AllowedOperations)(__x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3* This,
        enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_get_AllowedOperations(This, value) \
    ((This)->lpVtbl->get_AllowedOperations(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IDragOperationDeferral
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DragOperationDeferral
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragOperationDeferral[] = L"Windows.UI.Xaml.IDragOperationDeferral";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferralVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral* This);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferralVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferralVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_Complete(This) \
    ((This)->lpVtbl->Complete(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDragStartingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DragStartingEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragStartingEventArgs[] = L"Windows.UI.Xaml.IDragStartingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Data)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage** value);
    HRESULT (STDMETHODCALLTYPE* get_DragUI)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIDragUI** value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral** result);
    HRESULT (STDMETHODCALLTYPE* GetPosition)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* relativeTo,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_get_Cancel(This, value) \
    ((This)->lpVtbl->get_Cancel(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_put_Cancel(This, value) \
    ((This)->lpVtbl->put_Cancel(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_get_Data(This, value) \
    ((This)->lpVtbl->get_Data(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_get_DragUI(This, value) \
    ((This)->lpVtbl->get_DragUI(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_GetDeferral(This, result) \
    ((This)->lpVtbl->GetDeferral(This, result))

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_GetPosition(This, relativeTo, result) \
    ((This)->lpVtbl->GetPosition(This, relativeTo, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDragStartingEventArgs2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DragStartingEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragStartingEventArgs2[] = L"Windows.UI.Xaml.IDragStartingEventArgs2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AllowedOperations)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2* This,
        enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowedOperations)(__x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2* This,
        enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_get_AllowedOperations(This, value) \
    ((This)->lpVtbl->get_AllowedOperations(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_put_AllowedOperations(This, value) \
    ((This)->lpVtbl->put_AllowedOperations(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IDragUI
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DragUI
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragUI_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDragUI_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragUI[] = L"Windows.UI.Xaml.IDragUI";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDragUIVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDragUI* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDragUI* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDragUI* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDragUI* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDragUI* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDragUI* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SetContentFromBitmapImage)(__x_ABI_CWindows_CUI_CXaml_CIDragUI* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* bitmapImage);
    HRESULT (STDMETHODCALLTYPE* SetContentFromBitmapImageWithAnchorPoint)(__x_ABI_CWindows_CUI_CXaml_CIDragUI* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* bitmapImage,
        struct __x_ABI_CWindows_CFoundation_CPoint anchorPoint);
    HRESULT (STDMETHODCALLTYPE* SetContentFromSoftwareBitmap)(__x_ABI_CWindows_CUI_CXaml_CIDragUI* This,
        __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap* softwareBitmap);
    HRESULT (STDMETHODCALLTYPE* SetContentFromSoftwareBitmapWithAnchorPoint)(__x_ABI_CWindows_CUI_CXaml_CIDragUI* This,
        __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap* softwareBitmap,
        struct __x_ABI_CWindows_CFoundation_CPoint anchorPoint);
    HRESULT (STDMETHODCALLTYPE* SetContentFromDataPackage)(__x_ABI_CWindows_CUI_CXaml_CIDragUI* This);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDragUIVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDragUI
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDragUIVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_SetContentFromBitmapImage(This, bitmapImage) \
    ((This)->lpVtbl->SetContentFromBitmapImage(This, bitmapImage))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_SetContentFromBitmapImageWithAnchorPoint(This, bitmapImage, anchorPoint) \
    ((This)->lpVtbl->SetContentFromBitmapImageWithAnchorPoint(This, bitmapImage, anchorPoint))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_SetContentFromSoftwareBitmap(This, softwareBitmap) \
    ((This)->lpVtbl->SetContentFromSoftwareBitmap(This, softwareBitmap))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_SetContentFromSoftwareBitmapWithAnchorPoint(This, softwareBitmap, anchorPoint) \
    ((This)->lpVtbl->SetContentFromSoftwareBitmapWithAnchorPoint(This, softwareBitmap, anchorPoint))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_SetContentFromDataPackage(This) \
    ((This)->lpVtbl->SetContentFromDataPackage(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragUI;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragUI_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDragUIOverride
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DragUIOverride
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragUIOverride[] = L"Windows.UI.Xaml.IDragUIOverride";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDragUIOverrideVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Caption)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Caption)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IsContentVisible)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsContentVisible)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsCaptionVisible)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCaptionVisible)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsGlyphVisible)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsGlyphVisible)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This);
    HRESULT (STDMETHODCALLTYPE* SetContentFromBitmapImage)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* bitmapImage);
    HRESULT (STDMETHODCALLTYPE* SetContentFromBitmapImageWithAnchorPoint)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage* bitmapImage,
        struct __x_ABI_CWindows_CFoundation_CPoint anchorPoint);
    HRESULT (STDMETHODCALLTYPE* SetContentFromSoftwareBitmap)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This,
        __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap* softwareBitmap);
    HRESULT (STDMETHODCALLTYPE* SetContentFromSoftwareBitmapWithAnchorPoint)(__x_ABI_CWindows_CUI_CXaml_CIDragUIOverride* This,
        __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap* softwareBitmap,
        struct __x_ABI_CWindows_CFoundation_CPoint anchorPoint);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDragUIOverrideVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDragUIOverrideVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_get_Caption(This, value) \
    ((This)->lpVtbl->get_Caption(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_put_Caption(This, value) \
    ((This)->lpVtbl->put_Caption(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_get_IsContentVisible(This, value) \
    ((This)->lpVtbl->get_IsContentVisible(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_put_IsContentVisible(This, value) \
    ((This)->lpVtbl->put_IsContentVisible(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_get_IsCaptionVisible(This, value) \
    ((This)->lpVtbl->get_IsCaptionVisible(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_put_IsCaptionVisible(This, value) \
    ((This)->lpVtbl->put_IsCaptionVisible(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_get_IsGlyphVisible(This, value) \
    ((This)->lpVtbl->get_IsGlyphVisible(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_put_IsGlyphVisible(This, value) \
    ((This)->lpVtbl->put_IsGlyphVisible(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_SetContentFromBitmapImage(This, bitmapImage) \
    ((This)->lpVtbl->SetContentFromBitmapImage(This, bitmapImage))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_SetContentFromBitmapImageWithAnchorPoint(This, bitmapImage, anchorPoint) \
    ((This)->lpVtbl->SetContentFromBitmapImageWithAnchorPoint(This, bitmapImage, anchorPoint))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_SetContentFromSoftwareBitmap(This, softwareBitmap) \
    ((This)->lpVtbl->SetContentFromSoftwareBitmap(This, softwareBitmap))

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_SetContentFromSoftwareBitmapWithAnchorPoint(This, softwareBitmap, anchorPoint) \
    ((This)->lpVtbl->SetContentFromSoftwareBitmapWithAnchorPoint(This, softwareBitmap, anchorPoint))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragUIOverride;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDropCompletedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DropCompletedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDropCompletedEventArgs[] = L"Windows.UI.Xaml.IDropCompletedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DropResult)(__x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs* This,
        enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_get_DropResult(This, value) \
    ((This)->lpVtbl->get_DropResult(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDurationHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DurationHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDurationHelper[] = L"Windows.UI.Xaml.IDurationHelper";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDurationHelperVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelper* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelper* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelper* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelper* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelper* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelper* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDurationHelperVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDurationHelper
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDurationHelperVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelper_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelper_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelper_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelper_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelper_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelper_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDurationHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IDurationHelperStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.DurationHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDurationHelperStatics[] = L"Windows.UI.Xaml.IDurationHelperStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Automatic)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics* This,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration* value);
    HRESULT (STDMETHODCALLTYPE* get_Forever)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics* This,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration* value);
    HRESULT (STDMETHODCALLTYPE* Compare)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics* This,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration duration1,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration duration2,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* FromTimeSpan)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan timeSpan,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration* result);
    HRESULT (STDMETHODCALLTYPE* GetHasTimeSpan)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics* This,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration target,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Add)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics* This,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration target,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration duration,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration* result);
    HRESULT (STDMETHODCALLTYPE* Equals)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics* This,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration target,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Subtract)(__x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics* This,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration target,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration duration,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration* result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_get_Automatic(This, value) \
    ((This)->lpVtbl->get_Automatic(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_get_Forever(This, value) \
    ((This)->lpVtbl->get_Forever(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_Compare(This, duration1, duration2, result) \
    ((This)->lpVtbl->Compare(This, duration1, duration2, result))

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_FromTimeSpan(This, timeSpan, result) \
    ((This)->lpVtbl->FromTimeSpan(This, timeSpan, result))

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_GetHasTimeSpan(This, target, result) \
    ((This)->lpVtbl->GetHasTimeSpan(This, target, result))

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_Add(This, target, duration, result) \
    ((This)->lpVtbl->Add(This, target, duration, result))

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_Equals(This, target, value, result) \
    ((This)->lpVtbl->Equals(This, target, value, result))

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_Subtract(This, target, duration, result) \
    ((This)->lpVtbl->Subtract(This, target, duration, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IEffectiveViewportChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.EffectiveViewportChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IEffectiveViewportChangedEventArgs[] = L"Windows.UI.Xaml.IEffectiveViewportChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_EffectiveViewport)(__x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxViewport)(__x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* get_BringIntoViewDistanceX)(__x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_BringIntoViewDistanceY)(__x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs* This,
        DOUBLE* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_get_EffectiveViewport(This, value) \
    ((This)->lpVtbl->get_EffectiveViewport(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_get_MaxViewport(This, value) \
    ((This)->lpVtbl->get_MaxViewport(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_get_BringIntoViewDistanceX(This, value) \
    ((This)->lpVtbl->get_BringIntoViewDistanceX(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_get_BringIntoViewDistanceY(This, value) \
    ((This)->lpVtbl->get_BringIntoViewDistanceY(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIEffectiveViewportChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IElementFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IElementFactory[] = L"Windows.UI.Xaml.IElementFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIElementFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIElementFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIElementFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIElementFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIElementFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIElementFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIElementFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetElement)(__x_ABI_CWindows_CUI_CXaml_CIElementFactory* This,
        __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs* args,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** result);
    HRESULT (STDMETHODCALLTYPE* RecycleElement)(__x_ABI_CWindows_CUI_CXaml_CIElementFactory* This,
        __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs* args);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIElementFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIElementFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIElementFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactory_GetElement(This, args, result) \
    ((This)->lpVtbl->GetElement(This, args, result))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactory_RecycleElement(This, args) \
    ((This)->lpVtbl->RecycleElement(This, args))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIElementFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IElementFactoryGetArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ElementFactoryGetArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IElementFactoryGetArgs[] = L"Windows.UI.Xaml.IElementFactoryGetArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Data)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Data)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_Parent)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Parent)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_get_Data(This, value) \
    ((This)->lpVtbl->get_Data(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_put_Data(This, value) \
    ((This)->lpVtbl->put_Data(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_get_Parent(This, value) \
    ((This)->lpVtbl->get_Parent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_put_Parent(This, value) \
    ((This)->lpVtbl->put_Parent(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IElementFactoryGetArgsFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ElementFactoryGetArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IElementFactoryGetArgsFactory[] = L"Windows.UI.Xaml.IElementFactoryGetArgsFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgs** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactoryGetArgsFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IElementFactoryRecycleArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ElementFactoryRecycleArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IElementFactoryRecycleArgs[] = L"Windows.UI.Xaml.IElementFactoryRecycleArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Element)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Element)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_Parent)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Parent)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_get_Element(This, value) \
    ((This)->lpVtbl->get_Element(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_put_Element(This, value) \
    ((This)->lpVtbl->put_Element(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_get_Parent(This, value) \
    ((This)->lpVtbl->get_Parent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_put_Parent(This, value) \
    ((This)->lpVtbl->put_Parent(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IElementFactoryRecycleArgsFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ElementFactoryRecycleArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IElementFactoryRecycleArgsFactory[] = L"Windows.UI.Xaml.IElementFactoryRecycleArgsFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgs** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIElementFactoryRecycleArgsFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IElementSoundPlayer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ElementSoundPlayer
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IElementSoundPlayer[] = L"Windows.UI.Xaml.IElementSoundPlayer";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayer_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IElementSoundPlayerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ElementSoundPlayer
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IElementSoundPlayerStatics[] = L"Windows.UI.Xaml.IElementSoundPlayerStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Volume)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Volume)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics* This,
        enum __x_ABI_CWindows_CUI_CXaml_CElementSoundPlayerState* value);
    HRESULT (STDMETHODCALLTYPE* put_State)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics* This,
        enum __x_ABI_CWindows_CUI_CXaml_CElementSoundPlayerState value);
    HRESULT (STDMETHODCALLTYPE* Play)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics* This,
        enum __x_ABI_CWindows_CUI_CXaml_CElementSoundKind sound);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_get_Volume(This, value) \
    ((This)->lpVtbl->get_Volume(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_put_Volume(This, value) \
    ((This)->lpVtbl->put_Volume(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_get_State(This, value) \
    ((This)->lpVtbl->get_State(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_put_State(This, value) \
    ((This)->lpVtbl->put_State(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_Play(This, sound) \
    ((This)->lpVtbl->Play(This, sound))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IElementSoundPlayerStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ElementSoundPlayer
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IElementSoundPlayerStatics2[] = L"Windows.UI.Xaml.IElementSoundPlayerStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SpatialAudioMode)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CElementSpatialAudioMode* value);
    HRESULT (STDMETHODCALLTYPE* put_SpatialAudioMode)(__x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CElementSpatialAudioMode value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_get_SpatialAudioMode(This, value) \
    ((This)->lpVtbl->get_SpatialAudioMode(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_put_SpatialAudioMode(This, value) \
    ((This)->lpVtbl->put_SpatialAudioMode(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIElementSoundPlayerStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Xaml.IEventTrigger
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.EventTrigger
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IEventTrigger[] = L"Windows.UI.Xaml.IEventTrigger";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIEventTriggerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIEventTrigger* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIEventTrigger* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIEventTrigger* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIEventTrigger* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIEventTrigger* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIEventTrigger* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_RoutedEvent)(__x_ABI_CWindows_CUI_CXaml_CIEventTrigger* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* put_RoutedEvent)(__x_ABI_CWindows_CUI_CXaml_CIEventTrigger* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent* value);
    HRESULT (STDMETHODCALLTYPE* get_Actions)(__x_ABI_CWindows_CUI_CXaml_CIEventTrigger* This,
        __FIVector_1_Windows__CUI__CXaml__CTriggerAction** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIEventTriggerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIEventTrigger
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIEventTriggerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger_get_RoutedEvent(This, value) \
    ((This)->lpVtbl->get_RoutedEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger_put_RoutedEvent(This, value) \
    ((This)->lpVtbl->put_RoutedEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger_get_Actions(This, value) \
    ((This)->lpVtbl->get_Actions(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIEventTrigger;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IExceptionRoutedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ExceptionRoutedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IExceptionRoutedEventArgs[] = L"Windows.UI.Xaml.IExceptionRoutedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ErrorMessage)(__x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs* This,
        HSTRING* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_get_ErrorMessage(This, value) \
    ((This)->lpVtbl->get_ErrorMessage(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IExceptionRoutedEventArgsFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ExceptionRoutedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IExceptionRoutedEventArgsFactory[] = L"Windows.UI.Xaml.IExceptionRoutedEventArgsFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElement
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElement[] = L"Windows.UI.Xaml.IFrameworkElement";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Triggers)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        __FIVector_1_Windows__CUI__CXaml__CTriggerBase** value);
    HRESULT (STDMETHODCALLTYPE* get_Resources)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary** value);
    HRESULT (STDMETHODCALLTYPE* put_Resources)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary* value);
    HRESULT (STDMETHODCALLTYPE* get_Tag)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Tag)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_Language)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Language)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ActualWidth)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ActualHeight)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_Width)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Width)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Height)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MinWidth)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MinWidth)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MaxWidth)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxWidth)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MinHeight)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MinHeight)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MaxHeight)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxHeight)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalAlignment)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalAlignment)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalAlignment)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalAlignment)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_Margin)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_Margin)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Name)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_BaseUri)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_DataContext)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_DataContext)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_Style)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);
    HRESULT (STDMETHODCALLTYPE* put_Style)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* value);
    HRESULT (STDMETHODCALLTYPE* get_Parent)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* get_FlowDirection)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CFlowDirection* value);
    HRESULT (STDMETHODCALLTYPE* put_FlowDirection)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CFlowDirection value);
    HRESULT (STDMETHODCALLTYPE* add_Loaded)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Loaded)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Unloaded)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Unloaded)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SizeChanged)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SizeChanged)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_LayoutUpdated)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        __FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LayoutUpdated)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* FindName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        HSTRING name,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* SetBinding)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* dp,
        __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase* binding);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Triggers(This, value) \
    ((This)->lpVtbl->get_Triggers(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Resources(This, value) \
    ((This)->lpVtbl->get_Resources(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_Resources(This, value) \
    ((This)->lpVtbl->put_Resources(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Tag(This, value) \
    ((This)->lpVtbl->get_Tag(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_Tag(This, value) \
    ((This)->lpVtbl->put_Tag(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Language(This, value) \
    ((This)->lpVtbl->get_Language(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_Language(This, value) \
    ((This)->lpVtbl->put_Language(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_ActualWidth(This, value) \
    ((This)->lpVtbl->get_ActualWidth(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_ActualHeight(This, value) \
    ((This)->lpVtbl->get_ActualHeight(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Width(This, value) \
    ((This)->lpVtbl->get_Width(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_Width(This, value) \
    ((This)->lpVtbl->put_Width(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Height(This, value) \
    ((This)->lpVtbl->get_Height(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_Height(This, value) \
    ((This)->lpVtbl->put_Height(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_MinWidth(This, value) \
    ((This)->lpVtbl->get_MinWidth(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_MinWidth(This, value) \
    ((This)->lpVtbl->put_MinWidth(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_MaxWidth(This, value) \
    ((This)->lpVtbl->get_MaxWidth(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_MaxWidth(This, value) \
    ((This)->lpVtbl->put_MaxWidth(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_MinHeight(This, value) \
    ((This)->lpVtbl->get_MinHeight(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_MinHeight(This, value) \
    ((This)->lpVtbl->put_MinHeight(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_MaxHeight(This, value) \
    ((This)->lpVtbl->get_MaxHeight(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_MaxHeight(This, value) \
    ((This)->lpVtbl->put_MaxHeight(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_HorizontalAlignment(This, value) \
    ((This)->lpVtbl->get_HorizontalAlignment(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_HorizontalAlignment(This, value) \
    ((This)->lpVtbl->put_HorizontalAlignment(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_VerticalAlignment(This, value) \
    ((This)->lpVtbl->get_VerticalAlignment(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_VerticalAlignment(This, value) \
    ((This)->lpVtbl->put_VerticalAlignment(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Margin(This, value) \
    ((This)->lpVtbl->get_Margin(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_Margin(This, value) \
    ((This)->lpVtbl->put_Margin(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Name(This, value) \
    ((This)->lpVtbl->get_Name(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_Name(This, value) \
    ((This)->lpVtbl->put_Name(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_BaseUri(This, value) \
    ((This)->lpVtbl->get_BaseUri(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_DataContext(This, value) \
    ((This)->lpVtbl->get_DataContext(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_DataContext(This, value) \
    ((This)->lpVtbl->put_DataContext(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Style(This, value) \
    ((This)->lpVtbl->get_Style(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_Style(This, value) \
    ((This)->lpVtbl->put_Style(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Parent(This, value) \
    ((This)->lpVtbl->get_Parent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_FlowDirection(This, value) \
    ((This)->lpVtbl->get_FlowDirection(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_FlowDirection(This, value) \
    ((This)->lpVtbl->put_FlowDirection(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_add_Loaded(This, handler, token) \
    ((This)->lpVtbl->add_Loaded(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_remove_Loaded(This, token) \
    ((This)->lpVtbl->remove_Loaded(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_add_Unloaded(This, handler, token) \
    ((This)->lpVtbl->add_Unloaded(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_remove_Unloaded(This, token) \
    ((This)->lpVtbl->remove_Unloaded(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_add_SizeChanged(This, handler, token) \
    ((This)->lpVtbl->add_SizeChanged(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_remove_SizeChanged(This, token) \
    ((This)->lpVtbl->remove_SizeChanged(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_add_LayoutUpdated(This, handler, token) \
    ((This)->lpVtbl->add_LayoutUpdated(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_remove_LayoutUpdated(This, token) \
    ((This)->lpVtbl->remove_LayoutUpdated(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_FindName(This, name, result) \
    ((This)->lpVtbl->FindName(This, name, result))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_SetBinding(This, dp, binding) \
    ((This)->lpVtbl->SetBinding(This, dp, binding))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElement;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElement2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElement2[] = L"Windows.UI.Xaml.IFrameworkElement2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_RequestedTheme)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CElementTheme* value);
    HRESULT (STDMETHODCALLTYPE* put_RequestedTheme)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CElementTheme value);
    HRESULT (STDMETHODCALLTYPE* add_DataContextChanged)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2* This,
        __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DataContextChanged)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* GetBindingExpression)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* dp,
        __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_get_RequestedTheme(This, value) \
    ((This)->lpVtbl->get_RequestedTheme(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_put_RequestedTheme(This, value) \
    ((This)->lpVtbl->put_RequestedTheme(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_add_DataContextChanged(This, handler, token) \
    ((This)->lpVtbl->add_DataContextChanged(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_remove_DataContextChanged(This, token) \
    ((This)->lpVtbl->remove_DataContextChanged(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_GetBindingExpression(This, dp, result) \
    ((This)->lpVtbl->GetBindingExpression(This, dp, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElement3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElement3[] = L"Windows.UI.Xaml.IFrameworkElement3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_Loading)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3* This,
        __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Loading)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_add_Loading(This, handler, token) \
    ((This)->lpVtbl->add_Loading(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_remove_Loading(This, token) \
    ((This)->lpVtbl->remove_Loading(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElement4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElement4[] = L"Windows.UI.Xaml.IFrameworkElement4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AllowFocusOnInteraction)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowFocusOnInteraction)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_FocusVisualMargin)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_FocusVisualMargin)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_FocusVisualSecondaryThickness)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_FocusVisualSecondaryThickness)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_FocusVisualPrimaryThickness)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_FocusVisualPrimaryThickness)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_FocusVisualSecondaryBrush)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_FocusVisualSecondaryBrush)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_FocusVisualPrimaryBrush)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_FocusVisualPrimaryBrush)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_AllowFocusWhenDisabled)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowFocusWhenDisabled)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4* This,
        boolean value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_get_AllowFocusOnInteraction(This, value) \
    ((This)->lpVtbl->get_AllowFocusOnInteraction(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_put_AllowFocusOnInteraction(This, value) \
    ((This)->lpVtbl->put_AllowFocusOnInteraction(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_get_FocusVisualMargin(This, value) \
    ((This)->lpVtbl->get_FocusVisualMargin(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_put_FocusVisualMargin(This, value) \
    ((This)->lpVtbl->put_FocusVisualMargin(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_get_FocusVisualSecondaryThickness(This, value) \
    ((This)->lpVtbl->get_FocusVisualSecondaryThickness(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_put_FocusVisualSecondaryThickness(This, value) \
    ((This)->lpVtbl->put_FocusVisualSecondaryThickness(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_get_FocusVisualPrimaryThickness(This, value) \
    ((This)->lpVtbl->get_FocusVisualPrimaryThickness(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_put_FocusVisualPrimaryThickness(This, value) \
    ((This)->lpVtbl->put_FocusVisualPrimaryThickness(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_get_FocusVisualSecondaryBrush(This, value) \
    ((This)->lpVtbl->get_FocusVisualSecondaryBrush(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_put_FocusVisualSecondaryBrush(This, value) \
    ((This)->lpVtbl->put_FocusVisualSecondaryBrush(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_get_FocusVisualPrimaryBrush(This, value) \
    ((This)->lpVtbl->get_FocusVisualPrimaryBrush(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_put_FocusVisualPrimaryBrush(This, value) \
    ((This)->lpVtbl->put_FocusVisualPrimaryBrush(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_get_AllowFocusWhenDisabled(This, value) \
    ((This)->lpVtbl->get_AllowFocusWhenDisabled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_put_AllowFocusWhenDisabled(This, value) \
    ((This)->lpVtbl->put_AllowFocusWhenDisabled(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElement6
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElement6[] = L"Windows.UI.Xaml.IFrameworkElement6";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ActualTheme)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6* This,
        enum __x_ABI_CWindows_CUI_CXaml_CElementTheme* value);
    HRESULT (STDMETHODCALLTYPE* add_ActualThemeChanged)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6* This,
        __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ActualThemeChanged)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_get_ActualTheme(This, value) \
    ((This)->lpVtbl->get_ActualTheme(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_add_ActualThemeChanged(This, handler, token) \
    ((This)->lpVtbl->add_ActualThemeChanged(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_remove_ActualThemeChanged(This, token) \
    ((This)->lpVtbl->remove_ActualThemeChanged(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElement7
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElement7[] = L"Windows.UI.Xaml.IFrameworkElement7";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsLoaded)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_EffectiveViewportChanged)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7* This,
        __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CEffectiveViewportChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_EffectiveViewportChanged)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_get_IsLoaded(This, value) \
    ((This)->lpVtbl->get_IsLoaded(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_add_EffectiveViewportChanged(This, handler, token) \
    ((This)->lpVtbl->add_EffectiveViewportChanged(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_remove_EffectiveViewportChanged(This, token) \
    ((This)->lpVtbl->remove_EffectiveViewportChanged(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElementFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementFactory[] = L"Windows.UI.Xaml.IFrameworkElementFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElementOverrides
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementOverrides[] = L"Windows.UI.Xaml.IFrameworkElementOverrides";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverridesVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* MeasureOverride)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides* This,
        struct __x_ABI_CWindows_CFoundation_CSize availableSize,
        struct __x_ABI_CWindows_CFoundation_CSize* result);
    HRESULT (STDMETHODCALLTYPE* ArrangeOverride)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides* This,
        struct __x_ABI_CWindows_CFoundation_CSize finalSize,
        struct __x_ABI_CWindows_CFoundation_CSize* result);
    HRESULT (STDMETHODCALLTYPE* OnApplyTemplate)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides* This);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverridesVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverridesVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_MeasureOverride(This, availableSize, result) \
    ((This)->lpVtbl->MeasureOverride(This, availableSize, result))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_ArrangeOverride(This, finalSize, result) \
    ((This)->lpVtbl->ArrangeOverride(This, finalSize, result))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_OnApplyTemplate(This) \
    ((This)->lpVtbl->OnApplyTemplate(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElementOverrides2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementOverrides2[] = L"Windows.UI.Xaml.IFrameworkElementOverrides2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GoToElementStateCore)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2* This,
        HSTRING stateName,
        boolean useTransitions,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_GoToElementStateCore(This, stateName, useTransitions, result) \
    ((This)->lpVtbl->GoToElementStateCore(This, stateName, useTransitions, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElementProtected7
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementProtected7[] = L"Windows.UI.Xaml.IFrameworkElementProtected7";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* InvalidateViewport)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7* This);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_InvalidateViewport(This) \
    ((This)->lpVtbl->InvalidateViewport(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElementStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementStatics[] = L"Windows.UI.Xaml.IFrameworkElementStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TagProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LanguageProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ActualWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ActualHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_WidthProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeightProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MarginProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_NameProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DataContextProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_StyleProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FlowDirectionProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_TagProperty(This, value) \
    ((This)->lpVtbl->get_TagProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_LanguageProperty(This, value) \
    ((This)->lpVtbl->get_LanguageProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_ActualWidthProperty(This, value) \
    ((This)->lpVtbl->get_ActualWidthProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_ActualHeightProperty(This, value) \
    ((This)->lpVtbl->get_ActualHeightProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_WidthProperty(This, value) \
    ((This)->lpVtbl->get_WidthProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_HeightProperty(This, value) \
    ((This)->lpVtbl->get_HeightProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_MinWidthProperty(This, value) \
    ((This)->lpVtbl->get_MinWidthProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_MaxWidthProperty(This, value) \
    ((This)->lpVtbl->get_MaxWidthProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_MinHeightProperty(This, value) \
    ((This)->lpVtbl->get_MinHeightProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_MaxHeightProperty(This, value) \
    ((This)->lpVtbl->get_MaxHeightProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_HorizontalAlignmentProperty(This, value) \
    ((This)->lpVtbl->get_HorizontalAlignmentProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_VerticalAlignmentProperty(This, value) \
    ((This)->lpVtbl->get_VerticalAlignmentProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_MarginProperty(This, value) \
    ((This)->lpVtbl->get_MarginProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_NameProperty(This, value) \
    ((This)->lpVtbl->get_NameProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_DataContextProperty(This, value) \
    ((This)->lpVtbl->get_DataContextProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_StyleProperty(This, value) \
    ((This)->lpVtbl->get_StyleProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_FlowDirectionProperty(This, value) \
    ((This)->lpVtbl->get_FlowDirectionProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElementStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementStatics2[] = L"Windows.UI.Xaml.IFrameworkElementStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_RequestedThemeProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_get_RequestedThemeProperty(This, value) \
    ((This)->lpVtbl->get_RequestedThemeProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElementStatics4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementStatics4[] = L"Windows.UI.Xaml.IFrameworkElementStatics4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AllowFocusOnInteractionProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FocusVisualMarginProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FocusVisualSecondaryThicknessProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FocusVisualPrimaryThicknessProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FocusVisualSecondaryBrushProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FocusVisualPrimaryBrushProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AllowFocusWhenDisabledProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_get_AllowFocusOnInteractionProperty(This, value) \
    ((This)->lpVtbl->get_AllowFocusOnInteractionProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_get_FocusVisualMarginProperty(This, value) \
    ((This)->lpVtbl->get_FocusVisualMarginProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_get_FocusVisualSecondaryThicknessProperty(This, value) \
    ((This)->lpVtbl->get_FocusVisualSecondaryThicknessProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_get_FocusVisualPrimaryThicknessProperty(This, value) \
    ((This)->lpVtbl->get_FocusVisualPrimaryThicknessProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_get_FocusVisualSecondaryBrushProperty(This, value) \
    ((This)->lpVtbl->get_FocusVisualSecondaryBrushProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_get_FocusVisualPrimaryBrushProperty(This, value) \
    ((This)->lpVtbl->get_FocusVisualPrimaryBrushProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_get_AllowFocusWhenDisabledProperty(This, value) \
    ((This)->lpVtbl->get_AllowFocusWhenDisabledProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElementStatics5
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementStatics5[] = L"Windows.UI.Xaml.IFrameworkElementStatics5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* DeferTree)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_DeferTree(This, element) \
    ((This)->lpVtbl->DeferTree(This, element))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics5_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkElementStatics6
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementStatics6[] = L"Windows.UI.Xaml.IFrameworkElementStatics6";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ActualThemeProperty)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_get_ActualThemeProperty(This, value) \
    ((This)->lpVtbl->get_ActualThemeProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics6_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkTemplate
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkTemplate
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkTemplate[] = L"Windows.UI.Xaml.IFrameworkTemplate";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkTemplateFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkTemplate
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkTemplateFactory[] = L"Windows.UI.Xaml.IFrameworkTemplateFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkView
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkView
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkView[] = L"Windows.UI.Xaml.IFrameworkView";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkView* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkView* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkView* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkView* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkView* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkView* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkView
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkView_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkView_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkView_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkView_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkView_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkView_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkView;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IFrameworkViewSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.FrameworkViewSource
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkViewSource[] = L"Windows.UI.Xaml.IFrameworkViewSource";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSourceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSourceVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSourceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IGridLengthHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.GridLengthHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IGridLengthHelper[] = L"Windows.UI.Xaml.IGridLengthHelper";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IGridLengthHelperStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.GridLengthHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IGridLengthHelperStatics[] = L"Windows.UI.Xaml.IGridLengthHelperStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Auto)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics* This,
        struct __x_ABI_CWindows_CUI_CXaml_CGridLength* value);
    HRESULT (STDMETHODCALLTYPE* FromPixels)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics* This,
        DOUBLE pixels,
        struct __x_ABI_CWindows_CUI_CXaml_CGridLength* result);
    HRESULT (STDMETHODCALLTYPE* FromValueAndType)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics* This,
        DOUBLE value,
        enum __x_ABI_CWindows_CUI_CXaml_CGridUnitType type,
        struct __x_ABI_CWindows_CUI_CXaml_CGridLength* result);
    HRESULT (STDMETHODCALLTYPE* GetIsAbsolute)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics* This,
        struct __x_ABI_CWindows_CUI_CXaml_CGridLength target,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetIsAuto)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics* This,
        struct __x_ABI_CWindows_CUI_CXaml_CGridLength target,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetIsStar)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics* This,
        struct __x_ABI_CWindows_CUI_CXaml_CGridLength target,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Equals)(__x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics* This,
        struct __x_ABI_CWindows_CUI_CXaml_CGridLength target,
        struct __x_ABI_CWindows_CUI_CXaml_CGridLength value,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_get_Auto(This, value) \
    ((This)->lpVtbl->get_Auto(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_FromPixels(This, pixels, result) \
    ((This)->lpVtbl->FromPixels(This, pixels, result))

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_FromValueAndType(This, value, type, result) \
    ((This)->lpVtbl->FromValueAndType(This, value, type, result))

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_GetIsAbsolute(This, target, result) \
    ((This)->lpVtbl->GetIsAbsolute(This, target, result))

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_GetIsAuto(This, target, result) \
    ((This)->lpVtbl->GetIsAuto(This, target, result))

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_GetIsStar(This, target, result) \
    ((This)->lpVtbl->GetIsStar(This, target, result))

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_Equals(This, target, value, result) \
    ((This)->lpVtbl->Equals(This, target, value, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IMediaFailedRoutedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.MediaFailedRoutedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IMediaFailedRoutedEventArgs[] = L"Windows.UI.Xaml.IMediaFailedRoutedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ErrorTrace)(__x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs* This,
        HSTRING* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_get_ErrorTrace(This, value) \
    ((This)->lpVtbl->get_ErrorTrace(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IPointHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.PointHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPointHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIPointHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPointHelper[] = L"Windows.UI.Xaml.IPointHelper";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIPointHelperVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIPointHelper* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIPointHelper* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIPointHelper* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIPointHelper* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIPointHelper* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIPointHelper* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIPointHelperVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIPointHelper
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIPointHelperVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelper_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelper_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelper_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelper_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelper_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelper_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPointHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPointHelper_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IPointHelperStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.PointHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPointHelperStatics[] = L"Windows.UI.Xaml.IPointHelperStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIPointHelperStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* FromCoordinates)(__x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics* This,
        FLOAT x,
        FLOAT y,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIPointHelperStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIPointHelperStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_FromCoordinates(This, x, y, result) \
    ((This)->lpVtbl->FromCoordinates(This, x, y, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IPropertyMetadata
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.PropertyMetadata
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPropertyMetadata[] = L"Windows.UI.Xaml.IPropertyMetadata";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DefaultValue)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_CreateDefaultValueCallback)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata* This,
        __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_get_DefaultValue(This, value) \
    ((This)->lpVtbl->get_DefaultValue(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_get_CreateDefaultValueCallback(This, value) \
    ((This)->lpVtbl->get_CreateDefaultValueCallback(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IPropertyMetadataFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.PropertyMetadata
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPropertyMetadataFactory[] = L"Windows.UI.Xaml.IPropertyMetadataFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithDefaultValue)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory* This,
        IInspectable* defaultValue,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata** value);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithDefaultValueAndCallback)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory* This,
        IInspectable* defaultValue,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback* propertyChangedCallback,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_CreateInstanceWithDefaultValue(This, defaultValue, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithDefaultValue(This, defaultValue, baseInterface, innerInterface, value))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_CreateInstanceWithDefaultValueAndCallback(This, defaultValue, propertyChangedCallback, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithDefaultValueAndCallback(This, defaultValue, propertyChangedCallback, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IPropertyMetadataStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.PropertyMetadata
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPropertyMetadataStatics[] = L"Windows.UI.Xaml.IPropertyMetadataStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateWithDefaultValue)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics* This,
        IInspectable* defaultValue,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata** result);
    HRESULT (STDMETHODCALLTYPE* CreateWithDefaultValueAndCallback)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics* This,
        IInspectable* defaultValue,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback* propertyChangedCallback,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata** result);
    HRESULT (STDMETHODCALLTYPE* CreateWithFactory)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback* createDefaultValueCallback,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata** result);
    HRESULT (STDMETHODCALLTYPE* CreateWithFactoryAndCallback)(__x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback* createDefaultValueCallback,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback* propertyChangedCallback,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_CreateWithDefaultValue(This, defaultValue, result) \
    ((This)->lpVtbl->CreateWithDefaultValue(This, defaultValue, result))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_CreateWithDefaultValueAndCallback(This, defaultValue, propertyChangedCallback, result) \
    ((This)->lpVtbl->CreateWithDefaultValueAndCallback(This, defaultValue, propertyChangedCallback, result))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_CreateWithFactory(This, createDefaultValueCallback, result) \
    ((This)->lpVtbl->CreateWithFactory(This, createDefaultValueCallback, result))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_CreateWithFactoryAndCallback(This, createDefaultValueCallback, propertyChangedCallback, result) \
    ((This)->lpVtbl->CreateWithFactoryAndCallback(This, createDefaultValueCallback, propertyChangedCallback, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IPropertyPath
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.PropertyPath
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPropertyPath[] = L"Windows.UI.Xaml.IPropertyPath";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIPropertyPathVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIPropertyPath* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIPropertyPath* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIPropertyPath* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIPropertyPath* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIPropertyPath* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIPropertyPath* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Path)(__x_ABI_CWindows_CUI_CXaml_CIPropertyPath* This,
        HSTRING* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIPropertyPathVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIPropertyPath
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIPropertyPathVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPath_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPath_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPath_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPath_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPath_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPath_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPath_get_Path(This, value) \
    ((This)->lpVtbl->get_Path(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPropertyPath;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IPropertyPathFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.PropertyPath
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPropertyPathFactory[] = L"Windows.UI.Xaml.IPropertyPathFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory* This,
        HSTRING path,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyPath** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_CreateInstance(This, path, value) \
    ((This)->lpVtbl->CreateInstance(This, path, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IRectHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.RectHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIRectHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIRectHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IRectHelper[] = L"Windows.UI.Xaml.IRectHelper";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIRectHelperVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIRectHelper* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIRectHelper* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIRectHelper* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIRectHelper* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIRectHelper* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIRectHelper* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIRectHelperVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIRectHelper
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIRectHelperVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelper_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelper_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelper_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelper_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelper_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelper_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIRectHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIRectHelper_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IRectHelperStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.RectHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IRectHelperStatics[] = L"Windows.UI.Xaml.IRectHelperStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIRectHelperStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Empty)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* FromCoordinatesAndDimensions)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This,
        FLOAT x,
        FLOAT y,
        FLOAT width,
        FLOAT height,
        struct __x_ABI_CWindows_CFoundation_CRect* result);
    HRESULT (STDMETHODCALLTYPE* FromPoints)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CPoint point1,
        struct __x_ABI_CWindows_CFoundation_CPoint point2,
        struct __x_ABI_CWindows_CFoundation_CRect* result);
    HRESULT (STDMETHODCALLTYPE* FromLocationAndSize)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CPoint location,
        struct __x_ABI_CWindows_CFoundation_CSize size,
        struct __x_ABI_CWindows_CFoundation_CRect* result);
    HRESULT (STDMETHODCALLTYPE* GetIsEmpty)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CRect target,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetBottom)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CRect target,
        FLOAT* result);
    HRESULT (STDMETHODCALLTYPE* GetLeft)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CRect target,
        FLOAT* result);
    HRESULT (STDMETHODCALLTYPE* GetRight)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CRect target,
        FLOAT* result);
    HRESULT (STDMETHODCALLTYPE* GetTop)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CRect target,
        FLOAT* result);
    HRESULT (STDMETHODCALLTYPE* Contains)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CRect target,
        struct __x_ABI_CWindows_CFoundation_CPoint point,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Equals)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CRect target,
        struct __x_ABI_CWindows_CFoundation_CRect value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Intersect)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CRect target,
        struct __x_ABI_CWindows_CFoundation_CRect rect,
        struct __x_ABI_CWindows_CFoundation_CRect* result);
    HRESULT (STDMETHODCALLTYPE* UnionWithPoint)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CRect target,
        struct __x_ABI_CWindows_CFoundation_CPoint point,
        struct __x_ABI_CWindows_CFoundation_CRect* result);
    HRESULT (STDMETHODCALLTYPE* UnionWithRect)(__x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CRect target,
        struct __x_ABI_CWindows_CFoundation_CRect rect,
        struct __x_ABI_CWindows_CFoundation_CRect* result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIRectHelperStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIRectHelperStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_get_Empty(This, value) \
    ((This)->lpVtbl->get_Empty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_FromCoordinatesAndDimensions(This, x, y, width, height, result) \
    ((This)->lpVtbl->FromCoordinatesAndDimensions(This, x, y, width, height, result))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_FromPoints(This, point1, point2, result) \
    ((This)->lpVtbl->FromPoints(This, point1, point2, result))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_FromLocationAndSize(This, location, size, result) \
    ((This)->lpVtbl->FromLocationAndSize(This, location, size, result))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_GetIsEmpty(This, target, result) \
    ((This)->lpVtbl->GetIsEmpty(This, target, result))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_GetBottom(This, target, result) \
    ((This)->lpVtbl->GetBottom(This, target, result))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_GetLeft(This, target, result) \
    ((This)->lpVtbl->GetLeft(This, target, result))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_GetRight(This, target, result) \
    ((This)->lpVtbl->GetRight(This, target, result))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_GetTop(This, target, result) \
    ((This)->lpVtbl->GetTop(This, target, result))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_Contains(This, target, point, result) \
    ((This)->lpVtbl->Contains(This, target, point, result))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_Equals(This, target, value, result) \
    ((This)->lpVtbl->Equals(This, target, value, result))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_Intersect(This, target, rect, result) \
    ((This)->lpVtbl->Intersect(This, target, rect, result))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_UnionWithPoint(This, target, point, result) \
    ((This)->lpVtbl->UnionWithPoint(This, target, point, result))

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_UnionWithRect(This, target, rect, result) \
    ((This)->lpVtbl->UnionWithRect(This, target, rect, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IResourceDictionary
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ResourceDictionary
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IResourceDictionary[] = L"Windows.UI.Xaml.IResourceDictionary";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIResourceDictionary* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIResourceDictionary* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIResourceDictionary* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIResourceDictionary* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIResourceDictionary* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIResourceDictionary* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CUI_CXaml_CIResourceDictionary* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CWindows_CUI_CXaml_CIResourceDictionary* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_MergedDictionaries)(__x_ABI_CWindows_CUI_CXaml_CIResourceDictionary* This,
        __FIVector_1_Windows__CUI__CXaml__CResourceDictionary** value);
    HRESULT (STDMETHODCALLTYPE* get_ThemeDictionaries)(__x_ABI_CWindows_CUI_CXaml_CIResourceDictionary* This,
        __FIMap_2_IInspectable_IInspectable** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_get_Source(This, value) \
    ((This)->lpVtbl->get_Source(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_put_Source(This, value) \
    ((This)->lpVtbl->put_Source(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_get_MergedDictionaries(This, value) \
    ((This)->lpVtbl->get_MergedDictionaries(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_get_ThemeDictionaries(This, value) \
    ((This)->lpVtbl->get_ThemeDictionaries(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIResourceDictionary;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IResourceDictionaryFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ResourceDictionary
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IResourceDictionaryFactory[] = L"Windows.UI.Xaml.IResourceDictionaryFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IRoutedEvent
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.RoutedEvent
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IRoutedEvent[] = L"Windows.UI.Xaml.IRoutedEvent";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIRoutedEventVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEvent* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEvent* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEvent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEvent* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEvent* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEvent* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIRoutedEventVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIRoutedEventVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIRoutedEvent;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IRoutedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.RoutedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IRoutedEventArgs[] = L"Windows.UI.Xaml.IRoutedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_OriginalSource)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs* This,
        IInspectable** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_get_OriginalSource(This, value) \
    ((This)->lpVtbl->get_OriginalSource(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IRoutedEventArgsFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.RoutedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IRoutedEventArgsFactory[] = L"Windows.UI.Xaml.IRoutedEventArgsFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IScalarTransition
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ScalarTransition
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIScalarTransition_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIScalarTransition_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IScalarTransition[] = L"Windows.UI.Xaml.IScalarTransition";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIScalarTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIScalarTransition* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIScalarTransition* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIScalarTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIScalarTransition* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIScalarTransition* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIScalarTransition* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CUI_CXaml_CIScalarTransition* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_Duration)(__x_ABI_CWindows_CUI_CXaml_CIScalarTransition* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIScalarTransitionVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIScalarTransition
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIScalarTransitionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIScalarTransition_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIScalarTransition_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIScalarTransition_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIScalarTransition_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIScalarTransition_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIScalarTransition_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIScalarTransition_get_Duration(This, value) \
    ((This)->lpVtbl->get_Duration(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIScalarTransition_put_Duration(This, value) \
    ((This)->lpVtbl->put_Duration(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIScalarTransition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIScalarTransition_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IScalarTransitionFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ScalarTransition
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IScalarTransitionFactory[] = L"Windows.UI.Xaml.IScalarTransitionFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIScalarTransition** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIScalarTransitionFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.ISetter
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Setter
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISetter_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISetter_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISetter[] = L"Windows.UI.Xaml.ISetter";
typedef struct __x_ABI_CWindows_CUI_CXaml_CISetterVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CISetter* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CISetter* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CISetter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CISetter* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CISetter* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CISetter* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Property)(__x_ABI_CWindows_CUI_CXaml_CISetter* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* put_Property)(__x_ABI_CWindows_CUI_CXaml_CISetter* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CUI_CXaml_CISetter* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Value)(__x_ABI_CWindows_CUI_CXaml_CISetter* This,
        IInspectable* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CISetterVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CISetter
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISetterVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CISetter_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CISetter_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CISetter_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CISetter_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CISetter_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CISetter_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CISetter_get_Property(This, value) \
    ((This)->lpVtbl->get_Property(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CISetter_put_Property(This, value) \
    ((This)->lpVtbl->put_Property(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CISetter_get_Value(This, value) \
    ((This)->lpVtbl->get_Value(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CISetter_put_Value(This, value) \
    ((This)->lpVtbl->put_Value(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISetter;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISetter_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ISetter2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Setter
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISetter2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISetter2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISetter2[] = L"Windows.UI.Xaml.ISetter2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CISetter2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CISetter2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CISetter2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CISetter2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CISetter2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CISetter2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CISetter2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Target)(__x_ABI_CWindows_CUI_CXaml_CISetter2* This,
        __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath** value);
    HRESULT (STDMETHODCALLTYPE* put_Target)(__x_ABI_CWindows_CUI_CXaml_CISetter2* This,
        __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CISetter2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CISetter2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISetter2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CISetter2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CISetter2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CISetter2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CISetter2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CISetter2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CISetter2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CISetter2_get_Target(This, value) \
    ((This)->lpVtbl->get_Target(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CISetter2_put_Target(This, value) \
    ((This)->lpVtbl->put_Target(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISetter2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISetter2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ISetterBase
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.SetterBase
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISetterBase_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISetterBase_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISetterBase[] = L"Windows.UI.Xaml.ISetterBase";
typedef struct __x_ABI_CWindows_CUI_CXaml_CISetterBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CISetterBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CISetterBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CISetterBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CISetterBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CISetterBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CISetterBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsSealed)(__x_ABI_CWindows_CUI_CXaml_CISetterBase* This,
        boolean* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CISetterBaseVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CISetterBase
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISetterBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CISetterBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CISetterBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CISetterBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CISetterBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CISetterBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CISetterBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CISetterBase_get_IsSealed(This, value) \
    ((This)->lpVtbl->get_IsSealed(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISetterBase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISetterBase_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ISetterBaseCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.SetterBaseCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISetterBaseCollection[] = L"Windows.UI.Xaml.ISetterBaseCollection";
typedef struct __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsSealed)(__x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection* This,
        boolean* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollectionVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_get_IsSealed(This, value) \
    ((This)->lpVtbl->get_IsSealed(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ISetterBaseFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.SetterBase
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISetterBaseFactory[] = L"Windows.UI.Xaml.ISetterBaseFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ISetterFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Setter
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISetterFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISetterFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISetterFactory[] = L"Windows.UI.Xaml.ISetterFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CISetterFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CISetterFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CISetterFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CISetterFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CISetterFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CISetterFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CISetterFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CISetterFactory* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* targetProperty,
        IInspectable* value,
        __x_ABI_CWindows_CUI_CXaml_CISetter** instance);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CISetterFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CISetterFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISetterFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CISetterFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CISetterFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CISetterFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CISetterFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CISetterFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CISetterFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CISetterFactory_CreateInstance(This, targetProperty, value, instance) \
    ((This)->lpVtbl->CreateInstance(This, targetProperty, value, instance))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISetterFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISetterFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ISizeChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.SizeChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISizeChangedEventArgs[] = L"Windows.UI.Xaml.ISizeChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PreviousSize)(__x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_NewSize)(__x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_get_PreviousSize(This, value) \
    ((This)->lpVtbl->get_PreviousSize(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_get_NewSize(This, value) \
    ((This)->lpVtbl->get_NewSize(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ISizeHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.SizeHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISizeHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISizeHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISizeHelper[] = L"Windows.UI.Xaml.ISizeHelper";
typedef struct __x_ABI_CWindows_CUI_CXaml_CISizeHelperVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CISizeHelper* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CISizeHelper* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CISizeHelper* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CISizeHelper* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CISizeHelper* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CISizeHelper* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CISizeHelperVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CISizeHelper
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISizeHelperVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelper_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelper_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelper_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelper_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelper_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelper_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISizeHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISizeHelper_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ISizeHelperStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.SizeHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISizeHelperStatics[] = L"Windows.UI.Xaml.ISizeHelperStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CISizeHelperStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Empty)(__x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* FromDimensions)(__x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics* This,
        FLOAT width,
        FLOAT height,
        struct __x_ABI_CWindows_CFoundation_CSize* result);
    HRESULT (STDMETHODCALLTYPE* GetIsEmpty)(__x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CSize target,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Equals)(__x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CSize target,
        struct __x_ABI_CWindows_CFoundation_CSize value,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CISizeHelperStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISizeHelperStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_get_Empty(This, value) \
    ((This)->lpVtbl->get_Empty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_FromDimensions(This, width, height, result) \
    ((This)->lpVtbl->FromDimensions(This, width, height, result))

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_GetIsEmpty(This, target, result) \
    ((This)->lpVtbl->GetIsEmpty(This, target, result))

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_Equals(This, target, value, result) \
    ((This)->lpVtbl->Equals(This, target, value, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IStateTrigger
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.StateTrigger
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStateTrigger[] = L"Windows.UI.Xaml.IStateTrigger";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIStateTrigger* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIStateTrigger* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIStateTrigger* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIStateTrigger* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIStateTrigger* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIStateTrigger* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsActive)(__x_ABI_CWindows_CUI_CXaml_CIStateTrigger* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsActive)(__x_ABI_CWindows_CUI_CXaml_CIStateTrigger* This,
        boolean value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIStateTriggerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIStateTrigger
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIStateTrigger_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTrigger_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTrigger_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTrigger_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTrigger_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTrigger_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTrigger_get_IsActive(This, value) \
    ((This)->lpVtbl->get_IsActive(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTrigger_put_IsActive(This, value) \
    ((This)->lpVtbl->put_IsActive(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStateTrigger;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IStateTriggerBase
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.StateTriggerBase
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStateTriggerBase[] = L"Windows.UI.Xaml.IStateTriggerBase";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IStateTriggerBaseFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.StateTriggerBase
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStateTriggerBaseFactory[] = L"Windows.UI.Xaml.IStateTriggerBaseFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IStateTriggerBaseProtected
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.StateTriggerBase
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStateTriggerBaseProtected[] = L"Windows.UI.Xaml.IStateTriggerBaseProtected";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtectedVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SetActive)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected* This,
        boolean IsActive);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtectedVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtectedVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_SetActive(This, IsActive) \
    ((This)->lpVtbl->SetActive(This, IsActive))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IStateTriggerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.StateTrigger
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStateTriggerStatics[] = L"Windows.UI.Xaml.IStateTriggerStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsActiveProperty)(__x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_get_IsActiveProperty(This, value) \
    ((This)->lpVtbl->get_IsActiveProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IStyle
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Style
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStyle_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIStyle_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStyle[] = L"Windows.UI.Xaml.IStyle";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIStyleVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIStyle* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIStyle* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIStyle* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIStyle* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIStyle* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIStyle* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsSealed)(__x_ABI_CWindows_CUI_CXaml_CIStyle* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Setters)(__x_ABI_CWindows_CUI_CXaml_CIStyle* This,
        __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_TargetType)(__x_ABI_CWindows_CUI_CXaml_CIStyle* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetType)(__x_ABI_CWindows_CUI_CXaml_CIStyle* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName value);
    HRESULT (STDMETHODCALLTYPE* get_BasedOn)(__x_ABI_CWindows_CUI_CXaml_CIStyle* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);
    HRESULT (STDMETHODCALLTYPE* put_BasedOn)(__x_ABI_CWindows_CUI_CXaml_CIStyle* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* value);
    HRESULT (STDMETHODCALLTYPE* Seal)(__x_ABI_CWindows_CUI_CXaml_CIStyle* This);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIStyleVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIStyle
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIStyleVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_get_IsSealed(This, value) \
    ((This)->lpVtbl->get_IsSealed(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_get_Setters(This, value) \
    ((This)->lpVtbl->get_Setters(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_get_TargetType(This, value) \
    ((This)->lpVtbl->get_TargetType(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_put_TargetType(This, value) \
    ((This)->lpVtbl->put_TargetType(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_get_BasedOn(This, value) \
    ((This)->lpVtbl->get_BasedOn(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_put_BasedOn(This, value) \
    ((This)->lpVtbl->put_BasedOn(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_Seal(This) \
    ((This)->lpVtbl->Seal(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStyle;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStyle_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IStyleFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Style
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStyleFactory[] = L"Windows.UI.Xaml.IStyleFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIStyleFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIStyleFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIStyleFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIStyleFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIStyleFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIStyleFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIStyleFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIStyleFactory* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName targetType,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIStyleFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIStyleFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIStyleFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIStyleFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIStyleFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIStyleFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIStyleFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIStyleFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIStyleFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIStyleFactory_CreateInstance(This, targetType, value) \
    ((This)->lpVtbl->CreateInstance(This, targetType, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStyleFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ITargetPropertyPath
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.TargetPropertyPath
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ITargetPropertyPath[] = L"Windows.UI.Xaml.ITargetPropertyPath";
typedef struct __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Path)(__x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath* This,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyPath** value);
    HRESULT (STDMETHODCALLTYPE* put_Path)(__x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath* This,
        __x_ABI_CWindows_CUI_CXaml_CIPropertyPath* value);
    HRESULT (STDMETHODCALLTYPE* get_Target)(__x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Target)(__x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath* This,
        IInspectable* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_get_Path(This, value) \
    ((This)->lpVtbl->get_Path(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_put_Path(This, value) \
    ((This)->lpVtbl->put_Path(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_get_Target(This, value) \
    ((This)->lpVtbl->get_Target(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_put_Target(This, value) \
    ((This)->lpVtbl->put_Target(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ITargetPropertyPathFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.TargetPropertyPath
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ITargetPropertyPathFactory[] = L"Windows.UI.Xaml.ITargetPropertyPathFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty* targetProperty,
        __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_CreateInstance(This, targetProperty, value) \
    ((This)->lpVtbl->CreateInstance(This, targetProperty, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IThicknessHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ThicknessHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IThicknessHelper[] = L"Windows.UI.Xaml.IThicknessHelper";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIThicknessHelper* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIThicknessHelper* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIThicknessHelper* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIThicknessHelper* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIThicknessHelper* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIThicknessHelper* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIThicknessHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IThicknessHelperStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.ThicknessHelper
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IThicknessHelperStatics[] = L"Windows.UI.Xaml.IThicknessHelperStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* FromLengths)(__x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics* This,
        DOUBLE left,
        DOUBLE top,
        DOUBLE right,
        DOUBLE bottom,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* result);
    HRESULT (STDMETHODCALLTYPE* FromUniformLength)(__x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics* This,
        DOUBLE uniformLength,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_FromLengths(This, left, top, right, bottom, result) \
    ((This)->lpVtbl->FromLengths(This, left, top, right, bottom, result))

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_FromUniformLength(This, uniformLength, result) \
    ((This)->lpVtbl->FromUniformLength(This, uniformLength, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ITriggerAction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.TriggerAction
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerAction_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerAction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ITriggerAction[] = L"Windows.UI.Xaml.ITriggerAction";
typedef struct __x_ABI_CWindows_CUI_CXaml_CITriggerActionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CITriggerAction* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CITriggerAction* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CITriggerAction* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CITriggerAction* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CITriggerAction* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CITriggerAction* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CITriggerActionVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CITriggerAction
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CITriggerActionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CITriggerAction_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerAction_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerAction_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerAction_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerAction_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerAction_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CITriggerAction;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerAction_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ITriggerActionFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.TriggerAction
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ITriggerActionFactory[] = L"Windows.UI.Xaml.ITriggerActionFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ITriggerBase
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.TriggerBase
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerBase_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerBase_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ITriggerBase[] = L"Windows.UI.Xaml.ITriggerBase";
typedef struct __x_ABI_CWindows_CUI_CXaml_CITriggerBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CITriggerBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CITriggerBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CITriggerBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CITriggerBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CITriggerBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CITriggerBase* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CITriggerBaseVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CITriggerBase
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CITriggerBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CITriggerBase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerBase_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.ITriggerBaseFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.TriggerBase
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ITriggerBaseFactory[] = L"Windows.UI.Xaml.ITriggerBaseFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IUIElement
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement[] = L"Windows.UI.Xaml.IUIElement";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DesiredSize)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_AllowDrop)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowDrop)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Opacity)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Opacity)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Clip)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry** value);
    HRESULT (STDMETHODCALLTYPE* put_Clip)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry* value);
    HRESULT (STDMETHODCALLTYPE* get_RenderTransform)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform** value);
    HRESULT (STDMETHODCALLTYPE* put_RenderTransform)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform* value);
    HRESULT (STDMETHODCALLTYPE* get_Projection)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection** value);
    HRESULT (STDMETHODCALLTYPE* put_Projection)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection* value);
    HRESULT (STDMETHODCALLTYPE* get_RenderTransformOrigin)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_RenderTransformOrigin)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_IsHitTestVisible)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHitTestVisible)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Visibility)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVisibility* value);
    HRESULT (STDMETHODCALLTYPE* put_Visibility)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVisibility value);
    HRESULT (STDMETHODCALLTYPE* get_RenderSize)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_UseLayoutRounding)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_UseLayoutRounding)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Transitions)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition** value);
    HRESULT (STDMETHODCALLTYPE* put_Transitions)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition* value);
    HRESULT (STDMETHODCALLTYPE* get_CacheMode)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode** value);
    HRESULT (STDMETHODCALLTYPE* put_CacheMode)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode* value);
    HRESULT (STDMETHODCALLTYPE* get_IsTapEnabled)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTapEnabled)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsDoubleTapEnabled)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsDoubleTapEnabled)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsRightTapEnabled)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsRightTapEnabled)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsHoldingEnabled)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHoldingEnabled)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ManipulationMode)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CManipulationModes* value);
    HRESULT (STDMETHODCALLTYPE* put_ManipulationMode)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CManipulationModes value);
    HRESULT (STDMETHODCALLTYPE* get_PointerCaptures)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer** value);
    HRESULT (STDMETHODCALLTYPE* add_KeyUp)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_KeyUp)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_KeyDown)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_KeyDown)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_GotFocus)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_GotFocus)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_LostFocus)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LostFocus)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DragEnter)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DragEnter)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DragLeave)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DragLeave)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DragOver)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DragOver)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Drop)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Drop)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerPressed)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerPressed)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerMoved)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerMoved)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerReleased)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerReleased)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerEntered)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerEntered)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerExited)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerExited)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerCaptureLost)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerCaptureLost)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerCanceled)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerCanceled)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PointerWheelChanged)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PointerWheelChanged)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Tapped)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CITappedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Tapped)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DoubleTapped)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DoubleTapped)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Holding)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Holding)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_RightTapped)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RightTapped)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ManipulationStarting)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ManipulationStarting)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ManipulationInertiaStarting)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ManipulationInertiaStarting)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ManipulationStarted)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ManipulationStarted)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ManipulationDelta)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ManipulationDelta)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ManipulationCompleted)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ManipulationCompleted)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Measure)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        struct __x_ABI_CWindows_CFoundation_CSize availableSize);
    HRESULT (STDMETHODCALLTYPE* Arrange)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        struct __x_ABI_CWindows_CFoundation_CRect finalRect);
    HRESULT (STDMETHODCALLTYPE* CapturePointer)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointer* value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* ReleasePointerCapture)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointer* value);
    HRESULT (STDMETHODCALLTYPE* ReleasePointerCaptures)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This);
    HRESULT (STDMETHODCALLTYPE* AddHandler)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent* routedEvent,
        IInspectable* handler,
        boolean handledEventsToo);
    HRESULT (STDMETHODCALLTYPE* RemoveHandler)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent* routedEvent,
        IInspectable* handler);
    HRESULT (STDMETHODCALLTYPE* TransformToVisual)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* visual,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform** result);
    HRESULT (STDMETHODCALLTYPE* InvalidateMeasure)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This);
    HRESULT (STDMETHODCALLTYPE* InvalidateArrange)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This);
    HRESULT (STDMETHODCALLTYPE* UpdateLayout)(__x_ABI_CWindows_CUI_CXaml_CIUIElement* This);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElementVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElement
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_DesiredSize(This, value) \
    ((This)->lpVtbl->get_DesiredSize(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_AllowDrop(This, value) \
    ((This)->lpVtbl->get_AllowDrop(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_AllowDrop(This, value) \
    ((This)->lpVtbl->put_AllowDrop(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_Opacity(This, value) \
    ((This)->lpVtbl->get_Opacity(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_Opacity(This, value) \
    ((This)->lpVtbl->put_Opacity(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_Clip(This, value) \
    ((This)->lpVtbl->get_Clip(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_Clip(This, value) \
    ((This)->lpVtbl->put_Clip(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_RenderTransform(This, value) \
    ((This)->lpVtbl->get_RenderTransform(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_RenderTransform(This, value) \
    ((This)->lpVtbl->put_RenderTransform(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_Projection(This, value) \
    ((This)->lpVtbl->get_Projection(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_Projection(This, value) \
    ((This)->lpVtbl->put_Projection(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_RenderTransformOrigin(This, value) \
    ((This)->lpVtbl->get_RenderTransformOrigin(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_RenderTransformOrigin(This, value) \
    ((This)->lpVtbl->put_RenderTransformOrigin(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_IsHitTestVisible(This, value) \
    ((This)->lpVtbl->get_IsHitTestVisible(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_IsHitTestVisible(This, value) \
    ((This)->lpVtbl->put_IsHitTestVisible(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_Visibility(This, value) \
    ((This)->lpVtbl->get_Visibility(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_Visibility(This, value) \
    ((This)->lpVtbl->put_Visibility(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_RenderSize(This, value) \
    ((This)->lpVtbl->get_RenderSize(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_UseLayoutRounding(This, value) \
    ((This)->lpVtbl->get_UseLayoutRounding(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_UseLayoutRounding(This, value) \
    ((This)->lpVtbl->put_UseLayoutRounding(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_Transitions(This, value) \
    ((This)->lpVtbl->get_Transitions(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_Transitions(This, value) \
    ((This)->lpVtbl->put_Transitions(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_CacheMode(This, value) \
    ((This)->lpVtbl->get_CacheMode(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_CacheMode(This, value) \
    ((This)->lpVtbl->put_CacheMode(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_IsTapEnabled(This, value) \
    ((This)->lpVtbl->get_IsTapEnabled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_IsTapEnabled(This, value) \
    ((This)->lpVtbl->put_IsTapEnabled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_IsDoubleTapEnabled(This, value) \
    ((This)->lpVtbl->get_IsDoubleTapEnabled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_IsDoubleTapEnabled(This, value) \
    ((This)->lpVtbl->put_IsDoubleTapEnabled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_IsRightTapEnabled(This, value) \
    ((This)->lpVtbl->get_IsRightTapEnabled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_IsRightTapEnabled(This, value) \
    ((This)->lpVtbl->put_IsRightTapEnabled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_IsHoldingEnabled(This, value) \
    ((This)->lpVtbl->get_IsHoldingEnabled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_IsHoldingEnabled(This, value) \
    ((This)->lpVtbl->put_IsHoldingEnabled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_ManipulationMode(This, value) \
    ((This)->lpVtbl->get_ManipulationMode(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_ManipulationMode(This, value) \
    ((This)->lpVtbl->put_ManipulationMode(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_PointerCaptures(This, value) \
    ((This)->lpVtbl->get_PointerCaptures(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_KeyUp(This, handler, token) \
    ((This)->lpVtbl->add_KeyUp(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_KeyUp(This, token) \
    ((This)->lpVtbl->remove_KeyUp(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_KeyDown(This, handler, token) \
    ((This)->lpVtbl->add_KeyDown(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_KeyDown(This, token) \
    ((This)->lpVtbl->remove_KeyDown(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_GotFocus(This, handler, token) \
    ((This)->lpVtbl->add_GotFocus(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_GotFocus(This, token) \
    ((This)->lpVtbl->remove_GotFocus(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_LostFocus(This, handler, token) \
    ((This)->lpVtbl->add_LostFocus(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_LostFocus(This, token) \
    ((This)->lpVtbl->remove_LostFocus(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_DragEnter(This, handler, token) \
    ((This)->lpVtbl->add_DragEnter(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_DragEnter(This, token) \
    ((This)->lpVtbl->remove_DragEnter(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_DragLeave(This, handler, token) \
    ((This)->lpVtbl->add_DragLeave(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_DragLeave(This, token) \
    ((This)->lpVtbl->remove_DragLeave(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_DragOver(This, handler, token) \
    ((This)->lpVtbl->add_DragOver(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_DragOver(This, token) \
    ((This)->lpVtbl->remove_DragOver(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_Drop(This, handler, token) \
    ((This)->lpVtbl->add_Drop(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_Drop(This, token) \
    ((This)->lpVtbl->remove_Drop(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_PointerPressed(This, handler, token) \
    ((This)->lpVtbl->add_PointerPressed(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_PointerPressed(This, token) \
    ((This)->lpVtbl->remove_PointerPressed(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_PointerMoved(This, handler, token) \
    ((This)->lpVtbl->add_PointerMoved(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_PointerMoved(This, token) \
    ((This)->lpVtbl->remove_PointerMoved(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_PointerReleased(This, handler, token) \
    ((This)->lpVtbl->add_PointerReleased(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_PointerReleased(This, token) \
    ((This)->lpVtbl->remove_PointerReleased(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_PointerEntered(This, handler, token) \
    ((This)->lpVtbl->add_PointerEntered(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_PointerEntered(This, token) \
    ((This)->lpVtbl->remove_PointerEntered(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_PointerExited(This, handler, token) \
    ((This)->lpVtbl->add_PointerExited(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_PointerExited(This, token) \
    ((This)->lpVtbl->remove_PointerExited(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_PointerCaptureLost(This, handler, token) \
    ((This)->lpVtbl->add_PointerCaptureLost(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_PointerCaptureLost(This, token) \
    ((This)->lpVtbl->remove_PointerCaptureLost(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_PointerCanceled(This, handler, token) \
    ((This)->lpVtbl->add_PointerCanceled(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_PointerCanceled(This, token) \
    ((This)->lpVtbl->remove_PointerCanceled(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_PointerWheelChanged(This, handler, token) \
    ((This)->lpVtbl->add_PointerWheelChanged(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_PointerWheelChanged(This, token) \
    ((This)->lpVtbl->remove_PointerWheelChanged(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_Tapped(This, handler, token) \
    ((This)->lpVtbl->add_Tapped(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_Tapped(This, token) \
    ((This)->lpVtbl->remove_Tapped(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_DoubleTapped(This, handler, token) \
    ((This)->lpVtbl->add_DoubleTapped(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_DoubleTapped(This, token) \
    ((This)->lpVtbl->remove_DoubleTapped(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_Holding(This, handler, token) \
    ((This)->lpVtbl->add_Holding(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_Holding(This, token) \
    ((This)->lpVtbl->remove_Holding(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_RightTapped(This, handler, token) \
    ((This)->lpVtbl->add_RightTapped(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_RightTapped(This, token) \
    ((This)->lpVtbl->remove_RightTapped(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_ManipulationStarting(This, handler, token) \
    ((This)->lpVtbl->add_ManipulationStarting(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_ManipulationStarting(This, token) \
    ((This)->lpVtbl->remove_ManipulationStarting(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_ManipulationInertiaStarting(This, handler, token) \
    ((This)->lpVtbl->add_ManipulationInertiaStarting(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_ManipulationInertiaStarting(This, token) \
    ((This)->lpVtbl->remove_ManipulationInertiaStarting(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_ManipulationStarted(This, handler, token) \
    ((This)->lpVtbl->add_ManipulationStarted(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_ManipulationStarted(This, token) \
    ((This)->lpVtbl->remove_ManipulationStarted(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_ManipulationDelta(This, handler, token) \
    ((This)->lpVtbl->add_ManipulationDelta(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_ManipulationDelta(This, token) \
    ((This)->lpVtbl->remove_ManipulationDelta(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_ManipulationCompleted(This, handler, token) \
    ((This)->lpVtbl->add_ManipulationCompleted(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_ManipulationCompleted(This, token) \
    ((This)->lpVtbl->remove_ManipulationCompleted(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_Measure(This, availableSize) \
    ((This)->lpVtbl->Measure(This, availableSize))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_Arrange(This, finalRect) \
    ((This)->lpVtbl->Arrange(This, finalRect))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_CapturePointer(This, value, result) \
    ((This)->lpVtbl->CapturePointer(This, value, result))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_ReleasePointerCapture(This, value) \
    ((This)->lpVtbl->ReleasePointerCapture(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_ReleasePointerCaptures(This) \
    ((This)->lpVtbl->ReleasePointerCaptures(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_AddHandler(This, routedEvent, handler, handledEventsToo) \
    ((This)->lpVtbl->AddHandler(This, routedEvent, handler, handledEventsToo))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_RemoveHandler(This, routedEvent, handler) \
    ((This)->lpVtbl->RemoveHandler(This, routedEvent, handler))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_TransformToVisual(This, visual, result) \
    ((This)->lpVtbl->TransformToVisual(This, visual, result))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_InvalidateMeasure(This) \
    ((This)->lpVtbl->InvalidateMeasure(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_InvalidateArrange(This) \
    ((This)->lpVtbl->InvalidateArrange(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_UpdateLayout(This) \
    ((This)->lpVtbl->UpdateLayout(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IUIElement10
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement10_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement10_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement10[] = L"Windows.UI.Xaml.IUIElement10";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElement10Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElement10* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElement10* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElement10* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElement10* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElement10* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElement10* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ActualOffset)(__x_ABI_CWindows_CUI_CXaml_CIUIElement10* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* get_ActualSize)(__x_ABI_CWindows_CUI_CXaml_CIUIElement10* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* get_XamlRoot)(__x_ABI_CWindows_CUI_CXaml_CIUIElement10* This,
        __x_ABI_CWindows_CUI_CXaml_CIXamlRoot** value);
    HRESULT (STDMETHODCALLTYPE* put_XamlRoot)(__x_ABI_CWindows_CUI_CXaml_CIUIElement10* This,
        __x_ABI_CWindows_CUI_CXaml_CIXamlRoot* value);
    HRESULT (STDMETHODCALLTYPE* get_UIContext)(__x_ABI_CWindows_CUI_CXaml_CIUIElement10* This,
        __x_ABI_CWindows_CUI_CIUIContext** value);
    HRESULT (STDMETHODCALLTYPE* get_Shadow)(__x_ABI_CWindows_CUI_CXaml_CIUIElement10* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIShadow** value);
    HRESULT (STDMETHODCALLTYPE* put_Shadow)(__x_ABI_CWindows_CUI_CXaml_CIUIElement10* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIShadow* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElement10Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElement10
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElement10Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement10_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement10_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement10_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement10_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement10_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement10_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement10_get_ActualOffset(This, value) \
    ((This)->lpVtbl->get_ActualOffset(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement10_get_ActualSize(This, value) \
    ((This)->lpVtbl->get_ActualSize(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement10_get_XamlRoot(This, value) \
    ((This)->lpVtbl->get_XamlRoot(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement10_put_XamlRoot(This, value) \
    ((This)->lpVtbl->put_XamlRoot(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement10_get_UIContext(This, value) \
    ((This)->lpVtbl->get_UIContext(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement10_get_Shadow(This, value) \
    ((This)->lpVtbl->get_Shadow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement10_put_Shadow(This, value) \
    ((This)->lpVtbl->put_Shadow(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement10;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement10_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Xaml.IUIElement2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement2[] = L"Windows.UI.Xaml.IUIElement2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElement2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElement2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElement2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElement2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElement2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElement2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElement2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CompositeMode)(__x_ABI_CWindows_CUI_CXaml_CIUIElement2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CElementCompositeMode* value);
    HRESULT (STDMETHODCALLTYPE* put_CompositeMode)(__x_ABI_CWindows_CUI_CXaml_CIUIElement2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CElementCompositeMode value);
    HRESULT (STDMETHODCALLTYPE* CancelDirectManipulations)(__x_ABI_CWindows_CUI_CXaml_CIUIElement2* This,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElement2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElement2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElement2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2_get_CompositeMode(This, value) \
    ((This)->lpVtbl->get_CompositeMode(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2_put_CompositeMode(This, value) \
    ((This)->lpVtbl->put_CompositeMode(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2_CancelDirectManipulations(This, result) \
    ((This)->lpVtbl->CancelDirectManipulations(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IUIElement3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement3[] = L"Windows.UI.Xaml.IUIElement3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElement3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElement3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElement3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElement3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElement3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElement3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElement3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Transform3D)(__x_ABI_CWindows_CUI_CXaml_CIUIElement3* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CMedia3D_CITransform3D** value);
    HRESULT (STDMETHODCALLTYPE* put_Transform3D)(__x_ABI_CWindows_CUI_CXaml_CIUIElement3* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CMedia3D_CITransform3D* value);
    HRESULT (STDMETHODCALLTYPE* get_CanDrag)(__x_ABI_CWindows_CUI_CXaml_CIUIElement3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanDrag)(__x_ABI_CWindows_CUI_CXaml_CIUIElement3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_DragStarting)(__x_ABI_CWindows_CUI_CXaml_CIUIElement3* This,
        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DragStarting)(__x_ABI_CWindows_CUI_CXaml_CIUIElement3* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DropCompleted)(__x_ABI_CWindows_CUI_CXaml_CIUIElement3* This,
        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DropCompleted)(__x_ABI_CWindows_CUI_CXaml_CIUIElement3* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* StartDragAsync)(__x_ABI_CWindows_CUI_CXaml_CIUIElement3* This,
        __x_ABI_CWindows_CUI_CInput_CIPointerPoint* pointerPoint,
        __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation** operation);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElement3Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElement3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElement3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_get_Transform3D(This, value) \
    ((This)->lpVtbl->get_Transform3D(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_put_Transform3D(This, value) \
    ((This)->lpVtbl->put_Transform3D(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_get_CanDrag(This, value) \
    ((This)->lpVtbl->get_CanDrag(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_put_CanDrag(This, value) \
    ((This)->lpVtbl->put_CanDrag(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_add_DragStarting(This, handler, token) \
    ((This)->lpVtbl->add_DragStarting(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_remove_DragStarting(This, token) \
    ((This)->lpVtbl->remove_DragStarting(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_add_DropCompleted(This, handler, token) \
    ((This)->lpVtbl->add_DropCompleted(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_remove_DropCompleted(This, token) \
    ((This)->lpVtbl->remove_DropCompleted(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_StartDragAsync(This, pointerPoint, operation) \
    ((This)->lpVtbl->StartDragAsync(This, pointerPoint, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IUIElement4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement4[] = L"Windows.UI.Xaml.IUIElement4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElement4Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ContextFlyout)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase** value);
    HRESULT (STDMETHODCALLTYPE* put_ContextFlyout)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* value);
    HRESULT (STDMETHODCALLTYPE* get_ExitDisplayModeOnAccessKeyInvoked)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ExitDisplayModeOnAccessKeyInvoked)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsAccessKeyScope)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsAccessKeyScope)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AccessKeyScopeOwner)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_AccessKeyScopeOwner)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_AccessKey)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_AccessKey)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* add_ContextRequested)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CContextRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContextRequested)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ContextCanceled)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CRoutedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContextCanceled)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_AccessKeyDisplayRequested)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AccessKeyDisplayRequested)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_AccessKeyDisplayDismissed)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AccessKeyDisplayDismissed)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_AccessKeyInvoked)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AccessKeyInvoked)(__x_ABI_CWindows_CUI_CXaml_CIUIElement4* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElement4Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElement4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElement4Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_get_ContextFlyout(This, value) \
    ((This)->lpVtbl->get_ContextFlyout(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_put_ContextFlyout(This, value) \
    ((This)->lpVtbl->put_ContextFlyout(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_get_ExitDisplayModeOnAccessKeyInvoked(This, value) \
    ((This)->lpVtbl->get_ExitDisplayModeOnAccessKeyInvoked(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_put_ExitDisplayModeOnAccessKeyInvoked(This, value) \
    ((This)->lpVtbl->put_ExitDisplayModeOnAccessKeyInvoked(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_get_IsAccessKeyScope(This, value) \
    ((This)->lpVtbl->get_IsAccessKeyScope(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_put_IsAccessKeyScope(This, value) \
    ((This)->lpVtbl->put_IsAccessKeyScope(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_get_AccessKeyScopeOwner(This, value) \
    ((This)->lpVtbl->get_AccessKeyScopeOwner(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_put_AccessKeyScopeOwner(This, value) \
    ((This)->lpVtbl->put_AccessKeyScopeOwner(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_get_AccessKey(This, value) \
    ((This)->lpVtbl->get_AccessKey(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_put_AccessKey(This, value) \
    ((This)->lpVtbl->put_AccessKey(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_add_ContextRequested(This, handler, token) \
    ((This)->lpVtbl->add_ContextRequested(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_remove_ContextRequested(This, token) \
    ((This)->lpVtbl->remove_ContextRequested(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_add_ContextCanceled(This, handler, token) \
    ((This)->lpVtbl->add_ContextCanceled(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_remove_ContextCanceled(This, token) \
    ((This)->lpVtbl->remove_ContextCanceled(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_add_AccessKeyDisplayRequested(This, handler, token) \
    ((This)->lpVtbl->add_AccessKeyDisplayRequested(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_remove_AccessKeyDisplayRequested(This, token) \
    ((This)->lpVtbl->remove_AccessKeyDisplayRequested(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_add_AccessKeyDisplayDismissed(This, handler, token) \
    ((This)->lpVtbl->add_AccessKeyDisplayDismissed(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_remove_AccessKeyDisplayDismissed(This, token) \
    ((This)->lpVtbl->remove_AccessKeyDisplayDismissed(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_add_AccessKeyInvoked(This, handler, token) \
    ((This)->lpVtbl->add_AccessKeyInvoked(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement4_remove_AccessKeyInvoked(This, token) \
    ((This)->lpVtbl->remove_AccessKeyInvoked(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IUIElement5
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement5[] = L"Windows.UI.Xaml.IUIElement5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElement5Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Lights)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        __FIVector_1_Windows__CUI__CXaml__CMedia__CXamlLight** value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTipPlacementMode)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CKeyTipPlacementMode* value);
    HRESULT (STDMETHODCALLTYPE* put_KeyTipPlacementMode)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CKeyTipPlacementMode value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTipHorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_KeyTipHorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTipVerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_KeyTipVerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusKeyboardNavigation)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusKeyboardNavigationMode* value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusKeyboardNavigation)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusKeyboardNavigationMode value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusUpNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy* value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusUpNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusDownNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy* value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusDownNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusLeftNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy* value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusLeftNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusRightNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy* value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusRightNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy value);
    HRESULT (STDMETHODCALLTYPE* get_HighContrastAdjustment)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CElementHighContrastAdjustment* value);
    HRESULT (STDMETHODCALLTYPE* put_HighContrastAdjustment)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CElementHighContrastAdjustment value);
    HRESULT (STDMETHODCALLTYPE* get_TabFocusNavigation)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardNavigationMode* value);
    HRESULT (STDMETHODCALLTYPE* put_TabFocusNavigation)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardNavigationMode value);
    HRESULT (STDMETHODCALLTYPE* add_GettingFocus)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CGettingFocusEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_GettingFocus)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_LosingFocus)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CLosingFocusEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LosingFocus)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_NoFocusCandidateFound)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_NoFocusCandidateFound)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* StartBringIntoView)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This);
    HRESULT (STDMETHODCALLTYPE* StartBringIntoViewWithOptions)(__x_ABI_CWindows_CUI_CXaml_CIUIElement5* This,
        __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewOptions* options);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElement5Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElement5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElement5Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_get_Lights(This, value) \
    ((This)->lpVtbl->get_Lights(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_get_KeyTipPlacementMode(This, value) \
    ((This)->lpVtbl->get_KeyTipPlacementMode(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_put_KeyTipPlacementMode(This, value) \
    ((This)->lpVtbl->put_KeyTipPlacementMode(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_get_KeyTipHorizontalOffset(This, value) \
    ((This)->lpVtbl->get_KeyTipHorizontalOffset(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_put_KeyTipHorizontalOffset(This, value) \
    ((This)->lpVtbl->put_KeyTipHorizontalOffset(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_get_KeyTipVerticalOffset(This, value) \
    ((This)->lpVtbl->get_KeyTipVerticalOffset(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_put_KeyTipVerticalOffset(This, value) \
    ((This)->lpVtbl->put_KeyTipVerticalOffset(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_get_XYFocusKeyboardNavigation(This, value) \
    ((This)->lpVtbl->get_XYFocusKeyboardNavigation(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_put_XYFocusKeyboardNavigation(This, value) \
    ((This)->lpVtbl->put_XYFocusKeyboardNavigation(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_get_XYFocusUpNavigationStrategy(This, value) \
    ((This)->lpVtbl->get_XYFocusUpNavigationStrategy(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_put_XYFocusUpNavigationStrategy(This, value) \
    ((This)->lpVtbl->put_XYFocusUpNavigationStrategy(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_get_XYFocusDownNavigationStrategy(This, value) \
    ((This)->lpVtbl->get_XYFocusDownNavigationStrategy(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_put_XYFocusDownNavigationStrategy(This, value) \
    ((This)->lpVtbl->put_XYFocusDownNavigationStrategy(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_get_XYFocusLeftNavigationStrategy(This, value) \
    ((This)->lpVtbl->get_XYFocusLeftNavigationStrategy(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_put_XYFocusLeftNavigationStrategy(This, value) \
    ((This)->lpVtbl->put_XYFocusLeftNavigationStrategy(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_get_XYFocusRightNavigationStrategy(This, value) \
    ((This)->lpVtbl->get_XYFocusRightNavigationStrategy(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_put_XYFocusRightNavigationStrategy(This, value) \
    ((This)->lpVtbl->put_XYFocusRightNavigationStrategy(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_get_HighContrastAdjustment(This, value) \
    ((This)->lpVtbl->get_HighContrastAdjustment(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_put_HighContrastAdjustment(This, value) \
    ((This)->lpVtbl->put_HighContrastAdjustment(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_get_TabFocusNavigation(This, value) \
    ((This)->lpVtbl->get_TabFocusNavigation(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_put_TabFocusNavigation(This, value) \
    ((This)->lpVtbl->put_TabFocusNavigation(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_add_GettingFocus(This, handler, token) \
    ((This)->lpVtbl->add_GettingFocus(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_remove_GettingFocus(This, token) \
    ((This)->lpVtbl->remove_GettingFocus(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_add_LosingFocus(This, handler, token) \
    ((This)->lpVtbl->add_LosingFocus(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_remove_LosingFocus(This, token) \
    ((This)->lpVtbl->remove_LosingFocus(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_add_NoFocusCandidateFound(This, handler, token) \
    ((This)->lpVtbl->add_NoFocusCandidateFound(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_remove_NoFocusCandidateFound(This, token) \
    ((This)->lpVtbl->remove_NoFocusCandidateFound(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_StartBringIntoView(This) \
    ((This)->lpVtbl->StartBringIntoView(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement5_StartBringIntoViewWithOptions(This, options) \
    ((This)->lpVtbl->StartBringIntoViewWithOptions(This, options))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement5_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Xaml.IUIElement7
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement7_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement7_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement7[] = L"Windows.UI.Xaml.IUIElement7";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElement7Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElement7* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElement7* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElement7* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElement7* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElement7* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElement7* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_KeyboardAccelerators)(__x_ABI_CWindows_CUI_CXaml_CIUIElement7* This,
        __FIVector_1_Windows__CUI__CXaml__CInput__CKeyboardAccelerator** value);
    HRESULT (STDMETHODCALLTYPE* add_CharacterReceived)(__x_ABI_CWindows_CUI_CXaml_CIUIElement7* This,
        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CharacterReceived)(__x_ABI_CWindows_CUI_CXaml_CIUIElement7* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ProcessKeyboardAccelerators)(__x_ABI_CWindows_CUI_CXaml_CIUIElement7* This,
        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ProcessKeyboardAccelerators)(__x_ABI_CWindows_CUI_CXaml_CIUIElement7* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PreviewKeyDown)(__x_ABI_CWindows_CUI_CXaml_CIUIElement7* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PreviewKeyDown)(__x_ABI_CWindows_CUI_CXaml_CIUIElement7* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PreviewKeyUp)(__x_ABI_CWindows_CUI_CXaml_CIUIElement7* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PreviewKeyUp)(__x_ABI_CWindows_CUI_CXaml_CIUIElement7* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* TryInvokeKeyboardAccelerator)(__x_ABI_CWindows_CUI_CXaml_CIUIElement7* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs* args);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElement7Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElement7
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElement7Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement7_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement7_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement7_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement7_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement7_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement7_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement7_get_KeyboardAccelerators(This, value) \
    ((This)->lpVtbl->get_KeyboardAccelerators(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement7_add_CharacterReceived(This, handler, token) \
    ((This)->lpVtbl->add_CharacterReceived(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement7_remove_CharacterReceived(This, token) \
    ((This)->lpVtbl->remove_CharacterReceived(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement7_add_ProcessKeyboardAccelerators(This, handler, token) \
    ((This)->lpVtbl->add_ProcessKeyboardAccelerators(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement7_remove_ProcessKeyboardAccelerators(This, token) \
    ((This)->lpVtbl->remove_ProcessKeyboardAccelerators(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement7_add_PreviewKeyDown(This, handler, token) \
    ((This)->lpVtbl->add_PreviewKeyDown(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement7_remove_PreviewKeyDown(This, token) \
    ((This)->lpVtbl->remove_PreviewKeyDown(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement7_add_PreviewKeyUp(This, handler, token) \
    ((This)->lpVtbl->add_PreviewKeyUp(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement7_remove_PreviewKeyUp(This, token) \
    ((This)->lpVtbl->remove_PreviewKeyUp(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement7_TryInvokeKeyboardAccelerator(This, args) \
    ((This)->lpVtbl->TryInvokeKeyboardAccelerator(This, args))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement7_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Xaml.IUIElement8
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement8_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement8_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement8[] = L"Windows.UI.Xaml.IUIElement8";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElement8Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElement8* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElement8* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElement8* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElement8* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElement8* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElement8* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_KeyTipTarget)(__x_ABI_CWindows_CUI_CXaml_CIUIElement8* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_KeyTipTarget)(__x_ABI_CWindows_CUI_CXaml_CIUIElement8* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_KeyboardAcceleratorPlacementTarget)(__x_ABI_CWindows_CUI_CXaml_CIUIElement8* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_KeyboardAcceleratorPlacementTarget)(__x_ABI_CWindows_CUI_CXaml_CIUIElement8* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_KeyboardAcceleratorPlacementMode)(__x_ABI_CWindows_CUI_CXaml_CIUIElement8* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardAcceleratorPlacementMode* value);
    HRESULT (STDMETHODCALLTYPE* put_KeyboardAcceleratorPlacementMode)(__x_ABI_CWindows_CUI_CXaml_CIUIElement8* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardAcceleratorPlacementMode value);
    HRESULT (STDMETHODCALLTYPE* add_BringIntoViewRequested)(__x_ABI_CWindows_CUI_CXaml_CIUIElement8* This,
        __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CBringIntoViewRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BringIntoViewRequested)(__x_ABI_CWindows_CUI_CXaml_CIUIElement8* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElement8Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElement8
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElement8Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement8_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement8_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement8_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement8_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement8_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement8_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement8_get_KeyTipTarget(This, value) \
    ((This)->lpVtbl->get_KeyTipTarget(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement8_put_KeyTipTarget(This, value) \
    ((This)->lpVtbl->put_KeyTipTarget(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement8_get_KeyboardAcceleratorPlacementTarget(This, value) \
    ((This)->lpVtbl->get_KeyboardAcceleratorPlacementTarget(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement8_put_KeyboardAcceleratorPlacementTarget(This, value) \
    ((This)->lpVtbl->put_KeyboardAcceleratorPlacementTarget(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement8_get_KeyboardAcceleratorPlacementMode(This, value) \
    ((This)->lpVtbl->get_KeyboardAcceleratorPlacementMode(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement8_put_KeyboardAcceleratorPlacementMode(This, value) \
    ((This)->lpVtbl->put_KeyboardAcceleratorPlacementMode(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement8_add_BringIntoViewRequested(This, handler, token) \
    ((This)->lpVtbl->add_BringIntoViewRequested(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement8_remove_BringIntoViewRequested(This, token) \
    ((This)->lpVtbl->remove_BringIntoViewRequested(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement8;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement8_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Xaml.IUIElement9
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement9_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement9_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement9[] = L"Windows.UI.Xaml.IUIElement9";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElement9Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CanBeScrollAnchor)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanBeScrollAnchor)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_OpacityTransition)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        __x_ABI_CWindows_CUI_CXaml_CIScalarTransition** value);
    HRESULT (STDMETHODCALLTYPE* put_OpacityTransition)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        __x_ABI_CWindows_CUI_CXaml_CIScalarTransition* value);
    HRESULT (STDMETHODCALLTYPE* get_Translation)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_Translation)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_TranslationTransition)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        __x_ABI_CWindows_CUI_CXaml_CIVector3Transition** value);
    HRESULT (STDMETHODCALLTYPE* put_TranslationTransition)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        __x_ABI_CWindows_CUI_CXaml_CIVector3Transition* value);
    HRESULT (STDMETHODCALLTYPE* get_Rotation)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Rotation)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RotationTransition)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        __x_ABI_CWindows_CUI_CXaml_CIScalarTransition** value);
    HRESULT (STDMETHODCALLTYPE* put_RotationTransition)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        __x_ABI_CWindows_CUI_CXaml_CIScalarTransition* value);
    HRESULT (STDMETHODCALLTYPE* get_Scale)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_Scale)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleTransition)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        __x_ABI_CWindows_CUI_CXaml_CIVector3Transition** value);
    HRESULT (STDMETHODCALLTYPE* put_ScaleTransition)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        __x_ABI_CWindows_CUI_CXaml_CIVector3Transition* value);
    HRESULT (STDMETHODCALLTYPE* get_TransformMatrix)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4* value);
    HRESULT (STDMETHODCALLTYPE* put_TransformMatrix)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 value);
    HRESULT (STDMETHODCALLTYPE* get_CenterPoint)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterPoint)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAxis)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAxis)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* StartAnimation)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* animation);
    HRESULT (STDMETHODCALLTYPE* StopAnimation)(__x_ABI_CWindows_CUI_CXaml_CIUIElement9* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* animation);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElement9Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElement9
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElement9Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_get_CanBeScrollAnchor(This, value) \
    ((This)->lpVtbl->get_CanBeScrollAnchor(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_put_CanBeScrollAnchor(This, value) \
    ((This)->lpVtbl->put_CanBeScrollAnchor(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_get_OpacityTransition(This, value) \
    ((This)->lpVtbl->get_OpacityTransition(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_put_OpacityTransition(This, value) \
    ((This)->lpVtbl->put_OpacityTransition(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_get_Translation(This, value) \
    ((This)->lpVtbl->get_Translation(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_put_Translation(This, value) \
    ((This)->lpVtbl->put_Translation(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_get_TranslationTransition(This, value) \
    ((This)->lpVtbl->get_TranslationTransition(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_put_TranslationTransition(This, value) \
    ((This)->lpVtbl->put_TranslationTransition(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_get_Rotation(This, value) \
    ((This)->lpVtbl->get_Rotation(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_put_Rotation(This, value) \
    ((This)->lpVtbl->put_Rotation(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_get_RotationTransition(This, value) \
    ((This)->lpVtbl->get_RotationTransition(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_put_RotationTransition(This, value) \
    ((This)->lpVtbl->put_RotationTransition(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_get_Scale(This, value) \
    ((This)->lpVtbl->get_Scale(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_put_Scale(This, value) \
    ((This)->lpVtbl->put_Scale(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_get_ScaleTransition(This, value) \
    ((This)->lpVtbl->get_ScaleTransition(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_put_ScaleTransition(This, value) \
    ((This)->lpVtbl->put_ScaleTransition(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_get_TransformMatrix(This, value) \
    ((This)->lpVtbl->get_TransformMatrix(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_put_TransformMatrix(This, value) \
    ((This)->lpVtbl->put_TransformMatrix(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_get_CenterPoint(This, value) \
    ((This)->lpVtbl->get_CenterPoint(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_put_CenterPoint(This, value) \
    ((This)->lpVtbl->put_CenterPoint(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_get_RotationAxis(This, value) \
    ((This)->lpVtbl->get_RotationAxis(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_put_RotationAxis(This, value) \
    ((This)->lpVtbl->put_RotationAxis(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_StartAnimation(This, animation) \
    ((This)->lpVtbl->StartAnimation(This, animation))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement9_StopAnimation(This, animation) \
    ((This)->lpVtbl->StopAnimation(This, animation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement9;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement9_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementFactory[] = L"Windows.UI.Xaml.IUIElementFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElementFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElementFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElementFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElementFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElementFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElementFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElementFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementOverrides
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementOverrides[] = L"Windows.UI.Xaml.IUIElementOverrides";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementOverridesVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* OnCreateAutomationPeer)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* OnDisconnectVisualChildren)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides* This);
    HRESULT (STDMETHODCALLTYPE* FindSubElementsForTouchTargeting)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides* This,
        struct __x_ABI_CWindows_CFoundation_CPoint point,
        struct __x_ABI_CWindows_CFoundation_CRect boundingRect,
        __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint** result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElementOverridesVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementOverridesVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_OnCreateAutomationPeer(This, result) \
    ((This)->lpVtbl->OnCreateAutomationPeer(This, result))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_OnDisconnectVisualChildren(This) \
    ((This)->lpVtbl->OnDisconnectVisualChildren(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_FindSubElementsForTouchTargeting(This, point, boundingRect, result) \
    ((This)->lpVtbl->FindSubElementsForTouchTargeting(This, point, boundingRect, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementOverrides7
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementOverrides7[] = L"Windows.UI.Xaml.IUIElementOverrides7";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetChildrenInTabFocusOrder)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7* This,
        __FIIterable_1_Windows__CUI__CXaml__CDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* OnProcessKeyboardAccelerators)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs* args);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_GetChildrenInTabFocusOrder(This, result) \
    ((This)->lpVtbl->GetChildrenInTabFocusOrder(This, result))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_OnProcessKeyboardAccelerators(This, args) \
    ((This)->lpVtbl->OnProcessKeyboardAccelerators(This, args))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementOverrides8
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementOverrides8[] = L"Windows.UI.Xaml.IUIElementOverrides8";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* OnKeyboardAcceleratorInvoked)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs* args);
    HRESULT (STDMETHODCALLTYPE* OnBringIntoViewRequested)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8* This,
        __x_ABI_CWindows_CUI_CXaml_CIBringIntoViewRequestedEventArgs* e);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_OnKeyboardAcceleratorInvoked(This, args) \
    ((This)->lpVtbl->OnKeyboardAcceleratorInvoked(This, args))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_OnBringIntoViewRequested(This, e) \
    ((This)->lpVtbl->OnBringIntoViewRequested(This, e))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementOverrides9
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementOverrides9[] = L"Windows.UI.Xaml.IUIElementOverrides9";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* PopulatePropertyInfoOverride)(__x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9* This,
        HSTRING propertyName,
        __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* animationPropertyInfo);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_PopulatePropertyInfoOverride(This, propertyName, animationPropertyInfo) \
    ((This)->lpVtbl->PopulatePropertyInfoOverride(This, propertyName, animationPropertyInfo))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics[] = L"Windows.UI.Xaml.IUIElementStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_KeyDownEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_KeyUpEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerEnteredEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerPressedEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerMovedEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerReleasedEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerExitedEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerCaptureLostEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerCanceledEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerWheelChangedEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_TappedEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_DoubleTappedEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_HoldingEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_RightTappedEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_ManipulationStartingEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_ManipulationInertiaStartingEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_ManipulationStartedEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_ManipulationDeltaEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_ManipulationCompletedEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_DragEnterEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_DragLeaveEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_DragOverEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_DropEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_AllowDropProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OpacityProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ClipProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RenderTransformProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ProjectionProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RenderTransformOriginProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsHitTestVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VisibilityProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_UseLayoutRoundingProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TransitionsProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CacheModeProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsTapEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsDoubleTapEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsRightTapEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsHoldingEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ManipulationModeProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerCapturesProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElementStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_KeyDownEvent(This, value) \
    ((This)->lpVtbl->get_KeyDownEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_KeyUpEvent(This, value) \
    ((This)->lpVtbl->get_KeyUpEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_PointerEnteredEvent(This, value) \
    ((This)->lpVtbl->get_PointerEnteredEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_PointerPressedEvent(This, value) \
    ((This)->lpVtbl->get_PointerPressedEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_PointerMovedEvent(This, value) \
    ((This)->lpVtbl->get_PointerMovedEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_PointerReleasedEvent(This, value) \
    ((This)->lpVtbl->get_PointerReleasedEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_PointerExitedEvent(This, value) \
    ((This)->lpVtbl->get_PointerExitedEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_PointerCaptureLostEvent(This, value) \
    ((This)->lpVtbl->get_PointerCaptureLostEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_PointerCanceledEvent(This, value) \
    ((This)->lpVtbl->get_PointerCanceledEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_PointerWheelChangedEvent(This, value) \
    ((This)->lpVtbl->get_PointerWheelChangedEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_TappedEvent(This, value) \
    ((This)->lpVtbl->get_TappedEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_DoubleTappedEvent(This, value) \
    ((This)->lpVtbl->get_DoubleTappedEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_HoldingEvent(This, value) \
    ((This)->lpVtbl->get_HoldingEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_RightTappedEvent(This, value) \
    ((This)->lpVtbl->get_RightTappedEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_ManipulationStartingEvent(This, value) \
    ((This)->lpVtbl->get_ManipulationStartingEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_ManipulationInertiaStartingEvent(This, value) \
    ((This)->lpVtbl->get_ManipulationInertiaStartingEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_ManipulationStartedEvent(This, value) \
    ((This)->lpVtbl->get_ManipulationStartedEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_ManipulationDeltaEvent(This, value) \
    ((This)->lpVtbl->get_ManipulationDeltaEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_ManipulationCompletedEvent(This, value) \
    ((This)->lpVtbl->get_ManipulationCompletedEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_DragEnterEvent(This, value) \
    ((This)->lpVtbl->get_DragEnterEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_DragLeaveEvent(This, value) \
    ((This)->lpVtbl->get_DragLeaveEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_DragOverEvent(This, value) \
    ((This)->lpVtbl->get_DragOverEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_DropEvent(This, value) \
    ((This)->lpVtbl->get_DropEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_AllowDropProperty(This, value) \
    ((This)->lpVtbl->get_AllowDropProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_OpacityProperty(This, value) \
    ((This)->lpVtbl->get_OpacityProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_ClipProperty(This, value) \
    ((This)->lpVtbl->get_ClipProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_RenderTransformProperty(This, value) \
    ((This)->lpVtbl->get_RenderTransformProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_ProjectionProperty(This, value) \
    ((This)->lpVtbl->get_ProjectionProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_RenderTransformOriginProperty(This, value) \
    ((This)->lpVtbl->get_RenderTransformOriginProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_IsHitTestVisibleProperty(This, value) \
    ((This)->lpVtbl->get_IsHitTestVisibleProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_VisibilityProperty(This, value) \
    ((This)->lpVtbl->get_VisibilityProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_UseLayoutRoundingProperty(This, value) \
    ((This)->lpVtbl->get_UseLayoutRoundingProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_TransitionsProperty(This, value) \
    ((This)->lpVtbl->get_TransitionsProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_CacheModeProperty(This, value) \
    ((This)->lpVtbl->get_CacheModeProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_IsTapEnabledProperty(This, value) \
    ((This)->lpVtbl->get_IsTapEnabledProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_IsDoubleTapEnabledProperty(This, value) \
    ((This)->lpVtbl->get_IsDoubleTapEnabledProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_IsRightTapEnabledProperty(This, value) \
    ((This)->lpVtbl->get_IsRightTapEnabledProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_IsHoldingEnabledProperty(This, value) \
    ((This)->lpVtbl->get_IsHoldingEnabledProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_ManipulationModeProperty(This, value) \
    ((This)->lpVtbl->get_ManipulationModeProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_PointerCapturesProperty(This, value) \
    ((This)->lpVtbl->get_PointerCapturesProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics10
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics10[] = L"Windows.UI.Xaml.IUIElementStatics10";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ShadowProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_get_ShadowProperty(This, value) \
    ((This)->lpVtbl->get_ShadowProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics10_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics2[] = L"Windows.UI.Xaml.IUIElementStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CompositeModeProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_get_CompositeModeProperty(This, value) \
    ((This)->lpVtbl->get_CompositeModeProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics3[] = L"Windows.UI.Xaml.IUIElementStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Transform3DProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CanDragProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* TryStartDirectManipulation)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointer* value,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_get_Transform3DProperty(This, value) \
    ((This)->lpVtbl->get_Transform3DProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_get_CanDragProperty(This, value) \
    ((This)->lpVtbl->get_CanDragProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_TryStartDirectManipulation(This, value, result) \
    ((This)->lpVtbl->TryStartDirectManipulation(This, value, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics4[] = L"Windows.UI.Xaml.IUIElementStatics4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ContextFlyoutProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ExitDisplayModeOnAccessKeyInvokedProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsAccessKeyScopeProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AccessKeyScopeOwnerProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AccessKeyProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_get_ContextFlyoutProperty(This, value) \
    ((This)->lpVtbl->get_ContextFlyoutProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_get_ExitDisplayModeOnAccessKeyInvokedProperty(This, value) \
    ((This)->lpVtbl->get_ExitDisplayModeOnAccessKeyInvokedProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_get_IsAccessKeyScopeProperty(This, value) \
    ((This)->lpVtbl->get_IsAccessKeyScopeProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_get_AccessKeyScopeOwnerProperty(This, value) \
    ((This)->lpVtbl->get_AccessKeyScopeOwnerProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_get_AccessKeyProperty(This, value) \
    ((This)->lpVtbl->get_AccessKeyProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics5
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics5[] = L"Windows.UI.Xaml.IUIElementStatics5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LightsProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTipPlacementModeProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTipHorizontalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTipVerticalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusKeyboardNavigationProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusUpNavigationStrategyProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusDownNavigationStrategyProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusLeftNavigationStrategyProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusRightNavigationStrategyProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HighContrastAdjustmentProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TabFocusNavigationProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_get_LightsProperty(This, value) \
    ((This)->lpVtbl->get_LightsProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_get_KeyTipPlacementModeProperty(This, value) \
    ((This)->lpVtbl->get_KeyTipPlacementModeProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_get_KeyTipHorizontalOffsetProperty(This, value) \
    ((This)->lpVtbl->get_KeyTipHorizontalOffsetProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_get_KeyTipVerticalOffsetProperty(This, value) \
    ((This)->lpVtbl->get_KeyTipVerticalOffsetProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_get_XYFocusKeyboardNavigationProperty(This, value) \
    ((This)->lpVtbl->get_XYFocusKeyboardNavigationProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_get_XYFocusUpNavigationStrategyProperty(This, value) \
    ((This)->lpVtbl->get_XYFocusUpNavigationStrategyProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_get_XYFocusDownNavigationStrategyProperty(This, value) \
    ((This)->lpVtbl->get_XYFocusDownNavigationStrategyProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_get_XYFocusLeftNavigationStrategyProperty(This, value) \
    ((This)->lpVtbl->get_XYFocusLeftNavigationStrategyProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_get_XYFocusRightNavigationStrategyProperty(This, value) \
    ((This)->lpVtbl->get_XYFocusRightNavigationStrategyProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_get_HighContrastAdjustmentProperty(This, value) \
    ((This)->lpVtbl->get_HighContrastAdjustmentProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_get_TabFocusNavigationProperty(This, value) \
    ((This)->lpVtbl->get_TabFocusNavigationProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics5_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics6
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics6[] = L"Windows.UI.Xaml.IUIElementStatics6";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_GettingFocusEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_LosingFocusEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_NoFocusCandidateFoundEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_get_GettingFocusEvent(This, value) \
    ((This)->lpVtbl->get_GettingFocusEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_get_LosingFocusEvent(This, value) \
    ((This)->lpVtbl->get_LosingFocusEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_get_NoFocusCandidateFoundEvent(This, value) \
    ((This)->lpVtbl->get_NoFocusCandidateFoundEvent(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics6_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics7
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics7[] = L"Windows.UI.Xaml.IUIElementStatics7";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PreviewKeyDownEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterReceivedEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_PreviewKeyUpEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_get_PreviewKeyDownEvent(This, value) \
    ((This)->lpVtbl->get_PreviewKeyDownEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_get_CharacterReceivedEvent(This, value) \
    ((This)->lpVtbl->get_CharacterReceivedEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_get_PreviewKeyUpEvent(This, value) \
    ((This)->lpVtbl->get_PreviewKeyUpEvent(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics7_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics8
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics8[] = L"Windows.UI.Xaml.IUIElementStatics8";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BringIntoViewRequestedEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_ContextRequestedEvent)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent** value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTipTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_KeyboardAcceleratorPlacementTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_KeyboardAcceleratorPlacementModeProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* RegisterAsScrollPort)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_get_BringIntoViewRequestedEvent(This, value) \
    ((This)->lpVtbl->get_BringIntoViewRequestedEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_get_ContextRequestedEvent(This, value) \
    ((This)->lpVtbl->get_ContextRequestedEvent(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_get_KeyTipTargetProperty(This, value) \
    ((This)->lpVtbl->get_KeyTipTargetProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_get_KeyboardAcceleratorPlacementTargetProperty(This, value) \
    ((This)->lpVtbl->get_KeyboardAcceleratorPlacementTargetProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_get_KeyboardAcceleratorPlacementModeProperty(This, value) \
    ((This)->lpVtbl->get_KeyboardAcceleratorPlacementModeProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_RegisterAsScrollPort(This, element) \
    ((This)->lpVtbl->RegisterAsScrollPort(This, element))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics8_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementStatics9
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElement
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics9[] = L"Windows.UI.Xaml.IUIElementStatics9";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CanBeScrollAnchorProperty)(__x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_get_CanBeScrollAnchorProperty(This, value) \
    ((This)->lpVtbl->get_CanBeScrollAnchorProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics9_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementWeakCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElementWeakCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementWeakCollection[] = L"Windows.UI.Xaml.IUIElementWeakCollection";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Xaml.IUIElementWeakCollectionFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UIElementWeakCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementWeakCollectionFactory[] = L"Windows.UI.Xaml.IUIElementWeakCollectionFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollection** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementWeakCollectionFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Xaml.IUnhandledExceptionEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.UnhandledExceptionEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUnhandledExceptionEventArgs[] = L"Windows.UI.Xaml.IUnhandledExceptionEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Exception)(__x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs* This,
        HRESULT* value);
    HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs* This,
        boolean value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_get_Exception(This, value) \
    ((This)->lpVtbl->get_Exception(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_get_Message(This, value) \
    ((This)->lpVtbl->get_Message(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_get_Handled(This, value) \
    ((This)->lpVtbl->get_Handled(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_put_Handled(This, value) \
    ((This)->lpVtbl->put_Handled(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVector3Transition
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Vector3Transition
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVector3Transition_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVector3Transition_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVector3Transition[] = L"Windows.UI.Xaml.IVector3Transition";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIVector3TransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIVector3Transition* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIVector3Transition* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIVector3Transition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIVector3Transition* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIVector3Transition* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIVector3Transition* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CUI_CXaml_CIVector3Transition* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_Duration)(__x_ABI_CWindows_CUI_CXaml_CIVector3Transition* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_Components)(__x_ABI_CWindows_CUI_CXaml_CIVector3Transition* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVector3TransitionComponents* value);
    HRESULT (STDMETHODCALLTYPE* put_Components)(__x_ABI_CWindows_CUI_CXaml_CIVector3Transition* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVector3TransitionComponents value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIVector3TransitionVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIVector3Transition
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVector3TransitionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIVector3Transition_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIVector3Transition_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVector3Transition_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVector3Transition_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIVector3Transition_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIVector3Transition_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIVector3Transition_get_Duration(This, value) \
    ((This)->lpVtbl->get_Duration(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVector3Transition_put_Duration(This, value) \
    ((This)->lpVtbl->put_Duration(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVector3Transition_get_Components(This, value) \
    ((This)->lpVtbl->get_Components(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVector3Transition_put_Components(This, value) \
    ((This)->lpVtbl->put_Components(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVector3Transition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVector3Transition_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IVector3TransitionFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Vector3Transition
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVector3TransitionFactory[] = L"Windows.UI.Xaml.IVector3TransitionFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIVector3Transition** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVector3TransitionFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Interface Windows.UI.Xaml.IVisualState
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualState
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualState_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualState_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualState[] = L"Windows.UI.Xaml.IVisualState";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIVisualState* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIVisualState* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIVisualState* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIVisualState* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIVisualState* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIVisualState* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CUI_CXaml_CIVisualState* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Storyboard)(__x_ABI_CWindows_CUI_CXaml_CIVisualState* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard** value);
    HRESULT (STDMETHODCALLTYPE* put_Storyboard)(__x_ABI_CWindows_CUI_CXaml_CIVisualState* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIVisualStateVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIVisualState
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState_get_Name(This, value) \
    ((This)->lpVtbl->get_Name(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState_get_Storyboard(This, value) \
    ((This)->lpVtbl->get_Storyboard(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState_put_Storyboard(This, value) \
    ((This)->lpVtbl->put_Storyboard(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualState;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualState_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualState2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualState
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualState2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualState2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualState2[] = L"Windows.UI.Xaml.IVisualState2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualState2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIVisualState2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIVisualState2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIVisualState2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIVisualState2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIVisualState2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIVisualState2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Setters)(__x_ABI_CWindows_CUI_CXaml_CIVisualState2* This,
        __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_StateTriggers)(__x_ABI_CWindows_CUI_CXaml_CIVisualState2* This,
        __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIVisualState2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIVisualState2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualState2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState2_get_Setters(This, value) \
    ((This)->lpVtbl->get_Setters(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState2_get_StateTriggers(This, value) \
    ((This)->lpVtbl->get_StateTriggers(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualState2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualState2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualStateChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualStateChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateChangedEventArgs[] = L"Windows.UI.Xaml.IVisualStateChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_OldState)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState** value);
    HRESULT (STDMETHODCALLTYPE* put_OldState)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState* value);
    HRESULT (STDMETHODCALLTYPE* get_NewState)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState** value);
    HRESULT (STDMETHODCALLTYPE* put_NewState)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState* value);
    HRESULT (STDMETHODCALLTYPE* get_Control)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl** value);
    HRESULT (STDMETHODCALLTYPE* put_Control)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_get_OldState(This, value) \
    ((This)->lpVtbl->get_OldState(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_put_OldState(This, value) \
    ((This)->lpVtbl->put_OldState(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_get_NewState(This, value) \
    ((This)->lpVtbl->get_NewState(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_put_NewState(This, value) \
    ((This)->lpVtbl->put_NewState(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_get_Control(This, value) \
    ((This)->lpVtbl->get_Control(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_put_Control(This, value) \
    ((This)->lpVtbl->put_Control(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualStateGroup
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualStateGroup
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateGroup[] = L"Windows.UI.Xaml.IVisualStateGroup";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroupVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Transitions)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* This,
        __FIVector_1_Windows__CUI__CXaml__CVisualTransition** value);
    HRESULT (STDMETHODCALLTYPE* get_States)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* This,
        __FIVector_1_Windows__CUI__CXaml__CVisualState** value);
    HRESULT (STDMETHODCALLTYPE* get_CurrentState)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState** value);
    HRESULT (STDMETHODCALLTYPE* add_CurrentStateChanged)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CurrentStateChanged)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_CurrentStateChanging)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CurrentStateChanging)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroupVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroupVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_get_Name(This, value) \
    ((This)->lpVtbl->get_Name(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_get_Transitions(This, value) \
    ((This)->lpVtbl->get_Transitions(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_get_States(This, value) \
    ((This)->lpVtbl->get_States(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_get_CurrentState(This, value) \
    ((This)->lpVtbl->get_CurrentState(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_add_CurrentStateChanged(This, handler, token) \
    ((This)->lpVtbl->add_CurrentStateChanged(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_remove_CurrentStateChanged(This, token) \
    ((This)->lpVtbl->remove_CurrentStateChanged(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_add_CurrentStateChanging(This, handler, token) \
    ((This)->lpVtbl->add_CurrentStateChanging(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_remove_CurrentStateChanging(This, token) \
    ((This)->lpVtbl->remove_CurrentStateChanging(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualStateManager
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualStateManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateManager[] = L"Windows.UI.Xaml.IVisualStateManager";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManager* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManager* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManager* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManager* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManager* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManager* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateManager;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualStateManagerFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualStateManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateManagerFactory[] = L"Windows.UI.Xaml.IVisualStateManagerFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualStateManagerOverrides
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualStateManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateManagerOverrides[] = L"Windows.UI.Xaml.IVisualStateManagerOverrides";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverridesVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GoToStateCore)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl* control,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* templateRoot,
        HSTRING stateName,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* group,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState* state,
        boolean useTransitions,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverridesVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverridesVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_GoToStateCore(This, control, templateRoot, stateName, group, state, useTransitions, result) \
    ((This)->lpVtbl->GoToStateCore(This, control, templateRoot, stateName, group, state, useTransitions, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualStateManagerProtected
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualStateManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateManagerProtected[] = L"Windows.UI.Xaml.IVisualStateManagerProtected";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtectedVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* RaiseCurrentStateChanging)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* stateGroup,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState* oldState,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState* newState,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl* control);
    HRESULT (STDMETHODCALLTYPE* RaiseCurrentStateChanged)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected* This,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup* stateGroup,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState* oldState,
        __x_ABI_CWindows_CUI_CXaml_CIVisualState* newState,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl* control);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtectedVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtectedVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_RaiseCurrentStateChanging(This, stateGroup, oldState, newState, control) \
    ((This)->lpVtbl->RaiseCurrentStateChanging(This, stateGroup, oldState, newState, control))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_RaiseCurrentStateChanged(This, stateGroup, oldState, newState, control) \
    ((This)->lpVtbl->RaiseCurrentStateChanged(This, stateGroup, oldState, newState, control))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualStateManagerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualStateManager
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateManagerStatics[] = L"Windows.UI.Xaml.IVisualStateManagerStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetVisualStateGroups)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* obj,
        __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_CustomVisualStateManagerProperty)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetCustomVisualStateManager)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* obj,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager** result);
    HRESULT (STDMETHODCALLTYPE* SetCustomVisualStateManager)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* obj,
        __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager* value);
    HRESULT (STDMETHODCALLTYPE* GoToState)(__x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl* control,
        HSTRING stateName,
        boolean useTransitions,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_GetVisualStateGroups(This, obj, result) \
    ((This)->lpVtbl->GetVisualStateGroups(This, obj, result))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_get_CustomVisualStateManagerProperty(This, value) \
    ((This)->lpVtbl->get_CustomVisualStateManagerProperty(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_GetCustomVisualStateManager(This, obj, result) \
    ((This)->lpVtbl->GetCustomVisualStateManager(This, obj, result))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_SetCustomVisualStateManager(This, obj, value) \
    ((This)->lpVtbl->SetCustomVisualStateManager(This, obj, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_GoToState(This, control, stateName, useTransitions, result) \
    ((This)->lpVtbl->GoToState(This, control, stateName, useTransitions, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualTransition
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualTransition
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualTransition[] = L"Windows.UI.Xaml.IVisualTransition";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransition* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransition* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransition* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransition* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransition* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_GeneratedDuration)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransition* This,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration* value);
    HRESULT (STDMETHODCALLTYPE* put_GeneratedDuration)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransition* This,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration value);
    HRESULT (STDMETHODCALLTYPE* get_GeneratedEasingFunction)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase** value);
    HRESULT (STDMETHODCALLTYPE* put_GeneratedEasingFunction)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase* value);
    HRESULT (STDMETHODCALLTYPE* get_To)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransition* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_To)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransition* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_From)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransition* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_From)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransition* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Storyboard)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard** value);
    HRESULT (STDMETHODCALLTYPE* put_Storyboard)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIVisualTransition
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_get_GeneratedDuration(This, value) \
    ((This)->lpVtbl->get_GeneratedDuration(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_put_GeneratedDuration(This, value) \
    ((This)->lpVtbl->put_GeneratedDuration(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_get_GeneratedEasingFunction(This, value) \
    ((This)->lpVtbl->get_GeneratedEasingFunction(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_put_GeneratedEasingFunction(This, value) \
    ((This)->lpVtbl->put_GeneratedEasingFunction(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_get_To(This, value) \
    ((This)->lpVtbl->get_To(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_put_To(This, value) \
    ((This)->lpVtbl->put_To(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_get_From(This, value) \
    ((This)->lpVtbl->get_From(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_put_From(This, value) \
    ((This)->lpVtbl->put_From(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_get_Storyboard(This, value) \
    ((This)->lpVtbl->get_Storyboard(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_put_Storyboard(This, value) \
    ((This)->lpVtbl->put_Storyboard(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualTransition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IVisualTransitionFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.VisualTransition
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualTransitionFactory[] = L"Windows.UI.Xaml.IVisualTransitionFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CIVisualTransition** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IWindow
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Window
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IWindow[] = L"Windows.UI.Xaml.IWindow";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIWindowVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Bounds)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* get_Visible)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Content)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_CoreWindow)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This,
        __x_ABI_CWindows_CUI_CCore_CICoreWindow** value);
    HRESULT (STDMETHODCALLTYPE* get_Dispatcher)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This,
        __x_ABI_CWindows_CUI_CCore_CICoreDispatcher** value);
    HRESULT (STDMETHODCALLTYPE* add_Activated)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This,
        __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Activated)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Closed)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This,
        __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SizeChanged)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This,
        __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SizeChanged)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_VisibilityChanged)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This,
        __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_VisibilityChanged)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Activate)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This);
    HRESULT (STDMETHODCALLTYPE* Close)(__x_ABI_CWindows_CUI_CXaml_CIWindow* This);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIWindowVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIWindow
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIWindowVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_get_Bounds(This, value) \
    ((This)->lpVtbl->get_Bounds(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_get_Visible(This, value) \
    ((This)->lpVtbl->get_Visible(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_get_Content(This, value) \
    ((This)->lpVtbl->get_Content(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_put_Content(This, value) \
    ((This)->lpVtbl->put_Content(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_get_CoreWindow(This, value) \
    ((This)->lpVtbl->get_CoreWindow(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_get_Dispatcher(This, value) \
    ((This)->lpVtbl->get_Dispatcher(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_add_Activated(This, handler, token) \
    ((This)->lpVtbl->add_Activated(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_remove_Activated(This, token) \
    ((This)->lpVtbl->remove_Activated(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_add_Closed(This, handler, token) \
    ((This)->lpVtbl->add_Closed(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_remove_Closed(This, token) \
    ((This)->lpVtbl->remove_Closed(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_add_SizeChanged(This, handler, token) \
    ((This)->lpVtbl->add_SizeChanged(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_remove_SizeChanged(This, token) \
    ((This)->lpVtbl->remove_SizeChanged(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_add_VisibilityChanged(This, handler, token) \
    ((This)->lpVtbl->add_VisibilityChanged(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_remove_VisibilityChanged(This, token) \
    ((This)->lpVtbl->remove_VisibilityChanged(This, token))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_Activate(This) \
    ((This)->lpVtbl->Activate(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_Close(This) \
    ((This)->lpVtbl->Close(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindow;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IWindow2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Window
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IWindow2[] = L"Windows.UI.Xaml.IWindow2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIWindow2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIWindow2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIWindow2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIWindow2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIWindow2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIWindow2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIWindow2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SetTitleBar)(__x_ABI_CWindows_CUI_CXaml_CIWindow2* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIWindow2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIWindow2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIWindow2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIWindow2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow2_SetTitleBar(This, value) \
    ((This)->lpVtbl->SetTitleBar(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindow2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IWindow3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Window
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IWindow3[] = L"Windows.UI.Xaml.IWindow3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIWindow3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIWindow3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIWindow3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIWindow3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIWindow3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIWindow3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIWindow3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Compositor)(__x_ABI_CWindows_CUI_CXaml_CIWindow3* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositor** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIWindow3Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIWindow3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIWindow3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIWindow3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow3_get_Compositor(This, value) \
    ((This)->lpVtbl->get_Compositor(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindow3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.UI.Xaml.IWindow4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Window
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IWindow4[] = L"Windows.UI.Xaml.IWindow4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIWindow4Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIWindow4* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIWindow4* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIWindow4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIWindow4* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIWindow4* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIWindow4* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_UIContext)(__x_ABI_CWindows_CUI_CXaml_CIWindow4* This,
        __x_ABI_CWindows_CUI_CIUIContext** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIWindow4Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIWindow4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIWindow4Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIWindow4_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow4_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow4_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow4_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow4_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow4_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIWindow4_get_UIContext(This, value) \
    ((This)->lpVtbl->get_UIContext(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindow4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Xaml.IWindowCreatedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.WindowCreatedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IWindowCreatedEventArgs[] = L"Windows.UI.Xaml.IWindowCreatedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Window)(__x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIWindow** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_get_Window(This, value) \
    ((This)->lpVtbl->get_Window(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IWindowStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Window
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IWindowStatics[] = L"Windows.UI.Xaml.IWindowStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIWindowStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIWindowStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIWindowStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIWindowStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIWindowStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIWindowStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIWindowStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_CWindows_CUI_CXaml_CIWindowStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIWindow** value);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIWindowStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIWindowStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIWindowStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIWindowStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIWindowStatics_get_Current(This, value) \
    ((This)->lpVtbl->get_Current(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindowStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.UI.Xaml.IXamlRoot
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.XamlRoot
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIXamlRoot_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIXamlRoot_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IXamlRoot[] = L"Windows.UI.Xaml.IXamlRoot";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIXamlRootVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIXamlRoot* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIXamlRoot* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIXamlRoot* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIXamlRoot* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIXamlRoot* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIXamlRoot* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CUI_CXaml_CIXamlRoot* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CWindows_CUI_CXaml_CIXamlRoot* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_RasterizationScale)(__x_ABI_CWindows_CUI_CXaml_CIXamlRoot* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_IsHostVisible)(__x_ABI_CWindows_CUI_CXaml_CIXamlRoot* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_UIContext)(__x_ABI_CWindows_CUI_CXaml_CIXamlRoot* This,
        __x_ABI_CWindows_CUI_CIUIContext** value);
    HRESULT (STDMETHODCALLTYPE* add_Changed)(__x_ABI_CWindows_CUI_CXaml_CIXamlRoot* This,
        __FITypedEventHandler_2_Windows__CUI__CXaml__CXamlRoot_Windows__CUI__CXaml__CXamlRootChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Changed)(__x_ABI_CWindows_CUI_CXaml_CIXamlRoot* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIXamlRootVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIXamlRoot
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIXamlRootVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRoot_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRoot_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRoot_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRoot_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRoot_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRoot_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRoot_get_Content(This, value) \
    ((This)->lpVtbl->get_Content(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRoot_get_Size(This, value) \
    ((This)->lpVtbl->get_Size(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRoot_get_RasterizationScale(This, value) \
    ((This)->lpVtbl->get_RasterizationScale(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRoot_get_IsHostVisible(This, value) \
    ((This)->lpVtbl->get_IsHostVisible(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRoot_get_UIContext(This, value) \
    ((This)->lpVtbl->get_UIContext(This, value))

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRoot_add_Changed(This, handler, token) \
    ((This)->lpVtbl->add_Changed(This, handler, token))

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRoot_remove_Changed(This, token) \
    ((This)->lpVtbl->remove_Changed(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIXamlRoot;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIXamlRoot_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Interface Windows.UI.Xaml.IXamlRootChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.XamlRootChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IXamlRootChangedEventArgs[] = L"Windows.UI.Xaml.IXamlRootChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIXamlRootChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Xaml.AdaptiveTrigger
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IAdaptiveTriggerStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IAdaptiveTrigger ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_AdaptiveTrigger_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_AdaptiveTrigger_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_AdaptiveTrigger[] = L"Windows.UI.Xaml.AdaptiveTrigger";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.Application
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IApplicationStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IApplication ** Default Interface **
 *    Windows.UI.Xaml.IApplication2
 *    Windows.UI.Xaml.IApplication3
 *    Windows.UI.Xaml.IApplicationOverrides
 *    Windows.UI.Xaml.IApplicationOverrides2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Application_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Application_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Application[] = L"Windows.UI.Xaml.Application";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.ApplicationInitializationCallbackParams
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IApplicationInitializationCallbackParams ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ApplicationInitializationCallbackParams_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ApplicationInitializationCallbackParams_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ApplicationInitializationCallbackParams[] = L"Windows.UI.Xaml.ApplicationInitializationCallbackParams";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.BindingFailedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IBindingFailedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_BindingFailedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_BindingFailedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_BindingFailedEventArgs[] = L"Windows.UI.Xaml.BindingFailedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.BringIntoViewOptions
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IBringIntoViewOptions ** Default Interface **
 *    Windows.UI.Xaml.IBringIntoViewOptions2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_BringIntoViewOptions_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_BringIntoViewOptions_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_BringIntoViewOptions[] = L"Windows.UI.Xaml.BringIntoViewOptions";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.UI.Xaml.BringIntoViewRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IBringIntoViewRequestedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_BringIntoViewRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_BringIntoViewRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_BringIntoViewRequestedEventArgs[] = L"Windows.UI.Xaml.BringIntoViewRequestedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Class Windows.UI.Xaml.BrushTransition
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IBrushTransition ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_BrushTransition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_BrushTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_BrushTransition[] = L"Windows.UI.Xaml.BrushTransition";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Xaml.ColorPaletteResources
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IColorPaletteResources ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ColorPaletteResources_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ColorPaletteResources_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ColorPaletteResources[] = L"Windows.UI.Xaml.ColorPaletteResources";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Xaml.CornerRadiusHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.ICornerRadiusHelperStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.ICornerRadiusHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_CornerRadiusHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_CornerRadiusHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_CornerRadiusHelper[] = L"Windows.UI.Xaml.CornerRadiusHelper";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DataContextChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDataContextChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DataContextChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DataContextChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DataContextChangedEventArgs[] = L"Windows.UI.Xaml.DataContextChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DataTemplate
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IDataTemplateStatics2 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDataTemplate ** Default Interface **
 *    Windows.UI.Xaml.IElementFactory
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DataTemplate_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DataTemplate_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DataTemplate[] = L"Windows.UI.Xaml.DataTemplate";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DataTemplateKey
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDataTemplateKey ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DataTemplateKey_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DataTemplateKey_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DataTemplateKey[] = L"Windows.UI.Xaml.DataTemplateKey";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DebugSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDebugSettings ** Default Interface **
 *    Windows.UI.Xaml.IDebugSettings2
 *    Windows.UI.Xaml.IDebugSettings3
 *    Windows.UI.Xaml.IDebugSettings4
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DebugSettings_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DebugSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DebugSettings[] = L"Windows.UI.Xaml.DebugSettings";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DependencyObject
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDependencyObject ** Default Interface **
 *    Windows.UI.Xaml.IDependencyObject2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DependencyObject_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DependencyObject_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DependencyObject[] = L"Windows.UI.Xaml.DependencyObject";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DependencyObjectCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IObservableVector`1<Windows.UI.Xaml.DependencyObject> ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.DependencyObject>
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.DependencyObject>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DependencyObjectCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DependencyObjectCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DependencyObjectCollection[] = L"Windows.UI.Xaml.DependencyObjectCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DependencyProperty
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IDependencyPropertyStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDependencyProperty ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DependencyProperty_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DependencyProperty_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DependencyProperty[] = L"Windows.UI.Xaml.DependencyProperty";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DependencyPropertyChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDependencyPropertyChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DependencyPropertyChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DependencyPropertyChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DependencyPropertyChangedEventArgs[] = L"Windows.UI.Xaml.DependencyPropertyChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DispatcherTimer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDispatcherTimer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DispatcherTimer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DispatcherTimer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DispatcherTimer[] = L"Windows.UI.Xaml.DispatcherTimer";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DragEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDragEventArgs ** Default Interface **
 *    Windows.UI.Xaml.IDragEventArgs2
 *    Windows.UI.Xaml.IDragEventArgs3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DragEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DragEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DragEventArgs[] = L"Windows.UI.Xaml.DragEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DragOperationDeferral
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDragOperationDeferral ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DragOperationDeferral_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DragOperationDeferral_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DragOperationDeferral[] = L"Windows.UI.Xaml.DragOperationDeferral";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DragStartingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDragStartingEventArgs ** Default Interface **
 *    Windows.UI.Xaml.IDragStartingEventArgs2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DragStartingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DragStartingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DragStartingEventArgs[] = L"Windows.UI.Xaml.DragStartingEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DragUI
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDragUI ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DragUI_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DragUI_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DragUI[] = L"Windows.UI.Xaml.DragUI";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DragUIOverride
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDragUIOverride ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DragUIOverride_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DragUIOverride_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DragUIOverride[] = L"Windows.UI.Xaml.DragUIOverride";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DropCompletedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDropCompletedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DropCompletedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DropCompletedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DropCompletedEventArgs[] = L"Windows.UI.Xaml.DropCompletedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.DurationHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IDurationHelperStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IDurationHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DurationHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DurationHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DurationHelper[] = L"Windows.UI.Xaml.DurationHelper";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.EffectiveViewportChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IEffectiveViewportChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_EffectiveViewportChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_EffectiveViewportChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_EffectiveViewportChangedEventArgs[] = L"Windows.UI.Xaml.EffectiveViewportChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Xaml.ElementFactoryGetArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IElementFactoryGetArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ElementFactoryGetArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ElementFactoryGetArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ElementFactoryGetArgs[] = L"Windows.UI.Xaml.ElementFactoryGetArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Xaml.ElementFactoryRecycleArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IElementFactoryRecycleArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ElementFactoryRecycleArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ElementFactoryRecycleArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ElementFactoryRecycleArgs[] = L"Windows.UI.Xaml.ElementFactoryRecycleArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Xaml.ElementSoundPlayer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IElementSoundPlayerStatics2 interface starting with version 6.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IElementSoundPlayerStatics interface starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IElementSoundPlayer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ElementSoundPlayer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ElementSoundPlayer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ElementSoundPlayer[] = L"Windows.UI.Xaml.ElementSoundPlayer";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.UI.Xaml.EventTrigger
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IEventTrigger ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_EventTrigger_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_EventTrigger_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_EventTrigger[] = L"Windows.UI.Xaml.EventTrigger";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.ExceptionRoutedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IExceptionRoutedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ExceptionRoutedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ExceptionRoutedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ExceptionRoutedEventArgs[] = L"Windows.UI.Xaml.ExceptionRoutedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.FrameworkElement
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IFrameworkElementStatics6 interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IFrameworkElementStatics5 interface starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IFrameworkElementStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IFrameworkElementStatics4 interface starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IFrameworkElementStatics2 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IFrameworkElement ** Default Interface **
 *    Windows.UI.Xaml.IFrameworkElement2
 *    Windows.UI.Xaml.IFrameworkElement3
 *    Windows.UI.Xaml.IFrameworkElement4
 *    Windows.UI.Xaml.IFrameworkElement6
 *    Windows.UI.Xaml.IFrameworkElement7
 *    Windows.UI.Xaml.IFrameworkElementProtected7
 *    Windows.UI.Xaml.IFrameworkElementOverrides
 *    Windows.UI.Xaml.IFrameworkElementOverrides2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_FrameworkElement_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_FrameworkElement_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_FrameworkElement[] = L"Windows.UI.Xaml.FrameworkElement";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.FrameworkTemplate
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IFrameworkTemplate ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_FrameworkTemplate_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_FrameworkTemplate_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_FrameworkTemplate[] = L"Windows.UI.Xaml.FrameworkTemplate";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.FrameworkView
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IFrameworkView ** Default Interface **
 *    Windows.ApplicationModel.Core.IFrameworkView
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_FrameworkView_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_FrameworkView_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_FrameworkView[] = L"Windows.UI.Xaml.FrameworkView";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.FrameworkViewSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IFrameworkViewSource ** Default Interface **
 *    Windows.ApplicationModel.Core.IFrameworkViewSource
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_FrameworkViewSource_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_FrameworkViewSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_FrameworkViewSource[] = L"Windows.UI.Xaml.FrameworkViewSource";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.GridLengthHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IGridLengthHelperStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IGridLengthHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_GridLengthHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_GridLengthHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_GridLengthHelper[] = L"Windows.UI.Xaml.GridLengthHelper";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.MediaFailedRoutedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IMediaFailedRoutedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_MediaFailedRoutedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_MediaFailedRoutedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_MediaFailedRoutedEventArgs[] = L"Windows.UI.Xaml.MediaFailedRoutedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.PointHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IPointHelperStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IPointHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_PointHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_PointHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_PointHelper[] = L"Windows.UI.Xaml.PointHelper";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.PropertyMetadata
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IPropertyMetadataStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IPropertyMetadata ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_PropertyMetadata_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_PropertyMetadata_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_PropertyMetadata[] = L"Windows.UI.Xaml.PropertyMetadata";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.PropertyPath
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.UI.Xaml.IPropertyPathFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IPropertyPath ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_PropertyPath_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_PropertyPath_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_PropertyPath[] = L"Windows.UI.Xaml.PropertyPath";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.RectHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IRectHelperStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IRectHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_RectHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_RectHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_RectHelper[] = L"Windows.UI.Xaml.RectHelper";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.ResourceDictionary
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IResourceDictionary ** Default Interface **
 *    Windows.Foundation.Collections.IMap`2<Object, Object>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Object, Object>>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ResourceDictionary_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ResourceDictionary_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ResourceDictionary[] = L"Windows.UI.Xaml.ResourceDictionary";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.RoutedEvent
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IRoutedEvent ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_RoutedEvent_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_RoutedEvent_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_RoutedEvent[] = L"Windows.UI.Xaml.RoutedEvent";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.RoutedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IRoutedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_RoutedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_RoutedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_RoutedEventArgs[] = L"Windows.UI.Xaml.RoutedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.ScalarTransition
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IScalarTransition ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ScalarTransition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ScalarTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ScalarTransition[] = L"Windows.UI.Xaml.ScalarTransition";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Xaml.Setter
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Type can be activated via the Windows.UI.Xaml.ISetterFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.ISetter ** Default Interface **
 *    Windows.UI.Xaml.ISetter2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Setter_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Setter_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Setter[] = L"Windows.UI.Xaml.Setter";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.SetterBase
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.ISetterBase ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_SetterBase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_SetterBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_SetterBase[] = L"Windows.UI.Xaml.SetterBase";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.SetterBaseCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.ISetterBaseCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.SetterBase>
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.SetterBase>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_SetterBaseCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_SetterBaseCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_SetterBaseCollection[] = L"Windows.UI.Xaml.SetterBaseCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.SizeChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.ISizeChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_SizeChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_SizeChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_SizeChangedEventArgs[] = L"Windows.UI.Xaml.SizeChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.SizeHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.ISizeHelperStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.ISizeHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_SizeHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_SizeHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_SizeHelper[] = L"Windows.UI.Xaml.SizeHelper";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.StateTrigger
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IStateTriggerStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IStateTrigger ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_StateTrigger_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_StateTrigger_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_StateTrigger[] = L"Windows.UI.Xaml.StateTrigger";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.StateTriggerBase
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IStateTriggerBase ** Default Interface **
 *    Windows.UI.Xaml.IStateTriggerBaseProtected
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_StateTriggerBase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_StateTriggerBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_StateTriggerBase[] = L"Windows.UI.Xaml.StateTriggerBase";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.Style
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.UI.Xaml.IStyleFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IStyle ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Style_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Style_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Style[] = L"Windows.UI.Xaml.Style";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.TargetPropertyPath
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Type can be activated via the Windows.UI.Xaml.ITargetPropertyPathFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.ITargetPropertyPath ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_TargetPropertyPath_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_TargetPropertyPath_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_TargetPropertyPath[] = L"Windows.UI.Xaml.TargetPropertyPath";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.ThicknessHelper
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IThicknessHelperStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IThicknessHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ThicknessHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ThicknessHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ThicknessHelper[] = L"Windows.UI.Xaml.ThicknessHelper";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.TriggerAction
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.ITriggerAction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_TriggerAction_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_TriggerAction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_TriggerAction[] = L"Windows.UI.Xaml.TriggerAction";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.TriggerActionCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.TriggerAction> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.TriggerAction>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_TriggerActionCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_TriggerActionCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_TriggerActionCollection[] = L"Windows.UI.Xaml.TriggerActionCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.TriggerBase
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.ITriggerBase ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_TriggerBase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_TriggerBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_TriggerBase[] = L"Windows.UI.Xaml.TriggerBase";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.TriggerCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.TriggerBase> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.TriggerBase>
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_TriggerCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_TriggerCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_TriggerCollection[] = L"Windows.UI.Xaml.TriggerCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.UIElement
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics3 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics9 interface starting with version 7.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics2 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics6 interface starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics5 interface starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics4 interface starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics8 interface starting with version 6.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics10 interface starting with version 8.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.IUIElementStatics7 interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IUIElement ** Default Interface **
 *    Windows.UI.Xaml.IUIElement2
 *    Windows.UI.Xaml.IUIElement3
 *    Windows.UI.Xaml.IUIElement4
 *    Windows.UI.Xaml.IUIElement5
 *    Windows.UI.Xaml.IUIElement7
 *    Windows.UI.Xaml.IUIElement8
 *    Windows.UI.Xaml.IUIElement9
 *    Windows.UI.Xaml.IUIElement10
 *    Windows.UI.Xaml.IUIElementOverrides
 *    Windows.UI.Xaml.IUIElementOverrides7
 *    Windows.UI.Xaml.IUIElementOverrides8
 *    Windows.UI.Xaml.IUIElementOverrides9
 *    Windows.UI.Composition.IAnimationObject
 *    Windows.UI.Composition.IVisualElement
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_UIElement_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_UIElement_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_UIElement[] = L"Windows.UI.Xaml.UIElement";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.UIElementWeakCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IUIElementWeakCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.UIElement>
 *    Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.UIElement>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_UIElementWeakCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_UIElementWeakCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_UIElementWeakCollection[] = L"Windows.UI.Xaml.UIElementWeakCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Xaml.UnhandledExceptionEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IUnhandledExceptionEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_UnhandledExceptionEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_UnhandledExceptionEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_UnhandledExceptionEventArgs[] = L"Windows.UI.Xaml.UnhandledExceptionEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.Vector3Transition
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IVector3Transition ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Vector3Transition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Vector3Transition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Vector3Transition[] = L"Windows.UI.Xaml.Vector3Transition";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000

/*
 *
 * Class Windows.UI.Xaml.VisualState
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IVisualState ** Default Interface **
 *    Windows.UI.Xaml.IVisualState2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_VisualState_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_VisualState_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_VisualState[] = L"Windows.UI.Xaml.VisualState";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.VisualStateChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IVisualStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_VisualStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_VisualStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_VisualStateChangedEventArgs[] = L"Windows.UI.Xaml.VisualStateChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.VisualStateGroup
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IVisualStateGroup ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_VisualStateGroup_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_VisualStateGroup_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_VisualStateGroup[] = L"Windows.UI.Xaml.VisualStateGroup";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.VisualStateManager
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IVisualStateManagerStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IVisualStateManager ** Default Interface **
 *    Windows.UI.Xaml.IVisualStateManagerProtected
 *    Windows.UI.Xaml.IVisualStateManagerOverrides
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_VisualStateManager_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_VisualStateManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_VisualStateManager[] = L"Windows.UI.Xaml.VisualStateManager";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.VisualTransition
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IVisualTransition ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_VisualTransition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_VisualTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_VisualTransition[] = L"Windows.UI.Xaml.VisualTransition";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.Window
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.IWindowStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IWindow ** Default Interface **
 *    Windows.UI.Xaml.IWindow2
 *    Windows.UI.Xaml.IWindow3
 *    Windows.UI.Xaml.IWindow4
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Window_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Window_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Window[] = L"Windows.UI.Xaml.Window";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.WindowCreatedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IWindowCreatedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_WindowCreatedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_WindowCreatedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_WindowCreatedEventArgs[] = L"Windows.UI.Xaml.WindowCreatedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.UI.Xaml.XamlRoot
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IXamlRoot ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_XamlRoot_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_XamlRoot_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_XamlRoot[] = L"Windows.UI.Xaml.XamlRoot";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

/*
 *
 * Class Windows.UI.Xaml.XamlRootChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.IXamlRootChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_XamlRootChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_XamlRootChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_XamlRootChangedEventArgs[] = L"Windows.UI.Xaml.XamlRootChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000

#endif // defined(__cplusplus)
#pragma pop_macro("MIDL_CONST_ID")
// Restore the original value of the 'DEPRECATED' macro
#pragma pop_macro("DEPRECATED")

#ifdef __clang__
#pragma clang diagnostic pop // deprecated-declarations
#else
#pragma warning(pop)
#endif
#endif // __windows2Eui2Examl_p_h__

#endif // __windows2Eui2Examl_h__
