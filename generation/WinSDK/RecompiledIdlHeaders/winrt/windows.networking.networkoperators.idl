//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Windows.Data.Xml.Dom.idl";
import "Windows.Devices.Sms.idl";
import "Windows.Networking.idl";
import "Windows.Networking.Connectivity.idl";
import "Windows.Storage.Streams.idl";

// Forward Declare
namespace Windows
{
    namespace Data
    {
        namespace Xml
        {
            namespace Dom
            {
                runtimeclass XmlDocument;
            }
        }
    }
}
namespace Windows
{
    namespace Devices
    {
        namespace Sms
        {
            typedef enum CellularClass CellularClass;

            interface ISmsMessage;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct DateTime DateTime;

        interface IAsyncAction;

        typedef struct TimeSpan TimeSpan;

        apicontract UniversalApiContract;

        runtimeclass Uri;
    }
}
namespace Windows
{
    namespace Networking
    {
        namespace Connectivity
        {
            runtimeclass ConnectionProfile;

            runtimeclass NetworkAdapter;

            typedef enum NetworkCostType NetworkCostType;
        }
    }
}
namespace Windows
{
    namespace Networking
    {
        runtimeclass HostName;
    }
}
namespace Windows
{
    namespace Storage
    {
        namespace Streams
        {
            interface IBuffer;

            interface IRandomAccessStreamReference;
        }
    }
}
namespace Windows
{
    namespace Networking
    {
        namespace NetworkOperators
        {
            apicontract LegacyNetworkOperatorsContract;

            apicontract NetworkOperatorsFdnContract;

            typedef enum DataClasses DataClasses;

            typedef enum ESimAuthenticationPreference ESimAuthenticationPreference;

            typedef enum ESimDiscoverResultKind ESimDiscoverResultKind;

            typedef enum ESimOperationStatus ESimOperationStatus;

            typedef enum ESimProfileClass ESimProfileClass;

            typedef enum ESimProfileMetadataState ESimProfileMetadataState;

            typedef enum ESimProfileState ESimProfileState;

            typedef enum ESimState ESimState;

            typedef enum ESimWatcherStatus ESimWatcherStatus;

            typedef enum HotspotAuthenticationResponseCode HotspotAuthenticationResponseCode;

            typedef enum MobileBroadbandAccountWatcherStatus MobileBroadbandAccountWatcherStatus;

            typedef enum MobileBroadbandDeviceType MobileBroadbandDeviceType;

            typedef enum MobileBroadbandModemStatus MobileBroadbandModemStatus;

            typedef enum MobileBroadbandPinFormat MobileBroadbandPinFormat;

            typedef enum MobileBroadbandPinLockState MobileBroadbandPinLockState;

            typedef enum MobileBroadbandPinType MobileBroadbandPinType;

            typedef enum MobileBroadbandRadioState MobileBroadbandRadioState;

            typedef enum MobileBroadbandUiccAppOperationStatus MobileBroadbandUiccAppOperationStatus;

            typedef enum NetworkDeviceStatus NetworkDeviceStatus;

            typedef enum NetworkOperatorDataUsageNotificationKind NetworkOperatorDataUsageNotificationKind;

            typedef enum NetworkOperatorEventMessageType NetworkOperatorEventMessageType;

            typedef enum NetworkRegistrationState NetworkRegistrationState;

            typedef enum ProfileMediaType ProfileMediaType;

            typedef enum TetheringCapability TetheringCapability;

            typedef enum TetheringOperationStatus TetheringOperationStatus;

            typedef enum TetheringOperationalState TetheringOperationalState;

            typedef enum TetheringWiFiBand TetheringWiFiBand;

            typedef enum UiccAccessCondition UiccAccessCondition;

            typedef enum UiccAppKind UiccAppKind;

            typedef enum UiccAppRecordKind UiccAppRecordKind;

            typedef enum UssdResultCode UssdResultCode;

            typedef struct ESimProfileInstallProgress ESimProfileInstallProgress;

            typedef struct ProfileUsage ProfileUsage;

            interface IESim;

            interface IESim2;

            interface IESimAddedEventArgs;

            interface IESimDiscoverEvent;

            interface IESimDiscoverResult;

            interface IESimDownloadProfileMetadataResult;

            interface IESimManagerStatics;

            interface IESimOperationResult;

            interface IESimPolicy;

            interface IESimProfile;

            interface IESimProfileMetadata;

            interface IESimProfilePolicy;

            interface IESimRemovedEventArgs;

            interface IESimServiceInfo;

            interface IESimUpdatedEventArgs;

            interface IESimWatcher;

            interface IFdnAccessManagerStatics;

            interface IHotspotAuthenticationContext;

            interface IHotspotAuthenticationContext2;

            interface IHotspotAuthenticationContextStatics;

            interface IHotspotAuthenticationEventDetails;

            interface IHotspotCredentialsAuthenticationResult;

            interface IKnownCSimFilePathsStatics;

            interface IKnownRuimFilePathsStatics;

            interface IKnownSimFilePathsStatics;

            interface IKnownUSimFilePathsStatics;

            interface IMobileBroadbandAccount;

            interface IMobileBroadbandAccount2;

            interface IMobileBroadbandAccount3;

            interface IMobileBroadbandAccountEventArgs;

            interface IMobileBroadbandAccountStatics;

            interface IMobileBroadbandAccountUpdatedEventArgs;

            interface IMobileBroadbandAccountWatcher;

            interface IMobileBroadbandAntennaSar;

            interface IMobileBroadbandAntennaSarFactory;

            interface IMobileBroadbandCellCdma;

            interface IMobileBroadbandCellGsm;

            interface IMobileBroadbandCellLte;

            interface IMobileBroadbandCellTdscdma;

            interface IMobileBroadbandCellUmts;

            interface IMobileBroadbandCellsInfo;

            interface IMobileBroadbandDeviceInformation;

            interface IMobileBroadbandDeviceInformation2;

            interface IMobileBroadbandDeviceInformation3;

            interface IMobileBroadbandDeviceService;

            interface IMobileBroadbandDeviceServiceCommandResult;

            interface IMobileBroadbandDeviceServiceCommandSession;

            interface IMobileBroadbandDeviceServiceDataReceivedEventArgs;

            interface IMobileBroadbandDeviceServiceDataSession;

            interface IMobileBroadbandDeviceServiceInformation;

            interface IMobileBroadbandDeviceServiceTriggerDetails;

            interface IMobileBroadbandModem;

            interface IMobileBroadbandModem2;

            interface IMobileBroadbandModem3;

            interface IMobileBroadbandModemConfiguration;

            interface IMobileBroadbandModemConfiguration2;

            interface IMobileBroadbandModemIsolation;

            interface IMobileBroadbandModemIsolationFactory;

            interface IMobileBroadbandModemStatics;

            interface IMobileBroadbandNetwork;

            interface IMobileBroadbandNetwork2;

            interface IMobileBroadbandNetwork3;

            interface IMobileBroadbandNetworkRegistrationStateChange;

            interface IMobileBroadbandNetworkRegistrationStateChangeTriggerDetails;

            interface IMobileBroadbandPco;

            interface IMobileBroadbandPcoDataChangeTriggerDetails;

            interface IMobileBroadbandPin;

            interface IMobileBroadbandPinLockStateChange;

            interface IMobileBroadbandPinLockStateChangeTriggerDetails;

            interface IMobileBroadbandPinManager;

            interface IMobileBroadbandPinOperationResult;

            interface IMobileBroadbandRadioStateChange;

            interface IMobileBroadbandRadioStateChangeTriggerDetails;

            interface IMobileBroadbandSarManager;

            interface IMobileBroadbandTransmissionStateChangedEventArgs;

            interface IMobileBroadbandUicc;

            interface IMobileBroadbandUiccApp;

            interface IMobileBroadbandUiccAppReadRecordResult;

            interface IMobileBroadbandUiccAppRecordDetailsResult;

            interface IMobileBroadbandUiccAppsResult;

            interface INetworkOperatorDataUsageTriggerDetails;

            interface INetworkOperatorNotificationEventDetails;

            interface INetworkOperatorTetheringAccessPointConfiguration;

            interface INetworkOperatorTetheringAccessPointConfiguration2;

            interface INetworkOperatorTetheringClient;

            interface INetworkOperatorTetheringClientManager;

            interface INetworkOperatorTetheringEntitlementCheck;

            interface INetworkOperatorTetheringManager;

            interface INetworkOperatorTetheringManagerStatics;

            interface INetworkOperatorTetheringManagerStatics2;

            interface INetworkOperatorTetheringManagerStatics3;

            interface INetworkOperatorTetheringManagerStatics4;

            interface INetworkOperatorTetheringOperationResult;

            interface IProvisionFromXmlDocumentResults;

            interface IProvisionedProfile;

            interface IProvisioningAgent;

            interface IProvisioningAgentStaticMethods;

            interface ITetheringEntitlementCheckTriggerDetails;

            interface IUssdMessage;

            interface IUssdMessageFactory;

            interface IUssdReply;

            interface IUssdSession;

            interface IUssdSessionStatics;

            runtimeclass ESim;

            runtimeclass ESimAddedEventArgs;

            runtimeclass ESimDiscoverEvent;

            runtimeclass ESimDiscoverResult;

            runtimeclass ESimDownloadProfileMetadataResult;

            runtimeclass ESimManager;

            runtimeclass ESimOperationResult;

            runtimeclass ESimPolicy;

            runtimeclass ESimProfile;

            runtimeclass ESimProfileMetadata;

            runtimeclass ESimProfilePolicy;

            runtimeclass ESimRemovedEventArgs;

            runtimeclass ESimServiceInfo;

            runtimeclass ESimUpdatedEventArgs;

            runtimeclass ESimWatcher;

            runtimeclass FdnAccessManager;

            runtimeclass HotspotAuthenticationContext;

            runtimeclass HotspotAuthenticationEventDetails;

            runtimeclass HotspotCredentialsAuthenticationResult;

            runtimeclass KnownCSimFilePaths;

            runtimeclass KnownRuimFilePaths;

            runtimeclass KnownSimFilePaths;

            runtimeclass KnownUSimFilePaths;

            runtimeclass MobileBroadbandAccount;

            runtimeclass MobileBroadbandAccountEventArgs;

            runtimeclass MobileBroadbandAccountUpdatedEventArgs;

            runtimeclass MobileBroadbandAccountWatcher;

            runtimeclass MobileBroadbandAntennaSar;

            runtimeclass MobileBroadbandCellCdma;

            runtimeclass MobileBroadbandCellGsm;

            runtimeclass MobileBroadbandCellLte;

            runtimeclass MobileBroadbandCellTdscdma;

            runtimeclass MobileBroadbandCellUmts;

            runtimeclass MobileBroadbandCellsInfo;

            runtimeclass MobileBroadbandDeviceInformation;

            runtimeclass MobileBroadbandDeviceService;

            runtimeclass MobileBroadbandDeviceServiceCommandResult;

            runtimeclass MobileBroadbandDeviceServiceCommandSession;

            runtimeclass MobileBroadbandDeviceServiceDataReceivedEventArgs;

            runtimeclass MobileBroadbandDeviceServiceDataSession;

            runtimeclass MobileBroadbandDeviceServiceInformation;

            runtimeclass MobileBroadbandDeviceServiceTriggerDetails;

            runtimeclass MobileBroadbandModem;

            runtimeclass MobileBroadbandModemConfiguration;

            runtimeclass MobileBroadbandModemIsolation;

            runtimeclass MobileBroadbandNetwork;

            runtimeclass MobileBroadbandNetworkRegistrationStateChange;

            runtimeclass MobileBroadbandNetworkRegistrationStateChangeTriggerDetails;

            runtimeclass MobileBroadbandPco;

            runtimeclass MobileBroadbandPcoDataChangeTriggerDetails;

            runtimeclass MobileBroadbandPin;

            runtimeclass MobileBroadbandPinLockStateChange;

            runtimeclass MobileBroadbandPinLockStateChangeTriggerDetails;

            runtimeclass MobileBroadbandPinManager;

            runtimeclass MobileBroadbandPinOperationResult;

            runtimeclass MobileBroadbandRadioStateChange;

            runtimeclass MobileBroadbandRadioStateChangeTriggerDetails;

            runtimeclass MobileBroadbandSarManager;

            runtimeclass MobileBroadbandTransmissionStateChangedEventArgs;

            runtimeclass MobileBroadbandUicc;

            runtimeclass MobileBroadbandUiccApp;

            runtimeclass MobileBroadbandUiccAppReadRecordResult;

            runtimeclass MobileBroadbandUiccAppRecordDetailsResult;

            runtimeclass MobileBroadbandUiccAppsResult;

            runtimeclass NetworkOperatorDataUsageTriggerDetails;

            runtimeclass NetworkOperatorNotificationEventDetails;

            runtimeclass NetworkOperatorTetheringAccessPointConfiguration;

            runtimeclass NetworkOperatorTetheringClient;

            runtimeclass NetworkOperatorTetheringManager;

            runtimeclass NetworkOperatorTetheringOperationResult;

            runtimeclass ProvisionFromXmlDocumentResults;

            runtimeclass ProvisionedProfile;

            runtimeclass ProvisioningAgent;

            runtimeclass TetheringEntitlementCheckTriggerDetails;

            runtimeclass UssdMessage;

            runtimeclass UssdReply;

            runtimeclass UssdSession;
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace Networking
    {
        namespace NetworkOperators
        {
            declare
            {
                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.ESimDiscoverEvent*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.ESimProfile*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandAntennaSar*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandCellCdma*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandCellGsm*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandCellLte*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandCellTdscdma*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandCellUmts*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceInformation*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandNetworkRegistrationStateChange*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandPinLockStateChange*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandPinType>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandUiccApp*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.NetworkOperatorTetheringClient*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.ESimDiscoverEvent*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.ESimProfile*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.MobileBroadbandAntennaSar*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.MobileBroadbandCellCdma*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.MobileBroadbandCellGsm*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.MobileBroadbandCellLte*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.MobileBroadbandCellTdscdma*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.MobileBroadbandCellUmts*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceInformation*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.MobileBroadbandNetworkRegistrationStateChange*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.MobileBroadbandPinLockStateChange*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.MobileBroadbandPinType>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.MobileBroadbandUiccApp*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.NetworkOperatorTetheringClient*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.ESimDiscoverEvent*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.ESimProfile*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandAntennaSar*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandCellCdma*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandCellGsm*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandCellLte*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandCellTdscdma*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandCellUmts*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceInformation*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandNetworkRegistrationStateChange*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandPinLockStateChange*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandPinType>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandUiccApp*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.NetworkOperatorTetheringClient*>;

                interface Windows.Foundation.IAsyncOperationWithProgress<Windows.Networking.NetworkOperators.ESimOperationResult*, Windows.Networking.NetworkOperators.ESimProfileInstallProgress>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ESimDiscoverResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ESimDownloadProfileMetadataResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ESimOperationResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.HotspotCredentialsAuthenticationResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandCellsInfo*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandModemConfiguration*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandModemStatus>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandPco*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppReadRecordResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppRecordDetailsResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppsResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.NetworkOperatorTetheringOperationResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ProvisionFromXmlDocumentResults*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.UssdReply*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.ESim*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.ESimProfileMetadata*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.ESimWatcher*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.ESimWatcher*, Windows.Networking.NetworkOperators.ESimAddedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.ESimWatcher*, Windows.Networking.NetworkOperators.ESimRemovedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.ESimWatcher*, Windows.Networking.NetworkOperators.ESimUpdatedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, Windows.Networking.NetworkOperators.MobileBroadbandAccountUpdatedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataSession*, Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataReceivedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandModem*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandSarManager*, Windows.Networking.NetworkOperators.MobileBroadbandTransmissionStateChangedEventArgs*>;
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace Networking
    {
        namespace NetworkOperators
        {
            [contractversion(1.0)]
            apicontract LegacyNetworkOperatorsContract
            {
            }

            [contractversion(1.0)]
            apicontract NetworkOperatorsFdnContract
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [flags]
            enum DataClasses
            {
                None           = 0x0,
                Gprs           = 0x1,
                Edge           = 0x2,
                Umts           = 0x4,
                Hsdpa          = 0x8,
                Hsupa          = 0x10,
                LteAdvanced    = 0x20,
                Cdma1xRtt      = 0x10000,
                Cdma1xEvdo     = 0x20000,
                Cdma1xEvdoRevA = 0x40000,
                Cdma1xEvdv     = 0x80000,
                Cdma3xRtt      = 0x100000,
                Cdma1xEvdoRevB = 0x200000,
                CdmaUmb        = 0x400000,
                Custom         = 0x80000000
            };

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            enum ESimAuthenticationPreference
            {
                OnEntry  = 0,
                OnAction = 1,
                Never    = 2
            };

            [contract(Windows.Foundation.UniversalApiContract, 8.0)]
            enum ESimDiscoverResultKind
            {
                None            = 0,
                Events          = 1,
                ProfileMetadata = 2
            };

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            enum ESimOperationStatus
            {
                Success                            = 0,
                NotAuthorized                      = 1,
                NotFound                           = 2,
                PolicyViolation                    = 3,
                InsufficientSpaceOnCard            = 4,
                ServerFailure                      = 5,
                ServerNotReachable                 = 6,
                TimeoutWaitingForUserConsent       = 7,
                IncorrectConfirmationCode          = 8,
                ConfirmationCodeMaxRetriesExceeded = 9,
                CardRemoved                        = 10,
                CardBusy                           = 11,
                Other                              = 12,
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                CardGeneralFailure                 = 13,
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                ConfirmationCodeMissing            = 14,
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                InvalidMatchingId                  = 15,
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                NoEligibleProfileForThisDevice     = 16,
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                OperationAborted                   = 17,
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                EidMismatch                        = 18,
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                ProfileNotAvailableForNewBinding   = 19,
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                ProfileNotReleasedByOperator       = 20,
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                OperationProhibitedByProfileClass  = 21,
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                ProfileNotPresent                  = 22,
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                NoCorrespondingRequest             = 23
            };

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            enum ESimProfileClass
            {
                Operational  = 0,
                Test         = 1,
                Provisioning = 2
            };

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            enum ESimProfileMetadataState
            {
                Unknown           = 0,
                WaitingForInstall = 1,
                Downloading       = 2,
                Installing        = 3,
                Expired           = 4,
                RejectingDownload = 5,
                NoLongerAvailable = 6,
                DeniedByPolicy    = 7
            };

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            enum ESimProfileState
            {
                Unknown  = 0,
                Disabled = 1,
                Enabled  = 2,
                Deleted  = 3
            };

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            enum ESimState
            {
                Unknown = 0,
                Idle    = 1,
                Removed = 2,
                Busy    = 3
            };

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            enum ESimWatcherStatus
            {
                Created              = 0,
                Started              = 1,
                EnumerationCompleted = 2,
                Stopping             = 3,
                Stopped              = 4
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum HotspotAuthenticationResponseCode
            {
                NoError                    = 0,
                LoginSucceeded             = 50,
                LoginFailed                = 100,
                RadiusServerError          = 102,
                NetworkAdministratorError  = 105,
                LoginAborted               = 151,
                AccessGatewayInternalError = 255
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum MobileBroadbandAccountWatcherStatus
            {
                Created              = 0,
                Started              = 1,
                EnumerationCompleted = 2,
                Stopped              = 3,
                Aborted              = 4
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum MobileBroadbandDeviceType
            {
                Unknown   = 0,
                Embedded  = 1,
                Removable = 2,
                Remote    = 3
            };

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            enum MobileBroadbandModemStatus
            {
                Success         = 0,
                OtherFailure    = 1,
                Busy            = 2,
                NoDeviceSupport = 3
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum MobileBroadbandPinFormat
            {
                Unknown      = 0,
                Numeric      = 1,
                Alphanumeric = 2
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum MobileBroadbandPinLockState
            {
                Unknown               = 0,
                Unlocked              = 1,
                PinRequired           = 2,
                PinUnblockKeyRequired = 3
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum MobileBroadbandPinType
            {
                None               = 0,
                Custom             = 1,
                Pin1               = 2,
                Pin2               = 3,
                SimPin             = 4,
                FirstSimPin        = 5,
                NetworkPin         = 6,
                NetworkSubsetPin   = 7,
                ServiceProviderPin = 8,
                CorporatePin       = 9,
                SubsidyLock        = 10
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum MobileBroadbandRadioState
            {
                Off = 0,
                On  = 1
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum MobileBroadbandUiccAppOperationStatus
            {
                Success                = 0,
                InvalidUiccFilePath    = 1,
                AccessConditionNotHeld = 2,
                UiccBusy               = 3
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum NetworkDeviceStatus
            {
                DeviceNotReady        = 0,
                DeviceReady           = 1,
                SimNotInserted        = 2,
                BadSim                = 3,
                DeviceHardwareFailure = 4,
                AccountNotActivated   = 5,
                DeviceLocked          = 6,
                DeviceBlocked         = 7
            };

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            enum NetworkOperatorDataUsageNotificationKind
            {
                DataUsageProgress = 0
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum NetworkOperatorEventMessageType
            {
                Gsm                              = 0,
                Cdma                             = 1,
                Ussd                             = 2,
                DataPlanThresholdReached         = 3,
                DataPlanReset                    = 4,
                DataPlanDeleted                  = 5,
                ProfileConnected                 = 6,
                ProfileDisconnected              = 7,
                RegisteredRoaming                = 8,
                RegisteredHome                   = 9,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TetheringEntitlementCheck        = 10,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TetheringOperationalStateChanged = 11,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                TetheringNumberOfClientsChanged  = 12
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum NetworkRegistrationState
            {
                None         = 0,
                Deregistered = 1,
                Searching    = 2,
                Home         = 3,
                Roaming      = 4,
                Partner      = 5,
                Denied       = 6
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum ProfileMediaType
            {
                Wlan = 0,
                Wwan = 1
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum TetheringCapability
            {
                Enabled                           = 0,
                DisabledByGroupPolicy             = 1,
                DisabledByHardwareLimitation      = 2,
                DisabledByOperator                = 3,
                DisabledBySku                     = 4,
                DisabledByRequiredAppNotInstalled = 5,
                DisabledDueToUnknownCause         = 6,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                DisabledBySystemCapability        = 7
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum TetheringOperationStatus
            {
                Success                    = 0,
                Unknown                    = 1,
                MobileBroadbandDeviceOff   = 2,
                WiFiDeviceOff              = 3,
                EntitlementCheckTimeout    = 4,
                EntitlementCheckFailure    = 5,
                OperationInProgress        = 6,
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                BluetoothDeviceOff         = 7,
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                NetworkLimitedConnectivity = 8
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum TetheringOperationalState
            {
                Unknown      = 0,
                On           = 1,
                Off          = 2,
                InTransition = 3
            };

            [contract(Windows.Foundation.UniversalApiContract, 10.0)]
            enum TetheringWiFiBand
            {
                Auto                  = 0,
                TwoPointFourGigahertz = 1,
                FiveGigahertz         = 2
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum UiccAccessCondition
            {
                AlwaysAllowed   = 0,
                Pin1            = 1,
                Pin2            = 2,
                Pin3            = 3,
                Pin4            = 4,
                Administrative5 = 5,
                Administrative6 = 6,
                NeverAllowed    = 7
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum UiccAppKind
            {
                Unknown = 0,
                MF      = 1,
                MFSim   = 2,
                MFRuim  = 3,
                USim    = 4,
                CSim    = 5,
                ISim    = 6
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum UiccAppRecordKind
            {
                Unknown        = 0,
                Transparent    = 1,
                RecordOriented = 2
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum UssdResultCode
            {
                NoActionRequired      = 0,
                ActionRequired        = 1,
                Terminated            = 2,
                OtherLocalClient      = 3,
                OperationNotSupported = 4,
                NetworkTimeout        = 5
            };

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            struct ESimProfileInstallProgress
            {
                INT32 TotalSizeInBytes;
                INT32 InstalledSizeInBytes;
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            struct ProfileUsage
            {
                UINT32 UsageInMegabytes;
                Windows.Foundation.DateTime LastSyncTime;
            };

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ESim)]
            [uuid(6F6E6E26-F123-437D-8CED-DC1D2BC0C3A9)]
            interface IESim : IInspectable
            {
                [propget] HRESULT AvailableMemoryInBytes([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT Eid([out] [retval] HSTRING* value);
                [propget] HRESULT FirmwareVersion([out] [retval] HSTRING* value);
                [propget] HRESULT MobileBroadbandModemDeviceId([out] [retval] HSTRING* value);
                [propget] HRESULT Policy([out] [retval] Windows.Networking.NetworkOperators.ESimPolicy** value);
                [propget] HRESULT State([out] [retval] Windows.Networking.NetworkOperators.ESimState* value);
                HRESULT GetProfiles([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.ESimProfile*>** result);
                HRESULT DeleteProfileAsync([in] HSTRING profileId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ESimOperationResult*>** operation);
                HRESULT DownloadProfileMetadataAsync([in] HSTRING activationCode, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ESimDownloadProfileMetadataResult*>** operation);
                HRESULT ResetAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ESimOperationResult*>** operation);
                [eventadd] HRESULT ProfileChanged([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.ESim*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ProfileChanged([in] EventRegistrationToken token);
            }

            [contract(Windows.Foundation.UniversalApiContract, 8.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ESim)]
            [uuid(BD4FD0A0-C68F-56EB-B99B-8F34B8100299)]
            interface IESim2 : IInspectable
            {
                [overload("Discover")] HRESULT Discover([out] [retval] Windows.Networking.NetworkOperators.ESimDiscoverResult** result);
                [overload("Discover")] HRESULT DiscoverWithServerAddressAndMatchingId([in] HSTRING serverAddress, [in] HSTRING matchingId, [out] [retval] Windows.Networking.NetworkOperators.ESimDiscoverResult** result);
                [overload("DiscoverAsync")] HRESULT DiscoverAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ESimDiscoverResult*>** operation);
                [overload("DiscoverAsync")] HRESULT DiscoverWithServerAddressAndMatchingIdAsync([in] HSTRING serverAddress, [in] HSTRING matchingId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ESimDiscoverResult*>** operation);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ESimAddedEventArgs)]
            [uuid(38BD0A58-4D5A-4D08-8DA7-E73EFF369DDD)]
            interface IESimAddedEventArgs : IInspectable
            {
                [propget] HRESULT ESim([out] [retval] Windows.Networking.NetworkOperators.ESim** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 8.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ESimDiscoverEvent)]
            [uuid(E59AC3E3-39BC-5F6F-9321-0D4A182D261B)]
            interface IESimDiscoverEvent : IInspectable
            {
                [propget] HRESULT MatchingId([out] [retval] HSTRING* value);
                [propget] HRESULT RspServerAddress([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 8.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ESimDiscoverResult)]
            [uuid(56B4BB5E-AB2F-5AC6-B359-DD5A8E237926)]
            interface IESimDiscoverResult : IInspectable
            {
                [propget] HRESULT Events([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.ESimDiscoverEvent*>** value);
                [propget] HRESULT Kind([out] [retval] Windows.Networking.NetworkOperators.ESimDiscoverResultKind* value);
                [propget] HRESULT ProfileMetadata([out] [retval] Windows.Networking.NetworkOperators.ESimProfileMetadata** value);
                [propget] HRESULT Result([out] [retval] Windows.Networking.NetworkOperators.ESimOperationResult** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ESimDownloadProfileMetadataResult)]
            [uuid(C4234D9E-5AD6-426D-8D00-4434F449AFEC)]
            interface IESimDownloadProfileMetadataResult : IInspectable
            {
                [propget] HRESULT Result([out] [retval] Windows.Networking.NetworkOperators.ESimOperationResult** value);
                [propget] HRESULT ProfileMetadata([out] [retval] Windows.Networking.NetworkOperators.ESimProfileMetadata** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ESimManager)]
            [uuid(0BFA2C0C-DF88-4631-BF04-C12E281B3962)]
            interface IESimManagerStatics : IInspectable
            {
                [propget] HRESULT ServiceInfo([out] [retval] Windows.Networking.NetworkOperators.ESimServiceInfo** value);
                HRESULT TryCreateESimWatcher([out] [retval] Windows.Networking.NetworkOperators.ESimWatcher** result);
                [eventadd] HRESULT ServiceInfoChanged([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ServiceInfoChanged([in] EventRegistrationToken token);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ESimOperationResult)]
            [uuid(A67B63B1-309B-4E77-9E7E-CD93F1DDC7B9)]
            interface IESimOperationResult : IInspectable
            {
                [propget] HRESULT Status([out] [retval] Windows.Networking.NetworkOperators.ESimOperationStatus* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ESimPolicy)]
            [uuid(41E1B99D-CF7E-4315-882B-6F1E74B0D38F)]
            interface IESimPolicy : IInspectable
            {
                [propget] HRESULT ShouldEnableManagingUi([out] [retval] boolean* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ESimProfile)]
            [uuid(EE1E7880-06A9-4027-B4F8-DDB23D7810E0)]
            interface IESimProfile : IInspectable
            {
                [propget] HRESULT Class([out] [retval] Windows.Networking.NetworkOperators.ESimProfileClass* value);
                [propget] HRESULT Nickname([out] [retval] HSTRING* value);
                [propget] HRESULT Policy([out] [retval] Windows.Networking.NetworkOperators.ESimProfilePolicy** value);
                [propget] HRESULT Id([out] [retval] HSTRING* value);
                [propget] HRESULT ProviderIcon([out] [retval] Windows.Storage.Streams.IRandomAccessStreamReference** value);
                [propget] HRESULT ProviderId([out] [retval] HSTRING* value);
                [propget] HRESULT ProviderName([out] [retval] HSTRING* value);
                [propget] HRESULT State([out] [retval] Windows.Networking.NetworkOperators.ESimProfileState* value);
                HRESULT DisableAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ESimOperationResult*>** operation);
                HRESULT EnableAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ESimOperationResult*>** operation);
                HRESULT SetNicknameAsync([in] HSTRING newNickname, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ESimOperationResult*>** operation);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ESimProfileMetadata)]
            [uuid(ED25831F-90DB-498D-A7B4-EBCE807D3C23)]
            interface IESimProfileMetadata : IInspectable
            {
                [propget] HRESULT IsConfirmationCodeRequired([out] [retval] boolean* value);
                [propget] HRESULT Policy([out] [retval] Windows.Networking.NetworkOperators.ESimProfilePolicy** value);
                [propget] HRESULT Id([out] [retval] HSTRING* value);
                [propget] HRESULT ProviderIcon([out] [retval] Windows.Storage.Streams.IRandomAccessStreamReference** value);
                [propget] HRESULT ProviderId([out] [retval] HSTRING* value);
                [propget] HRESULT ProviderName([out] [retval] HSTRING* value);
                [propget] HRESULT State([out] [retval] Windows.Networking.NetworkOperators.ESimProfileMetadataState* value);
                HRESULT DenyInstallAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ESimOperationResult*>** operation);
                [overload("ConfirmInstallAsync")] HRESULT ConfirmInstallAsync([out] [retval] Windows.Foundation.IAsyncOperationWithProgress<Windows.Networking.NetworkOperators.ESimOperationResult*, Windows.Networking.NetworkOperators.ESimProfileInstallProgress>** operation);
                [overload("ConfirmInstallAsync")] HRESULT ConfirmInstallWithConfirmationCodeAsync([in] HSTRING confirmationCode, [out] [retval] Windows.Foundation.IAsyncOperationWithProgress<Windows.Networking.NetworkOperators.ESimOperationResult*, Windows.Networking.NetworkOperators.ESimProfileInstallProgress>** operation);
                HRESULT PostponeInstallAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ESimOperationResult*>** operation);
                [eventadd] HRESULT StateChanged([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.ESimProfileMetadata*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT StateChanged([in] EventRegistrationToken token);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ESimProfilePolicy)]
            [uuid(E6DD0F1D-9C5C-46C5-A289-A948999BF062)]
            interface IESimProfilePolicy : IInspectable
            {
                [propget] HRESULT CanDelete([out] [retval] boolean* value);
                [propget] HRESULT CanDisable([out] [retval] boolean* value);
                [propget] HRESULT IsManagedByEnterprise([out] [retval] boolean* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ESimRemovedEventArgs)]
            [uuid(DEC5277B-2FD9-4ED9-8376-D9B5E41278A3)]
            interface IESimRemovedEventArgs : IInspectable
            {
                [propget] HRESULT ESim([out] [retval] Windows.Networking.NetworkOperators.ESim** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ESimServiceInfo)]
            [uuid(F16AABCF-7F59-4A51-8494-BD89D5FF50EE)]
            interface IESimServiceInfo : IInspectable
            {
                [propget] HRESULT AuthenticationPreference([out] [retval] Windows.Networking.NetworkOperators.ESimAuthenticationPreference* value);
                [propget] HRESULT IsESimUiEnabled([out] [retval] boolean* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ESimUpdatedEventArgs)]
            [uuid(4C125CEC-508D-4B88-83CB-68BEF8168D12)]
            interface IESimUpdatedEventArgs : IInspectable
            {
                [propget] HRESULT ESim([out] [retval] Windows.Networking.NetworkOperators.ESim** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ESimWatcher)]
            [uuid(C1F84CEB-A28D-4FBF-9771-6E31B81CCF22)]
            interface IESimWatcher : IInspectable
            {
                [propget] HRESULT Status([out] [retval] Windows.Networking.NetworkOperators.ESimWatcherStatus* value);
                HRESULT Start();
                HRESULT Stop();
                [eventadd] HRESULT Added([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.ESimWatcher*, Windows.Networking.NetworkOperators.ESimAddedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Added([in] EventRegistrationToken token);
                [eventadd] HRESULT EnumerationCompleted([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.ESimWatcher*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT EnumerationCompleted([in] EventRegistrationToken token);
                [eventadd] HRESULT Removed([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.ESimWatcher*, Windows.Networking.NetworkOperators.ESimRemovedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Removed([in] EventRegistrationToken token);
                [eventadd] HRESULT Stopped([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.ESimWatcher*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Stopped([in] EventRegistrationToken token);
                [eventadd] HRESULT Updated([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.ESimWatcher*, Windows.Networking.NetworkOperators.ESimUpdatedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Updated([in] EventRegistrationToken token);
            }

            [contract(Windows.Networking.NetworkOperators.NetworkOperatorsFdnContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.FdnAccessManager)]
            [uuid(F2AA4395-F1E6-4319-AA3E-477CA64B2BDF)]
            interface IFdnAccessManagerStatics : IInspectable
            {
                HRESULT RequestUnlockAsync([in] HSTRING contactListId, [out] [retval] Windows.Foundation.IAsyncOperation<boolean>** returnValue);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.HotspotAuthenticationContext)]
            [uuid(E756C791-1003-4DE5-83C7-DE61D88831D0)]
            interface IHotspotAuthenticationContext : IInspectable
            {
                [propget] HRESULT WirelessNetworkId([out] UINT32* __valueSize, [out] [retval] [size_is(, *__valueSize)] BYTE** value);
                [propget] HRESULT NetworkAdapter([out] [retval] Windows.Networking.Connectivity.NetworkAdapter** value);
                [propget] HRESULT RedirectMessageUrl([out] [retval] Windows.Foundation.Uri** value);
                [propget] HRESULT RedirectMessageXml([out] [retval] Windows.Data.Xml.Dom.XmlDocument** value);
                [propget] HRESULT AuthenticationUrl([out] [retval] Windows.Foundation.Uri** value);
                HRESULT IssueCredentials([in] HSTRING userName, [in] HSTRING password, [in] HSTRING extraParameters, [in] boolean markAsManualConnectOnFailure);
                HRESULT AbortAuthentication([in] boolean markAsManual);
                HRESULT SkipAuthentication();
                HRESULT TriggerAttentionRequired([in] HSTRING packageRelativeApplicationId, [in] HSTRING applicationParameters);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.HotspotAuthenticationContext)]
            [uuid(E756C791-1004-4DE5-83C7-DE61D88831D0)]
            interface IHotspotAuthenticationContext2 : IInspectable
            {
                HRESULT IssueCredentialsAsync([in] HSTRING userName, [in] HSTRING password, [in] HSTRING extraParameters, [in] boolean markAsManualConnectOnFailure, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.HotspotCredentialsAuthenticationResult*>** asyncInfo);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.HotspotAuthenticationContext)]
            [uuid(E756C791-1002-4DE5-83C7-DE61D88831D0)]
            interface IHotspotAuthenticationContextStatics : IInspectable
            {
                HRESULT TryGetAuthenticationContext([in] HSTRING evenToken, [out] Windows.Networking.NetworkOperators.HotspotAuthenticationContext** context, [out] [retval] boolean* isValid);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.HotspotAuthenticationEventDetails)]
            [uuid(E756C791-1001-4DE5-83C7-DE61D88831D0)]
            interface IHotspotAuthenticationEventDetails : IInspectable
            {
                [propget] HRESULT EventToken([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.HotspotCredentialsAuthenticationResult)]
            [uuid(E756C791-1005-4DE5-83C7-DE61D88831D0)]
            interface IHotspotCredentialsAuthenticationResult : IInspectable
            {
                [propget] HRESULT HasNetworkErrorOccurred([out] [retval] boolean* value);
                [propget] HRESULT ResponseCode([out] [retval] Windows.Networking.NetworkOperators.HotspotAuthenticationResponseCode* value);
                [propget] HRESULT LogoffUrl([out] [retval] Windows.Foundation.Uri** value);
                [propget] HRESULT AuthenticationReplyXml([out] [retval] Windows.Data.Xml.Dom.XmlDocument** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.KnownCSimFilePaths)]
            [uuid(B458AEED-49F1-4C22-B073-96D511BF9C35)]
            interface IKnownCSimFilePathsStatics : IInspectable
            {
                [propget] HRESULT EFSpn([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT Gid1([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT Gid2([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.KnownRuimFilePaths)]
            [uuid(3883C8B9-FF24-4571-A867-09F960426E14)]
            interface IKnownRuimFilePathsStatics : IInspectable
            {
                [propget] HRESULT EFSpn([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT Gid1([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT Gid2([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.KnownSimFilePaths)]
            [uuid(80CD1A63-37A5-43D3-80A3-CCD23E8FECEE)]
            interface IKnownSimFilePathsStatics : IInspectable
            {
                [propget] HRESULT EFOns([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT EFSpn([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT Gid1([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT Gid2([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.KnownUSimFilePaths)]
            [uuid(7C34E581-1F1B-43F4-9530-8B092D32D71F)]
            interface IKnownUSimFilePathsStatics : IInspectable
            {
                [propget] HRESULT EFSpn([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT EFOpl([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT EFPnn([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT Gid1([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT Gid2([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAccount)]
            [uuid(36C24CCD-CEE2-43E0-A603-EE86A36D6570)]
            interface IMobileBroadbandAccount : IInspectable
            {
                [propget] HRESULT NetworkAccountId([out] [retval] HSTRING* value);
                [propget] HRESULT ServiceProviderGuid([out] [retval] GUID* value);
                [propget] HRESULT ServiceProviderName([out] [retval] HSTRING* value);
                [propget] HRESULT CurrentNetwork([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandNetwork** network);
                [propget] HRESULT CurrentDeviceInformation([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandDeviceInformation** deviceInformation);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAccount)]
            [uuid(38F52F1C-1136-4257-959F-B658A352B6D4)]
            interface IMobileBroadbandAccount2 : IInspectable
            {
                HRESULT GetConnectionProfiles([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.Connectivity.ConnectionProfile*>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAccount)]
            [uuid(092A1E21-9379-4B9B-AD31-D5FEE2F748C6)]
            interface IMobileBroadbandAccount3 : IInspectable
            {
                [propget] HRESULT AccountExperienceUrl([out] [retval] Windows.Foundation.Uri** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs)]
            [uuid(3853C880-77DE-4C04-BEAD-A123B08C9F59)]
            interface IMobileBroadbandAccountEventArgs : IInspectable
            {
                [propget] HRESULT NetworkAccountId([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAccount)]
            [uuid(AA7F4D24-AFC1-4FC8-AE9A-A9175310FAAD)]
            interface IMobileBroadbandAccountStatics : IInspectable
            {
                [propget] HRESULT AvailableNetworkAccountIds([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** ppAccountIds);
                HRESULT CreateFromNetworkAccountId([in] HSTRING networkAccountId, [out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandAccount** ppAccount);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAccountUpdatedEventArgs)]
            [uuid(7BC31D88-A6BD-49E1-80AB-6B91354A57D4)]
            interface IMobileBroadbandAccountUpdatedEventArgs : IInspectable
            {
                [propget] HRESULT NetworkAccountId([out] [retval] HSTRING* value);
                [propget] HRESULT HasDeviceInformationChanged([out] [retval] boolean* value);
                [propget] HRESULT HasNetworkChanged([out] [retval] boolean* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher)]
            [uuid(6BF3335E-23B5-449F-928D-5E0D3E04471D)]
            interface IMobileBroadbandAccountWatcher : IInspectable
            {
                [eventadd] HRESULT AccountAdded([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs*>* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT AccountAdded([in] EventRegistrationToken cookie);
                [eventadd] HRESULT AccountUpdated([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, Windows.Networking.NetworkOperators.MobileBroadbandAccountUpdatedEventArgs*>* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT AccountUpdated([in] EventRegistrationToken cookie);
                [eventadd] HRESULT AccountRemoved([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs*>* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT AccountRemoved([in] EventRegistrationToken cookie);
                [eventadd] HRESULT EnumerationCompleted([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT EnumerationCompleted([in] EventRegistrationToken cookie);
                [eventadd] HRESULT Stopped([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT Stopped([in] EventRegistrationToken cookie);
                [propget] HRESULT Status([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcherStatus* status);
                HRESULT Start();
                HRESULT Stop();
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAntennaSar)]
            [uuid(B9AF4B7E-CBF9-4109-90BE-5C06BFD513B6)]
            interface IMobileBroadbandAntennaSar : IInspectable
            {
                [propget] HRESULT AntennaIndex([out] [retval] INT32* value);
                [propget] HRESULT SarBackoffIndex([out] [retval] INT32* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAntennaSar)]
            [uuid(A91E1716-C04D-4A21-8698-1459DC672C6E)]
            interface IMobileBroadbandAntennaSarFactory : IInspectable
            {
                HRESULT CreateWithIndex([in] INT32 antennaIndex, [in] INT32 sarBackoffIndex, [out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandAntennaSar** antennaSar);
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandCellCdma)]
            [uuid(0601B3B4-411A-4F2E-8287-76F5650C60CD)]
            interface IMobileBroadbandCellCdma : IInspectable
            {
                [propget] HRESULT BaseStationId([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT BaseStationPNCode([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT BaseStationLatitude([out] [retval] Windows.Foundation.IReference<DOUBLE>** value);
                [propget] HRESULT BaseStationLongitude([out] [retval] Windows.Foundation.IReference<DOUBLE>** value);
                [propget] HRESULT BaseStationLastBroadcastGpsTime([out] [retval] Windows.Foundation.IReference<Windows.Foundation.TimeSpan>** value);
                [propget] HRESULT NetworkId([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT PilotSignalStrengthInDB([out] [retval] Windows.Foundation.IReference<DOUBLE>** value);
                [propget] HRESULT SystemId([out] [retval] Windows.Foundation.IReference<INT32>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandCellGsm)]
            [uuid(CC917F06-7EE0-47B8-9E1F-C3B48DF9DF5B)]
            interface IMobileBroadbandCellGsm : IInspectable
            {
                [propget] HRESULT BaseStationId([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT CellId([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT ChannelNumber([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT LocationAreaCode([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT ProviderId([out] [retval] HSTRING* value);
                [propget] HRESULT ReceivedSignalStrengthInDBm([out] [retval] Windows.Foundation.IReference<DOUBLE>** value);
                [propget] HRESULT TimingAdvanceInBitPeriods([out] [retval] Windows.Foundation.IReference<INT32>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandCellLte)]
            [uuid(9197C87B-2B78-456D-8B53-AAA25D0AF741)]
            interface IMobileBroadbandCellLte : IInspectable
            {
                [propget] HRESULT CellId([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT ChannelNumber([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT PhysicalCellId([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT ProviderId([out] [retval] HSTRING* value);
                [propget] HRESULT ReferenceSignalReceivedPowerInDBm([out] [retval] Windows.Foundation.IReference<DOUBLE>** value);
                [propget] HRESULT ReferenceSignalReceivedQualityInDBm([out] [retval] Windows.Foundation.IReference<DOUBLE>** value);
                [propget] HRESULT TimingAdvanceInBitPeriods([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT TrackingAreaCode([out] [retval] Windows.Foundation.IReference<INT32>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandCellTdscdma)]
            [uuid(0EDA1655-DB0E-4182-8CDA-CC419A7BDE08)]
            interface IMobileBroadbandCellTdscdma : IInspectable
            {
                [propget] HRESULT CellId([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT CellParameterId([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT ChannelNumber([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT LocationAreaCode([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT PathLossInDB([out] [retval] Windows.Foundation.IReference<DOUBLE>** value);
                [propget] HRESULT ProviderId([out] [retval] HSTRING* value);
                [propget] HRESULT ReceivedSignalCodePowerInDBm([out] [retval] Windows.Foundation.IReference<DOUBLE>** value);
                [propget] HRESULT TimingAdvanceInBitPeriods([out] [retval] Windows.Foundation.IReference<INT32>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandCellUmts)]
            [uuid(77B4B5AE-49C8-4F15-B285-4C26A7F67215)]
            interface IMobileBroadbandCellUmts : IInspectable
            {
                [propget] HRESULT CellId([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT ChannelNumber([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT LocationAreaCode([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT PathLossInDB([out] [retval] Windows.Foundation.IReference<DOUBLE>** value);
                [propget] HRESULT PrimaryScramblingCode([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT ProviderId([out] [retval] HSTRING* value);
                [propget] HRESULT ReceivedSignalCodePowerInDBm([out] [retval] Windows.Foundation.IReference<DOUBLE>** value);
                [propget] HRESULT SignalToNoiseRatioInDB([out] [retval] Windows.Foundation.IReference<DOUBLE>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandCellsInfo)]
            [uuid(89A9562A-E472-4DA5-929C-DE61711DD261)]
            interface IMobileBroadbandCellsInfo : IInspectable
            {
                [propget] HRESULT NeighboringCellsCdma([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandCellCdma*>** value);
                [propget] HRESULT NeighboringCellsGsm([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandCellGsm*>** value);
                [propget] HRESULT NeighboringCellsLte([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandCellLte*>** value);
                [propget] HRESULT NeighboringCellsTdscdma([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandCellTdscdma*>** value);
                [propget] HRESULT NeighboringCellsUmts([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandCellUmts*>** value);
                [propget] HRESULT ServingCellsCdma([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandCellCdma*>** value);
                [propget] HRESULT ServingCellsGsm([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandCellGsm*>** value);
                [propget] HRESULT ServingCellsLte([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandCellLte*>** value);
                [propget] HRESULT ServingCellsTdscdma([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandCellTdscdma*>** value);
                [propget] HRESULT ServingCellsUmts([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandCellUmts*>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceInformation)]
            [uuid(E6D08168-E381-4C6E-9BE8-FE156969A446)]
            interface IMobileBroadbandDeviceInformation : IInspectable
            {
                [propget] HRESULT NetworkDeviceStatus([out] [retval] Windows.Networking.NetworkOperators.NetworkDeviceStatus* value);
                [propget] HRESULT Manufacturer([out] [retval] HSTRING* value);
                [propget] HRESULT Model([out] [retval] HSTRING* value);
                [propget] HRESULT FirmwareInformation([out] [retval] HSTRING* value);
                [propget] HRESULT CellularClass([out] [retval] Windows.Devices.Sms.CellularClass* value);
                [propget] HRESULT DataClasses([out] [retval] Windows.Networking.NetworkOperators.DataClasses* value);
                [propget] HRESULT CustomDataClass([out] [retval] HSTRING* value);
                [propget] HRESULT MobileEquipmentId([out] [retval] HSTRING* value);
                [propget] HRESULT TelephoneNumbers([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** value);
                [propget] HRESULT SubscriberId([out] [retval] HSTRING* value);
                [propget] HRESULT SimIccId([out] [retval] HSTRING* value);
                [propget] HRESULT DeviceType([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandDeviceType* pDeviceType);
                [propget] HRESULT DeviceId([out] [retval] HSTRING* value);
                [propget] HRESULT CurrentRadioState([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandRadioState* pCurrentState);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceInformation)]
            [uuid(2E467AF1-F932-4737-A722-03BA72370CB8)]
            interface IMobileBroadbandDeviceInformation2 : IInspectable
            {
                [propget] HRESULT PinManager([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandPinManager** value);
                [propget] HRESULT Revision([out] [retval] HSTRING* value);
                [propget] HRESULT SerialNumber([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceInformation)]
            [uuid(E08BB4BD-5D30-4B5A-92CC-D54DF881D49E)]
            interface IMobileBroadbandDeviceInformation3 : IInspectable
            {
                [propget] HRESULT SimSpn([out] [retval] HSTRING* value);
                [propget] HRESULT SimPnn([out] [retval] HSTRING* value);
                [propget] HRESULT SimGid1([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceService)]
            [uuid(22BE1A52-BD80-40AC-8E1F-2E07836A3DBD)]
            interface IMobileBroadbandDeviceService : IInspectable
            {
                [propget] HRESULT DeviceServiceId([out] [retval] GUID* value);
                [propget] HRESULT SupportedCommands([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                HRESULT OpenDataSession([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataSession** value);
                HRESULT OpenCommandSession([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandSession** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandResult)]
            [uuid(B0F46ABB-94D6-44B9-A538-F0810B645389)]
            interface IMobileBroadbandDeviceServiceCommandResult : IInspectable
            {
                [propget] HRESULT StatusCode([out] [retval] UINT32* value);
                [propget] HRESULT ResponseData([out] [retval] Windows.Storage.Streams.IBuffer** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandSession)]
            [uuid(FC098A45-913B-4914-B6C3-AE6304593E75)]
            interface IMobileBroadbandDeviceServiceCommandSession : IInspectable
            {
                HRESULT SendQueryCommandAsync([in] UINT32 commandId, [in] Windows.Storage.Streams.IBuffer* data, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandResult*>** asyncInfo);
                HRESULT SendSetCommandAsync([in] UINT32 commandId, [in] Windows.Storage.Streams.IBuffer* data, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandResult*>** asyncInfo);
                HRESULT CloseSession();
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataReceivedEventArgs)]
            [uuid(B6AA13DE-1380-40E3-8618-73CBCA48138C)]
            interface IMobileBroadbandDeviceServiceDataReceivedEventArgs : IInspectable
            {
                [propget] HRESULT ReceivedData([out] [retval] Windows.Storage.Streams.IBuffer** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataSession)]
            [uuid(DAD62333-8BCF-4289-8A37-045C2169486A)]
            interface IMobileBroadbandDeviceServiceDataSession : IInspectable
            {
                HRESULT WriteDataAsync([in] Windows.Storage.Streams.IBuffer* value, [out] [retval] Windows.Foundation.IAsyncAction** asyncInfo);
                HRESULT CloseSession();
                [eventadd] HRESULT DataReceived([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataSession*, Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataReceivedEventArgs*>* eventHandler, [out] [retval] EventRegistrationToken* eventCookie);
                [eventremove] HRESULT DataReceived([in] EventRegistrationToken eventCookie);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceInformation)]
            [uuid(53D69B5B-C4ED-45F0-803A-D9417A6D9846)]
            interface IMobileBroadbandDeviceServiceInformation : IInspectable
            {
                [propget] HRESULT DeviceServiceId([out] [retval] GUID* value);
                [propget] HRESULT IsDataReadSupported([out] [retval] boolean* value);
                [propget] HRESULT IsDataWriteSupported([out] [retval] boolean* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceTriggerDetails)]
            [uuid(4A055B70-B9AE-4458-9241-A6A5FBF18A0C)]
            interface IMobileBroadbandDeviceServiceTriggerDetails : IInspectable
            {
                [propget] HRESULT DeviceId([out] [retval] HSTRING* value);
                [propget] HRESULT DeviceServiceId([out] [retval] GUID* value);
                [propget] HRESULT ReceivedData([out] [retval] Windows.Storage.Streams.IBuffer** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandModem)]
            [uuid(D0356912-E9F9-4F67-A03D-43189A316BF1)]
            interface IMobileBroadbandModem : IInspectable
            {
                [propget] HRESULT CurrentAccount([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandAccount** value);
                [propget] HRESULT DeviceInformation([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandDeviceInformation** value);
                [propget] HRESULT MaxDeviceServiceCommandSizeInBytes([out] [retval] UINT32* value);
                [propget] HRESULT MaxDeviceServiceDataSizeInBytes([out] [retval] UINT32* value);
                [propget] HRESULT DeviceServices([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceInformation*>** value);
                HRESULT GetDeviceService([in] GUID deviceServiceId, [out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandDeviceService** value);
                [propget] HRESULT IsResetSupported([out] [retval] boolean* value);
                HRESULT ResetAsync([out] [retval] Windows.Foundation.IAsyncAction** asyncInfo);
                HRESULT GetCurrentConfigurationAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandModemConfiguration*>** asyncInfo);
                [propget] HRESULT CurrentNetwork([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandNetwork** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandModem)]
            [uuid(12862B28-B9EB-4EE2-BBE3-711F53EEA373)]
            interface IMobileBroadbandModem2 : IInspectable
            {
                HRESULT GetIsPassthroughEnabledAsync([out] [retval] Windows.Foundation.IAsyncOperation<boolean>** asyncInfo);
                HRESULT SetIsPassthroughEnabledAsync([in] boolean value, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandModemStatus>** asyncInfo);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandModem)]
            [uuid(E9FEC6EA-2F34-4582-9102-C314D2A87EEC)]
            interface IMobileBroadbandModem3 : IInspectable
            {
                HRESULT TryGetPcoAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandPco*>** operation);
                [propget] HRESULT IsInEmergencyCallMode([out] [retval] boolean* value);
                [eventadd] HRESULT IsInEmergencyCallModeChanged([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandModem*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT IsInEmergencyCallModeChanged([in] EventRegistrationToken token);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandModemConfiguration)]
            [uuid(FCE035A3-D6CD-4320-B982-BE9D3EC7890F)]
            interface IMobileBroadbandModemConfiguration : IInspectable
            {
                [propget] HRESULT Uicc([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandUicc** value);
                [propget] HRESULT HomeProviderId([out] [retval] HSTRING* value);
                [propget] HRESULT HomeProviderName([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandModemConfiguration)]
            [uuid(320FF5C5-E460-42AE-AA51-69621E7A4477)]
            interface IMobileBroadbandModemConfiguration2 : IInspectable
            {
                [propget] HRESULT SarManager([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandSarManager** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandModemIsolation)]
            [uuid(B5618FEC-E661-4330-9BB4-3480212EC354)]
            interface IMobileBroadbandModemIsolation : IInspectable
            {
                HRESULT AddAllowedHost([in] Windows.Networking.HostName* host);
                HRESULT AddAllowedHostRange([in] Windows.Networking.HostName* first, [in] Windows.Networking.HostName* last);
                HRESULT ApplyConfigurationAsync([out] [retval] Windows.Foundation.IAsyncAction** operation);
                HRESULT ClearConfigurationAsync([out] [retval] Windows.Foundation.IAsyncAction** operation);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandModemIsolation)]
            [uuid(21D7EC58-C2B1-4C2F-A030-72820A24ECD9)]
            interface IMobileBroadbandModemIsolationFactory : IInspectable
            {
                HRESULT Create([in] HSTRING modemDeviceId, [in] HSTRING ruleGroupId, [out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandModemIsolation** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandModem)]
            [uuid(F99ED637-D6F1-4A78-8CBC-6421A65063C8)]
            interface IMobileBroadbandModemStatics : IInspectable
            {
                HRESULT GetDeviceSelector([out] [retval] HSTRING* value);
                HRESULT FromId([in] HSTRING deviceId, [out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandModem** value);
                HRESULT GetDefault([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandModem** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandNetwork)]
            [uuid(CB63928C-0309-4CB6-A8C1-6A5A3C8E1FF6)]
            interface IMobileBroadbandNetwork : IInspectable
            {
                [propget] HRESULT NetworkAdapter([out] [retval] Windows.Networking.Connectivity.NetworkAdapter** value);
                [propget] HRESULT NetworkRegistrationState([out] [retval] Windows.Networking.NetworkOperators.NetworkRegistrationState* registrationState);
                [propget] HRESULT RegistrationNetworkError([out] [retval] UINT32* networkError);
                [propget] HRESULT PacketAttachNetworkError([out] [retval] UINT32* networkError);
                [propget] HRESULT ActivationNetworkError([out] [retval] UINT32* networkError);
                [propget] HRESULT AccessPointName([out] [retval] HSTRING* apn);
                [propget] HRESULT RegisteredDataClass([out] [retval] Windows.Networking.NetworkOperators.DataClasses* value);
                [propget] HRESULT RegisteredProviderId([out] [retval] HSTRING* value);
                [propget] HRESULT RegisteredProviderName([out] [retval] HSTRING* value);
                HRESULT ShowConnectionUI();
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandNetwork)]
            [uuid(5A55DB22-62F7-4BDD-BA1D-477441960BA0)]
            interface IMobileBroadbandNetwork2 : IInspectable
            {
                HRESULT GetVoiceCallSupportAsync([out] [retval] Windows.Foundation.IAsyncOperation<boolean>** asyncInfo);
                [propget] HRESULT RegistrationUiccApps([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandUiccApp*>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandNetwork)]
            [uuid(33670A8A-C7EF-444C-AB6C-DF7EF7A390FE)]
            interface IMobileBroadbandNetwork3 : IInspectable
            {
                HRESULT GetCellsInfoAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandCellsInfo*>** asyncOperation);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandNetworkRegistrationStateChange)]
            [uuid(BEAF94E1-960F-49B4-A08D-7D85E968C7EC)]
            interface IMobileBroadbandNetworkRegistrationStateChange : IInspectable
            {
                [propget] HRESULT DeviceId([out] [retval] HSTRING* value);
                [propget] HRESULT Network([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandNetwork** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandNetworkRegistrationStateChangeTriggerDetails)]
            [uuid(89135CFF-28B8-46AA-B137-1C4B0F21EDFE)]
            interface IMobileBroadbandNetworkRegistrationStateChangeTriggerDetails : IInspectable
            {
                [propget] HRESULT NetworkRegistrationStateChanges([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandNetworkRegistrationStateChange*>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandPco)]
            [uuid(D4E4FCBE-E3A3-43C5-A87B-6C86D229D7FA)]
            interface IMobileBroadbandPco : IInspectable
            {
                [propget] HRESULT Data([out] [retval] Windows.Storage.Streams.IBuffer** result);
                [propget] HRESULT IsComplete([out] [retval] boolean* result);
                [propget] HRESULT DeviceId([out] [retval] HSTRING* result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandPcoDataChangeTriggerDetails)]
            [uuid(263F5114-64E0-4493-909B-2D14A01962B1)]
            interface IMobileBroadbandPcoDataChangeTriggerDetails : IInspectable
            {
                [propget] HRESULT UpdatedData([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandPco** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandPin)]
            [uuid(E661D709-E779-45BF-8281-75323DF9E321)]
            interface IMobileBroadbandPin : IInspectable
            {
                [propget] HRESULT Type([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandPinType* value);
                [propget] HRESULT LockState([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandPinLockState* value);
                [propget] HRESULT Format([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandPinFormat* value);
                [propget] HRESULT Enabled([out] [retval] boolean* value);
                [propget] HRESULT MaxLength([out] [retval] UINT32* value);
                [propget] HRESULT MinLength([out] [retval] UINT32* value);
                [propget] HRESULT AttemptsRemaining([out] [retval] UINT32* value);
                HRESULT EnableAsync([in] HSTRING currentPin, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult*>** asyncInfo);
                HRESULT DisableAsync([in] HSTRING currentPin, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult*>** asyncInfo);
                HRESULT EnterAsync([in] HSTRING currentPin, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult*>** asyncInfo);
                HRESULT ChangeAsync([in] HSTRING currentPin, [in] HSTRING newPin, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult*>** asyncInfo);
                HRESULT UnblockAsync([in] HSTRING pinUnblockKey, [in] HSTRING newPin, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult*>** asyncInfo);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandPinLockStateChange)]
            [uuid(BE16673E-1F04-4F95-8B90-E7F559DDE7E5)]
            interface IMobileBroadbandPinLockStateChange : IInspectable
            {
                [propget] HRESULT DeviceId([out] [retval] HSTRING* value);
                [propget] HRESULT PinType([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandPinType* value);
                [propget] HRESULT PinLockState([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandPinLockState* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandPinLockStateChangeTriggerDetails)]
            [uuid(D338C091-3E91-4D38-9036-AEE83A6E79AD)]
            interface IMobileBroadbandPinLockStateChangeTriggerDetails : IInspectable
            {
                [propget] HRESULT PinLockStateChanges([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandPinLockStateChange*>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandPinManager)]
            [uuid(83567EDD-6E1F-4B9B-A413-2B1F50CC36DF)]
            interface IMobileBroadbandPinManager : IInspectable
            {
                [propget] HRESULT SupportedPins([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandPinType>** value);
                HRESULT GetPin([in] Windows.Networking.NetworkOperators.MobileBroadbandPinType pinType, [out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandPin** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult)]
            [uuid(11DDDC32-31E7-49F5-B663-123D3BEF0362)]
            interface IMobileBroadbandPinOperationResult : IInspectable
            {
                [propget] HRESULT IsSuccessful([out] [retval] boolean* value);
                [propget] HRESULT AttemptsRemaining([out] [retval] UINT32* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange)]
            [uuid(B054A561-9833-4AED-9717-4348B21A24B3)]
            interface IMobileBroadbandRadioStateChange : IInspectable
            {
                [propget] HRESULT DeviceId([out] [retval] HSTRING* value);
                [propget] HRESULT RadioState([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandRadioState* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChangeTriggerDetails)]
            [uuid(71301ACE-093C-42C6-B0DB-AD1F75A65445)]
            interface IMobileBroadbandRadioStateChangeTriggerDetails : IInspectable
            {
                [propget] HRESULT RadioStateChanges([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange*>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandSarManager)]
            [uuid(E5B26833-967E-40C9-A485-19C0DD209E22)]
            interface IMobileBroadbandSarManager : IInspectable
            {
                [propget] HRESULT IsBackoffEnabled([out] [retval] boolean* value);
                [propget] HRESULT IsWiFiHardwareIntegrated([out] [retval] boolean* value);
                [propget] HRESULT IsSarControlledByHardware([out] [retval] boolean* value);
                [propget] HRESULT Antennas([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandAntennaSar*>** value);
                [propget] HRESULT HysteresisTimerPeriod([out] [retval] Windows.Foundation.TimeSpan* value);
                [eventadd] HRESULT TransmissionStateChanged([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandSarManager*, Windows.Networking.NetworkOperators.MobileBroadbandTransmissionStateChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT TransmissionStateChanged([in] EventRegistrationToken token);
                HRESULT EnableBackoffAsync([out] [retval] Windows.Foundation.IAsyncAction** operation);
                HRESULT DisableBackoffAsync([out] [retval] Windows.Foundation.IAsyncAction** operation);
                HRESULT SetConfigurationAsync([in] Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandAntennaSar*>* antennas, [out] [retval] Windows.Foundation.IAsyncAction** operation);
                HRESULT RevertSarToHardwareControlAsync([out] [retval] Windows.Foundation.IAsyncAction** operation);
                HRESULT SetTransmissionStateChangedHysteresisAsync([in] Windows.Foundation.TimeSpan timerPeriod, [out] [retval] Windows.Foundation.IAsyncAction** operation);
                HRESULT GetIsTransmittingAsync([out] [retval] Windows.Foundation.IAsyncOperation<boolean>** operation);
                HRESULT StartTransmissionStateMonitoring();
                HRESULT StopTransmissionStateMonitoring();
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandTransmissionStateChangedEventArgs)]
            [uuid(612E3875-040A-4F99-A4F9-61D7C32DA129)]
            interface IMobileBroadbandTransmissionStateChangedEventArgs : IInspectable
            {
                [propget] HRESULT IsTransmitting([out] [retval] boolean* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandUicc)]
            [uuid(E634F691-525A-4CE2-8FCE-AA4162579154)]
            interface IMobileBroadbandUicc : IInspectable
            {
                [propget] HRESULT SimIccId([out] [retval] HSTRING* value);
                HRESULT GetUiccAppsAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppsResult*>** asyncInfo);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandUiccApp)]
            [uuid(4D170556-98A1-43DD-B2EC-50C90CF248DF)]
            interface IMobileBroadbandUiccApp : IInspectable
            {
                [propget] HRESULT Id([out] [retval] Windows.Storage.Streams.IBuffer** value);
                [propget] HRESULT Kind([out] [retval] Windows.Networking.NetworkOperators.UiccAppKind* value);
                HRESULT GetRecordDetailsAsync([in] Windows.Foundation.Collections.IIterable<UINT32>* uiccFilePath, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppRecordDetailsResult*>** asyncInfo);
                HRESULT ReadRecordAsync([in] Windows.Foundation.Collections.IIterable<UINT32>* uiccFilePath, [in] INT32 recordIndex, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppReadRecordResult*>** asyncInfo);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandUiccAppReadRecordResult)]
            [uuid(64C95285-358E-47C5-8249-695F383B2BDB)]
            interface IMobileBroadbandUiccAppReadRecordResult : IInspectable
            {
                [propget] HRESULT Status([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandUiccAppOperationStatus* value);
                [propget] HRESULT Data([out] [retval] Windows.Storage.Streams.IBuffer** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandUiccAppRecordDetailsResult)]
            [uuid(D919682F-BE14-4934-981D-2F57B9ED83E6)]
            interface IMobileBroadbandUiccAppRecordDetailsResult : IInspectable
            {
                [propget] HRESULT Status([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandUiccAppOperationStatus* value);
                [propget] HRESULT Kind([out] [retval] Windows.Networking.NetworkOperators.UiccAppRecordKind* value);
                [propget] HRESULT RecordCount([out] [retval] INT32* value);
                [propget] HRESULT RecordSize([out] [retval] INT32* value);
                [propget] HRESULT ReadAccessCondition([out] [retval] Windows.Networking.NetworkOperators.UiccAccessCondition* value);
                [propget] HRESULT WriteAccessCondition([out] [retval] Windows.Networking.NetworkOperators.UiccAccessCondition* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandUiccAppsResult)]
            [uuid(744930EB-8157-4A41-8494-6BF54C9B1D2B)]
            interface IMobileBroadbandUiccAppsResult : IInspectable
            {
                [propget] HRESULT Status([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandUiccAppOperationStatus* value);
                [propget] HRESULT UiccApps([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandUiccApp*>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorDataUsageTriggerDetails)]
            [uuid(50E3126D-A465-4EEB-9317-28A167630CEA)]
            interface INetworkOperatorDataUsageTriggerDetails : IInspectable
            {
                [propget] HRESULT NotificationKind([out] [retval] Windows.Networking.NetworkOperators.NetworkOperatorDataUsageNotificationKind* value);
            }

            [contract(Windows.Networking.NetworkOperators.LegacyNetworkOperatorsContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails)]
            [uuid(BC68A9D1-82E1-4488-9F2C-1276C2468FAC)]
            interface INetworkOperatorNotificationEventDetails : IInspectable
            {
                [propget] HRESULT NotificationType([out] [retval] Windows.Networking.NetworkOperators.NetworkOperatorEventMessageType* value);
                [propget] HRESULT NetworkAccountId([out] [retval] HSTRING* value);
                [propget] HRESULT EncodingType([out] [retval] BYTE* value);
                [propget] HRESULT Message([out] [retval] HSTRING* value);
                [propget] HRESULT RuleId([out] [retval] HSTRING* value);
                [propget] HRESULT SmsMessage([out] [retval] Windows.Devices.Sms.ISmsMessage** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorTetheringAccessPointConfiguration)]
            [uuid(0BCC0284-412E-403D-ACC6-B757E34774A4)]
            interface INetworkOperatorTetheringAccessPointConfiguration : IInspectable
            {
                [propget] HRESULT Ssid([out] [retval] HSTRING* value);
                [propput] HRESULT Ssid([in] HSTRING value);
                [propget] HRESULT Passphrase([out] [retval] HSTRING* value);
                [propput] HRESULT Passphrase([in] HSTRING value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 10.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorTetheringAccessPointConfiguration)]
            [uuid(B1809142-7238-59A0-928B-74AB46FD64B6)]
            interface INetworkOperatorTetheringAccessPointConfiguration2 : IInspectable
            {
                HRESULT IsBandSupported([in] Windows.Networking.NetworkOperators.TetheringWiFiBand band, [out] [retval] boolean* result);
                HRESULT IsBandSupportedAsync([in] Windows.Networking.NetworkOperators.TetheringWiFiBand band, [out] [retval] Windows.Foundation.IAsyncOperation<boolean>** operation);
                [propget] HRESULT Band([out] [retval] Windows.Networking.NetworkOperators.TetheringWiFiBand* value);
                [propput] HRESULT Band([in] Windows.Networking.NetworkOperators.TetheringWiFiBand value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorTetheringClient)]
            [uuid(709D254C-595F-4847-BB30-646935542918)]
            interface INetworkOperatorTetheringClient : IInspectable
            {
                [propget] HRESULT MacAddress([out] [retval] HSTRING* value);
                [propget] HRESULT HostNames([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.HostName*>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager)]
            [uuid(91B14016-8DCA-4225-BBED-EEF8B8D718D7)]
            interface INetworkOperatorTetheringClientManager : IInspectable
            {
                HRESULT GetTetheringClients([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.NetworkOperatorTetheringClient*>** value);
            }

            [contract(Windows.Networking.NetworkOperators.LegacyNetworkOperatorsContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails)]
            [uuid(0108916D-9E9A-4AF6-8DA3-60493B19C204)]
            interface INetworkOperatorTetheringEntitlementCheck : IInspectable
            {
                HRESULT AuthorizeTethering([in] boolean allow, [in] HSTRING entitlementFailureReason);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager)]
            [uuid(D45A8DA0-0E86-4D98-8BA4-DD70D4B764D3)]
            interface INetworkOperatorTetheringManager : IInspectable
            {
                [propget] HRESULT MaxClientCount([out] [retval] UINT32* value);
                [propget] HRESULT ClientCount([out] [retval] UINT32* value);
                [propget] HRESULT TetheringOperationalState([out] [retval] Windows.Networking.NetworkOperators.TetheringOperationalState* value);
                HRESULT GetCurrentAccessPointConfiguration([out] [retval] Windows.Networking.NetworkOperators.NetworkOperatorTetheringAccessPointConfiguration** configuration);
                HRESULT ConfigureAccessPointAsync([in] Windows.Networking.NetworkOperators.NetworkOperatorTetheringAccessPointConfiguration* configuration, [out] [retval] Windows.Foundation.IAsyncAction** asyncInfo);
                HRESULT StartTetheringAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.NetworkOperatorTetheringOperationResult*>** asyncInfo);
                HRESULT StopTetheringAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.NetworkOperatorTetheringOperationResult*>** asyncInfo);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager)]
            [uuid(3EBCBACC-F8C3-405C-9964-70A1EEABE194)]
            interface INetworkOperatorTetheringManagerStatics : IInspectable
            {
                HRESULT GetTetheringCapability([in] HSTRING networkAccountId, [out] [retval] Windows.Networking.NetworkOperators.TetheringCapability* value);
                HRESULT CreateFromNetworkAccountId([in] HSTRING networkAccountId, [out] [retval] Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager** ppManager);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager)]
            [uuid(5B235412-35F0-49E7-9B08-16D278FBAA42)]
            interface INetworkOperatorTetheringManagerStatics2 : IInspectable
            {
                HRESULT GetTetheringCapabilityFromConnectionProfile([in] Windows.Networking.Connectivity.ConnectionProfile* profile, [out] [retval] Windows.Networking.NetworkOperators.TetheringCapability* result);
                [overload("CreateFromConnectionProfile")] HRESULT CreateFromConnectionProfile([in] Windows.Networking.Connectivity.ConnectionProfile* profile, [out] [retval] Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager** ppManager);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager)]
            [uuid(8FDAADB6-4AF9-4F21-9B58-D53E9F24231E)]
            interface INetworkOperatorTetheringManagerStatics3 : IInspectable
            {
                [overload("CreateFromConnectionProfile")] HRESULT CreateFromConnectionProfileWithTargetAdapter([in] Windows.Networking.Connectivity.ConnectionProfile* profile, [in] Windows.Networking.Connectivity.NetworkAdapter* adapter, [out] [retval] Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager** ppManager);
            }

            [contract(Windows.Foundation.UniversalApiContract, 10.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager)]
            [uuid(B3B9F9D0-EBFF-46A4-A847-D663D8B0977E)]
            interface INetworkOperatorTetheringManagerStatics4 : IInspectable
            {
                HRESULT IsNoConnectionsTimeoutEnabled([out] [retval] boolean* result);
                HRESULT EnableNoConnectionsTimeout();
                HRESULT EnableNoConnectionsTimeoutAsync([out] [retval] Windows.Foundation.IAsyncAction** operation);
                HRESULT DisableNoConnectionsTimeout();
                HRESULT DisableNoConnectionsTimeoutAsync([out] [retval] Windows.Foundation.IAsyncAction** operation);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorTetheringOperationResult)]
            [uuid(EBD203A1-01BA-476D-B4B3-BF3D12C8F80C)]
            interface INetworkOperatorTetheringOperationResult : IInspectable
            {
                [propget] HRESULT Status([out] [retval] Windows.Networking.NetworkOperators.TetheringOperationStatus* value);
                [propget] HRESULT AdditionalErrorMessage([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ProvisionFromXmlDocumentResults)]
            [uuid(217700E0-8203-11DF-ADB9-F4CE462D9137)]
            interface IProvisionFromXmlDocumentResults : IInspectable
            {
                [propget] HRESULT AllElementsProvisioned([out] [retval] boolean* value);
                [propget] HRESULT ProvisionResultsXml([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ProvisionedProfile)]
            [uuid(217700E0-8202-11DF-ADB9-F4CE462D9137)]
            interface IProvisionedProfile : IInspectable
            {
                HRESULT UpdateCost([in] Windows.Networking.Connectivity.NetworkCostType value);
                HRESULT UpdateUsage([in] Windows.Networking.NetworkOperators.ProfileUsage value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ProvisioningAgent)]
            [uuid(217700E0-8201-11DF-ADB9-F4CE462D9137)]
            interface IProvisioningAgent : IInspectable
            {
                HRESULT ProvisionFromXmlDocumentAsync([in] HSTRING provisioningXmlDocument, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ProvisionFromXmlDocumentResults*>** asyncInfo);
                HRESULT GetProvisionedProfile([in] Windows.Networking.NetworkOperators.ProfileMediaType mediaType, [in] HSTRING profileName, [out] [retval] Windows.Networking.NetworkOperators.ProvisionedProfile** provisionedProfile);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.ProvisioningAgent)]
            [uuid(217700E0-8101-11DF-ADB9-F4CE462D9137)]
            interface IProvisioningAgentStaticMethods : IInspectable
            {
                HRESULT CreateFromNetworkAccountId([in] HSTRING networkAccountId, [out] [retval] Windows.Networking.NetworkOperators.ProvisioningAgent** provisioningAgent);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.TetheringEntitlementCheckTriggerDetails)]
            [uuid(03C65E9D-5926-41F3-A94E-B50926FC421B)]
            interface ITetheringEntitlementCheckTriggerDetails : IInspectable
            {
                [propget] HRESULT NetworkAccountId([out] [retval] HSTRING* value);
                HRESULT AllowTethering();
                HRESULT DenyTethering([in] HSTRING entitlementFailureReason);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.UssdMessage)]
            [uuid(2F9ACF82-2004-4D5D-BF81-2ABA1B4BE4A8)]
            interface IUssdMessage : IInspectable
            {
                [propget] HRESULT DataCodingScheme([out] [retval] BYTE* value);
                [propput] HRESULT DataCodingScheme([in] BYTE value);
                HRESULT GetPayload([out] UINT32* __valueSize, [out] [retval] [size_is(, *__valueSize)] BYTE** value);
                HRESULT SetPayload([range(0x00000000, 0x000000A0)] [in] UINT32 __valueSize, [in] [size_is(__valueSize)] BYTE* value);
                [propget] HRESULT PayloadAsText([out] [retval] HSTRING* value);
                [propput] HRESULT PayloadAsText([in] HSTRING value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.UssdMessage)]
            [uuid(2F9ACF82-1003-4D5D-BF81-2ABA1B4BE4A8)]
            interface IUssdMessageFactory : IInspectable
            {
                HRESULT CreateMessage([in] HSTRING messageText, [out] [retval] Windows.Networking.NetworkOperators.UssdMessage** ussdMessage);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.UssdReply)]
            [uuid(2F9ACF82-2005-4D5D-BF81-2ABA1B4BE4A8)]
            interface IUssdReply : IInspectable
            {
                [propget] HRESULT ResultCode([out] [retval] Windows.Networking.NetworkOperators.UssdResultCode* value);
                [propget] HRESULT Message([out] [retval] Windows.Networking.NetworkOperators.UssdMessage** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.UssdSession)]
            [uuid(2F9ACF82-2002-4D5D-BF81-2ABA1B4BE4A8)]
            interface IUssdSession : IInspectable
            {
                HRESULT SendMessageAndGetReplyAsync([in] Windows.Networking.NetworkOperators.UssdMessage* message, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.UssdReply*>** asyncInfo);
                HRESULT Close();
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.Networking.NetworkOperators.UssdSession)]
            [uuid(2F9ACF82-1001-4D5D-BF81-2ABA1B4BE4A8)]
            interface IUssdSessionStatics : IInspectable
            {
                HRESULT CreateFromNetworkAccountId([in] HSTRING networkAccountId, [out] [retval] Windows.Networking.NetworkOperators.UssdSession** ussdSession);
                HRESULT CreateFromNetworkInterfaceId([in] HSTRING networkInterfaceId, [out] [retval] Windows.Networking.NetworkOperators.UssdSession** ussdSession);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            runtimeclass ESim
            {
                [default] interface Windows.Networking.NetworkOperators.IESim;
                [contract(Windows.Foundation.UniversalApiContract, 8.0)] interface Windows.Networking.NetworkOperators.IESim2;
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            runtimeclass ESimAddedEventArgs
            {
                [default] interface Windows.Networking.NetworkOperators.IESimAddedEventArgs;
            }

            [contract(Windows.Foundation.UniversalApiContract, 8.0)]
            [marshaling_behavior(agile)]
            runtimeclass ESimDiscoverEvent
            {
                [default] interface Windows.Networking.NetworkOperators.IESimDiscoverEvent;
            }

            [contract(Windows.Foundation.UniversalApiContract, 8.0)]
            [marshaling_behavior(agile)]
            runtimeclass ESimDiscoverResult
            {
                [default] interface Windows.Networking.NetworkOperators.IESimDiscoverResult;
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            runtimeclass ESimDownloadProfileMetadataResult
            {
                [default] interface Windows.Networking.NetworkOperators.IESimDownloadProfileMetadataResult;
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            [static(Windows.Networking.NetworkOperators.IESimManagerStatics, Windows.Foundation.UniversalApiContract, 6.0)]
            [threading(both)]
            runtimeclass ESimManager
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            runtimeclass ESimOperationResult
            {
                [default] interface Windows.Networking.NetworkOperators.IESimOperationResult;
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            runtimeclass ESimPolicy
            {
                [default] interface Windows.Networking.NetworkOperators.IESimPolicy;
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            runtimeclass ESimProfile
            {
                [default] interface Windows.Networking.NetworkOperators.IESimProfile;
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            runtimeclass ESimProfileMetadata
            {
                [default] interface Windows.Networking.NetworkOperators.IESimProfileMetadata;
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            runtimeclass ESimProfilePolicy
            {
                [default] interface Windows.Networking.NetworkOperators.IESimProfilePolicy;
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            runtimeclass ESimRemovedEventArgs
            {
                [default] interface Windows.Networking.NetworkOperators.IESimRemovedEventArgs;
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            runtimeclass ESimServiceInfo
            {
                [default] interface Windows.Networking.NetworkOperators.IESimServiceInfo;
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            runtimeclass ESimUpdatedEventArgs
            {
                [default] interface Windows.Networking.NetworkOperators.IESimUpdatedEventArgs;
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            runtimeclass ESimWatcher
            {
                [default] interface Windows.Networking.NetworkOperators.IESimWatcher;
            }

            [contract(Windows.Networking.NetworkOperators.NetworkOperatorsFdnContract, 1.0)]
            [static(Windows.Networking.NetworkOperators.IFdnAccessManagerStatics, Windows.Networking.NetworkOperators.NetworkOperatorsFdnContract, 1.0)]
            runtimeclass FdnAccessManager
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.Networking.NetworkOperators.IHotspotAuthenticationContextStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            [threading(both)]
            runtimeclass HotspotAuthenticationContext
            {
                [default] interface Windows.Networking.NetworkOperators.IHotspotAuthenticationContext;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.Networking.NetworkOperators.IHotspotAuthenticationContext2;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass HotspotAuthenticationEventDetails
            {
                [default] interface Windows.Networking.NetworkOperators.IHotspotAuthenticationEventDetails;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass HotspotCredentialsAuthenticationResult
            {
                [default] interface Windows.Networking.NetworkOperators.IHotspotCredentialsAuthenticationResult;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Windows.Networking.NetworkOperators.IKnownCSimFilePathsStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass KnownCSimFilePaths
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Windows.Networking.NetworkOperators.IKnownRuimFilePathsStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass KnownRuimFilePaths
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Windows.Networking.NetworkOperators.IKnownSimFilePathsStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass KnownSimFilePaths
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Windows.Networking.NetworkOperators.IKnownUSimFilePathsStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass KnownUSimFilePaths
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.Networking.NetworkOperators.IMobileBroadbandAccountStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            [threading(both)]
            runtimeclass MobileBroadbandAccount
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandAccount;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.Networking.NetworkOperators.IMobileBroadbandAccount2;
                [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.Networking.NetworkOperators.IMobileBroadbandAccount3;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass MobileBroadbandAccountEventArgs
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandAccountEventArgs;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass MobileBroadbandAccountUpdatedEventArgs
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandAccountUpdatedEventArgs;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass MobileBroadbandAccountWatcher
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandAccountWatcher;
            }

            [activatable(Windows.Networking.NetworkOperators.IMobileBroadbandAntennaSarFactory, Windows.Foundation.UniversalApiContract, 6.0)]
            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandAntennaSar
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandAntennaSar;
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass MobileBroadbandCellCdma
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandCellCdma;
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass MobileBroadbandCellGsm
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandCellGsm;
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass MobileBroadbandCellLte
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandCellLte;
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass MobileBroadbandCellTdscdma
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandCellTdscdma;
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass MobileBroadbandCellUmts
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandCellUmts;
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass MobileBroadbandCellsInfo
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandCellsInfo;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass MobileBroadbandDeviceInformation
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceInformation;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceInformation2;
                [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceInformation3;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandDeviceService
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceService;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandDeviceServiceCommandResult
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceCommandResult;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandDeviceServiceCommandSession
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceCommandSession;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandDeviceServiceDataReceivedEventArgs
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceDataReceivedEventArgs;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandDeviceServiceDataSession
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceDataSession;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandDeviceServiceInformation
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceInformation;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandDeviceServiceTriggerDetails
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceTriggerDetails;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Windows.Networking.NetworkOperators.IMobileBroadbandModemStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            [threading(both)]
            runtimeclass MobileBroadbandModem
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandModem;
                [contract(Windows.Foundation.UniversalApiContract, 5.0)] interface Windows.Networking.NetworkOperators.IMobileBroadbandModem2;
                [contract(Windows.Foundation.UniversalApiContract, 6.0)] interface Windows.Networking.NetworkOperators.IMobileBroadbandModem3;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass MobileBroadbandModemConfiguration
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandModemConfiguration;
                [contract(Windows.Foundation.UniversalApiContract, 5.0)] interface Windows.Networking.NetworkOperators.IMobileBroadbandModemConfiguration2;
            }

            [activatable(Windows.Networking.NetworkOperators.IMobileBroadbandModemIsolationFactory, Windows.Foundation.UniversalApiContract, 6.0)]
            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandModemIsolation
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandModemIsolation;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass MobileBroadbandNetwork
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandNetwork;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.Networking.NetworkOperators.IMobileBroadbandNetwork2;
                [contract(Windows.Foundation.UniversalApiContract, 5.0)] interface Windows.Networking.NetworkOperators.IMobileBroadbandNetwork3;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandNetworkRegistrationStateChange
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandNetworkRegistrationStateChange;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandNetworkRegistrationStateChangeTriggerDetails
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandNetworkRegistrationStateChangeTriggerDetails;
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandPco
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandPco;
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandPcoDataChangeTriggerDetails
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandPcoDataChangeTriggerDetails;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandPin
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandPin;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandPinLockStateChange
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandPinLockStateChange;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandPinLockStateChangeTriggerDetails
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandPinLockStateChangeTriggerDetails;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandPinManager
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandPinManager;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandPinOperationResult
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandPinOperationResult;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandRadioStateChange
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandRadioStateChange;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandRadioStateChangeTriggerDetails
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandRadioStateChangeTriggerDetails;
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandSarManager
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandSarManager;
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandTransmissionStateChangedEventArgs
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandTransmissionStateChangedEventArgs;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandUicc
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandUicc;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandUiccApp
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandUiccApp;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandUiccAppReadRecordResult
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandUiccAppReadRecordResult;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandUiccAppRecordDetailsResult
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandUiccAppRecordDetailsResult;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MobileBroadbandUiccAppsResult
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandUiccAppsResult;
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass NetworkOperatorDataUsageTriggerDetails
            {
                [default] interface Windows.Networking.NetworkOperators.INetworkOperatorDataUsageTriggerDetails;
            }

            [contract(Windows.Networking.NetworkOperators.LegacyNetworkOperatorsContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass NetworkOperatorNotificationEventDetails
            {
                [default] interface Windows.Networking.NetworkOperators.INetworkOperatorNotificationEventDetails;
                [contract(Windows.Networking.NetworkOperators.LegacyNetworkOperatorsContract, 1.0)] interface Windows.Networking.NetworkOperators.INetworkOperatorTetheringEntitlementCheck;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass NetworkOperatorTetheringAccessPointConfiguration
            {
                [default] interface Windows.Networking.NetworkOperators.INetworkOperatorTetheringAccessPointConfiguration;
                [contract(Windows.Foundation.UniversalApiContract, 10.0)] interface Windows.Networking.NetworkOperators.INetworkOperatorTetheringAccessPointConfiguration2;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass NetworkOperatorTetheringClient
            {
                [default] interface Windows.Networking.NetworkOperators.INetworkOperatorTetheringClient;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.Networking.NetworkOperators.INetworkOperatorTetheringManagerStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.Networking.NetworkOperators.INetworkOperatorTetheringManagerStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.Networking.NetworkOperators.INetworkOperatorTetheringManagerStatics3, Windows.Foundation.UniversalApiContract, 3.0)]
            [static(Windows.Networking.NetworkOperators.INetworkOperatorTetheringManagerStatics4, Windows.Foundation.UniversalApiContract, 10.0)]
            [threading(both)]
            runtimeclass NetworkOperatorTetheringManager
            {
                [default] interface Windows.Networking.NetworkOperators.INetworkOperatorTetheringManager;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.Networking.NetworkOperators.INetworkOperatorTetheringClientManager;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass NetworkOperatorTetheringOperationResult
            {
                [default] interface Windows.Networking.NetworkOperators.INetworkOperatorTetheringOperationResult;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass ProvisionFromXmlDocumentResults
            {
                [default] interface Windows.Networking.NetworkOperators.IProvisionFromXmlDocumentResults;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass ProvisionedProfile
            {
                [default] interface Windows.Networking.NetworkOperators.IProvisionedProfile;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.Networking.NetworkOperators.IProvisioningAgentStaticMethods, Windows.Foundation.UniversalApiContract, 1.0)]
            [threading(both)]
            runtimeclass ProvisioningAgent
            {
                [default] interface Windows.Networking.NetworkOperators.IProvisioningAgent;
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass TetheringEntitlementCheckTriggerDetails
            {
                [default] interface Windows.Networking.NetworkOperators.ITetheringEntitlementCheckTriggerDetails;
            }

            [activatable(Windows.Networking.NetworkOperators.IUssdMessageFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass UssdMessage
            {
                [default] interface Windows.Networking.NetworkOperators.IUssdMessage;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass UssdReply
            {
                [default] interface Windows.Networking.NetworkOperators.IUssdReply;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.Networking.NetworkOperators.IUssdSessionStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            [threading(mta)]
            runtimeclass UssdSession
            {
                [default] interface Windows.Networking.NetworkOperators.IUssdSession;
            }
        }
    }
}
