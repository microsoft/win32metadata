//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Windows.ApplicationModel.Contacts.idl";
import "Windows.ApplicationModel.DataTransfer.idl";
import "Windows.ApplicationModel.Search.idl";
import "Windows.Globalization.idl";
import "Windows.Media.Capture.idl";
import "Windows.Media.Casting.idl";
import "Windows.Media.Core.idl";
import "Windows.Media.PlayTo.idl";
import "Windows.Media.Playback.idl";
import "Windows.Media.Protection.idl";
import "Windows.Storage.Streams.idl";
import "Windows.System.idl";
import "Windows.UI.idl";
import "Windows.UI.Composition.idl";
import "Windows.UI.Core.idl";
import "Windows.UI.Input.Inking.idl";
import "Windows.UI.Text.idl";
import "Windows.UI.Xaml.idl";
import "Windows.UI.Xaml.Automation.Peers.idl";
import "Windows.UI.Xaml.Automation.Provider.idl";
import "Windows.UI.Xaml.Controls.Primitives.idl";
import "Windows.UI.Xaml.Data.idl";
import "Windows.UI.Xaml.Documents.idl";
import "Windows.UI.Xaml.Input.idl";
import "Windows.UI.Xaml.Interop.idl";
import "Windows.UI.Xaml.Media.idl";
import "Windows.UI.Xaml.Media.Animation.idl";
import "Windows.UI.Xaml.Navigation.idl";
import "Windows.Web.idl";
import "Windows.Web.Http.idl";

// Forward Declare
namespace Windows
{
    namespace ApplicationModel
    {
        namespace Contacts
        {
            runtimeclass Contact;
        }
    }
}
namespace Windows
{
    namespace ApplicationModel
    {
        namespace DataTransfer
        {
            runtimeclass DataPackage;

            typedef enum DataPackageOperation DataPackageOperation;
        }
    }
}
namespace Windows
{
    namespace ApplicationModel
    {
        namespace Search
        {
            runtimeclass LocalContentSuggestionSettings;

            runtimeclass SearchQueryLinguisticDetails;

            runtimeclass SearchSuggestionsRequest;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        namespace Collections
        {
            interface IPropertySet;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct DateTime DateTime;

        runtimeclass Deferral;

        interface IAsyncAction;

        typedef struct Point Point;

        typedef struct Rect Rect;

        typedef struct TimeSpan TimeSpan;

        apicontract UniversalApiContract;

        runtimeclass Uri;
    }
}
namespace Windows
{
    namespace Globalization
    {
        typedef enum DayOfWeek DayOfWeek;
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Capture
        {
            runtimeclass MediaCapture;
        }
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Casting
        {
            runtimeclass CastingSource;
        }
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Core
        {
            interface IMediaSource;
        }
    }
}
namespace Windows
{
    namespace Media
    {
        namespace PlayTo
        {
            runtimeclass PlayToSource;
        }
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Playback
        {
            interface IMediaPlaybackSource;

            runtimeclass MediaPlayer;
        }
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Protection
        {
            runtimeclass MediaProtectionManager;
        }
    }
}
namespace Windows
{
    namespace Storage
    {
        namespace Streams
        {
            interface IRandomAccessStream;
        }
    }
}
namespace Windows
{
    namespace System
    {
        typedef enum VirtualKeyModifiers VirtualKeyModifiers;
    }
}
namespace Windows
{
    namespace UI
    {
        typedef struct Color Color;
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Composition
        {
            runtimeclass CompositionBrush;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Core
        {
            runtimeclass CoreIndependentInputSource;

            typedef enum CoreInputDeviceTypes CoreInputDeviceTypes;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Input
        {
            namespace Inking
            {
                runtimeclass InkDrawingAttributes;

                runtimeclass InkPresenter;

                runtimeclass InkPresenterProtractor;

                runtimeclass InkPresenterRuler;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Text
        {
            runtimeclass ContentLinkInfo;

            typedef enum FontStretch FontStretch;

            typedef enum FontStyle FontStyle;

            typedef struct FontWeight FontWeight;

            interface ITextDocument;

            runtimeclass RichEditTextDocument;

            typedef enum TextDecorations TextDecorations;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Automation
            {
                namespace Provider
                {
                    interface IExpandCollapseProvider;

                    interface IInvokeProvider;

                    interface IToggleProvider;
                }
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass BrushTransition;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                namespace Primitives
                {
                    runtimeclass AppBarButtonTemplateSettings;

                    runtimeclass AppBarTemplateSettings;

                    runtimeclass AppBarToggleButtonTemplateSettings;

                    runtimeclass CalendarViewTemplateSettings;

                    runtimeclass ColorSpectrum;

                    runtimeclass ComboBoxTemplateSettings;

                    runtimeclass CommandBarTemplateSettings;

                    runtimeclass FlyoutBase;

                    typedef enum GeneratorDirection GeneratorDirection;

                    typedef struct GeneratorPosition GeneratorPosition;

                    runtimeclass GridViewItemTemplateSettings;

                    typedef enum GroupHeaderPlacement GroupHeaderPlacement;

                    interface IScrollSnapPointsInfo;

                    runtimeclass ItemsChangedEventArgs;

                    delegate ItemsChangedEventHandler;

                    runtimeclass ListViewItemTemplateSettings;

                    runtimeclass MenuFlyoutItemTemplateSettings;

                    runtimeclass MenuFlyoutPresenterTemplateSettings;

                    typedef enum PlacementMode PlacementMode;

                    runtimeclass ProgressBarTemplateSettings;

                    runtimeclass ProgressRingTemplateSettings;

                    runtimeclass SelectorItem;

                    runtimeclass SettingsFlyoutTemplateSettings;

                    typedef enum SliderSnapsTo SliderSnapsTo;

                    typedef enum SnapPointsAlignment SnapPointsAlignment;

                    runtimeclass SplitViewTemplateSettings;

                    typedef enum TickPlacement TickPlacement;

                    runtimeclass ToggleSwitchTemplateSettings;

                    runtimeclass ToolTipTemplateSettings;
                }
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            typedef struct CornerRadius CornerRadius;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Data
            {
                interface ICustomPropertyProvider;

                interface INotifyPropertyChanged;

                interface IValueConverter;

                runtimeclass ItemIndexRange;

                typedef struct LoadMoreItemsResult LoadMoreItemsResult;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DataTemplate;

            runtimeclass DependencyObject;

            runtimeclass DependencyObjectCollection;

            runtimeclass DependencyProperty;

            delegate DependencyPropertyChangedEventHandler;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Documents
            {
                runtimeclass BlockCollection;

                runtimeclass ContentLinkInvokedEventArgs;

                runtimeclass ContentLinkProviderCollection;

                runtimeclass InlineCollection;

                runtimeclass TextHighlighter;

                runtimeclass TextPointer;

                typedef struct TextRange TextRange;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DragEventArgs;

            typedef struct Duration Duration;

            typedef enum ElementSoundMode ElementSoundMode;

            delegate ExceptionRoutedEventHandler;

            typedef enum FocusState FocusState;

            runtimeclass FrameworkElement;

            typedef struct GridLength GridLength;

            typedef enum HorizontalAlignment HorizontalAlignment;

            interface IElementFactory;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Input
            {
                runtimeclass CharacterReceivedRoutedEventArgs;

                runtimeclass DoubleTappedRoutedEventArgs;

                runtimeclass HoldingRoutedEventArgs;

                interface ICommand;

                runtimeclass InputScope;

                runtimeclass KeyRoutedEventArgs;

                typedef enum KeyboardNavigationMode KeyboardNavigationMode;

                runtimeclass ManipulationCompletedRoutedEventArgs;

                runtimeclass ManipulationDeltaRoutedEventArgs;

                runtimeclass ManipulationInertiaStartingRoutedEventArgs;

                runtimeclass ManipulationStartedRoutedEventArgs;

                runtimeclass ManipulationStartingRoutedEventArgs;

                runtimeclass PointerRoutedEventArgs;

                runtimeclass RightTappedRoutedEventArgs;

                runtimeclass TappedRoutedEventArgs;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Interop
            {
                typedef struct TypeName TypeName;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            typedef enum LineStackingStrategy LineStackingStrategy;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                namespace Animation
                {
                    runtimeclass ConnectedAnimation;

                    runtimeclass NavigationTransitionInfo;

                    runtimeclass TransitionCollection;
                }
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                typedef enum AudioCategory AudioCategory;

                typedef enum AudioDeviceType AudioDeviceType;

                runtimeclass Brush;

                typedef enum FastPlayFallbackBehaviour FastPlayFallbackBehaviour;

                runtimeclass FontFamily;

                runtimeclass Geometry;

                runtimeclass ImageSource;

                typedef enum MediaCanPlayResponse MediaCanPlayResponse;

                typedef enum MediaElementState MediaElementState;

                runtimeclass MediaTransportControlsThumbnailRequestedEventArgs;

                runtimeclass PartialMediaFailureDetectedEventArgs;

                delegate RateChangedRoutedEventHandler;

                runtimeclass SolidColorBrush;

                typedef enum Stereo3DVideoPackingMode Stereo3DVideoPackingMode;

                typedef enum Stereo3DVideoRenderMode Stereo3DVideoRenderMode;

                typedef enum Stretch Stretch;

                runtimeclass TimelineMarkerCollection;

                delegate TimelineMarkerRoutedEventHandler;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Navigation
            {
                runtimeclass FrameNavigationOptions;

                delegate LoadCompletedEventHandler;

                delegate NavigatedEventHandler;

                runtimeclass NavigatingCancelEventArgs;

                delegate NavigatingCancelEventHandler;

                typedef enum NavigationCacheMode NavigationCacheMode;

                runtimeclass NavigationEventArgs;

                delegate NavigationFailedEventHandler;

                delegate NavigationStoppedEventHandler;

                runtimeclass PageStackEntry;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            typedef enum OpticalMarginAlignment OpticalMarginAlignment;

            runtimeclass RoutedEventArgs;

            delegate RoutedEventHandler;

            runtimeclass Style;

            typedef enum TextAlignment TextAlignment;

            typedef enum TextLineBounds TextLineBounds;

            typedef enum TextReadingOrder TextReadingOrder;

            typedef enum TextTrimming TextTrimming;

            typedef enum TextWrapping TextWrapping;

            typedef struct Thickness Thickness;

            runtimeclass UIElement;

            typedef enum VerticalAlignment VerticalAlignment;

            typedef enum Visibility Visibility;
        }
    }
}
namespace Windows
{
    namespace Web
    {
        namespace Http
        {
            runtimeclass HttpRequestMessage;

            runtimeclass HttpResponseMessage;
        }
    }
}
namespace Windows
{
    namespace Web
    {
        interface IUriToStreamResolver;

        typedef enum WebErrorStatus WebErrorStatus;
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                typedef enum AppBarClosedDisplayMode AppBarClosedDisplayMode;

                typedef enum AutoSuggestionBoxTextChangeReason AutoSuggestionBoxTextChangeReason;

                typedef enum BackgroundSizing BackgroundSizing;

                typedef enum CalendarViewDisplayMode CalendarViewDisplayMode;

                typedef enum CalendarViewSelectionMode CalendarViewSelectionMode;

                typedef enum CandidateWindowAlignment CandidateWindowAlignment;

                typedef enum CharacterCasing CharacterCasing;

                typedef enum ClickMode ClickMode;

                typedef enum ColorPickerHsvChannel ColorPickerHsvChannel;

                typedef enum ColorSpectrumComponents ColorSpectrumComponents;

                typedef enum ColorSpectrumShape ColorSpectrumShape;

                typedef enum ComboBoxSelectionChangedTrigger ComboBoxSelectionChangedTrigger;

                typedef enum CommandBarDefaultLabelPosition CommandBarDefaultLabelPosition;

                typedef enum CommandBarDynamicOverflowAction CommandBarDynamicOverflowAction;

                typedef enum CommandBarLabelPosition CommandBarLabelPosition;

                typedef enum CommandBarOverflowButtonVisibility CommandBarOverflowButtonVisibility;

                typedef enum ContentDialogButton ContentDialogButton;

                typedef enum ContentDialogPlacement ContentDialogPlacement;

                typedef enum ContentDialogResult ContentDialogResult;

                typedef enum ContentLinkChangeKind ContentLinkChangeKind;

                typedef enum DisabledFormattingAccelerators DisabledFormattingAccelerators;

                typedef enum HandwritingPanelPlacementAlignment HandwritingPanelPlacementAlignment;

                typedef enum IncrementalLoadingTrigger IncrementalLoadingTrigger;

                typedef enum InkToolbarButtonFlyoutPlacement InkToolbarButtonFlyoutPlacement;

                typedef enum InkToolbarFlyoutItemKind InkToolbarFlyoutItemKind;

                typedef enum InkToolbarInitialControls InkToolbarInitialControls;

                typedef enum InkToolbarMenuKind InkToolbarMenuKind;

                typedef enum InkToolbarStencilKind InkToolbarStencilKind;

                typedef enum InkToolbarToggle InkToolbarToggle;

                typedef enum InkToolbarTool InkToolbarTool;

                typedef enum ItemsUpdatingScrollMode ItemsUpdatingScrollMode;

                typedef enum LightDismissOverlayMode LightDismissOverlayMode;

                typedef enum ListPickerFlyoutSelectionMode ListPickerFlyoutSelectionMode;

                typedef enum ListViewReorderMode ListViewReorderMode;

                typedef enum ListViewSelectionMode ListViewSelectionMode;

                typedef enum NavigationViewBackButtonVisible NavigationViewBackButtonVisible;

                typedef enum NavigationViewDisplayMode NavigationViewDisplayMode;

                typedef enum NavigationViewOverflowLabelMode NavigationViewOverflowLabelMode;

                typedef enum NavigationViewPaneDisplayMode NavigationViewPaneDisplayMode;

                typedef enum NavigationViewSelectionFollowsFocus NavigationViewSelectionFollowsFocus;

                typedef enum NavigationViewShoulderNavigationEnabled NavigationViewShoulderNavigationEnabled;

                typedef enum Orientation Orientation;

                typedef enum PanelScrollingDirection PanelScrollingDirection;

                typedef enum ParallaxSourceOffsetKind ParallaxSourceOffsetKind;

                typedef enum PasswordRevealMode PasswordRevealMode;

                typedef enum PivotHeaderFocusVisualPlacement PivotHeaderFocusVisualPlacement;

                typedef enum PivotSlideInAnimationGroup PivotSlideInAnimationGroup;

                typedef enum RefreshPullDirection RefreshPullDirection;

                typedef enum RefreshVisualizerOrientation RefreshVisualizerOrientation;

                typedef enum RefreshVisualizerState RefreshVisualizerState;

                typedef enum RequiresPointer RequiresPointer;

                typedef enum RichEditClipboardFormat RichEditClipboardFormat;

                typedef enum ScrollBarVisibility ScrollBarVisibility;

                typedef enum ScrollIntoViewAlignment ScrollIntoViewAlignment;

                typedef enum ScrollMode ScrollMode;

                typedef enum SelectionMode SelectionMode;

                typedef enum SnapPointsType SnapPointsType;

                typedef enum SplitViewDisplayMode SplitViewDisplayMode;

                typedef enum SplitViewPanePlacement SplitViewPanePlacement;

                typedef enum StretchDirection StretchDirection;

                typedef enum SwipeBehaviorOnInvoked SwipeBehaviorOnInvoked;

                typedef enum SwipeMode SwipeMode;

                typedef enum Symbol Symbol;

                typedef enum TreeViewSelectionMode TreeViewSelectionMode;

                typedef enum TwoPaneViewMode TwoPaneViewMode;

                typedef enum TwoPaneViewPriority TwoPaneViewPriority;

                typedef enum TwoPaneViewTallModeConfiguration TwoPaneViewTallModeConfiguration;

                typedef enum TwoPaneViewWideModeConfiguration TwoPaneViewWideModeConfiguration;

                typedef enum VirtualizationMode VirtualizationMode;

                typedef enum WebViewExecutionMode WebViewExecutionMode;

                typedef enum WebViewPermissionState WebViewPermissionState;

                typedef enum WebViewPermissionType WebViewPermissionType;

                typedef enum ZoomMode ZoomMode;

                delegate BackClickEventHandler;

                delegate CalendarViewDayItemChangingEventHandler;

                delegate CleanUpVirtualizedItemEventHandler;

                delegate ContextMenuOpeningEventHandler;

                delegate DragItemsStartingEventHandler;

                delegate HubSectionHeaderClickEventHandler;

                delegate ItemClickEventHandler;

                delegate ListViewItemToKeyHandler;

                delegate ListViewKeyToItemHandler;

                delegate NotifyEventHandler;

                delegate SectionsInViewChangedEventHandler;

                delegate SelectionChangedEventHandler;

                delegate SemanticZoomViewChangedEventHandler;

                delegate TextChangedEventHandler;

                delegate TextControlPasteEventHandler;

                delegate WebViewNavigationFailedEventHandler;

                interface IAnchorRequestedEventArgs;

                interface IAppBar;

                interface IAppBar2;

                interface IAppBar3;

                interface IAppBar4;

                interface IAppBarButton;

                interface IAppBarButton3;

                interface IAppBarButton4;

                interface IAppBarButton5;

                interface IAppBarButtonFactory;

                interface IAppBarButtonStatics;

                interface IAppBarButtonStatics3;

                interface IAppBarButtonStatics4;

                interface IAppBarElementContainer;

                interface IAppBarElementContainerFactory;

                interface IAppBarElementContainerStatics;

                interface IAppBarFactory;

                interface IAppBarOverrides;

                interface IAppBarOverrides3;

                interface IAppBarSeparator;

                interface IAppBarSeparatorFactory;

                interface IAppBarSeparatorStatics;

                interface IAppBarSeparatorStatics3;

                interface IAppBarStatics;

                interface IAppBarStatics2;

                interface IAppBarStatics4;

                interface IAppBarToggleButton;

                interface IAppBarToggleButton3;

                interface IAppBarToggleButton4;

                interface IAppBarToggleButton5;

                interface IAppBarToggleButtonFactory;

                interface IAppBarToggleButtonStatics;

                interface IAppBarToggleButtonStatics3;

                interface IAppBarToggleButtonStatics4;

                interface IAutoSuggestBox;

                interface IAutoSuggestBox2;

                interface IAutoSuggestBox3;

                interface IAutoSuggestBox4;

                interface IAutoSuggestBoxQuerySubmittedEventArgs;

                interface IAutoSuggestBoxStatics;

                interface IAutoSuggestBoxStatics2;

                interface IAutoSuggestBoxStatics3;

                interface IAutoSuggestBoxStatics4;

                interface IAutoSuggestBoxSuggestionChosenEventArgs;

                interface IAutoSuggestBoxTextChangedEventArgs;

                interface IAutoSuggestBoxTextChangedEventArgsStatics;

                interface IBackClickEventArgs;

                interface IBitmapIcon;

                interface IBitmapIcon2;

                interface IBitmapIconFactory;

                interface IBitmapIconSource;

                interface IBitmapIconSourceFactory;

                interface IBitmapIconSourceStatics;

                interface IBitmapIconStatics;

                interface IBitmapIconStatics2;

                interface IBorder;

                interface IBorder2;

                interface IBorderStatics;

                interface IBorderStatics2;

                interface IButton;

                interface IButtonFactory;

                interface IButtonStaticsWithFlyout;

                interface IButtonWithFlyout;

                interface ICalendarDatePicker;

                interface ICalendarDatePicker2;

                interface ICalendarDatePicker3;

                interface ICalendarDatePickerDateChangedEventArgs;

                interface ICalendarDatePickerFactory;

                interface ICalendarDatePickerStatics;

                interface ICalendarDatePickerStatics2;

                interface ICalendarDatePickerStatics3;

                interface ICalendarView;

                interface ICalendarViewDayItem;

                interface ICalendarViewDayItemChangingEventArgs;

                interface ICalendarViewDayItemFactory;

                interface ICalendarViewDayItemStatics;

                interface ICalendarViewFactory;

                interface ICalendarViewSelectedDatesChangedEventArgs;

                interface ICalendarViewStatics;

                interface ICandidateWindowBoundsChangedEventArgs;

                interface ICanvas;

                interface ICanvasFactory;

                interface ICanvasStatics;

                interface ICaptureElement;

                interface ICaptureElementStatics;

                interface ICheckBox;

                interface ICheckBoxFactory;

                interface IChoosingGroupHeaderContainerEventArgs;

                interface IChoosingItemContainerEventArgs;

                interface ICleanUpVirtualizedItemEventArgs;

                interface IColorChangedEventArgs;

                interface IColorPicker;

                interface IColorPickerFactory;

                interface IColorPickerStatics;

                interface IColumnDefinition;

                interface IColumnDefinitionStatics;

                interface IComboBox;

                interface IComboBox2;

                interface IComboBox3;

                interface IComboBox4;

                interface IComboBox5;

                interface IComboBox6;

                interface IComboBoxFactory;

                interface IComboBoxItem;

                interface IComboBoxItemFactory;

                interface IComboBoxOverrides;

                interface IComboBoxStatics;

                interface IComboBoxStatics2;

                interface IComboBoxStatics3;

                interface IComboBoxStatics4;

                interface IComboBoxStatics5;

                interface IComboBoxStatics6;

                interface IComboBoxTextSubmittedEventArgs;

                interface ICommandBar;

                interface ICommandBar2;

                interface ICommandBar3;

                interface ICommandBarElement;

                interface ICommandBarElement2;

                interface ICommandBarFactory;

                interface ICommandBarFlyout;

                interface ICommandBarFlyoutFactory;

                interface ICommandBarOverflowPresenter;

                interface ICommandBarOverflowPresenterFactory;

                interface ICommandBarStatics;

                interface ICommandBarStatics2;

                interface ICommandBarStatics3;

                interface IContainerContentChangingEventArgs;

                interface IContentControl;

                interface IContentControl2;

                interface IContentControlFactory;

                interface IContentControlOverrides;

                interface IContentControlStatics;

                interface IContentDialog;

                interface IContentDialog2;

                interface IContentDialog3;

                interface IContentDialogButtonClickDeferral;

                interface IContentDialogButtonClickEventArgs;

                interface IContentDialogClosedEventArgs;

                interface IContentDialogClosingDeferral;

                interface IContentDialogClosingEventArgs;

                interface IContentDialogFactory;

                interface IContentDialogOpenedEventArgs;

                interface IContentDialogStatics;

                interface IContentDialogStatics2;

                interface IContentLinkChangedEventArgs;

                interface IContentPresenter;

                interface IContentPresenter2;

                interface IContentPresenter3;

                interface IContentPresenter4;

                interface IContentPresenter5;

                interface IContentPresenterFactory;

                interface IContentPresenterOverrides;

                interface IContentPresenterStatics;

                interface IContentPresenterStatics2;

                interface IContentPresenterStatics3;

                interface IContentPresenterStatics4;

                interface IContentPresenterStatics5;

                interface IContextMenuEventArgs;

                interface IControl;

                interface IControl2;

                interface IControl3;

                interface IControl4;

                interface IControl5;

                interface IControl7;

                interface IControlFactory;

                interface IControlOverrides;

                interface IControlOverrides6;

                interface IControlProtected;

                interface IControlStatics;

                interface IControlStatics2;

                interface IControlStatics3;

                interface IControlStatics4;

                interface IControlStatics5;

                interface IControlStatics7;

                interface IControlTemplate;

                interface IDataTemplateSelector;

                interface IDataTemplateSelector2;

                interface IDataTemplateSelectorFactory;

                interface IDataTemplateSelectorOverrides;

                interface IDataTemplateSelectorOverrides2;

                interface IDatePickedEventArgs;

                interface IDatePicker;

                interface IDatePicker2;

                interface IDatePicker3;

                interface IDatePickerFactory;

                interface IDatePickerFlyout;

                interface IDatePickerFlyout2;

                interface IDatePickerFlyoutItem;

                interface IDatePickerFlyoutItemStatics;

                interface IDatePickerFlyoutPresenter;

                interface IDatePickerFlyoutPresenter2;

                interface IDatePickerFlyoutPresenterStatics2;

                interface IDatePickerFlyoutStatics;

                interface IDatePickerFlyoutStatics2;

                interface IDatePickerSelectedValueChangedEventArgs;

                interface IDatePickerStatics;

                interface IDatePickerStatics2;

                interface IDatePickerStatics3;

                interface IDatePickerValueChangedEventArgs;

                interface IDragItemsCompletedEventArgs;

                interface IDragItemsStartingEventArgs;

                interface IDropDownButton;

                interface IDropDownButtonAutomationPeer;

                interface IDropDownButtonAutomationPeerFactory;

                interface IDropDownButtonFactory;

                interface IDynamicOverflowItemsChangingEventArgs;

                interface IFlipView;

                interface IFlipView2;

                interface IFlipViewFactory;

                interface IFlipViewItem;

                interface IFlipViewItemFactory;

                interface IFlipViewStatics2;

                interface IFlyout;

                interface IFlyoutFactory;

                interface IFlyoutPresenter;

                interface IFlyoutPresenter2;

                interface IFlyoutPresenterFactory;

                interface IFlyoutPresenterStatics2;

                interface IFlyoutStatics;

                interface IFocusDisengagedEventArgs;

                interface IFocusEngagedEventArgs;

                interface IFocusEngagedEventArgs2;

                interface IFontIcon;

                interface IFontIcon2;

                interface IFontIcon3;

                interface IFontIconFactory;

                interface IFontIconSource;

                interface IFontIconSourceFactory;

                interface IFontIconSourceStatics;

                interface IFontIconStatics;

                interface IFontIconStatics2;

                interface IFontIconStatics3;

                interface IFrame;

                interface IFrame2;

                interface IFrame3;

                interface IFrame4;

                interface IFrame5;

                interface IFrameFactory;

                interface IFrameStatics;

                interface IFrameStatics2;

                interface IFrameStatics5;

                interface IGrid;

                interface IGrid2;

                interface IGrid3;

                interface IGrid4;

                interface IGridFactory;

                interface IGridStatics;

                interface IGridStatics2;

                interface IGridStatics3;

                interface IGridStatics4;

                interface IGridView;

                interface IGridViewFactory;

                interface IGridViewHeaderItem;

                interface IGridViewHeaderItemFactory;

                interface IGridViewItem;

                interface IGridViewItemFactory;

                interface IGroupItem;

                interface IGroupItemFactory;

                interface IGroupStyle;

                interface IGroupStyle2;

                interface IGroupStyleFactory;

                interface IGroupStyleSelector;

                interface IGroupStyleSelectorFactory;

                interface IGroupStyleSelectorOverrides;

                interface IHandwritingPanelClosedEventArgs;

                interface IHandwritingPanelOpenedEventArgs;

                interface IHandwritingView;

                interface IHandwritingViewFactory;

                interface IHandwritingViewStatics;

                interface IHub;

                interface IHubFactory;

                interface IHubSection;

                interface IHubSectionFactory;

                interface IHubSectionHeaderClickEventArgs;

                interface IHubSectionStatics;

                interface IHubStatics;

                interface IHyperlinkButton;

                interface IHyperlinkButtonFactory;

                interface IHyperlinkButtonStatics;

                interface IIconElement;

                interface IIconElementFactory;

                interface IIconElementStatics;

                interface IIconSource;

                interface IIconSourceElement;

                interface IIconSourceElementFactory;

                interface IIconSourceElementStatics;

                interface IIconSourceFactory;

                interface IIconSourceStatics;

                interface IImage;

                interface IImage2;

                interface IImage3;

                interface IImageStatics;

                interface IInkCanvas;

                interface IInkCanvasFactory;

                interface IInkToolbar;

                interface IInkToolbar2;

                interface IInkToolbar3;

                interface IInkToolbarBallpointPenButton;

                interface IInkToolbarBallpointPenButtonFactory;

                interface IInkToolbarCustomPen;

                interface IInkToolbarCustomPenButton;

                interface IInkToolbarCustomPenButtonFactory;

                interface IInkToolbarCustomPenButtonStatics;

                interface IInkToolbarCustomPenFactory;

                interface IInkToolbarCustomPenOverrides;

                interface IInkToolbarCustomToggleButton;

                interface IInkToolbarCustomToggleButtonFactory;

                interface IInkToolbarCustomToolButton;

                interface IInkToolbarCustomToolButtonFactory;

                interface IInkToolbarCustomToolButtonStatics;

                interface IInkToolbarEraserButton;

                interface IInkToolbarEraserButton2;

                interface IInkToolbarEraserButtonFactory;

                interface IInkToolbarEraserButtonStatics2;

                interface IInkToolbarFactory;

                interface IInkToolbarFlyoutItem;

                interface IInkToolbarFlyoutItemFactory;

                interface IInkToolbarFlyoutItemStatics;

                interface IInkToolbarHighlighterButton;

                interface IInkToolbarHighlighterButtonFactory;

                interface IInkToolbarIsStencilButtonCheckedChangedEventArgs;

                interface IInkToolbarMenuButton;

                interface IInkToolbarMenuButtonFactory;

                interface IInkToolbarMenuButtonStatics;

                interface IInkToolbarPenButton;

                interface IInkToolbarPenButtonFactory;

                interface IInkToolbarPenButtonStatics;

                interface IInkToolbarPenConfigurationControl;

                interface IInkToolbarPenConfigurationControlFactory;

                interface IInkToolbarPenConfigurationControlStatics;

                interface IInkToolbarPencilButton;

                interface IInkToolbarPencilButtonFactory;

                interface IInkToolbarRulerButton;

                interface IInkToolbarRulerButtonFactory;

                interface IInkToolbarRulerButtonStatics;

                interface IInkToolbarStatics;

                interface IInkToolbarStatics2;

                interface IInkToolbarStatics3;

                interface IInkToolbarStencilButton;

                interface IInkToolbarStencilButtonFactory;

                interface IInkToolbarStencilButtonStatics;

                interface IInkToolbarToggleButton;

                interface IInkToolbarToggleButtonFactory;

                interface IInkToolbarToolButton;

                interface IInkToolbarToolButtonFactory;

                interface IInkToolbarToolButtonStatics;

                interface IInsertionPanel;

                interface IIsTextTrimmedChangedEventArgs;

                interface IItemClickEventArgs;

                interface IItemContainerGenerator;

                interface IItemContainerMapping;

                interface IItemsControl;

                interface IItemsControl2;

                interface IItemsControl3;

                interface IItemsControlFactory;

                interface IItemsControlOverrides;

                interface IItemsControlStatics;

                interface IItemsPanelTemplate;

                interface IItemsPickedEventArgs;

                interface IItemsPresenter;

                interface IItemsPresenter2;

                interface IItemsPresenterStatics;

                interface IItemsPresenterStatics2;

                interface IItemsStackPanel;

                interface IItemsStackPanel2;

                interface IItemsStackPanelStatics;

                interface IItemsStackPanelStatics2;

                interface IItemsWrapGrid;

                interface IItemsWrapGrid2;

                interface IItemsWrapGridStatics;

                interface IItemsWrapGridStatics2;

                interface IListBox;

                interface IListBox2;

                interface IListBoxFactory;

                interface IListBoxItem;

                interface IListBoxItemFactory;

                interface IListBoxStatics;

                interface IListBoxStatics2;

                interface IListPickerFlyout;

                interface IListPickerFlyoutPresenter;

                interface IListPickerFlyoutStatics;

                interface IListView;

                interface IListViewBase;

                interface IListViewBase2;

                interface IListViewBase3;

                interface IListViewBase4;

                interface IListViewBase5;

                interface IListViewBase6;

                interface IListViewBaseFactory;

                interface IListViewBaseHeaderItem;

                interface IListViewBaseHeaderItemFactory;

                interface IListViewBaseStatics;

                interface IListViewBaseStatics2;

                interface IListViewBaseStatics3;

                interface IListViewBaseStatics4;

                interface IListViewBaseStatics5;

                interface IListViewFactory;

                interface IListViewHeaderItem;

                interface IListViewHeaderItemFactory;

                interface IListViewItem;

                interface IListViewItemFactory;

                interface IListViewPersistenceHelper;

                interface IListViewPersistenceHelperStatics;

                interface IMediaElement;

                interface IMediaElement2;

                interface IMediaElement3;

                interface IMediaElementStatics;

                interface IMediaElementStatics2;

                interface IMediaPlayerElement;

                interface IMediaPlayerElementFactory;

                interface IMediaPlayerElementStatics;

                interface IMediaPlayerPresenter;

                interface IMediaPlayerPresenterFactory;

                interface IMediaPlayerPresenterStatics;

                interface IMediaTransportControls;

                interface IMediaTransportControls2;

                interface IMediaTransportControls3;

                interface IMediaTransportControls4;

                interface IMediaTransportControlsFactory;

                interface IMediaTransportControlsHelper;

                interface IMediaTransportControlsHelperStatics;

                interface IMediaTransportControlsStatics;

                interface IMediaTransportControlsStatics2;

                interface IMediaTransportControlsStatics3;

                interface IMediaTransportControlsStatics4;

                interface IMenuBar;

                interface IMenuBarFactory;

                interface IMenuBarItem;

                interface IMenuBarItemFactory;

                interface IMenuBarItemFlyout;

                interface IMenuBarItemFlyoutFactory;

                interface IMenuBarItemStatics;

                interface IMenuBarStatics;

                interface IMenuFlyout;

                interface IMenuFlyout2;

                interface IMenuFlyoutFactory;

                interface IMenuFlyoutItem;

                interface IMenuFlyoutItem2;

                interface IMenuFlyoutItem3;

                interface IMenuFlyoutItemBase;

                interface IMenuFlyoutItemBaseFactory;

                interface IMenuFlyoutItemFactory;

                interface IMenuFlyoutItemStatics;

                interface IMenuFlyoutItemStatics2;

                interface IMenuFlyoutItemStatics3;

                interface IMenuFlyoutPresenter;

                interface IMenuFlyoutPresenter2;

                interface IMenuFlyoutPresenter3;

                interface IMenuFlyoutPresenterFactory;

                interface IMenuFlyoutPresenterStatics3;

                interface IMenuFlyoutSeparator;

                interface IMenuFlyoutSeparatorFactory;

                interface IMenuFlyoutStatics;

                interface IMenuFlyoutSubItem;

                interface IMenuFlyoutSubItem2;

                interface IMenuFlyoutSubItemStatics;

                interface IMenuFlyoutSubItemStatics2;

                interface INavigate;

                interface INavigationView;

                interface INavigationView2;

                interface INavigationView3;

                interface INavigationViewBackRequestedEventArgs;

                interface INavigationViewDisplayModeChangedEventArgs;

                interface INavigationViewFactory;

                interface INavigationViewItem;

                interface INavigationViewItem2;

                interface INavigationViewItemBase;

                interface INavigationViewItemBaseFactory;

                interface INavigationViewItemFactory;

                interface INavigationViewItemHeader;

                interface INavigationViewItemHeaderFactory;

                interface INavigationViewItemInvokedEventArgs;

                interface INavigationViewItemInvokedEventArgs2;

                interface INavigationViewItemSeparator;

                interface INavigationViewItemSeparatorFactory;

                interface INavigationViewItemStatics;

                interface INavigationViewItemStatics2;

                interface INavigationViewList;

                interface INavigationViewListFactory;

                interface INavigationViewPaneClosingEventArgs;

                interface INavigationViewSelectionChangedEventArgs;

                interface INavigationViewSelectionChangedEventArgs2;

                interface INavigationViewStatics;

                interface INavigationViewStatics2;

                interface INavigationViewStatics3;

                interface INavigationViewTemplateSettings;

                interface INavigationViewTemplateSettingsFactory;

                interface INavigationViewTemplateSettingsStatics;

                interface INotifyEventArgs;

                interface INotifyEventArgs2;

                interface IPage;

                interface IPageFactory;

                interface IPageOverrides;

                interface IPageStatics;

                interface IPanel;

                interface IPanel2;

                interface IPanelFactory;

                interface IPanelStatics;

                interface IParallaxView;

                interface IParallaxViewFactory;

                interface IParallaxViewStatics;

                interface IPasswordBox;

                interface IPasswordBox2;

                interface IPasswordBox3;

                interface IPasswordBox4;

                interface IPasswordBox5;

                interface IPasswordBoxPasswordChangingEventArgs;

                interface IPasswordBoxStatics;

                interface IPasswordBoxStatics2;

                interface IPasswordBoxStatics3;

                interface IPasswordBoxStatics5;

                interface IPathIcon;

                interface IPathIconFactory;

                interface IPathIconSource;

                interface IPathIconSourceFactory;

                interface IPathIconSourceStatics;

                interface IPathIconStatics;

                interface IPersonPicture;

                interface IPersonPictureFactory;

                interface IPersonPictureStatics;

                interface IPickerConfirmedEventArgs;

                interface IPickerFlyout;

                interface IPickerFlyoutPresenter;

                interface IPickerFlyoutStatics;

                interface IPivot;

                interface IPivot2;

                interface IPivot3;

                interface IPivotFactory;

                interface IPivotItem;

                interface IPivotItemEventArgs;

                interface IPivotItemFactory;

                interface IPivotItemStatics;

                interface IPivotStatics;

                interface IPivotStatics2;

                interface IPivotStatics3;

                interface IProgressBar;

                interface IProgressBarFactory;

                interface IProgressBarStatics;

                interface IProgressRing;

                interface IProgressRingStatics;

                interface IRadioButton;

                interface IRadioButtonFactory;

                interface IRadioButtonStatics;

                interface IRatingControl;

                interface IRatingControlFactory;

                interface IRatingControlStatics;

                interface IRatingItemFontInfo;

                interface IRatingItemFontInfoFactory;

                interface IRatingItemFontInfoStatics;

                interface IRatingItemImageInfo;

                interface IRatingItemImageInfoFactory;

                interface IRatingItemImageInfoStatics;

                interface IRatingItemInfo;

                interface IRatingItemInfoFactory;

                interface IRefreshContainer;

                interface IRefreshContainerFactory;

                interface IRefreshContainerStatics;

                interface IRefreshInteractionRatioChangedEventArgs;

                interface IRefreshRequestedEventArgs;

                interface IRefreshStateChangedEventArgs;

                interface IRefreshVisualizer;

                interface IRefreshVisualizerFactory;

                interface IRefreshVisualizerStatics;

                interface IRelativePanel;

                interface IRelativePanel2;

                interface IRelativePanelFactory;

                interface IRelativePanelStatics;

                interface IRelativePanelStatics2;

                interface IRichEditBox;

                interface IRichEditBox2;

                interface IRichEditBox3;

                interface IRichEditBox4;

                interface IRichEditBox5;

                interface IRichEditBox6;

                interface IRichEditBox7;

                interface IRichEditBox8;

                interface IRichEditBoxFactory;

                interface IRichEditBoxSelectionChangingEventArgs;

                interface IRichEditBoxStatics;

                interface IRichEditBoxStatics2;

                interface IRichEditBoxStatics3;

                interface IRichEditBoxStatics4;

                interface IRichEditBoxStatics5;

                interface IRichEditBoxStatics6;

                interface IRichEditBoxStatics7;

                interface IRichEditBoxStatics8;

                interface IRichEditBoxTextChangingEventArgs;

                interface IRichEditBoxTextChangingEventArgs2;

                interface IRichTextBlock;

                interface IRichTextBlock2;

                interface IRichTextBlock3;

                interface IRichTextBlock4;

                interface IRichTextBlock5;

                interface IRichTextBlock6;

                interface IRichTextBlockOverflow;

                interface IRichTextBlockOverflow2;

                interface IRichTextBlockOverflow3;

                interface IRichTextBlockOverflowStatics;

                interface IRichTextBlockOverflowStatics2;

                interface IRichTextBlockOverflowStatics3;

                interface IRichTextBlockStatics;

                interface IRichTextBlockStatics2;

                interface IRichTextBlockStatics3;

                interface IRichTextBlockStatics4;

                interface IRichTextBlockStatics5;

                interface IRichTextBlockStatics6;

                interface IRowDefinition;

                interface IRowDefinitionStatics;

                interface IScrollAnchorProvider;

                interface IScrollContentPresenter;

                interface IScrollContentPresenter2;

                interface IScrollContentPresenterStatics2;

                interface IScrollViewer;

                interface IScrollViewer2;

                interface IScrollViewer3;

                interface IScrollViewer4;

                interface IScrollViewerStatics;

                interface IScrollViewerStatics2;

                interface IScrollViewerStatics4;

                interface IScrollViewerView;

                interface IScrollViewerViewChangedEventArgs;

                interface IScrollViewerViewChangingEventArgs;

                interface ISearchBox;

                interface ISearchBoxFactory;

                interface ISearchBoxQueryChangedEventArgs;

                interface ISearchBoxQuerySubmittedEventArgs;

                interface ISearchBoxResultSuggestionChosenEventArgs;

                interface ISearchBoxStatics;

                interface ISearchBoxSuggestionsRequestedEventArgs;

                interface ISectionsInViewChangedEventArgs;

                interface ISectionsInViewChangedEventArgsFactory;

                interface ISelectionChangedEventArgs;

                interface ISelectionChangedEventArgsFactory;

                interface ISemanticZoom;

                interface ISemanticZoomInformation;

                interface ISemanticZoomLocation;

                interface ISemanticZoomStatics;

                interface ISemanticZoomViewChangedEventArgs;

                interface ISettingsFlyout;

                interface ISettingsFlyoutFactory;

                interface ISettingsFlyoutStatics;

                interface ISlider;

                interface ISlider2;

                interface ISliderFactory;

                interface ISliderStatics;

                interface ISliderStatics2;

                interface ISplitButton;

                interface ISplitButtonAutomationPeer;

                interface ISplitButtonAutomationPeerFactory;

                interface ISplitButtonClickEventArgs;

                interface ISplitButtonFactory;

                interface ISplitButtonStatics;

                interface ISplitView;

                interface ISplitView2;

                interface ISplitView3;

                interface ISplitViewFactory;

                interface ISplitViewPaneClosingEventArgs;

                interface ISplitViewStatics;

                interface ISplitViewStatics2;

                interface IStackPanel;

                interface IStackPanel2;

                interface IStackPanel4;

                interface IStackPanel5;

                interface IStackPanelFactory;

                interface IStackPanelStatics;

                interface IStackPanelStatics2;

                interface IStackPanelStatics4;

                interface IStackPanelStatics5;

                interface IStyleSelector;

                interface IStyleSelectorFactory;

                interface IStyleSelectorOverrides;

                interface ISwapChainBackgroundPanel;

                interface ISwapChainBackgroundPanel2;

                interface ISwapChainBackgroundPanelFactory;

                interface ISwapChainPanel;

                interface ISwapChainPanelFactory;

                interface ISwapChainPanelStatics;

                interface ISwipeControl;

                interface ISwipeControlFactory;

                interface ISwipeControlStatics;

                interface ISwipeItem;

                interface ISwipeItemFactory;

                interface ISwipeItemInvokedEventArgs;

                interface ISwipeItemStatics;

                interface ISwipeItems;

                interface ISwipeItemsFactory;

                interface ISwipeItemsStatics;

                interface ISymbolIcon;

                interface ISymbolIconFactory;

                interface ISymbolIconSource;

                interface ISymbolIconSourceFactory;

                interface ISymbolIconSourceStatics;

                interface ISymbolIconStatics;

                interface ITextBlock;

                interface ITextBlock2;

                interface ITextBlock3;

                interface ITextBlock4;

                interface ITextBlock5;

                interface ITextBlock6;

                interface ITextBlock7;

                interface ITextBlockStatics;

                interface ITextBlockStatics2;

                interface ITextBlockStatics3;

                interface ITextBlockStatics5;

                interface ITextBlockStatics6;

                interface ITextBlockStatics7;

                interface ITextBox;

                interface ITextBox2;

                interface ITextBox3;

                interface ITextBox4;

                interface ITextBox5;

                interface ITextBox6;

                interface ITextBox7;

                interface ITextBox8;

                interface ITextBoxBeforeTextChangingEventArgs;

                interface ITextBoxFactory;

                interface ITextBoxSelectionChangingEventArgs;

                interface ITextBoxStatics;

                interface ITextBoxStatics2;

                interface ITextBoxStatics3;

                interface ITextBoxStatics5;

                interface ITextBoxStatics6;

                interface ITextBoxStatics7;

                interface ITextBoxStatics8;

                interface ITextBoxTextChangingEventArgs;

                interface ITextBoxTextChangingEventArgs2;

                interface ITextChangedEventArgs;

                interface ITextCommandBarFlyout;

                interface ITextCommandBarFlyoutFactory;

                interface ITextCompositionChangedEventArgs;

                interface ITextCompositionEndedEventArgs;

                interface ITextCompositionStartedEventArgs;

                interface ITextControlCopyingToClipboardEventArgs;

                interface ITextControlCuttingToClipboardEventArgs;

                interface ITextControlPasteEventArgs;

                interface ITimePickedEventArgs;

                interface ITimePicker;

                interface ITimePicker2;

                interface ITimePicker3;

                interface ITimePickerFactory;

                interface ITimePickerFlyout;

                interface ITimePickerFlyoutPresenter;

                interface ITimePickerFlyoutPresenter2;

                interface ITimePickerFlyoutPresenterStatics2;

                interface ITimePickerFlyoutStatics;

                interface ITimePickerSelectedValueChangedEventArgs;

                interface ITimePickerStatics;

                interface ITimePickerStatics2;

                interface ITimePickerStatics3;

                interface ITimePickerValueChangedEventArgs;

                interface IToggleMenuFlyoutItem;

                interface IToggleMenuFlyoutItemFactory;

                interface IToggleMenuFlyoutItemStatics;

                interface IToggleSplitButton;

                interface IToggleSplitButtonAutomationPeer;

                interface IToggleSplitButtonAutomationPeerFactory;

                interface IToggleSplitButtonFactory;

                interface IToggleSplitButtonIsCheckedChangedEventArgs;

                interface IToggleSwitch;

                interface IToggleSwitchOverrides;

                interface IToggleSwitchStatics;

                interface IToolTip;

                interface IToolTip2;

                interface IToolTipFactory;

                interface IToolTipService;

                interface IToolTipServiceStatics;

                interface IToolTipStatics;

                interface IToolTipStatics2;

                interface ITreeView;

                interface ITreeView2;

                interface ITreeViewCollapsedEventArgs;

                interface ITreeViewCollapsedEventArgs2;

                interface ITreeViewDragItemsCompletedEventArgs;

                interface ITreeViewDragItemsStartingEventArgs;

                interface ITreeViewExpandingEventArgs;

                interface ITreeViewExpandingEventArgs2;

                interface ITreeViewFactory;

                interface ITreeViewItem;

                interface ITreeViewItem2;

                interface ITreeViewItemFactory;

                interface ITreeViewItemInvokedEventArgs;

                interface ITreeViewItemStatics;

                interface ITreeViewItemStatics2;

                interface ITreeViewItemTemplateSettings;

                interface ITreeViewItemTemplateSettingsFactory;

                interface ITreeViewItemTemplateSettingsStatics;

                interface ITreeViewList;

                interface ITreeViewListFactory;

                interface ITreeViewNode;

                interface ITreeViewNodeFactory;

                interface ITreeViewNodeStatics;

                interface ITreeViewStatics;

                interface ITreeViewStatics2;

                interface ITwoPaneView;

                interface ITwoPaneViewFactory;

                interface ITwoPaneViewStatics;

                interface IUIElementCollection;

                interface IUserControl;

                interface IUserControlFactory;

                interface IUserControlStatics;

                interface IVariableSizedWrapGrid;

                interface IVariableSizedWrapGridStatics;

                interface IViewbox;

                interface IViewboxStatics;

                interface IVirtualizingPanel;

                interface IVirtualizingPanelFactory;

                interface IVirtualizingPanelOverrides;

                interface IVirtualizingPanelProtected;

                interface IVirtualizingStackPanel;

                interface IVirtualizingStackPanelOverrides;

                interface IVirtualizingStackPanelStatics;

                interface IWebView;

                interface IWebView2;

                interface IWebView3;

                interface IWebView4;

                interface IWebView5;

                interface IWebView6;

                interface IWebView7;

                interface IWebViewBrush;

                interface IWebViewBrushStatics;

                interface IWebViewContentLoadingEventArgs;

                interface IWebViewDOMContentLoadedEventArgs;

                interface IWebViewDeferredPermissionRequest;

                interface IWebViewFactory4;

                interface IWebViewLongRunningScriptDetectedEventArgs;

                interface IWebViewNavigationCompletedEventArgs;

                interface IWebViewNavigationFailedEventArgs;

                interface IWebViewNavigationStartingEventArgs;

                interface IWebViewNewWindowRequestedEventArgs;

                interface IWebViewPermissionRequest;

                interface IWebViewPermissionRequestedEventArgs;

                interface IWebViewSeparateProcessLostEventArgs;

                interface IWebViewSettings;

                interface IWebViewStatics;

                interface IWebViewStatics2;

                interface IWebViewStatics3;

                interface IWebViewStatics4;

                interface IWebViewStatics5;

                interface IWebViewUnsupportedUriSchemeIdentifiedEventArgs;

                interface IWebViewUnviewableContentIdentifiedEventArgs;

                interface IWebViewUnviewableContentIdentifiedEventArgs2;

                interface IWebViewWebResourceRequestedEventArgs;

                interface IWrapGrid;

                interface IWrapGridStatics;

                runtimeclass AnchorRequestedEventArgs;

                runtimeclass AppBar;

                runtimeclass AppBarButton;

                runtimeclass AppBarElementContainer;

                runtimeclass AppBarSeparator;

                runtimeclass AppBarToggleButton;

                runtimeclass AutoSuggestBox;

                runtimeclass AutoSuggestBoxQuerySubmittedEventArgs;

                runtimeclass AutoSuggestBoxSuggestionChosenEventArgs;

                runtimeclass AutoSuggestBoxTextChangedEventArgs;

                runtimeclass BackClickEventArgs;

                runtimeclass BitmapIcon;

                runtimeclass BitmapIconSource;

                runtimeclass Border;

                runtimeclass Button;

                runtimeclass CalendarDatePicker;

                runtimeclass CalendarDatePickerDateChangedEventArgs;

                runtimeclass CalendarView;

                runtimeclass CalendarViewDayItem;

                runtimeclass CalendarViewDayItemChangingEventArgs;

                runtimeclass CalendarViewSelectedDatesChangedEventArgs;

                runtimeclass CandidateWindowBoundsChangedEventArgs;

                runtimeclass Canvas;

                runtimeclass CaptureElement;

                runtimeclass CheckBox;

                runtimeclass ChoosingGroupHeaderContainerEventArgs;

                runtimeclass ChoosingItemContainerEventArgs;

                runtimeclass CleanUpVirtualizedItemEventArgs;

                runtimeclass ColorChangedEventArgs;

                runtimeclass ColorPicker;

                runtimeclass ColumnDefinition;

                runtimeclass ColumnDefinitionCollection;

                runtimeclass ComboBox;

                runtimeclass ComboBoxItem;

                runtimeclass ComboBoxTextSubmittedEventArgs;

                runtimeclass CommandBar;

                runtimeclass CommandBarFlyout;

                runtimeclass CommandBarOverflowPresenter;

                runtimeclass ContainerContentChangingEventArgs;

                runtimeclass ContentControl;

                runtimeclass ContentDialog;

                runtimeclass ContentDialogButtonClickDeferral;

                runtimeclass ContentDialogButtonClickEventArgs;

                runtimeclass ContentDialogClosedEventArgs;

                runtimeclass ContentDialogClosingDeferral;

                runtimeclass ContentDialogClosingEventArgs;

                runtimeclass ContentDialogOpenedEventArgs;

                runtimeclass ContentLinkChangedEventArgs;

                runtimeclass ContentPresenter;

                runtimeclass ContextMenuEventArgs;

                runtimeclass Control;

                runtimeclass ControlTemplate;

                runtimeclass DataTemplateSelector;

                runtimeclass DatePickedEventArgs;

                runtimeclass DatePicker;

                runtimeclass DatePickerFlyout;

                runtimeclass DatePickerFlyoutItem;

                runtimeclass DatePickerFlyoutPresenter;

                runtimeclass DatePickerSelectedValueChangedEventArgs;

                runtimeclass DatePickerValueChangedEventArgs;

                runtimeclass DragItemsCompletedEventArgs;

                runtimeclass DragItemsStartingEventArgs;

                runtimeclass DropDownButton;

                runtimeclass DropDownButtonAutomationPeer;

                runtimeclass DynamicOverflowItemsChangingEventArgs;

                runtimeclass FlipView;

                runtimeclass FlipViewItem;

                runtimeclass Flyout;

                runtimeclass FlyoutPresenter;

                runtimeclass FocusDisengagedEventArgs;

                runtimeclass FocusEngagedEventArgs;

                runtimeclass FontIcon;

                runtimeclass FontIconSource;

                runtimeclass Frame;

                runtimeclass Grid;

                runtimeclass GridView;

                runtimeclass GridViewHeaderItem;

                runtimeclass GridViewItem;

                runtimeclass GroupItem;

                runtimeclass GroupStyle;

                runtimeclass GroupStyleSelector;

                runtimeclass HandwritingPanelClosedEventArgs;

                runtimeclass HandwritingPanelOpenedEventArgs;

                runtimeclass HandwritingView;

                runtimeclass Hub;

                runtimeclass HubSection;

                runtimeclass HubSectionCollection;

                runtimeclass HubSectionHeaderClickEventArgs;

                runtimeclass HyperlinkButton;

                runtimeclass IconElement;

                runtimeclass IconSource;

                runtimeclass IconSourceElement;

                runtimeclass Image;

                runtimeclass InkCanvas;

                runtimeclass InkToolbar;

                runtimeclass InkToolbarBallpointPenButton;

                runtimeclass InkToolbarCustomPen;

                runtimeclass InkToolbarCustomPenButton;

                runtimeclass InkToolbarCustomToggleButton;

                runtimeclass InkToolbarCustomToolButton;

                runtimeclass InkToolbarEraserButton;

                runtimeclass InkToolbarFlyoutItem;

                runtimeclass InkToolbarHighlighterButton;

                runtimeclass InkToolbarIsStencilButtonCheckedChangedEventArgs;

                runtimeclass InkToolbarMenuButton;

                runtimeclass InkToolbarPenButton;

                runtimeclass InkToolbarPenConfigurationControl;

                runtimeclass InkToolbarPencilButton;

                runtimeclass InkToolbarRulerButton;

                runtimeclass InkToolbarStencilButton;

                runtimeclass InkToolbarToggleButton;

                runtimeclass InkToolbarToolButton;

                runtimeclass IsTextTrimmedChangedEventArgs;

                runtimeclass ItemClickEventArgs;

                runtimeclass ItemCollection;

                runtimeclass ItemContainerGenerator;

                runtimeclass ItemsControl;

                runtimeclass ItemsPanelTemplate;

                runtimeclass ItemsPickedEventArgs;

                runtimeclass ItemsPresenter;

                runtimeclass ItemsStackPanel;

                runtimeclass ItemsWrapGrid;

                runtimeclass ListBox;

                runtimeclass ListBoxItem;

                runtimeclass ListPickerFlyout;

                runtimeclass ListPickerFlyoutPresenter;

                runtimeclass ListView;

                runtimeclass ListViewBase;

                runtimeclass ListViewBaseHeaderItem;

                runtimeclass ListViewHeaderItem;

                runtimeclass ListViewItem;

                runtimeclass ListViewPersistenceHelper;

                runtimeclass MediaElement;

                runtimeclass MediaPlayerElement;

                runtimeclass MediaPlayerPresenter;

                runtimeclass MediaTransportControls;

                runtimeclass MediaTransportControlsHelper;

                runtimeclass MenuBar;

                runtimeclass MenuBarItem;

                runtimeclass MenuBarItemFlyout;

                runtimeclass MenuFlyout;

                runtimeclass MenuFlyoutItem;

                runtimeclass MenuFlyoutItemBase;

                runtimeclass MenuFlyoutPresenter;

                runtimeclass MenuFlyoutSeparator;

                runtimeclass MenuFlyoutSubItem;

                runtimeclass NavigationView;

                runtimeclass NavigationViewBackRequestedEventArgs;

                runtimeclass NavigationViewDisplayModeChangedEventArgs;

                runtimeclass NavigationViewItem;

                runtimeclass NavigationViewItemBase;

                runtimeclass NavigationViewItemHeader;

                runtimeclass NavigationViewItemInvokedEventArgs;

                runtimeclass NavigationViewItemSeparator;

                runtimeclass NavigationViewList;

                runtimeclass NavigationViewPaneClosingEventArgs;

                runtimeclass NavigationViewSelectionChangedEventArgs;

                runtimeclass NavigationViewTemplateSettings;

                runtimeclass NotifyEventArgs;

                runtimeclass Page;

                runtimeclass Panel;

                runtimeclass ParallaxView;

                runtimeclass PasswordBox;

                runtimeclass PasswordBoxPasswordChangingEventArgs;

                runtimeclass PathIcon;

                runtimeclass PathIconSource;

                runtimeclass PersonPicture;

                runtimeclass PickerConfirmedEventArgs;

                runtimeclass PickerFlyout;

                runtimeclass PickerFlyoutPresenter;

                runtimeclass Pivot;

                runtimeclass PivotItem;

                runtimeclass PivotItemEventArgs;

                runtimeclass ProgressBar;

                runtimeclass ProgressRing;

                runtimeclass RadioButton;

                runtimeclass RatingControl;

                runtimeclass RatingItemFontInfo;

                runtimeclass RatingItemImageInfo;

                runtimeclass RatingItemInfo;

                runtimeclass RefreshContainer;

                runtimeclass RefreshInteractionRatioChangedEventArgs;

                runtimeclass RefreshRequestedEventArgs;

                runtimeclass RefreshStateChangedEventArgs;

                runtimeclass RefreshVisualizer;

                runtimeclass RelativePanel;

                runtimeclass RichEditBox;

                runtimeclass RichEditBoxSelectionChangingEventArgs;

                runtimeclass RichEditBoxTextChangingEventArgs;

                runtimeclass RichTextBlock;

                runtimeclass RichTextBlockOverflow;

                runtimeclass RowDefinition;

                runtimeclass RowDefinitionCollection;

                runtimeclass ScrollContentPresenter;

                runtimeclass ScrollViewer;

                runtimeclass ScrollViewerView;

                runtimeclass ScrollViewerViewChangedEventArgs;

                runtimeclass ScrollViewerViewChangingEventArgs;

                runtimeclass SearchBox;

                runtimeclass SearchBoxQueryChangedEventArgs;

                runtimeclass SearchBoxQuerySubmittedEventArgs;

                runtimeclass SearchBoxResultSuggestionChosenEventArgs;

                runtimeclass SearchBoxSuggestionsRequestedEventArgs;

                runtimeclass SectionsInViewChangedEventArgs;

                runtimeclass SelectionChangedEventArgs;

                runtimeclass SemanticZoom;

                runtimeclass SemanticZoomLocation;

                runtimeclass SemanticZoomViewChangedEventArgs;

                runtimeclass SettingsFlyout;

                runtimeclass Slider;

                runtimeclass SplitButton;

                runtimeclass SplitButtonAutomationPeer;

                runtimeclass SplitButtonClickEventArgs;

                runtimeclass SplitView;

                runtimeclass SplitViewPaneClosingEventArgs;

                runtimeclass StackPanel;

                runtimeclass StyleSelector;

                runtimeclass SwapChainBackgroundPanel;

                runtimeclass SwapChainPanel;

                runtimeclass SwipeControl;

                runtimeclass SwipeItem;

                runtimeclass SwipeItemInvokedEventArgs;

                runtimeclass SwipeItems;

                runtimeclass SymbolIcon;

                runtimeclass SymbolIconSource;

                runtimeclass TextBlock;

                runtimeclass TextBox;

                runtimeclass TextBoxBeforeTextChangingEventArgs;

                runtimeclass TextBoxSelectionChangingEventArgs;

                runtimeclass TextBoxTextChangingEventArgs;

                runtimeclass TextChangedEventArgs;

                runtimeclass TextCommandBarFlyout;

                runtimeclass TextCompositionChangedEventArgs;

                runtimeclass TextCompositionEndedEventArgs;

                runtimeclass TextCompositionStartedEventArgs;

                runtimeclass TextControlCopyingToClipboardEventArgs;

                runtimeclass TextControlCuttingToClipboardEventArgs;

                runtimeclass TextControlPasteEventArgs;

                runtimeclass TimePickedEventArgs;

                runtimeclass TimePicker;

                runtimeclass TimePickerFlyout;

                runtimeclass TimePickerFlyoutPresenter;

                runtimeclass TimePickerSelectedValueChangedEventArgs;

                runtimeclass TimePickerValueChangedEventArgs;

                runtimeclass ToggleMenuFlyoutItem;

                runtimeclass ToggleSplitButton;

                runtimeclass ToggleSplitButtonAutomationPeer;

                runtimeclass ToggleSplitButtonIsCheckedChangedEventArgs;

                runtimeclass ToggleSwitch;

                runtimeclass ToolTip;

                runtimeclass ToolTipService;

                runtimeclass TreeView;

                runtimeclass TreeViewCollapsedEventArgs;

                runtimeclass TreeViewDragItemsCompletedEventArgs;

                runtimeclass TreeViewDragItemsStartingEventArgs;

                runtimeclass TreeViewExpandingEventArgs;

                runtimeclass TreeViewItem;

                runtimeclass TreeViewItemInvokedEventArgs;

                runtimeclass TreeViewItemTemplateSettings;

                runtimeclass TreeViewList;

                runtimeclass TreeViewNode;

                runtimeclass TwoPaneView;

                runtimeclass UIElementCollection;

                runtimeclass UserControl;

                runtimeclass VariableSizedWrapGrid;

                runtimeclass Viewbox;

                runtimeclass VirtualizingPanel;

                runtimeclass VirtualizingStackPanel;

                runtimeclass WebView;

                runtimeclass WebViewBrush;

                runtimeclass WebViewContentLoadingEventArgs;

                runtimeclass WebViewDOMContentLoadedEventArgs;

                runtimeclass WebViewDeferredPermissionRequest;

                runtimeclass WebViewLongRunningScriptDetectedEventArgs;

                runtimeclass WebViewNavigationCompletedEventArgs;

                runtimeclass WebViewNavigationFailedEventArgs;

                runtimeclass WebViewNavigationStartingEventArgs;

                runtimeclass WebViewNewWindowRequestedEventArgs;

                runtimeclass WebViewPermissionRequest;

                runtimeclass WebViewPermissionRequestedEventArgs;

                runtimeclass WebViewSeparateProcessLostEventArgs;

                runtimeclass WebViewSettings;

                runtimeclass WebViewUnsupportedUriSchemeIdentifiedEventArgs;

                runtimeclass WebViewUnviewableContentIdentifiedEventArgs;

                runtimeclass WebViewWebResourceRequestedEventArgs;

                runtimeclass WrapGrid;
            }
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.ColumnDefinition*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.GroupStyle*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.HubSection*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.ICommandBarElement*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.MenuBarItem*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.MenuFlyoutItemBase*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.RowDefinition*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.SwipeItem*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.TreeViewNode*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.WebViewDeferredPermissionRequest*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.ColumnDefinition*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.GroupStyle*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.HubSection*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.ICommandBarElement*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.MenuBarItem*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.MenuFlyoutItemBase*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.RowDefinition*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.SwipeItem*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.TreeViewNode*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.WebViewDeferredPermissionRequest*>;

                    interface Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.Controls.GroupStyle*>;

                    interface Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.Controls.ICommandBarElement*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.ColumnDefinition*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.GroupStyle*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.HubSection*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.ICommandBarElement*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.MenuBarItem*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.MenuFlyoutItemBase*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.RowDefinition*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.SwipeItem*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.TreeViewNode*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.WebViewDeferredPermissionRequest*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.ColumnDefinition*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.GroupStyle*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.HubSection*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.ICommandBarElement*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.MenuBarItem*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.MenuFlyoutItemBase*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.RowDefinition*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.SwipeItem*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.TreeViewNode*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.WebViewDeferredPermissionRequest*>;

                    interface Windows.Foundation.EventHandler<Windows.UI.Xaml.Controls.DatePickerValueChangedEventArgs*>;

                    interface Windows.Foundation.EventHandler<Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs*>;

                    interface Windows.Foundation.EventHandler<Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs*>;

                    interface Windows.Foundation.EventHandler<Windows.UI.Xaml.Controls.TimePickerValueChangedEventArgs*>;

                    interface Windows.Foundation.IAsyncOperation<Windows.UI.Xaml.Controls.ContentDialogResult>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.AutoSuggestBox*, Windows.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.AutoSuggestBox*, Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.AutoSuggestBox*, Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.CalendarDatePicker*, Windows.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.CalendarView*, Windows.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.CalendarView*, Windows.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ColorPicker*, Windows.UI.Xaml.Controls.ColorChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ComboBox*, Windows.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.CommandBar*, Windows.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ContentDialog*, Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ContentDialog*, Windows.UI.Xaml.Controls.ContentDialogClosedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ContentDialog*, Windows.UI.Xaml.Controls.ContentDialogClosingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ContentDialog*, Windows.UI.Xaml.Controls.ContentDialogOpenedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Control*, Windows.UI.Xaml.Controls.FocusDisengagedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Control*, Windows.UI.Xaml.Controls.FocusEngagedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.DatePicker*, Windows.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.DatePickerFlyout*, Windows.UI.Xaml.Controls.DatePickedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.HandwritingView*, Windows.UI.Xaml.Controls.HandwritingPanelClosedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.HandwritingView*, Windows.UI.Xaml.Controls.HandwritingPanelOpenedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.InkToolbar*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.InkToolbar*, Windows.UI.Xaml.Controls.InkToolbarIsStencilButtonCheckedChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.InkToolbarFlyoutItem*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListPickerFlyout*, Windows.UI.Xaml.Controls.ItemsPickedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase*, Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase*, Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase*, Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase*, Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.NavigationView*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.NavigationView*, Windows.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.NavigationView*, Windows.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.NavigationView*, Windows.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.NavigationView*, Windows.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.NavigationView*, Windows.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.PasswordBox*, Windows.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.PickerFlyout*, Windows.UI.Xaml.Controls.PickerConfirmedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Pivot*, Windows.UI.Xaml.Controls.PivotItemEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Primitives.ColorSpectrum*, Windows.UI.Xaml.Controls.ColorChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RatingControl*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RefreshContainer*, Windows.UI.Xaml.Controls.RefreshRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RefreshVisualizer*, Windows.UI.Xaml.Controls.RefreshRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RefreshVisualizer*, Windows.UI.Xaml.Controls.RefreshStateChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Controls.ContentLinkChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichTextBlock*, Windows.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichTextBlockOverflow*, Windows.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ScrollViewer*, Windows.UI.Xaml.Controls.AnchorRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SearchBox*, Windows.UI.Xaml.Controls.SearchBoxQueryChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SearchBox*, Windows.UI.Xaml.Controls.SearchBoxQuerySubmittedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SearchBox*, Windows.UI.Xaml.Controls.SearchBoxResultSuggestionChosenEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SearchBox*, Windows.UI.Xaml.Controls.SearchBoxSuggestionsRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SplitButton*, Windows.UI.Xaml.Controls.SplitButtonClickEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SplitView*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SplitView*, Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SwapChainPanel*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SwipeItem*, Windows.UI.Xaml.Controls.SwipeItemInvokedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBlock*, Windows.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox*, Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox*, Windows.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox*, Windows.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox*, Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox*, Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox*, Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox*, Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox*, Windows.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox*, Windows.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TimePicker*, Windows.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TimePickerFlyout*, Windows.UI.Xaml.Controls.TimePickedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ToggleSplitButton*, Windows.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TreeView*, Windows.UI.Xaml.Controls.TreeViewCollapsedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TreeView*, Windows.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TreeView*, Windows.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TreeView*, Windows.UI.Xaml.Controls.TreeViewExpandingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TreeView*, Windows.UI.Xaml.Controls.TreeViewItemInvokedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TwoPaneView*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewContentLoadingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewDOMContentLoadedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewLongRunningScriptDetectedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewNavigationCompletedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewNavigationStartingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewNewWindowRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewPermissionRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewSeparateProcessLostEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewUnsupportedUriSchemeIdentifiedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewUnviewableContentIdentifiedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewWebResourceRequestedEventArgs*>;
                }
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum AppBarClosedDisplayMode
                {
                    Compact = 0,
                    Minimal = 1,
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                    Hidden  = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum AutoSuggestionBoxTextChangeReason
                {
                    UserInput          = 0,
                    ProgrammaticChange = 1,
                    SuggestionChosen   = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                enum BackgroundSizing
                {
                    InnerBorderEdge = 0,
                    OuterBorderEdge = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum CalendarViewDisplayMode
                {
                    Month  = 0,
                    Year   = 1,
                    Decade = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum CalendarViewSelectionMode
                {
                    None     = 0,
                    Single   = 1,
                    Multiple = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum CandidateWindowAlignment
                {
                    Default    = 0,
                    BottomEdge = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                enum CharacterCasing
                {
                    Normal = 0,
                    Lower  = 1,
                    Upper  = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum ClickMode
                {
                    Release = 0,
                    Press   = 1,
                    Hover   = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                enum ColorPickerHsvChannel
                {
                    Hue        = 0,
                    Saturation = 1,
                    Value      = 2,
                    Alpha      = 3
                };

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                enum ColorSpectrumComponents
                {
                    HueValue        = 0,
                    ValueHue        = 1,
                    HueSaturation   = 2,
                    SaturationHue   = 3,
                    SaturationValue = 4,
                    ValueSaturation = 5
                };

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                enum ColorSpectrumShape
                {
                    Box  = 0,
                    Ring = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                enum ComboBoxSelectionChangedTrigger
                {
                    Committed = 0,
                    Always    = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                enum CommandBarDefaultLabelPosition
                {
                    Bottom    = 0,
                    Right     = 1,
                    Collapsed = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                enum CommandBarDynamicOverflowAction
                {
                    AddingToOverflow     = 0,
                    RemovingFromOverflow = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                enum CommandBarLabelPosition
                {
                    Default   = 0,
                    Collapsed = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                enum CommandBarOverflowButtonVisibility
                {
                    Auto      = 0,
                    Visible   = 1,
                    Collapsed = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                enum ContentDialogButton
                {
                    None      = 0,
                    Primary   = 1,
                    Secondary = 2,
                    Close     = 3
                };

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                enum ContentDialogPlacement
                {
                    Popup   = 0,
                    InPlace = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum ContentDialogResult
                {
                    None      = 0,
                    Primary   = 1,
                    Secondary = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                enum ContentLinkChangeKind
                {
                    Inserted = 0,
                    Removed  = 1,
                    Edited   = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [flags]
                enum DisabledFormattingAccelerators
                {
                    None      = 0x0,
                    Bold      = 0x1,
                    Italic    = 0x2,
                    Underline = 0x4,
                    All       = 0xFFFFFFFF
                };

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                enum HandwritingPanelPlacementAlignment
                {
                    Auto        = 0,
                    TopLeft     = 1,
                    TopRight    = 2,
                    BottomLeft  = 3,
                    BottomRight = 4
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum IncrementalLoadingTrigger
                {
                    None = 0,
                    Edge = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                enum InkToolbarButtonFlyoutPlacement
                {
                    Auto   = 0,
                    Top    = 1,
                    Bottom = 2,
                    Left   = 3,
                    Right  = 4
                };

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                enum InkToolbarFlyoutItemKind
                {
                    Simple     = 0,
                    Radio      = 1,
                    Check      = 2,
                    RadioCheck = 3
                };

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                enum InkToolbarInitialControls
                {
                    All           = 0,
                    None          = 1,
                    PensOnly      = 2,
                    AllExceptPens = 3
                };

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                enum InkToolbarMenuKind
                {
                    Stencil = 0
                };

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                enum InkToolbarStencilKind
                {
                    Ruler      = 0,
                    Protractor = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                enum InkToolbarToggle
                {
                    Ruler  = 0,
                    Custom = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                enum InkToolbarTool
                {
                    BallpointPen = 0,
                    Pencil       = 1,
                    Highlighter  = 2,
                    Eraser       = 3,
                    CustomPen    = 4,
                    CustomTool   = 5
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum ItemsUpdatingScrollMode
                {
                    KeepItemsInView    = 0,
                    KeepScrollOffset   = 1,
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                    KeepLastItemInView = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                enum LightDismissOverlayMode
                {
                    Auto = 0,
                    On   = 1,
                    Off  = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum ListPickerFlyoutSelectionMode
                {
                    Single   = 0,
                    Multiple = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum ListViewReorderMode
                {
                    Disabled = 0,
                    Enabled  = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum ListViewSelectionMode
                {
                    None     = 0,
                    Single   = 1,
                    Multiple = 2,
                    Extended = 3
                };

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                enum NavigationViewBackButtonVisible
                {
                    Collapsed = 0,
                    Visible   = 1,
                    Auto      = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                enum NavigationViewDisplayMode
                {
                    Minimal  = 0,
                    Compact  = 1,
                    Expanded = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                enum NavigationViewOverflowLabelMode
                {
                    MoreLabel = 0,
                    NoLabel   = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                enum NavigationViewPaneDisplayMode
                {
                    Auto        = 0,
                    Left        = 1,
                    Top         = 2,
                    LeftCompact = 3,
                    LeftMinimal = 4
                };

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                enum NavigationViewSelectionFollowsFocus
                {
                    Disabled = 0,
                    Enabled  = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                enum NavigationViewShoulderNavigationEnabled
                {
                    WhenSelectionFollowsFocus = 0,
                    Always                    = 1,
                    Never                     = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum Orientation
                {
                    Vertical   = 0,
                    Horizontal = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum PanelScrollingDirection
                {
                    None     = 0,
                    Forward  = 1,
                    Backward = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                enum ParallaxSourceOffsetKind
                {
                    Absolute = 0,
                    Relative = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum PasswordRevealMode
                {
                    Peek    = 0,
                    Hidden  = 1,
                    Visible = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                enum PivotHeaderFocusVisualPlacement
                {
                    ItemHeaders        = 0,
                    SelectedItemHeader = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum PivotSlideInAnimationGroup
                {
                    Default    = 0,
                    GroupOne   = 1,
                    GroupTwo   = 2,
                    GroupThree = 3
                };

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                enum RefreshPullDirection
                {
                    LeftToRight = 0,
                    TopToBottom = 1,
                    RightToLeft = 2,
                    BottomToTop = 3
                };

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                enum RefreshVisualizerOrientation
                {
                    Auto                             = 0,
                    Normal                           = 1,
                    Rotate90DegreesCounterclockwise  = 2,
                    Rotate270DegreesCounterclockwise = 3
                };

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                enum RefreshVisualizerState
                {
                    Idle        = 0,
                    Peeking     = 1,
                    Interacting = 2,
                    Pending     = 3,
                    Refreshing  = 4
                };

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                enum RequiresPointer
                {
                    Never       = 0,
                    WhenEngaged = 1,
                    WhenFocused = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 2.0)]
                enum RichEditClipboardFormat
                {
                    AllFormats = 0,
                    PlainText  = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum ScrollBarVisibility
                {
                    Disabled = 0,
                    Auto     = 1,
                    Hidden   = 2,
                    Visible  = 3
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum ScrollIntoViewAlignment
                {
                    Default = 0,
                    Leading = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum ScrollMode
                {
                    Disabled = 0,
                    Enabled  = 1,
                    Auto     = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum SelectionMode
                {
                    Single   = 0,
                    Multiple = 1,
                    Extended = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum SnapPointsType
                {
                    None            = 0,
                    Optional        = 1,
                    Mandatory       = 2,
                    OptionalSingle  = 3,
                    MandatorySingle = 4
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum SplitViewDisplayMode
                {
                    Overlay        = 0,
                    Inline         = 1,
                    CompactOverlay = 2,
                    CompactInline  = 3
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum SplitViewPanePlacement
                {
                    Left  = 0,
                    Right = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum StretchDirection
                {
                    UpOnly   = 0,
                    DownOnly = 1,
                    Both     = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                enum SwipeBehaviorOnInvoked
                {
                    Auto       = 0,
                    Close      = 1,
                    RemainOpen = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                enum SwipeMode
                {
                    Reveal  = 0,
                    Execute = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum Symbol
                {
                    Previous               = 57600,
                    Next                   = 57601,
                    Play                   = 57602,
                    Pause                  = 57603,
                    Edit                   = 57604,
                    Save                   = 57605,
                    Clear                  = 57606,
                    Delete                 = 57607,
                    Remove                 = 57608,
                    Add                    = 57609,
                    Cancel                 = 57610,
                    Accept                 = 57611,
                    More                   = 57612,
                    Redo                   = 57613,
                    Undo                   = 57614,
                    Home                   = 57615,
                    Up                     = 57616,
                    Forward                = 57617,
                    Back                   = 57618,
                    Favorite               = 57619,
                    Camera                 = 57620,
                    Setting                = 57621,
                    Video                  = 57622,
                    Sync                   = 57623,
                    Download               = 57624,
                    Mail                   = 57625,
                    Find                   = 57626,
                    Help                   = 57627,
                    Upload                 = 57628,
                    Emoji                  = 57629,
                    TwoPage                = 57630,
                    LeaveChat              = 57631,
                    MailForward            = 57632,
                    Clock                  = 57633,
                    Send                   = 57634,
                    Crop                   = 57635,
                    RotateCamera           = 57636,
                    People                 = 57637,
                    OpenPane               = 57638,
                    ClosePane              = 57639,
                    World                  = 57640,
                    Flag                   = 57641,
                    PreviewLink            = 57642,
                    Globe                  = 57643,
                    Trim                   = 57644,
                    AttachCamera           = 57645,
                    ZoomIn                 = 57646,
                    Bookmarks              = 57647,
                    Document               = 57648,
                    ProtectedDocument      = 57649,
                    Page                   = 57650,
                    Bullets                = 57651,
                    Comment                = 57652,
                    MailFilled             = 57653,
                    ContactInfo            = 57654,
                    HangUp                 = 57655,
                    ViewAll                = 57656,
                    MapPin                 = 57657,
                    Phone                  = 57658,
                    VideoChat              = 57659,
                    Switch                 = 57660,
                    Contact                = 57661,
                    Rename                 = 57662,
                    Pin                    = 57665,
                    MusicInfo              = 57666,
                    Go                     = 57667,
                    Keyboard               = 57668,
                    DockLeft               = 57669,
                    DockRight              = 57670,
                    DockBottom             = 57671,
                    Remote                 = 57672,
                    Refresh                = 57673,
                    Rotate                 = 57674,
                    Shuffle                = 57675,
                    List                   = 57676,
                    Shop                   = 57677,
                    SelectAll              = 57678,
                    Orientation            = 57679,
                    Import                 = 57680,
                    ImportAll              = 57681,
                    BrowsePhotos           = 57685,
                    WebCam                 = 57686,
                    Pictures               = 57688,
                    SaveLocal              = 57689,
                    Caption                = 57690,
                    Stop                   = 57691,
                    ShowResults            = 57692,
                    Volume                 = 57693,
                    Repair                 = 57694,
                    Message                = 57695,
                    Page2                  = 57696,
                    CalendarDay            = 57697,
                    CalendarWeek           = 57698,
                    Calendar               = 57699,
                    Character              = 57700,
                    MailReplyAll           = 57701,
                    Read                   = 57702,
                    Link                   = 57703,
                    Account                = 57704,
                    ShowBcc                = 57705,
                    HideBcc                = 57706,
                    Cut                    = 57707,
                    Attach                 = 57708,
                    Paste                  = 57709,
                    Filter                 = 57710,
                    Copy                   = 57711,
                    Emoji2                 = 57712,
                    Important              = 57713,
                    MailReply              = 57714,
                    SlideShow              = 57715,
                    Sort                   = 57716,
                    Manage                 = 57720,
                    AllApps                = 57721,
                    DisconnectDrive        = 57722,
                    MapDrive               = 57723,
                    NewWindow              = 57724,
                    OpenWith               = 57725,
                    ContactPresence        = 57729,
                    Priority               = 57730,
                    GoToToday              = 57732,
                    Font                   = 57733,
                    FontColor              = 57734,
                    Contact2               = 57735,
                    Folder                 = 57736,
                    Audio                  = 57737,
                    Placeholder            = 57738,
                    View                   = 57739,
                    SetLockScreen          = 57740,
                    SetTile                = 57741,
                    ClosedCaption          = 57744,
                    StopSlideShow          = 57745,
                    Permissions            = 57746,
                    Highlight              = 57747,
                    DisableUpdates         = 57748,
                    UnFavorite             = 57749,
                    UnPin                  = 57750,
                    OpenLocal              = 57751,
                    Mute                   = 57752,
                    Italic                 = 57753,
                    Underline              = 57754,
                    Bold                   = 57755,
                    MoveToFolder           = 57756,
                    LikeDislike            = 57757,
                    Dislike                = 57758,
                    Like                   = 57759,
                    AlignRight             = 57760,
                    AlignCenter            = 57761,
                    AlignLeft              = 57762,
                    Zoom                   = 57763,
                    ZoomOut                = 57764,
                    OpenFile               = 57765,
                    OtherUser              = 57766,
                    Admin                  = 57767,
                    Street                 = 57795,
                    Map                    = 57796,
                    ClearSelection         = 57797,
                    FontDecrease           = 57798,
                    FontIncrease           = 57799,
                    FontSize               = 57800,
                    CellPhone              = 57801,
                    ReShare                = 57802,
                    Tag                    = 57803,
                    RepeatOne              = 57804,
                    RepeatAll              = 57805,
                    OutlineStar            = 57806,
                    SolidStar              = 57807,
                    Calculator             = 57808,
                    Directions             = 57809,
                    Target                 = 57810,
                    Library                = 57811,
                    PhoneBook              = 57812,
                    Memo                   = 57813,
                    Microphone             = 57814,
                    PostUpdate             = 57815,
                    BackToWindow           = 57816,
                    FullScreen             = 57817,
                    NewFolder              = 57818,
                    CalendarReply          = 57819,
                    UnSyncFolder           = 57821,
                    ReportHacked           = 57822,
                    SyncFolder             = 57823,
                    BlockContact           = 57824,
                    SwitchApps             = 57825,
                    AddFriend              = 57826,
                    TouchPointer           = 57827,
                    GoToStart              = 57828,
                    ZeroBars               = 57829,
                    OneBar                 = 57830,
                    TwoBars                = 57831,
                    ThreeBars              = 57832,
                    FourBars               = 57833,
                    Scan                   = 58004,
                    Preview                = 58005,
                    [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                    GlobalNavigationButton = 59136,
                    [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                    Share                  = 59181,
                    [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                    Print                  = 59209,
                    [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                    XboxOneConsole         = 59792
                };

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                enum TreeViewSelectionMode
                {
                    None     = 0,
                    Single   = 1,
                    Multiple = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 8.0)]
                enum TwoPaneViewMode
                {
                    SinglePane = 0,
                    Wide       = 1,
                    Tall       = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 8.0)]
                enum TwoPaneViewPriority
                {
                    Pane1 = 0,
                    Pane2 = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 8.0)]
                enum TwoPaneViewTallModeConfiguration
                {
                    SinglePane = 0,
                    TopBottom  = 1,
                    BottomTop  = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 8.0)]
                enum TwoPaneViewWideModeConfiguration
                {
                    SinglePane = 0,
                    LeftRight  = 1,
                    RightLeft  = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum VirtualizationMode
                {
                    Standard  = 0,
                    Recycling = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum WebViewExecutionMode
                {
                    SameThread      = 0,
                    SeparateThread  = 1,
                    [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                    SeparateProcess = 2
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum WebViewPermissionState
                {
                    Unknown = 0,
                    Defer   = 1,
                    Allow   = 2,
                    Deny    = 3
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum WebViewPermissionType
                {
                    Geolocation             = 0,
                    UnlimitedIndexedDBQuota = 1,
                    Media                   = 2,
                    [contract(Windows.Foundation.UniversalApiContract, 2.0)]
                    PointerLock             = 3,
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                    WebNotifications        = 4,
                    [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                    Screen                  = 5,
                    [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                    ImmersiveView           = 6
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                enum ZoomMode
                {
                    Disabled = 0,
                    Enabled  = 1
                };

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(FA9BC21F-9892-482E-ABF6-EB2D607D32DE)]
                delegate
                    HRESULT BackClickEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.BackClickEventArgs* e);

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(8D745891-4DE3-49CB-974B-083871A3AFE6)]
                delegate
                    HRESULT CalendarViewDayItemChangingEventHandler([in] Windows.UI.Xaml.Controls.CalendarView* sender, [in] Windows.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs* e);

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(CACAD0D6-0F0D-4870-884D-F2DEDF674288)]
                delegate
                    HRESULT CleanUpVirtualizedItemEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs* e);

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(DF945151-745C-4446-B2FC-216D765847A0)]
                delegate
                    HRESULT ContextMenuOpeningEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.ContextMenuEventArgs* e);

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(3AAEAB4C-14CB-4434-BECC-88A8585C2F89)]
                delegate
                    HRESULT DragItemsStartingEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.DragItemsStartingEventArgs* e);

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(AFE17B9B-9C63-4583-88E4-C59019B7F49D)]
                delegate
                    HRESULT HubSectionHeaderClickEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.HubSectionHeaderClickEventArgs* e);

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(3DF6D14E-E18A-4A75-9395-627C5F3CD489)]
                delegate
                    HRESULT ItemClickEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.ItemClickEventArgs* e);

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(6AF5DA76-7E8B-4A91-9A56-460CB47D523F)]
                delegate
                    HRESULT ListViewItemToKeyHandler([in] IInspectable* item, [out] [retval] HSTRING* result);

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(26FD5855-B530-4688-B9F0-428249178EF8)]
                delegate
                    HRESULT ListViewKeyToItemHandler([in] HSTRING key, [out] [retval] Windows.Foundation.IAsyncOperation<IInspectable*>** operation);

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(C2FDD1F8-7105-4A74-A109-DE29DFF56B98)]
                delegate
                    HRESULT NotifyEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.NotifyEventArgs* e);

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(6BECAA6A-63F8-47FF-B6AC-76E7DA247D67)]
                delegate
                    HRESULT SectionsInViewChangedEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.SectionsInViewChangedEventArgs* e);

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(E1A05352-5AA0-42CA-9CD9-068A14DB6E68)]
                delegate
                    HRESULT SelectionChangedEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.SelectionChangedEventArgs* e);

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(1FA9161D-5D73-44FB-81AC-D1C9384919D4)]
                delegate
                    HRESULT SemanticZoomViewChangedEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs* e);

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(8EB35B97-AD87-40E8-818B-77DB24759566)]
                delegate
                    HRESULT TextChangedEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.TextChangedEventArgs* e);

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(D56DB359-6F77-4296-AB9C-794939444365)]
                delegate
                    HRESULT TextControlPasteEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.TextControlPasteEventArgs* e);

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(A31EAFE1-41DC-47F8-AE22-9706C8F143D4)]
                delegate
                    HRESULT WebViewNavigationFailedEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.WebViewNavigationFailedEventArgs* e);

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AnchorRequestedEventArgs)]
                [uuid(5175F55D-4785-5A72-B462-EB11E9BDF897)]
                interface IAnchorRequestedEventArgs : IInspectable
                {
                    [propget] HRESULT Anchor([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Anchor([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT AnchorCandidates([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.UIElement*>** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBar)]
                [uuid(7B0FC253-86A5-4B43-9872-0B8A6234B74B)]
                interface IAppBar : IInspectable
                {
                    [propget] HRESULT IsOpen([out] [retval] boolean* value);
                    [propput] HRESULT IsOpen([in] boolean value);
                    [propget] HRESULT IsSticky([out] [retval] boolean* value);
                    [propput] HRESULT IsSticky([in] boolean value);
                    [eventadd] HRESULT Opened([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Opened([in] EventRegistrationToken token);
                    [eventadd] HRESULT Closed([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Closed([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBar)]
                [uuid(C3AB17B3-7AD7-4676-9910-7FE3F0E8E993)]
                interface IAppBar2 : IInspectable
                {
                    [propget] HRESULT ClosedDisplayMode([out] [retval] Windows.UI.Xaml.Controls.AppBarClosedDisplayMode* value);
                    [propput] HRESULT ClosedDisplayMode([in] Windows.UI.Xaml.Controls.AppBarClosedDisplayMode value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBar)]
                [uuid(982B001F-752E-4E7A-B055-54802C9EA749)]
                interface IAppBar3 : IInspectable
                {
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.AppBarTemplateSettings** value);
                    [eventadd] HRESULT Opening([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Opening([in] EventRegistrationToken token);
                    [eventadd] HRESULT Closing([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Closing([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBar)]
                [uuid(94EBC8CD-0A64-4DA3-BF43-F13100A46605)]
                interface IAppBar4 : IInspectable
                {
                    [propget] HRESULT LightDismissOverlayMode([out] [retval] Windows.UI.Xaml.Controls.LightDismissOverlayMode* value);
                    [propput] HRESULT LightDismissOverlayMode([in] Windows.UI.Xaml.Controls.LightDismissOverlayMode value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarButton)]
                [uuid(4459A451-69E8-440C-9896-4BB4F5F642D1)]
                interface IAppBarButton : IInspectable
                {
                    [propget] HRESULT Label([out] [retval] HSTRING* value);
                    [propput] HRESULT Label([in] HSTRING value);
                    [propget] HRESULT Icon([out] [retval] Windows.UI.Xaml.Controls.IconElement** value);
                    [propput] HRESULT Icon([in] Windows.UI.Xaml.Controls.IconElement* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarButton)]
                [uuid(0B282150-198B-4E84-8F1C-9F6A8BA267A7)]
                interface IAppBarButton3 : IInspectable
                {
                    [propget] HRESULT LabelPosition([out] [retval] Windows.UI.Xaml.Controls.CommandBarLabelPosition* value);
                    [propput] HRESULT LabelPosition([in] Windows.UI.Xaml.Controls.CommandBarLabelPosition value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarButton)]
                [uuid(958FCE6B-FD08-4414-8458-9D40866DC84E)]
                interface IAppBarButton4 : IInspectable
                {
                    [propget] HRESULT KeyboardAcceleratorTextOverride([out] [retval] HSTRING* value);
                    [propput] HRESULT KeyboardAcceleratorTextOverride([in] HSTRING value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarButton)]
                [uuid(4096FC7F-1AEC-4B0F-A031-CA8C4E06D2ED)]
                interface IAppBarButton5 : IInspectable
                {
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.AppBarButtonTemplateSettings** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarButton)]
                [uuid(BDBB1BB6-CB2E-4276-ABD6-7935130510E0)]
                interface IAppBarButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.AppBarButton** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarButton)]
                [uuid(7CCD13E6-5301-407F-874E-DC9160AA07AF)]
                interface IAppBarButtonStatics : IInspectable
                {
                    [propget] HRESULT LabelProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IconProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsCompactProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarButton)]
                [uuid(4D7BF314-2EDE-4328-8906-752A1F27CDFA)]
                interface IAppBarButtonStatics3 : IInspectable
                {
                    [propget] HRESULT LabelPositionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsInOverflowProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DynamicOverflowOrderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarButton)]
                [uuid(1C0AE26A-C755-4FE6-A3B6-0E3394E952C0)]
                interface IAppBarButtonStatics4 : IInspectable
                {
                    [propget] HRESULT KeyboardAcceleratorTextOverrideProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarElementContainer)]
                [uuid(1D5BA067-A990-5DAB-A9C3-E6BE56642A1A)]
                interface IAppBarElementContainer : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarElementContainer)]
                [uuid(B506530E-8897-5D6F-A43E-F0586338D282)]
                interface IAppBarElementContainerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.AppBarElementContainer** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarElementContainer)]
                [uuid(EBBEF840-C745-5A6F-8671-9A41EB2196E7)]
                interface IAppBarElementContainerStatics : IInspectable
                {
                    [propget] HRESULT IsCompactProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsInOverflowProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DynamicOverflowOrderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBar)]
                [uuid(614708D1-8E65-43CB-92D7-8EEE17515F8D)]
                interface IAppBarFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.AppBar** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBar)]
                [uuid(F003E4E2-7B0F-4F4A-970D-AE8A0EAA9B70)]
                interface IAppBarOverrides : IInspectable
                {
                    HRESULT OnClosed([in] IInspectable* e);
                    HRESULT OnOpened([in] IInspectable* e);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBar)]
                [uuid(412BBBC8-51D0-4B49-AB62-A3DD6BDCB298)]
                interface IAppBarOverrides3 : IInspectable
                {
                    HRESULT OnClosing([in] IInspectable* e);
                    HRESULT OnOpening([in] IInspectable* e);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarSeparator)]
                [uuid(1B0795A1-1BC1-4D53-95EA-FB0A2CCCC905)]
                interface IAppBarSeparator : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarSeparator)]
                [uuid(05DA25CD-F407-48DE-8B50-FF87D1E2818F)]
                interface IAppBarSeparatorFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.AppBarSeparator** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarSeparator)]
                [uuid(37F23484-5B35-4663-A75D-F2D50CB9C619)]
                interface IAppBarSeparatorStatics : IInspectable
                {
                    [propget] HRESULT IsCompactProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarSeparator)]
                [uuid(36C753F9-7373-4E5E-9BA4-C3622A003C4E)]
                interface IAppBarSeparatorStatics3 : IInspectable
                {
                    [propget] HRESULT IsInOverflowProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DynamicOverflowOrderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBar)]
                [uuid(79BB7E8D-DCA9-4B5F-A448-37B13238ED76)]
                interface IAppBarStatics : IInspectable
                {
                    [propget] HRESULT IsOpenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsStickyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBar)]
                [uuid(222355E9-0384-49DE-8738-DFC9D409AC5D)]
                interface IAppBarStatics2 : IInspectable
                {
                    [propget] HRESULT ClosedDisplayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBar)]
                [uuid(BA02082E-1165-4451-94B3-EB3AC73E4196)]
                interface IAppBarStatics4 : IInspectable
                {
                    [propget] HRESULT LightDismissOverlayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarToggleButton)]
                [uuid(2E914438-FD53-4B8D-858B-3644269F8E4D)]
                interface IAppBarToggleButton : IInspectable
                {
                    [propget] HRESULT Label([out] [retval] HSTRING* value);
                    [propput] HRESULT Label([in] HSTRING value);
                    [propget] HRESULT Icon([out] [retval] Windows.UI.Xaml.Controls.IconElement** value);
                    [propput] HRESULT Icon([in] Windows.UI.Xaml.Controls.IconElement* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarToggleButton)]
                [uuid(EF9A85E5-16FF-4D72-B9E8-9B861EAF84A8)]
                interface IAppBarToggleButton3 : IInspectable
                {
                    [propget] HRESULT LabelPosition([out] [retval] Windows.UI.Xaml.Controls.CommandBarLabelPosition* value);
                    [propput] HRESULT LabelPosition([in] Windows.UI.Xaml.Controls.CommandBarLabelPosition value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarToggleButton)]
                [uuid(B86B736E-3EAF-4751-A897-00029F1F6ACA)]
                interface IAppBarToggleButton4 : IInspectable
                {
                    [propget] HRESULT KeyboardAcceleratorTextOverride([out] [retval] HSTRING* value);
                    [propput] HRESULT KeyboardAcceleratorTextOverride([in] HSTRING value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarToggleButton)]
                [uuid(9DCA3357-C130-4FB6-A1E2-D2B348FE43BE)]
                interface IAppBarToggleButton5 : IInspectable
                {
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.AppBarToggleButtonTemplateSettings** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarToggleButton)]
                [uuid(028AA7D4-8F54-45A6-9F90-13605656D793)]
                interface IAppBarToggleButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.AppBarToggleButton** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarToggleButton)]
                [uuid(FE5AAF96-7929-4DA1-AA67-CDDF73A3E4B5)]
                interface IAppBarToggleButtonStatics : IInspectable
                {
                    [propget] HRESULT LabelProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IconProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsCompactProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarToggleButton)]
                [uuid(BD4C65BF-2EDD-44D1-ACD5-35C00E2F21BC)]
                interface IAppBarToggleButtonStatics3 : IInspectable
                {
                    [propget] HRESULT LabelPositionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsInOverflowProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DynamicOverflowOrderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBarToggleButton)]
                [uuid(A478B984-E916-4137-BDBD-95BD46FF3CE6)]
                interface IAppBarToggleButtonStatics4 : IInspectable
                {
                    [propget] HRESULT KeyboardAcceleratorTextOverrideProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AutoSuggestBox)]
                [uuid(103E9B13-3400-4A16-90B9-6912BF06974F)]
                interface IAutoSuggestBox : IInspectable
                {
                    [propget] HRESULT MaxSuggestionListHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT MaxSuggestionListHeight([in] DOUBLE value);
                    [propget] HRESULT IsSuggestionListOpen([out] [retval] boolean* value);
                    [propput] HRESULT IsSuggestionListOpen([in] boolean value);
                    [propget] HRESULT TextMemberPath([out] [retval] HSTRING* value);
                    [propput] HRESULT TextMemberPath([in] HSTRING value);
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                    [propget] HRESULT UpdateTextOnSelect([out] [retval] boolean* value);
                    [propput] HRESULT UpdateTextOnSelect([in] boolean value);
                    [propget] HRESULT PlaceholderText([out] [retval] HSTRING* value);
                    [propput] HRESULT PlaceholderText([in] HSTRING value);
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT AutoMaximizeSuggestionArea([out] [retval] boolean* value);
                    [propput] HRESULT AutoMaximizeSuggestionArea([in] boolean value);
                    [propget] HRESULT TextBoxStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT TextBoxStyle([in] Windows.UI.Xaml.Style* value);
                    [eventadd] HRESULT SuggestionChosen([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.AutoSuggestBox*, Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SuggestionChosen([in] EventRegistrationToken token);
                    [eventadd] HRESULT TextChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.AutoSuggestBox*, Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TextChanged([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AutoSuggestBox)]
                [uuid(AA87DDDE-E679-45B2-A7C9-9AEDC39DB886)]
                interface IAutoSuggestBox2 : IInspectable
                {
                    [propget] HRESULT QueryIcon([out] [retval] Windows.UI.Xaml.Controls.IconElement** value);
                    [propput] HRESULT QueryIcon([in] Windows.UI.Xaml.Controls.IconElement* value);
                    [eventadd] HRESULT QuerySubmitted([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.AutoSuggestBox*, Windows.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT QuerySubmitted([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AutoSuggestBox)]
                [uuid(9BBBFCEF-F32D-402E-9009-05BDBAF6336E)]
                interface IAutoSuggestBox3 : IInspectable
                {
                    [propget] HRESULT LightDismissOverlayMode([out] [retval] Windows.UI.Xaml.Controls.LightDismissOverlayMode* value);
                    [propput] HRESULT LightDismissOverlayMode([in] Windows.UI.Xaml.Controls.LightDismissOverlayMode value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AutoSuggestBox)]
                [uuid(C22DF897-A3E8-5051-B3CC-B5F0F5262950)]
                interface IAutoSuggestBox4 : IInspectable
                {
                    [propget] HRESULT Description([out] [retval] IInspectable** value);
                    [propput] HRESULT Description([in] IInspectable* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs)]
                [uuid(78DCB116-818A-4CB5-BCA7-382CE6DDC90D)]
                interface IAutoSuggestBoxQuerySubmittedEventArgs : IInspectable
                {
                    [propget] HRESULT QueryText([out] [retval] HSTRING* value);
                    [propget] HRESULT ChosenSuggestion([out] [retval] IInspectable** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AutoSuggestBox)]
                [uuid(EE22C7F4-C15D-4FF3-8A94-F50DFDFBE89A)]
                interface IAutoSuggestBoxStatics : IInspectable
                {
                    [propget] HRESULT MaxSuggestionListHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSuggestionListOpenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextMemberPathProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT UpdateTextOnSelectProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AutoMaximizeSuggestionAreaProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextBoxStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AutoSuggestBox)]
                [uuid(1CD297A8-8E6A-41EF-A95D-7157DC0C7106)]
                interface IAutoSuggestBoxStatics2 : IInspectable
                {
                    [propget] HRESULT QueryIconProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AutoSuggestBox)]
                [uuid(2CEAD2DD-C4D5-4AB2-8A13-AFDDCF067C86)]
                interface IAutoSuggestBoxStatics3 : IInspectable
                {
                    [propget] HRESULT LightDismissOverlayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AutoSuggestBox)]
                [uuid(D63EFAAE-B9DF-58D8-A00A-DBFE9FFDEDD0)]
                interface IAutoSuggestBoxStatics4 : IInspectable
                {
                    [propget] HRESULT DescriptionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs)]
                [uuid(396F7254-1ED5-4BC5-A060-655530BCA6BA)]
                interface IAutoSuggestBoxSuggestionChosenEventArgs : IInspectable
                {
                    [propget] HRESULT SelectedItem([out] [retval] IInspectable** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs)]
                [uuid(3A6F7254-1ED5-4BC5-A060-655530BCA6BA)]
                interface IAutoSuggestBoxTextChangedEventArgs : IInspectable
                {
                    [propget] HRESULT Reason([out] [retval] Windows.UI.Xaml.Controls.AutoSuggestionBoxTextChangeReason* value);
                    [propput] HRESULT Reason([in] Windows.UI.Xaml.Controls.AutoSuggestionBoxTextChangeReason value);
                    HRESULT CheckCurrent([out] [retval] boolean* result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs)]
                [uuid(FEF7772B-9F45-44DB-8C27-BDA3F933E7B5)]
                interface IAutoSuggestBoxTextChangedEventArgsStatics : IInspectable
                {
                    [propget] HRESULT ReasonProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.BackClickEventArgs)]
                [uuid(2AE6146C-477E-48C9-8830-2C464B7C7104)]
                interface IBackClickEventArgs : IInspectable
                {
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.BitmapIcon)]
                [uuid(E8FE17CB-35F7-40F3-A185-48B397B73E68)]
                interface IBitmapIcon : IInspectable
                {
                    [propget] HRESULT UriSource([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT UriSource([in] Windows.Foundation.Uri* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.BitmapIcon)]
                [uuid(0624A20A-9DD1-4201-BB20-42863DA15658)]
                interface IBitmapIcon2 : IInspectable
                {
                    [propget] HRESULT ShowAsMonochrome([out] [retval] boolean* value);
                    [propput] HRESULT ShowAsMonochrome([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.BitmapIcon)]
                [uuid(46D64B1D-7A49-4F66-9729-2848C788E402)]
                interface IBitmapIconFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.BitmapIcon** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.BitmapIconSource)]
                [uuid(C8E33DC7-D4AE-4A87-947F-AC4D0BCF5AF4)]
                interface IBitmapIconSource : IInspectable
                {
                    [propget] HRESULT UriSource([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT UriSource([in] Windows.Foundation.Uri* value);
                    [propget] HRESULT ShowAsMonochrome([out] [retval] boolean* value);
                    [propput] HRESULT ShowAsMonochrome([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.BitmapIconSource)]
                [uuid(6509E5C6-44B6-4CD1-86CD-C3189B12C43C)]
                interface IBitmapIconSourceFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.BitmapIconSource** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.BitmapIconSource)]
                [uuid(5A105887-E494-4D2B-8528-39472296133F)]
                interface IBitmapIconSourceStatics : IInspectable
                {
                    [propget] HRESULT UriSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ShowAsMonochromeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.BitmapIcon)]
                [uuid(E072D117-E4E7-4E0C-9470-53FF1CE84F67)]
                interface IBitmapIconStatics : IInspectable
                {
                    [propget] HRESULT UriSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.BitmapIcon)]
                [uuid(9745026B-B742-4A89-A5D7-A0E5FB809AF1)]
                interface IBitmapIconStatics2 : IInspectable
                {
                    [propget] HRESULT ShowAsMonochromeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Border)]
                [uuid(797C4539-45BD-4633-A044-BFB02EF5170F)]
                interface IBorder : IInspectable
                {
                    [propget] HRESULT BorderBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT BorderBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT BorderThickness([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT BorderThickness([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT Background([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Background([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT CornerRadius([out] [retval] Windows.UI.Xaml.CornerRadius* value);
                    [propput] HRESULT CornerRadius([in] Windows.UI.Xaml.CornerRadius value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT Child([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Child([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT ChildTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT ChildTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Border)]
                [uuid(A1EFBD9D-CB8B-56B5-878D-3A7F43BC9730)]
                interface IBorder2 : IInspectable
                {
                    [propget] HRESULT BackgroundSizing([out] [retval] Windows.UI.Xaml.Controls.BackgroundSizing* value);
                    [propput] HRESULT BackgroundSizing([in] Windows.UI.Xaml.Controls.BackgroundSizing value);
                    [propget] HRESULT BackgroundTransition([out] [retval] Windows.UI.Xaml.BrushTransition** value);
                    [propput] HRESULT BackgroundTransition([in] Windows.UI.Xaml.BrushTransition* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Border)]
                [uuid(B81D1639-E911-4FD7-A4C4-B9C7F008B7FC)]
                interface IBorderStatics : IInspectable
                {
                    [propget] HRESULT BorderBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BorderThicknessProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CornerRadiusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ChildTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Border)]
                [uuid(A26D4476-803F-5040-A0F3-E66DB3733166)]
                interface IBorderStatics2 : IInspectable
                {
                    [propget] HRESULT BackgroundSizingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Button)]
                [uuid(280335AE-5570-46C7-8E0B-602BE71229A2)]
                interface IButton : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Button)]
                [uuid(80A13C19-843A-451C-8CF5-44C701B0E216)]
                interface IButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.Button** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Button)]
                [uuid(90143898-A16C-4759-B2F0-A5F7E625169E)]
                interface IButtonStaticsWithFlyout : IInspectable
                {
                    [propget] HRESULT FlyoutProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Button)]
                [uuid(09108F87-DF6C-4180-9B3A-E60845825811)]
                interface IButtonWithFlyout : IInspectable
                {
                    [propget] HRESULT Flyout([out] [retval] Windows.UI.Xaml.Controls.Primitives.FlyoutBase** value);
                    [propput] HRESULT Flyout([in] Windows.UI.Xaml.Controls.Primitives.FlyoutBase* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CalendarDatePicker)]
                [uuid(63C9C16F-668C-4491-9444-D45D8BF4FA29)]
                interface ICalendarDatePicker : IInspectable
                {
                    [propget] HRESULT Date([out] [retval] Windows.Foundation.IReference<Windows.Foundation.DateTime>** value);
                    [propput] HRESULT Date([in] Windows.Foundation.IReference<Windows.Foundation.DateTime>* value);
                    [propget] HRESULT IsCalendarOpen([out] [retval] boolean* value);
                    [propput] HRESULT IsCalendarOpen([in] boolean value);
                    [propget] HRESULT DateFormat([out] [retval] HSTRING* value);
                    [propput] HRESULT DateFormat([in] HSTRING value);
                    [propget] HRESULT PlaceholderText([out] [retval] HSTRING* value);
                    [propput] HRESULT PlaceholderText([in] HSTRING value);
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT CalendarViewStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT CalendarViewStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT MinDate([out] [retval] Windows.Foundation.DateTime* value);
                    [propput] HRESULT MinDate([in] Windows.Foundation.DateTime value);
                    [propget] HRESULT MaxDate([out] [retval] Windows.Foundation.DateTime* value);
                    [propput] HRESULT MaxDate([in] Windows.Foundation.DateTime value);
                    [propget] HRESULT IsTodayHighlighted([out] [retval] boolean* value);
                    [propput] HRESULT IsTodayHighlighted([in] boolean value);
                    [propget] HRESULT DisplayMode([out] [retval] Windows.UI.Xaml.Controls.CalendarViewDisplayMode* value);
                    [propput] HRESULT DisplayMode([in] Windows.UI.Xaml.Controls.CalendarViewDisplayMode value);
                    [propget] HRESULT FirstDayOfWeek([out] [retval] Windows.Globalization.DayOfWeek* value);
                    [propput] HRESULT FirstDayOfWeek([in] Windows.Globalization.DayOfWeek value);
                    [propget] HRESULT DayOfWeekFormat([out] [retval] HSTRING* value);
                    [propput] HRESULT DayOfWeekFormat([in] HSTRING value);
                    [propget] HRESULT CalendarIdentifier([out] [retval] HSTRING* value);
                    [propput] HRESULT CalendarIdentifier([in] HSTRING value);
                    [propget] HRESULT IsOutOfScopeEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsOutOfScopeEnabled([in] boolean value);
                    [propget] HRESULT IsGroupLabelVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsGroupLabelVisible([in] boolean value);
                    [eventadd] HRESULT CalendarViewDayItemChanging([in] Windows.UI.Xaml.Controls.CalendarViewDayItemChangingEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CalendarViewDayItemChanging([in] EventRegistrationToken token);
                    [eventadd] HRESULT DateChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.CalendarDatePicker*, Windows.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DateChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT Opened([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Opened([in] EventRegistrationToken token);
                    [eventadd] HRESULT Closed([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Closed([in] EventRegistrationToken token);
                    HRESULT SetDisplayDate([in] Windows.Foundation.DateTime date);
                    HRESULT SetYearDecadeDisplayDimensions([in] INT32 columns, [in] INT32 rows);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CalendarDatePicker)]
                [uuid(B216C159-2411-4A60-A7AA-27416B49481E)]
                interface ICalendarDatePicker2 : IInspectable
                {
                    [propget] HRESULT LightDismissOverlayMode([out] [retval] Windows.UI.Xaml.Controls.LightDismissOverlayMode* value);
                    [propput] HRESULT LightDismissOverlayMode([in] Windows.UI.Xaml.Controls.LightDismissOverlayMode value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CalendarDatePicker)]
                [uuid(645856C0-DB7B-5E75-85E9-F623E3457EA6)]
                interface ICalendarDatePicker3 : IInspectable
                {
                    [propget] HRESULT Description([out] [retval] IInspectable** value);
                    [propput] HRESULT Description([in] IInspectable* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs)]
                [uuid(60D90DB2-5010-46BA-842D-A4152C6504E7)]
                interface ICalendarDatePickerDateChangedEventArgs : IInspectable
                {
                    [propget] HRESULT NewDate([out] [retval] Windows.Foundation.IReference<Windows.Foundation.DateTime>** value);
                    [propget] HRESULT OldDate([out] [retval] Windows.Foundation.IReference<Windows.Foundation.DateTime>** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CalendarDatePicker)]
                [uuid(107AAD5D-38BE-42AF-A957-FC86A5CF1E9A)]
                interface ICalendarDatePickerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.CalendarDatePicker** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CalendarDatePicker)]
                [uuid(39A3D291-AFAB-4B94-8395-BA7B874E3C8C)]
                interface ICalendarDatePickerStatics : IInspectable
                {
                    [propget] HRESULT DateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsCalendarOpenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DateFormatProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CalendarViewStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinDateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxDateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTodayHighlightedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DisplayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FirstDayOfWeekProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DayOfWeekFormatProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CalendarIdentifierProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsOutOfScopeEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsGroupLabelVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CalendarDatePicker)]
                [uuid(30206B58-A2F6-4A00-8D13-33C46B6B8E0D)]
                interface ICalendarDatePickerStatics2 : IInspectable
                {
                    [propget] HRESULT LightDismissOverlayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CalendarDatePicker)]
                [uuid(B188741D-CF69-568C-9707-BAAAEC2B64DB)]
                interface ICalendarDatePickerStatics3 : IInspectable
                {
                    [propget] HRESULT DescriptionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CalendarView)]
                [uuid(CD639203-DFB5-4312-AC07-C0391824607B)]
                interface ICalendarView : IInspectable
                {
                    [propget] HRESULT CalendarIdentifier([out] [retval] HSTRING* value);
                    [propput] HRESULT CalendarIdentifier([in] HSTRING value);
                    [propget] HRESULT DayOfWeekFormat([out] [retval] HSTRING* value);
                    [propput] HRESULT DayOfWeekFormat([in] HSTRING value);
                    [propget] HRESULT IsGroupLabelVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsGroupLabelVisible([in] boolean value);
                    [propget] HRESULT DisplayMode([out] [retval] Windows.UI.Xaml.Controls.CalendarViewDisplayMode* value);
                    [propput] HRESULT DisplayMode([in] Windows.UI.Xaml.Controls.CalendarViewDisplayMode value);
                    [propget] HRESULT FirstDayOfWeek([out] [retval] Windows.Globalization.DayOfWeek* value);
                    [propput] HRESULT FirstDayOfWeek([in] Windows.Globalization.DayOfWeek value);
                    [propget] HRESULT IsOutOfScopeEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsOutOfScopeEnabled([in] boolean value);
                    [propget] HRESULT IsTodayHighlighted([out] [retval] boolean* value);
                    [propput] HRESULT IsTodayHighlighted([in] boolean value);
                    [propget] HRESULT MaxDate([out] [retval] Windows.Foundation.DateTime* value);
                    [propput] HRESULT MaxDate([in] Windows.Foundation.DateTime value);
                    [propget] HRESULT MinDate([out] [retval] Windows.Foundation.DateTime* value);
                    [propput] HRESULT MinDate([in] Windows.Foundation.DateTime value);
                    [propget] HRESULT NumberOfWeeksInView([out] [retval] INT32* value);
                    [propput] HRESULT NumberOfWeeksInView([in] INT32 value);
                    [propget] HRESULT SelectedDates([out] [retval] Windows.Foundation.Collections.IVector<Windows.Foundation.DateTime>** value);
                    [propget] HRESULT SelectionMode([out] [retval] Windows.UI.Xaml.Controls.CalendarViewSelectionMode* value);
                    [propput] HRESULT SelectionMode([in] Windows.UI.Xaml.Controls.CalendarViewSelectionMode value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings** value);
                    [propget] HRESULT FocusBorderBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT FocusBorderBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT SelectedHoverBorderBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT SelectedHoverBorderBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT SelectedPressedBorderBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT SelectedPressedBorderBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT SelectedBorderBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT SelectedBorderBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT HoverBorderBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT HoverBorderBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT PressedBorderBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT PressedBorderBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT CalendarItemBorderBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT CalendarItemBorderBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT OutOfScopeBackground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT OutOfScopeBackground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT CalendarItemBackground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT CalendarItemBackground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT PressedForeground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT PressedForeground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT TodayForeground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT TodayForeground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT BlackoutForeground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT BlackoutForeground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT SelectedForeground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT SelectedForeground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT OutOfScopeForeground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT OutOfScopeForeground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT CalendarItemForeground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT CalendarItemForeground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT DayItemFontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT DayItemFontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT DayItemFontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT DayItemFontSize([in] DOUBLE value);
                    [propget] HRESULT DayItemFontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT DayItemFontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT DayItemFontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT DayItemFontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT TodayFontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT TodayFontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FirstOfMonthLabelFontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FirstOfMonthLabelFontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FirstOfMonthLabelFontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FirstOfMonthLabelFontSize([in] DOUBLE value);
                    [propget] HRESULT FirstOfMonthLabelFontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FirstOfMonthLabelFontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT FirstOfMonthLabelFontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FirstOfMonthLabelFontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT MonthYearItemFontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT MonthYearItemFontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT MonthYearItemFontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT MonthYearItemFontSize([in] DOUBLE value);
                    [propget] HRESULT MonthYearItemFontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT MonthYearItemFontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT MonthYearItemFontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT MonthYearItemFontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FirstOfYearDecadeLabelFontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FirstOfYearDecadeLabelFontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FirstOfYearDecadeLabelFontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FirstOfYearDecadeLabelFontSize([in] DOUBLE value);
                    [propget] HRESULT FirstOfYearDecadeLabelFontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FirstOfYearDecadeLabelFontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT FirstOfYearDecadeLabelFontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FirstOfYearDecadeLabelFontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT HorizontalDayItemAlignment([out] [retval] Windows.UI.Xaml.HorizontalAlignment* value);
                    [propput] HRESULT HorizontalDayItemAlignment([in] Windows.UI.Xaml.HorizontalAlignment value);
                    [propget] HRESULT VerticalDayItemAlignment([out] [retval] Windows.UI.Xaml.VerticalAlignment* value);
                    [propput] HRESULT VerticalDayItemAlignment([in] Windows.UI.Xaml.VerticalAlignment value);
                    [propget] HRESULT HorizontalFirstOfMonthLabelAlignment([out] [retval] Windows.UI.Xaml.HorizontalAlignment* value);
                    [propput] HRESULT HorizontalFirstOfMonthLabelAlignment([in] Windows.UI.Xaml.HorizontalAlignment value);
                    [propget] HRESULT VerticalFirstOfMonthLabelAlignment([out] [retval] Windows.UI.Xaml.VerticalAlignment* value);
                    [propput] HRESULT VerticalFirstOfMonthLabelAlignment([in] Windows.UI.Xaml.VerticalAlignment value);
                    [propget] HRESULT CalendarItemBorderThickness([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT CalendarItemBorderThickness([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT CalendarViewDayItemStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT CalendarViewDayItemStyle([in] Windows.UI.Xaml.Style* value);
                    [eventadd] HRESULT CalendarViewDayItemChanging([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.CalendarView*, Windows.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CalendarViewDayItemChanging([in] EventRegistrationToken token);
                    [eventadd] HRESULT SelectedDatesChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.CalendarView*, Windows.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectedDatesChanged([in] EventRegistrationToken token);
                    HRESULT SetDisplayDate([in] Windows.Foundation.DateTime date);
                    HRESULT SetYearDecadeDisplayDimensions([in] INT32 columns, [in] INT32 rows);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CalendarViewDayItem)]
                [uuid(0FDB2DC5-32C1-4B8F-BEFC-017B555B32D2)]
                interface ICalendarViewDayItem : IInspectable
                {
                    [propget] HRESULT IsBlackout([out] [retval] boolean* value);
                    [propput] HRESULT IsBlackout([in] boolean value);
                    [propget] HRESULT Date([out] [retval] Windows.Foundation.DateTime* value);
                    HRESULT SetDensityColors([in] Windows.Foundation.Collections.IIterable<Windows.UI.Color>* colors);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs)]
                [uuid(73146666-1FB1-44F9-B7AD-4DE859ECC565)]
                interface ICalendarViewDayItemChangingEventArgs : IInspectable
                {
                    [propget] HRESULT InRecycleQueue([out] [retval] boolean* value);
                    [propget] HRESULT Item([out] [retval] Windows.UI.Xaml.Controls.CalendarViewDayItem** value);
                    [propget] HRESULT Phase([out] [retval] UINT32* value);
                    [overload("RegisterUpdateCallback")] HRESULT RegisterUpdateCallback([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.CalendarView*, Windows.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs*>* callback);
                    [overload("RegisterUpdateCallback")] HRESULT RegisterUpdateCallbackWithPhase([in] UINT32 callbackPhase, [in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.CalendarView*, Windows.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs*>* callback);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CalendarViewDayItem)]
                [uuid(62112BDC-1D2F-4E44-9BAF-1665749521F2)]
                interface ICalendarViewDayItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.CalendarViewDayItem** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CalendarViewDayItem)]
                [uuid(C3A1DBBF-BD88-488B-B916-D00D69B1735A)]
                interface ICalendarViewDayItemStatics : IInspectable
                {
                    [propget] HRESULT IsBlackoutProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CalendarView)]
                [uuid(3D8F82E3-6CC6-423E-8D7C-7014D954DDEF)]
                interface ICalendarViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.CalendarView** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs)]
                [uuid(EE6069F6-13EF-4896-8FFC-5302B1B17539)]
                interface ICalendarViewSelectedDatesChangedEventArgs : IInspectable
                {
                    [propget] HRESULT AddedDates([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Foundation.DateTime>** value);
                    [propget] HRESULT RemovedDates([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Foundation.DateTime>** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CalendarView)]
                [uuid(7260F1C4-2F5D-41BD-99BB-4571B20B79A8)]
                interface ICalendarViewStatics : IInspectable
                {
                    [propget] HRESULT CalendarIdentifierProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DayOfWeekFormatProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsGroupLabelVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DisplayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FirstDayOfWeekProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsOutOfScopeEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTodayHighlightedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxDateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinDateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NumberOfWeeksInViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedDatesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectionModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TemplateSettingsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FocusBorderBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedHoverBorderBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedPressedBorderBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedBorderBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HoverBorderBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PressedBorderBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CalendarItemBorderBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OutOfScopeBackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CalendarItemBackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PressedForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TodayForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BlackoutForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OutOfScopeForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CalendarItemForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DayItemFontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DayItemFontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DayItemFontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DayItemFontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TodayFontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FirstOfMonthLabelFontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FirstOfMonthLabelFontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FirstOfMonthLabelFontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FirstOfMonthLabelFontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MonthYearItemFontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MonthYearItemFontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MonthYearItemFontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MonthYearItemFontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FirstOfYearDecadeLabelFontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FirstOfYearDecadeLabelFontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FirstOfYearDecadeLabelFontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FirstOfYearDecadeLabelFontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalDayItemAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalDayItemAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalFirstOfMonthLabelAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalFirstOfMonthLabelAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CalendarItemBorderThicknessProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CalendarViewDayItemStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs)]
                [uuid(8A946458-83B0-4C32-9450-5169A5838B55)]
                interface ICandidateWindowBoundsChangedEventArgs : IInspectable
                {
                    [propget] HRESULT Bounds([out] [retval] Windows.Foundation.Rect* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Canvas)]
                [uuid(79190E19-CD38-4823-AEAE-64A77132F519)]
                interface ICanvas : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Canvas)]
                [uuid(1B328BD1-B400-4A8E-943B-5AD2C45BE0DF)]
                interface ICanvasFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.Canvas** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Canvas)]
                [uuid(40CE5C46-2962-446F-AAFB-4CDC486939C9)]
                interface ICanvasStatics : IInspectable
                {
                    [propget] HRESULT LeftProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetLeft([in] Windows.UI.Xaml.UIElement* element, [out] [retval] DOUBLE* result);
                    HRESULT SetLeft([in] Windows.UI.Xaml.UIElement* element, [in] DOUBLE length);
                    [propget] HRESULT TopProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetTop([in] Windows.UI.Xaml.UIElement* element, [out] [retval] DOUBLE* result);
                    HRESULT SetTop([in] Windows.UI.Xaml.UIElement* element, [in] DOUBLE length);
                    [propget] HRESULT ZIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetZIndex([in] Windows.UI.Xaml.UIElement* element, [out] [retval] INT32* result);
                    HRESULT SetZIndex([in] Windows.UI.Xaml.UIElement* element, [in] INT32 value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CaptureElement)]
                [uuid(31A5C0E7-F307-4D4A-B626-E978863F5B74)]
                interface ICaptureElement : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Windows.Media.Capture.MediaCapture** value);
                    [propput] HRESULT Source([in] Windows.Media.Capture.MediaCapture* value);
                    [propget] HRESULT Stretch([out] [retval] Windows.UI.Xaml.Media.Stretch* value);
                    [propput] HRESULT Stretch([in] Windows.UI.Xaml.Media.Stretch value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CaptureElement)]
                [uuid(1E438DED-7DA6-409E-806E-305AE4AD9B3F)]
                interface ICaptureElementStatics : IInspectable
                {
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CheckBox)]
                [uuid(2294C894-7E2A-4B70-B088-8F5D814875BA)]
                interface ICheckBox : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CheckBox)]
                [uuid(4FA6AABB-3F4B-4301-BE07-1172EA61EEFB)]
                interface ICheckBoxFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.CheckBox** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs)]
                [uuid(67DB44D6-D201-4D72-BEAC-5E8E58AFD8C7)]
                interface IChoosingGroupHeaderContainerEventArgs : IInspectable
                {
                    [propget] HRESULT GroupHeaderContainer([out] [retval] Windows.UI.Xaml.Controls.ListViewBaseHeaderItem** value);
                    [propput] HRESULT GroupHeaderContainer([in] Windows.UI.Xaml.Controls.ListViewBaseHeaderItem* value);
                    [propget] HRESULT GroupIndex([out] [retval] INT32* value);
                    [propget] HRESULT Group([out] [retval] IInspectable** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs)]
                [uuid(9BB43BCE-AE67-4A80-8363-E3FE1B244F2C)]
                interface IChoosingItemContainerEventArgs : IInspectable
                {
                    [propget] HRESULT ItemIndex([out] [retval] INT32* value);
                    [propget] HRESULT Item([out] [retval] IInspectable** value);
                    [propget] HRESULT ItemContainer([out] [retval] Windows.UI.Xaml.Controls.Primitives.SelectorItem** value);
                    [propput] HRESULT ItemContainer([in] Windows.UI.Xaml.Controls.Primitives.SelectorItem* value);
                    [propget] HRESULT IsContainerPrepared([out] [retval] boolean* value);
                    [propput] HRESULT IsContainerPrepared([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs)]
                [uuid(EA05CCE9-937C-4120-8406-792185784338)]
                interface ICleanUpVirtualizedItemEventArgs : IInspectable
                {
                    [propget] HRESULT Value([out] [retval] IInspectable** value);
                    [propget] HRESULT UIElement([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ColorChangedEventArgs)]
                [uuid(34F7201F-AAD0-4C3A-B97B-2ABF36455539)]
                interface IColorChangedEventArgs : IInspectable
                {
                    [propget] HRESULT OldColor([out] [retval] Windows.UI.Color* value);
                    [propget] HRESULT NewColor([out] [retval] Windows.UI.Color* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ColorPicker)]
                [uuid(6232E371-5C64-43CB-8B35-7F82DDE36740)]
                interface IColorPicker : IInspectable
                {
                    [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT Color([in] Windows.UI.Color value);
                    [propget] HRESULT PreviousColor([out] [retval] Windows.Foundation.IReference<Windows.UI.Color>** value);
                    [propput] HRESULT PreviousColor([in] Windows.Foundation.IReference<Windows.UI.Color>* value);
                    [propget] HRESULT IsAlphaEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsAlphaEnabled([in] boolean value);
                    [propget] HRESULT IsColorSpectrumVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsColorSpectrumVisible([in] boolean value);
                    [propget] HRESULT IsColorPreviewVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsColorPreviewVisible([in] boolean value);
                    [propget] HRESULT IsColorSliderVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsColorSliderVisible([in] boolean value);
                    [propget] HRESULT IsAlphaSliderVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsAlphaSliderVisible([in] boolean value);
                    [propget] HRESULT IsMoreButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsMoreButtonVisible([in] boolean value);
                    [propget] HRESULT IsColorChannelTextInputVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsColorChannelTextInputVisible([in] boolean value);
                    [propget] HRESULT IsAlphaTextInputVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsAlphaTextInputVisible([in] boolean value);
                    [propget] HRESULT IsHexInputVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsHexInputVisible([in] boolean value);
                    [propget] HRESULT MinHue([out] [retval] INT32* value);
                    [propput] HRESULT MinHue([in] INT32 value);
                    [propget] HRESULT MaxHue([out] [retval] INT32* value);
                    [propput] HRESULT MaxHue([in] INT32 value);
                    [propget] HRESULT MinSaturation([out] [retval] INT32* value);
                    [propput] HRESULT MinSaturation([in] INT32 value);
                    [propget] HRESULT MaxSaturation([out] [retval] INT32* value);
                    [propput] HRESULT MaxSaturation([in] INT32 value);
                    [propget] HRESULT MinValue([out] [retval] INT32* value);
                    [propput] HRESULT MinValue([in] INT32 value);
                    [propget] HRESULT MaxValue([out] [retval] INT32* value);
                    [propput] HRESULT MaxValue([in] INT32 value);
                    [propget] HRESULT ColorSpectrumShape([out] [retval] Windows.UI.Xaml.Controls.ColorSpectrumShape* value);
                    [propput] HRESULT ColorSpectrumShape([in] Windows.UI.Xaml.Controls.ColorSpectrumShape value);
                    [propget] HRESULT ColorSpectrumComponents([out] [retval] Windows.UI.Xaml.Controls.ColorSpectrumComponents* value);
                    [propput] HRESULT ColorSpectrumComponents([in] Windows.UI.Xaml.Controls.ColorSpectrumComponents value);
                    [eventadd] HRESULT ColorChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ColorPicker*, Windows.UI.Xaml.Controls.ColorChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ColorChanged([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ColorPicker)]
                [uuid(ABAE07FF-AECF-481D-9204-201C3894CD1B)]
                interface IColorPickerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ColorPicker** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ColorPicker)]
                [uuid(67CA9BE7-1574-451A-B6DF-FE57D9D07B46)]
                interface IColorPickerStatics : IInspectable
                {
                    [propget] HRESULT ColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreviousColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsAlphaEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorSpectrumVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorPreviewVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorSliderVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsAlphaSliderVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsMoreButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorChannelTextInputVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsAlphaTextInputVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsHexInputVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinHueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxHueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinSaturationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxSaturationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ColorSpectrumShapeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ColorSpectrumComponentsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ColumnDefinition)]
                [uuid(F7F1B229-F024-467F-970A-7E705615DB7B)]
                interface IColumnDefinition : IInspectable
                {
                    [propget] HRESULT Width([out] [retval] Windows.UI.Xaml.GridLength* value);
                    [propput] HRESULT Width([in] Windows.UI.Xaml.GridLength value);
                    [propget] HRESULT MaxWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT MaxWidth([in] DOUBLE value);
                    [propget] HRESULT MinWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT MinWidth([in] DOUBLE value);
                    [propget] HRESULT ActualWidth([out] [retval] DOUBLE* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ColumnDefinition)]
                [uuid(06B0D728-D044-40C6-942E-AE60EAC74851)]
                interface IColumnDefinitionStatics : IInspectable
                {
                    [propget] HRESULT WidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(B9A8D05C-AC97-47F1-A5F4-3F9F4D4B116C)]
                interface IComboBox : IInspectable
                {
                    [propget] HRESULT IsDropDownOpen([out] [retval] boolean* value);
                    [propput] HRESULT IsDropDownOpen([in] boolean value);
                    [propget] HRESULT IsEditable([out] [retval] boolean* value);
                    [propget] HRESULT IsSelectionBoxHighlighted([out] [retval] boolean* value);
                    [propget] HRESULT MaxDropDownHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT MaxDropDownHeight([in] DOUBLE value);
                    [propget] HRESULT SelectionBoxItem([out] [retval] IInspectable** value);
                    [propget] HRESULT SelectionBoxItemTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings** value);
                    [eventadd] HRESULT DropDownClosed([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DropDownClosed([in] EventRegistrationToken token);
                    [eventadd] HRESULT DropDownOpened([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DropDownOpened([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(EA0CBF91-CA36-4FAD-972A-2E53A6718B9F)]
                interface IComboBox2 : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT PlaceholderText([out] [retval] HSTRING* value);
                    [propput] HRESULT PlaceholderText([in] HSTRING value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(52400A63-476C-4BB6-B781-019324D3FED9)]
                interface IComboBox3 : IInspectable
                {
                    [propget] HRESULT LightDismissOverlayMode([out] [retval] Windows.UI.Xaml.Controls.LightDismissOverlayMode* value);
                    [propput] HRESULT LightDismissOverlayMode([in] Windows.UI.Xaml.Controls.LightDismissOverlayMode value);
                    [propget] HRESULT IsTextSearchEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextSearchEnabled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(B7974F49-B05C-47F9-9AAF-D6F9187BE5FD)]
                interface IComboBox4 : IInspectable
                {
                    [propget] HRESULT SelectionChangedTrigger([out] [retval] Windows.UI.Xaml.Controls.ComboBoxSelectionChangedTrigger* value);
                    [propput] HRESULT SelectionChangedTrigger([in] Windows.UI.Xaml.Controls.ComboBoxSelectionChangedTrigger value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(AB79D646-800A-4A28-969B-34BB8FB458CF)]
                interface IComboBox5 : IInspectable
                {
                    [propget] HRESULT PlaceholderForeground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT PlaceholderForeground([in] Windows.UI.Xaml.Media.Brush* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(61AAD6A5-81FB-5F87-BAE3-369FBE2EA1F3)]
                interface IComboBox6 : IInspectable
                {
                    [propput] HRESULT IsEditable([in] boolean value);
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                    [propget] HRESULT TextBoxStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT TextBoxStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT Description([out] [retval] IInspectable** value);
                    [propput] HRESULT Description([in] IInspectable* value);
                    [eventadd] HRESULT TextSubmitted([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ComboBox*, Windows.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TextSubmitted([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(AC0D0444-A65B-4ABD-86DF-3016049EFEDC)]
                interface IComboBoxFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ComboBox** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBoxItem)]
                [uuid(993FD6D2-2AAE-4F3B-B44D-5648F4D06114)]
                interface IComboBoxItem : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBoxItem)]
                [uuid(8FFFE867-D94C-4E87-8FC4-6EBCD63C5AC2)]
                interface IComboBoxItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ComboBoxItem** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(4F016541-BCFE-4A22-8932-C914981C2240)]
                interface IComboBoxOverrides : IInspectable
                {
                    HRESULT OnDropDownClosed([in] IInspectable* e);
                    HRESULT OnDropDownOpened([in] IInspectable* e);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(3E14C9B1-D15B-4DC9-8110-CF3A117B96E7)]
                interface IComboBoxStatics : IInspectable
                {
                    [propget] HRESULT IsDropDownOpenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxDropDownHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(93988A11-402C-4B13-96D1-7220266B9220)]
                interface IComboBoxStatics2 : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(949E140F-CE7F-4E41-BDC5-D1D3388AD0A6)]
                interface IComboBoxStatics3 : IInspectable
                {
                    [propget] HRESULT LightDismissOverlayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTextSearchEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(D9F58358-F7B0-46CE-8061-AD83EC2F2DD4)]
                interface IComboBoxStatics4 : IInspectable
                {
                    [propget] HRESULT SelectionChangedTriggerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(B802CEF1-A264-444A-9A61-AA8867B7A63C)]
                interface IComboBoxStatics5 : IInspectable
                {
                    [propget] HRESULT PlaceholderForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(516C88E0-EC6B-54AC-8C57-5EC080EE05C8)]
                interface IComboBoxStatics6 : IInspectable
                {
                    [propget] HRESULT IsEditableProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextBoxStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DescriptionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs)]
                [uuid(CB698CBB-6879-558E-AF82-DF1D08F62AFA)]
                interface IComboBoxTextSubmittedEventArgs : IInspectable
                {
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CommandBar)]
                [uuid(98BC4280-4A3D-4CEE-BD07-22CE94C5AF76)]
                interface ICommandBar : IInspectable
                {
                    [propget] HRESULT PrimaryCommands([out] [retval] Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.Controls.ICommandBarElement*>** value);
                    [propget] HRESULT SecondaryCommands([out] [retval] Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.Controls.ICommandBarElement*>** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CommandBar)]
                [uuid(57662F58-5B32-475D-BE64-4CA36E7B97D4)]
                interface ICommandBar2 : IInspectable
                {
                    [propget] HRESULT CommandBarOverflowPresenterStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT CommandBarOverflowPresenterStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT CommandBarTemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CommandBar)]
                [uuid(40EBBC23-2A79-48B3-9A67-649B852D8589)]
                interface ICommandBar3 : IInspectable
                {
                    [propget] HRESULT DefaultLabelPosition([out] [retval] Windows.UI.Xaml.Controls.CommandBarDefaultLabelPosition* value);
                    [propput] HRESULT DefaultLabelPosition([in] Windows.UI.Xaml.Controls.CommandBarDefaultLabelPosition value);
                    [propget] HRESULT OverflowButtonVisibility([out] [retval] Windows.UI.Xaml.Controls.CommandBarOverflowButtonVisibility* value);
                    [propput] HRESULT OverflowButtonVisibility([in] Windows.UI.Xaml.Controls.CommandBarOverflowButtonVisibility value);
                    [propget] HRESULT IsDynamicOverflowEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsDynamicOverflowEnabled([in] boolean value);
                    [eventadd] HRESULT DynamicOverflowItemsChanging([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.CommandBar*, Windows.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DynamicOverflowItemsChanging([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(67918E1B-F2D5-44D1-8B84-92B87F80A350)]
                interface ICommandBarElement : IInspectable
                {
                    [propget] HRESULT IsCompact([out] [retval] boolean* value);
                    [propput] HRESULT IsCompact([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [uuid(A9BF1236-4402-4688-B987-9D2B9B7BF2BD)]
                interface ICommandBarElement2 : IInspectable
                {
                    [propget] HRESULT IsInOverflow([out] [retval] boolean* value);
                    [propget] HRESULT DynamicOverflowOrder([out] [retval] INT32* value);
                    [propput] HRESULT DynamicOverflowOrder([in] INT32 value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CommandBar)]
                [uuid(67BDEB44-20E1-4177-AD44-F617B374E8E8)]
                interface ICommandBarFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.CommandBar** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CommandBarFlyout)]
                [uuid(FECD2C4D-F16A-58CD-8ACA-DB0F046F25C3)]
                interface ICommandBarFlyout : IInspectable
                {
                    [propget] HRESULT PrimaryCommands([out] [retval] Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.Controls.ICommandBarElement*>** value);
                    [propget] HRESULT SecondaryCommands([out] [retval] Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.Controls.ICommandBarElement*>** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CommandBarFlyout)]
                [uuid(DD6441B3-6DF1-593D-B80C-DAF5C1DAEE41)]
                interface ICommandBarFlyoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.CommandBarFlyout** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CommandBarOverflowPresenter)]
                [uuid(6E7A9427-58EF-4366-A017-18C193D56B14)]
                interface ICommandBarOverflowPresenter : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CommandBarOverflowPresenter)]
                [uuid(8323F774-5AAA-4049-B78F-218C6A19C37E)]
                interface ICommandBarOverflowPresenterFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.CommandBarOverflowPresenter** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CommandBar)]
                [uuid(5BD981EA-E278-409C-B522-F946CA253B44)]
                interface ICommandBarStatics : IInspectable
                {
                    [propget] HRESULT PrimaryCommandsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SecondaryCommandsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CommandBar)]
                [uuid(3D9EC8E3-51A9-4E34-956C-7081D06F26F8)]
                interface ICommandBarStatics2 : IInspectable
                {
                    [propget] HRESULT CommandBarOverflowPresenterStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.CommandBar)]
                [uuid(B45A24A4-8AF1-4843-B319-E03FC45AB726)]
                interface ICommandBarStatics3 : IInspectable
                {
                    [propget] HRESULT DefaultLabelPositionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OverflowButtonVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsDynamicOverflowEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)]
                [uuid(07DEEAA7-018F-4DDA-B399-FD4E13A31BEA)]
                interface IContainerContentChangingEventArgs : IInspectable
                {
                    [propget] HRESULT ItemContainer([out] [retval] Windows.UI.Xaml.Controls.Primitives.SelectorItem** value);
                    [propget] HRESULT InRecycleQueue([out] [retval] boolean* value);
                    [propget] HRESULT ItemIndex([out] [retval] INT32* value);
                    [propget] HRESULT Item([out] [retval] IInspectable** value);
                    [propget] HRESULT Phase([out] [retval] UINT32* value);
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                    [overload("RegisterUpdateCallback")] HRESULT RegisterUpdateCallback([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase*, Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs*>* callback);
                    [overload("RegisterUpdateCallback")] HRESULT RegisterUpdateCallbackWithPhase([in] UINT32 callbackPhase, [in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase*, Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs*>* callback);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentControl)]
                [uuid(A26DD1DC-CD44-435C-BE94-01D6241C231C)]
                interface IContentControl : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] IInspectable** value);
                    [propput] HRESULT Content([in] IInspectable* value);
                    [propget] HRESULT ContentTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT ContentTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT ContentTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT ContentTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT ContentTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT ContentTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentControl)]
                [uuid(652C208C-8CCF-4399-BD3E-5A015AA1BC03)]
                interface IContentControl2 : IInspectable
                {
                    [propget] HRESULT ContentTemplateRoot([out] [retval] Windows.UI.Xaml.UIElement** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentControl)]
                [uuid(AB017B19-196E-4ED5-A27F-55C58FB1673F)]
                interface IContentControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ContentControl** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentControl)]
                [uuid(5F4C0B10-E38E-4B5D-BE1A-5ED04246A635)]
                interface IContentControlOverrides : IInspectable
                {
                    HRESULT OnContentChanged([in] IInspectable* oldContent, [in] IInspectable* newContent);
                    HRESULT OnContentTemplateChanged([in] Windows.UI.Xaml.DataTemplate* oldContentTemplate, [in] Windows.UI.Xaml.DataTemplate* newContentTemplate);
                    HRESULT OnContentTemplateSelectorChanged([in] Windows.UI.Xaml.Controls.DataTemplateSelector* oldContentTemplateSelector, [in] Windows.UI.Xaml.Controls.DataTemplateSelector* newContentTemplateSelector);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentControl)]
                [uuid(116982A4-5CF5-4C05-A53F-15E4876C85EC)]
                interface IContentControlStatics : IInspectable
                {
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTemplateSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentDialog)]
                [uuid(38DC4404-D24E-40D8-9415-349464C1AFDC)]
                interface IContentDialog : IInspectable
                {
                    [propget] HRESULT Title([out] [retval] IInspectable** value);
                    [propput] HRESULT Title([in] IInspectable* value);
                    [propget] HRESULT TitleTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT TitleTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT FullSizeDesired([out] [retval] boolean* value);
                    [propput] HRESULT FullSizeDesired([in] boolean value);
                    [propget] HRESULT PrimaryButtonText([out] [retval] HSTRING* value);
                    [propput] HRESULT PrimaryButtonText([in] HSTRING value);
                    [propget] HRESULT SecondaryButtonText([out] [retval] HSTRING* value);
                    [propput] HRESULT SecondaryButtonText([in] HSTRING value);
                    [propget] HRESULT PrimaryButtonCommand([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT PrimaryButtonCommand([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT SecondaryButtonCommand([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT SecondaryButtonCommand([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT PrimaryButtonCommandParameter([out] [retval] IInspectable** value);
                    [propput] HRESULT PrimaryButtonCommandParameter([in] IInspectable* value);
                    [propget] HRESULT SecondaryButtonCommandParameter([out] [retval] IInspectable** value);
                    [propput] HRESULT SecondaryButtonCommandParameter([in] IInspectable* value);
                    [propget] HRESULT IsPrimaryButtonEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsPrimaryButtonEnabled([in] boolean value);
                    [propget] HRESULT IsSecondaryButtonEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsSecondaryButtonEnabled([in] boolean value);
                    [eventadd] HRESULT Closing([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ContentDialog*, Windows.UI.Xaml.Controls.ContentDialogClosingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Closing([in] EventRegistrationToken token);
                    [eventadd] HRESULT Closed([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ContentDialog*, Windows.UI.Xaml.Controls.ContentDialogClosedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Closed([in] EventRegistrationToken token);
                    [eventadd] HRESULT Opened([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ContentDialog*, Windows.UI.Xaml.Controls.ContentDialogOpenedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Opened([in] EventRegistrationToken token);
                    [eventadd] HRESULT PrimaryButtonClick([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ContentDialog*, Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PrimaryButtonClick([in] EventRegistrationToken token);
                    [eventadd] HRESULT SecondaryButtonClick([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ContentDialog*, Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SecondaryButtonClick([in] EventRegistrationToken token);
                    HRESULT Hide();
                    [overload("ShowAsync")] HRESULT ShowAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.UI.Xaml.Controls.ContentDialogResult>** operation);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentDialog)]
                [uuid(2F93EB45-EE43-4303-9B38-3FE1A111ECBF)]
                interface IContentDialog2 : IInspectable
                {
                    [propget] HRESULT CloseButtonText([out] [retval] HSTRING* value);
                    [propput] HRESULT CloseButtonText([in] HSTRING value);
                    [propget] HRESULT CloseButtonCommand([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT CloseButtonCommand([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT CloseButtonCommandParameter([out] [retval] IInspectable** value);
                    [propput] HRESULT CloseButtonCommandParameter([in] IInspectable* value);
                    [propget] HRESULT PrimaryButtonStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT PrimaryButtonStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT SecondaryButtonStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT SecondaryButtonStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT CloseButtonStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT CloseButtonStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT DefaultButton([out] [retval] Windows.UI.Xaml.Controls.ContentDialogButton* value);
                    [propput] HRESULT DefaultButton([in] Windows.UI.Xaml.Controls.ContentDialogButton value);
                    [eventadd] HRESULT CloseButtonClick([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ContentDialog*, Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CloseButtonClick([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentDialog)]
                [uuid(9D9A089E-F954-4EDE-B07F-6B069A9C0180)]
                interface IContentDialog3 : IInspectable
                {
                    [overload("ShowAsync")] HRESULT ShowAsyncWithPlacement([in] Windows.UI.Xaml.Controls.ContentDialogPlacement placement, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.UI.Xaml.Controls.ContentDialogResult>** operation);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentDialogButtonClickDeferral)]
                [uuid(BD0D3637-19CE-4946-8E77-BD03FE8EBE03)]
                interface IContentDialogButtonClickDeferral : IInspectable
                {
                    HRESULT Complete();
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs)]
                [uuid(5F34C205-8AFA-4CF2-8CA0-264D73BED63D)]
                interface IContentDialogButtonClickEventArgs : IInspectable
                {
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                    HRESULT GetDeferral([out] [retval] Windows.UI.Xaml.Controls.ContentDialogButtonClickDeferral** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentDialogClosedEventArgs)]
                [uuid(905522EF-2CBA-4AF8-B666-CC36C22732FB)]
                interface IContentDialogClosedEventArgs : IInspectable
                {
                    [propget] HRESULT Result([out] [retval] Windows.UI.Xaml.Controls.ContentDialogResult* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentDialogClosingDeferral)]
                [uuid(215D4D11-7E30-4CB9-A710-5A4F9CCA8B42)]
                interface IContentDialogClosingDeferral : IInspectable
                {
                    HRESULT Complete();
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentDialogClosingEventArgs)]
                [uuid(DB3C1C34-3BBF-47D4-BE4F-C9EC115918B9)]
                interface IContentDialogClosingEventArgs : IInspectable
                {
                    [propget] HRESULT Result([out] [retval] Windows.UI.Xaml.Controls.ContentDialogResult* value);
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                    HRESULT GetDeferral([out] [retval] Windows.UI.Xaml.Controls.ContentDialogClosingDeferral** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentDialog)]
                [uuid(05557178-9D8E-4315-B37D-680C14012C35)]
                interface IContentDialogFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ContentDialog** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentDialogOpenedEventArgs)]
                [uuid(0966B315-5F59-4999-9E3E-374C0F174B04)]
                interface IContentDialogOpenedEventArgs : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentDialog)]
                [uuid(23AB47A6-508A-4F33-B786-F2FA96D869AF)]
                interface IContentDialogStatics : IInspectable
                {
                    [propget] HRESULT TitleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TitleTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FullSizeDesiredProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PrimaryButtonTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SecondaryButtonTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PrimaryButtonCommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SecondaryButtonCommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PrimaryButtonCommandParameterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SecondaryButtonCommandParameterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsPrimaryButtonEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSecondaryButtonEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentDialog)]
                [uuid(329825B2-8FB0-4125-BB07-E79A5A03819F)]
                interface IContentDialogStatics2 : IInspectable
                {
                    [propget] HRESULT CloseButtonTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CloseButtonCommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CloseButtonCommandParameterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PrimaryButtonStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SecondaryButtonStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CloseButtonStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DefaultButtonProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentLinkChangedEventArgs)]
                [uuid(64F3F1DE-89FB-4B77-8B9B-191B6D19290A)]
                interface IContentLinkChangedEventArgs : IInspectable
                {
                    [propget] HRESULT ChangeKind([out] [retval] Windows.UI.Xaml.Controls.ContentLinkChangeKind* value);
                    [propget] HRESULT ContentLinkInfo([out] [retval] Windows.UI.Text.ContentLinkInfo** value);
                    [propget] HRESULT TextRange([out] [retval] Windows.UI.Xaml.Documents.TextRange* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [uuid(79FDE5B4-CD37-491C-8845-DAF472DEFFF6)]
                interface IContentPresenter : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] IInspectable** value);
                    [propput] HRESULT Content([in] IInspectable* value);
                    [propget] HRESULT ContentTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT ContentTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT ContentTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT ContentTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT ContentTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT ContentTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT FontStretch([out] [retval] Windows.UI.Text.FontStretch* value);
                    [propput] HRESULT FontStretch([in] Windows.UI.Text.FontStretch value);
                    [propget] HRESULT CharacterSpacing([out] [retval] INT32* value);
                    [propput] HRESULT CharacterSpacing([in] INT32 value);
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [uuid(5138E958-335D-4210-8BBB-0AA2B4B5C29E)]
                interface IContentPresenter2 : IInspectable
                {
                    [propget] HRESULT OpticalMarginAlignment([out] [retval] Windows.UI.Xaml.OpticalMarginAlignment* value);
                    [propput] HRESULT OpticalMarginAlignment([in] Windows.UI.Xaml.OpticalMarginAlignment value);
                    [propget] HRESULT TextLineBounds([out] [retval] Windows.UI.Xaml.TextLineBounds* value);
                    [propput] HRESULT TextLineBounds([in] Windows.UI.Xaml.TextLineBounds value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [uuid(B038876A-9C4D-4402-AC56-A223487DC6C8)]
                interface IContentPresenter3 : IInspectable
                {
                    [propget] HRESULT IsTextScaleFactorEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextScaleFactorEnabled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [uuid(997B1B17-3BF8-432B-8FD9-68C7BAB21F9D)]
                interface IContentPresenter4 : IInspectable
                {
                    [propget] HRESULT TextWrapping([out] [retval] Windows.UI.Xaml.TextWrapping* value);
                    [propput] HRESULT TextWrapping([in] Windows.UI.Xaml.TextWrapping value);
                    [propget] HRESULT MaxLines([out] [retval] INT32* value);
                    [propput] HRESULT MaxLines([in] INT32 value);
                    [propget] HRESULT LineStackingStrategy([out] [retval] Windows.UI.Xaml.LineStackingStrategy* value);
                    [propput] HRESULT LineStackingStrategy([in] Windows.UI.Xaml.LineStackingStrategy value);
                    [propget] HRESULT LineHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT LineHeight([in] DOUBLE value);
                    [propget] HRESULT BorderBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT BorderBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT BorderThickness([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT BorderThickness([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT CornerRadius([out] [retval] Windows.UI.Xaml.CornerRadius* value);
                    [propput] HRESULT CornerRadius([in] Windows.UI.Xaml.CornerRadius value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT Background([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Background([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT HorizontalContentAlignment([out] [retval] Windows.UI.Xaml.HorizontalAlignment* value);
                    [propput] HRESULT HorizontalContentAlignment([in] Windows.UI.Xaml.HorizontalAlignment value);
                    [propget] HRESULT VerticalContentAlignment([out] [retval] Windows.UI.Xaml.VerticalAlignment* value);
                    [propput] HRESULT VerticalContentAlignment([in] Windows.UI.Xaml.VerticalAlignment value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [uuid(D248970C-B785-5E7F-9C11-8A6CD3D5929B)]
                interface IContentPresenter5 : IInspectable
                {
                    [propget] HRESULT BackgroundTransition([out] [retval] Windows.UI.Xaml.BrushTransition** value);
                    [propput] HRESULT BackgroundTransition([in] Windows.UI.Xaml.BrushTransition* value);
                    [propget] HRESULT BackgroundSizing([out] [retval] Windows.UI.Xaml.Controls.BackgroundSizing* value);
                    [propput] HRESULT BackgroundSizing([in] Windows.UI.Xaml.Controls.BackgroundSizing value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [uuid(3339D4F7-4815-44C4-9F76-68C83880EF10)]
                interface IContentPresenterFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ContentPresenter** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [uuid(A76339ED-32FF-438B-AAD5-1D68FAE93426)]
                interface IContentPresenterOverrides : IInspectable
                {
                    HRESULT OnContentTemplateChanged([in] Windows.UI.Xaml.DataTemplate* oldContentTemplate, [in] Windows.UI.Xaml.DataTemplate* newContentTemplate);
                    HRESULT OnContentTemplateSelectorChanged([in] Windows.UI.Xaml.Controls.DataTemplateSelector* oldContentTemplateSelector, [in] Windows.UI.Xaml.Controls.DataTemplateSelector* newContentTemplateSelector);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [uuid(18C2893B-DA2E-4426-B85A-2C7E2171BEDF)]
                interface IContentPresenterStatics : IInspectable
                {
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTemplateSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CharacterSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [uuid(C7D89DD9-06E6-46BE-A8A0-9C117D3024A3)]
                interface IContentPresenterStatics2 : IInspectable
                {
                    [propget] HRESULT OpticalMarginAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextLineBoundsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [uuid(CBE6CF5B-38B1-4D5D-B098-BC94B35C8DDF)]
                interface IContentPresenterStatics3 : IInspectable
                {
                    [propget] HRESULT IsTextScaleFactorEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [uuid(FF8BE292-AF28-47EB-A5C3-DC44CED40FD2)]
                interface IContentPresenterStatics4 : IInspectable
                {
                    [propget] HRESULT TextWrappingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxLinesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineStackingStrategyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BorderBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BorderThicknessProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CornerRadiusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalContentAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalContentAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [uuid(169E700F-E8E6-5F6A-B97E-7EF8F7006F49)]
                interface IContentPresenterStatics5 : IInspectable
                {
                    [propget] HRESULT BackgroundSizingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContextMenuEventArgs)]
                [uuid(1F7DF263-C14B-4528-B6F0-637999D83CC6)]
                interface IContextMenuEventArgs : IInspectable
                {
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                    [propget] HRESULT CursorLeft([out] [retval] DOUBLE* value);
                    [propget] HRESULT CursorTop([out] [retval] DOUBLE* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(A8912263-2951-4F58-A9C5-5A134EAA7F07)]
                interface IControl : IInspectable
                {
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT FontStretch([out] [retval] Windows.UI.Text.FontStretch* value);
                    [propput] HRESULT FontStretch([in] Windows.UI.Text.FontStretch value);
                    [propget] HRESULT CharacterSpacing([out] [retval] INT32* value);
                    [propput] HRESULT CharacterSpacing([in] INT32 value);
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT IsTabStop([out] [retval] boolean* value);
                    [propput] HRESULT IsTabStop([in] boolean value);
                    [propget] HRESULT IsEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsEnabled([in] boolean value);
                    [propget] HRESULT TabIndex([out] [retval] INT32* value);
                    [propput] HRESULT TabIndex([in] INT32 value);
                    [propget] HRESULT TabNavigation([out] [retval] Windows.UI.Xaml.Input.KeyboardNavigationMode* value);
                    [propput] HRESULT TabNavigation([in] Windows.UI.Xaml.Input.KeyboardNavigationMode value);
                    [propget] HRESULT Template([out] [retval] Windows.UI.Xaml.Controls.ControlTemplate** value);
                    [propput] HRESULT Template([in] Windows.UI.Xaml.Controls.ControlTemplate* value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT HorizontalContentAlignment([out] [retval] Windows.UI.Xaml.HorizontalAlignment* value);
                    [propput] HRESULT HorizontalContentAlignment([in] Windows.UI.Xaml.HorizontalAlignment value);
                    [propget] HRESULT VerticalContentAlignment([out] [retval] Windows.UI.Xaml.VerticalAlignment* value);
                    [propput] HRESULT VerticalContentAlignment([in] Windows.UI.Xaml.VerticalAlignment value);
                    [propget] HRESULT Background([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Background([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT BorderThickness([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT BorderThickness([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT BorderBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT BorderBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT FocusState([out] [retval] Windows.UI.Xaml.FocusState* value);
                    [eventadd] HRESULT IsEnabledChanged([in] Windows.UI.Xaml.DependencyPropertyChangedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT IsEnabledChanged([in] EventRegistrationToken token);
                    HRESULT ApplyTemplate([out] [retval] boolean* result);
                    HRESULT Focus([in] Windows.UI.Xaml.FocusState value, [out] [retval] boolean* result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(43E0FE10-14EC-427E-8C57-DEE60DF60AA8)]
                interface IControl2 : IInspectable
                {
                    [propget] HRESULT IsTextScaleFactorEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextScaleFactorEnabled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(077B29E4-DADE-4F55-9B96-09E21B28EB1C)]
                interface IControl3 : IInspectable
                {
                    [propget] HRESULT UseSystemFocusVisuals([out] [retval] boolean* value);
                    [propput] HRESULT UseSystemFocusVisuals([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(0E18AEEE-5F2E-44EA-8513-D3875C0A7513)]
                interface IControl4 : IInspectable
                {
                    [propget] HRESULT IsFocusEngagementEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsFocusEngagementEnabled([in] boolean value);
                    [propget] HRESULT IsFocusEngaged([out] [retval] boolean* value);
                    [propput] HRESULT IsFocusEngaged([in] boolean value);
                    [propget] HRESULT RequiresPointer([out] [retval] Windows.UI.Xaml.Controls.RequiresPointer* value);
                    [propput] HRESULT RequiresPointer([in] Windows.UI.Xaml.Controls.RequiresPointer value);
                    [propget] HRESULT XYFocusLeft([out] [retval] Windows.UI.Xaml.DependencyObject** value);
                    [propput] HRESULT XYFocusLeft([in] Windows.UI.Xaml.DependencyObject* value);
                    [propget] HRESULT XYFocusRight([out] [retval] Windows.UI.Xaml.DependencyObject** value);
                    [propput] HRESULT XYFocusRight([in] Windows.UI.Xaml.DependencyObject* value);
                    [propget] HRESULT XYFocusUp([out] [retval] Windows.UI.Xaml.DependencyObject** value);
                    [propput] HRESULT XYFocusUp([in] Windows.UI.Xaml.DependencyObject* value);
                    [propget] HRESULT XYFocusDown([out] [retval] Windows.UI.Xaml.DependencyObject** value);
                    [propput] HRESULT XYFocusDown([in] Windows.UI.Xaml.DependencyObject* value);
                    [propget] HRESULT ElementSoundMode([out] [retval] Windows.UI.Xaml.ElementSoundMode* value);
                    [propput] HRESULT ElementSoundMode([in] Windows.UI.Xaml.ElementSoundMode value);
                    [eventadd] HRESULT FocusEngaged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Control*, Windows.UI.Xaml.Controls.FocusEngagedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT FocusEngaged([in] EventRegistrationToken token);
                    [eventadd] HRESULT FocusDisengaged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Control*, Windows.UI.Xaml.Controls.FocusDisengagedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT FocusDisengaged([in] EventRegistrationToken token);
                    HRESULT RemoveFocusEngagement();
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(5EBB51D5-9E58-49B7-BC2D-0155FF118664)]
                interface IControl5 : IInspectable
                {
                    [propget] HRESULT DefaultStyleResourceUri([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT DefaultStyleResourceUri([in] Windows.Foundation.Uri* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(3550DBE1-E561-5934-A3EF-7DB8BF6E3B45)]
                interface IControl7 : IInspectable
                {
                    [propget] HRESULT BackgroundSizing([out] [retval] Windows.UI.Xaml.Controls.BackgroundSizing* value);
                    [propput] HRESULT BackgroundSizing([in] Windows.UI.Xaml.Controls.BackgroundSizing value);
                    [propget] HRESULT CornerRadius([out] [retval] Windows.UI.Xaml.CornerRadius* value);
                    [propput] HRESULT CornerRadius([in] Windows.UI.Xaml.CornerRadius value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(B12B1D5A-6419-4E16-B212-A45336B75778)]
                interface IControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.Control** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(A09691DF-9824-41FE-B530-B0D8990E64C1)]
                interface IControlOverrides : IInspectable
                {
                    HRESULT OnPointerEntered([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerPressed([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerMoved([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerReleased([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerExited([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerCaptureLost([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerCanceled([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerWheelChanged([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnTapped([in] Windows.UI.Xaml.Input.TappedRoutedEventArgs* e);
                    HRESULT OnDoubleTapped([in] Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs* e);
                    HRESULT OnHolding([in] Windows.UI.Xaml.Input.HoldingRoutedEventArgs* e);
                    HRESULT OnRightTapped([in] Windows.UI.Xaml.Input.RightTappedRoutedEventArgs* e);
                    HRESULT OnManipulationStarting([in] Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs* e);
                    HRESULT OnManipulationInertiaStarting([in] Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs* e);
                    HRESULT OnManipulationStarted([in] Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs* e);
                    HRESULT OnManipulationDelta([in] Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs* e);
                    HRESULT OnManipulationCompleted([in] Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs* e);
                    HRESULT OnKeyUp([in] Windows.UI.Xaml.Input.KeyRoutedEventArgs* e);
                    HRESULT OnKeyDown([in] Windows.UI.Xaml.Input.KeyRoutedEventArgs* e);
                    HRESULT OnGotFocus([in] Windows.UI.Xaml.RoutedEventArgs* e);
                    HRESULT OnLostFocus([in] Windows.UI.Xaml.RoutedEventArgs* e);
                    HRESULT OnDragEnter([in] Windows.UI.Xaml.DragEventArgs* e);
                    HRESULT OnDragLeave([in] Windows.UI.Xaml.DragEventArgs* e);
                    HRESULT OnDragOver([in] Windows.UI.Xaml.DragEventArgs* e);
                    HRESULT OnDrop([in] Windows.UI.Xaml.DragEventArgs* e);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(E194C96A-D8CC-4339-A0E1-2E9C420879EC)]
                interface IControlOverrides6 : IInspectable
                {
                    HRESULT OnPreviewKeyDown([in] Windows.UI.Xaml.Input.KeyRoutedEventArgs* e);
                    HRESULT OnPreviewKeyUp([in] Windows.UI.Xaml.Input.KeyRoutedEventArgs* e);
                    HRESULT OnCharacterReceived([in] Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs* e);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(1791587A-2A7C-4981-A2D8-AB99FFFC65B9)]
                interface IControlProtected : IInspectable
                {
                    [propget] HRESULT DefaultStyleKey([out] [retval] IInspectable** value);
                    [propput] HRESULT DefaultStyleKey([in] IInspectable* value);
                    HRESULT GetTemplateChild([in] HSTRING childName, [out] [retval] Windows.UI.Xaml.DependencyObject** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(473B305B-877D-4C35-8FCA-46A05F96607A)]
                interface IControlStatics : IInspectable
                {
                    [propget] HRESULT FontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CharacterSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTabStopProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TabIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TabNavigationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalContentAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalContentAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BorderThicknessProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BorderBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DefaultStyleKeyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FocusStateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(32233E36-AB74-4A25-A556-45293135B2C5)]
                interface IControlStatics2 : IInspectable
                {
                    [propget] HRESULT IsTextScaleFactorEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(AAD15E61-E4B9-4D72-B653-934149AA5003)]
                interface IControlStatics3 : IInspectable
                {
                    [propget] HRESULT UseSystemFocusVisualsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTemplateFocusTargetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsTemplateFocusTarget([in] Windows.UI.Xaml.FrameworkElement* element, [out] [retval] boolean* result);
                    HRESULT SetIsTemplateFocusTarget([in] Windows.UI.Xaml.FrameworkElement* element, [in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(59FDA728-C05A-4EC2-8A4B-06AD69B66E15)]
                interface IControlStatics4 : IInspectable
                {
                    [propget] HRESULT IsFocusEngagementEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsFocusEngagedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RequiresPointerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT XYFocusLeftProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT XYFocusRightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT XYFocusUpProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT XYFocusDownProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ElementSoundModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(F635B5A3-EF8E-404F-877B-5580473710A6)]
                interface IControlStatics5 : IInspectable
                {
                    [propget] HRESULT DefaultStyleResourceUriProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTemplateKeyTipTargetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsTemplateKeyTipTarget([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetIsTemplateKeyTipTarget([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(AEE1CA45-C910-5DAB-A266-FDF50C0BEDD2)]
                interface IControlStatics7 : IInspectable
                {
                    [propget] HRESULT BackgroundSizingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CornerRadiusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ControlTemplate)]
                [uuid(EFD2418E-41E0-48BB-8B82-91EDA1BA3FE2)]
                interface IControlTemplate : IInspectable
                {
                    [propget] HRESULT TargetType([out] [retval] Windows.UI.Xaml.Interop.TypeName* value);
                    [propput] HRESULT TargetType([in] Windows.UI.Xaml.Interop.TypeName value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DataTemplateSelector)]
                [uuid(A907D496-46A0-4CD7-8DBE-F9A581DF60B1)]
                interface IDataTemplateSelector : IInspectable
                {
                    HRESULT SelectTemplate([in] IInspectable* item, [in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] Windows.UI.Xaml.DataTemplate** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DataTemplateSelector)]
                [uuid(3792BC47-8C4B-4257-A5AE-CC3F8ED786EB)]
                interface IDataTemplateSelector2 : IInspectable
                {
                    [overload("SelectTemplate")] HRESULT SelectTemplateForItem([in] IInspectable* item, [out] [retval] Windows.UI.Xaml.DataTemplate** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DataTemplateSelector)]
                [uuid(511BAAD0-210A-457D-9521-433D2B11B7D2)]
                interface IDataTemplateSelectorFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DataTemplateSelector)]
                [uuid(2D162925-5966-4BFA-8638-4D345689F6CF)]
                interface IDataTemplateSelectorOverrides : IInspectable
                {
                    HRESULT SelectTemplateCore([in] IInspectable* item, [in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] Windows.UI.Xaml.DataTemplate** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DataTemplateSelector)]
                [uuid(6C3FB5FC-8E84-4C91-AC15-04A1D885500F)]
                interface IDataTemplateSelectorOverrides2 : IInspectable
                {
                    [overload("SelectTemplateCore")] HRESULT SelectTemplateForItemCore([in] IInspectable* item, [out] [retval] Windows.UI.Xaml.DataTemplate** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePickedEventArgs)]
                [uuid(A1527B12-59C1-4521-B28C-B176675E7C5A)]
                interface IDatePickedEventArgs : IInspectable
                {
                    [propget] HRESULT OldDate([out] [retval] Windows.Foundation.DateTime* value);
                    [propget] HRESULT NewDate([out] [retval] Windows.Foundation.DateTime* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePicker)]
                [uuid(06DA3946-08B8-4103-8B8A-093EFD6A7657)]
                interface IDatePicker : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT CalendarIdentifier([out] [retval] HSTRING* value);
                    [propput] HRESULT CalendarIdentifier([in] HSTRING value);
                    [propget] HRESULT Date([out] [retval] Windows.Foundation.DateTime* value);
                    [propput] HRESULT Date([in] Windows.Foundation.DateTime value);
                    [propget] HRESULT DayVisible([out] [retval] boolean* value);
                    [propput] HRESULT DayVisible([in] boolean value);
                    [propget] HRESULT MonthVisible([out] [retval] boolean* value);
                    [propput] HRESULT MonthVisible([in] boolean value);
                    [propget] HRESULT YearVisible([out] [retval] boolean* value);
                    [propput] HRESULT YearVisible([in] boolean value);
                    [propget] HRESULT DayFormat([out] [retval] HSTRING* value);
                    [propput] HRESULT DayFormat([in] HSTRING value);
                    [propget] HRESULT MonthFormat([out] [retval] HSTRING* value);
                    [propput] HRESULT MonthFormat([in] HSTRING value);
                    [propget] HRESULT YearFormat([out] [retval] HSTRING* value);
                    [propput] HRESULT YearFormat([in] HSTRING value);
                    [propget] HRESULT MinYear([out] [retval] Windows.Foundation.DateTime* value);
                    [propput] HRESULT MinYear([in] Windows.Foundation.DateTime value);
                    [propget] HRESULT MaxYear([out] [retval] Windows.Foundation.DateTime* value);
                    [propput] HRESULT MaxYear([in] Windows.Foundation.DateTime value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [eventadd] HRESULT DateChanged([in] Windows.Foundation.EventHandler<Windows.UI.Xaml.Controls.DatePickerValueChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DateChanged([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePicker)]
                [uuid(BB28B475-2C1F-4340-9E30-948F99C9E57A)]
                interface IDatePicker2 : IInspectable
                {
                    [propget] HRESULT LightDismissOverlayMode([out] [retval] Windows.UI.Xaml.Controls.LightDismissOverlayMode* value);
                    [propput] HRESULT LightDismissOverlayMode([in] Windows.UI.Xaml.Controls.LightDismissOverlayMode value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePicker)]
                [uuid(7DA12A3B-A764-5AE1-ABAE-6AFFC1428E1E)]
                interface IDatePicker3 : IInspectable
                {
                    [propget] HRESULT SelectedDate([out] [retval] Windows.Foundation.IReference<Windows.Foundation.DateTime>** value);
                    [propput] HRESULT SelectedDate([in] Windows.Foundation.IReference<Windows.Foundation.DateTime>* value);
                    [eventadd] HRESULT SelectedDateChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.DatePicker*, Windows.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectedDateChanged([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePicker)]
                [uuid(EEC3CA84-9896-4A7D-BB35-6FB21EAECA11)]
                interface IDatePickerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.DatePicker** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePickerFlyout)]
                [uuid(FBF33B1A-A3A4-4DF8-9228-23A5AC27DF4E)]
                interface IDatePickerFlyout : IInspectable
                {
                    [propget] HRESULT CalendarIdentifier([out] [retval] HSTRING* value);
                    [propput] HRESULT CalendarIdentifier([in] HSTRING value);
                    [propget] HRESULT Date([out] [retval] Windows.Foundation.DateTime* value);
                    [propput] HRESULT Date([in] Windows.Foundation.DateTime value);
                    [propget] HRESULT DayVisible([out] [retval] boolean* value);
                    [propput] HRESULT DayVisible([in] boolean value);
                    [propget] HRESULT MonthVisible([out] [retval] boolean* value);
                    [propput] HRESULT MonthVisible([in] boolean value);
                    [propget] HRESULT YearVisible([out] [retval] boolean* value);
                    [propput] HRESULT YearVisible([in] boolean value);
                    [propget] HRESULT MinYear([out] [retval] Windows.Foundation.DateTime* value);
                    [propput] HRESULT MinYear([in] Windows.Foundation.DateTime value);
                    [propget] HRESULT MaxYear([out] [retval] Windows.Foundation.DateTime* value);
                    [propput] HRESULT MaxYear([in] Windows.Foundation.DateTime value);
                    [eventadd] HRESULT DatePicked([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.DatePickerFlyout*, Windows.UI.Xaml.Controls.DatePickedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DatePicked([in] EventRegistrationToken token);
                    HRESULT ShowAtAsync([in] Windows.UI.Xaml.FrameworkElement* target, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.IReference<Windows.Foundation.DateTime>*>** operation);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePickerFlyout)]
                [uuid(CFB18DBB-9931-4119-8BDA-54A86FDFAC84)]
                interface IDatePickerFlyout2 : IInspectable
                {
                    [propget] HRESULT DayFormat([out] [retval] HSTRING* value);
                    [propput] HRESULT DayFormat([in] HSTRING value);
                    [propget] HRESULT MonthFormat([out] [retval] HSTRING* value);
                    [propput] HRESULT MonthFormat([in] HSTRING value);
                    [propget] HRESULT YearFormat([out] [retval] HSTRING* value);
                    [propput] HRESULT YearFormat([in] HSTRING value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePickerFlyoutItem)]
                [uuid(9D9BC289-00D2-4AAC-9C85-D74F06367887)]
                interface IDatePickerFlyoutItem : IInspectable
                {
                    [propget] HRESULT PrimaryText([out] [retval] HSTRING* value);
                    [propput] HRESULT PrimaryText([in] HSTRING value);
                    [propget] HRESULT SecondaryText([out] [retval] HSTRING* value);
                    [propput] HRESULT SecondaryText([in] HSTRING value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePickerFlyoutItem)]
                [uuid(AA9C91DA-07F6-4CDF-89B4-DDA3BDB0EA6B)]
                interface IDatePickerFlyoutItemStatics : IInspectable
                {
                    [propget] HRESULT PrimaryTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SecondaryTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePickerFlyoutPresenter)]
                [uuid(7C62F70E-2DDC-4381-832F-54CBDFAA849A)]
                interface IDatePickerFlyoutPresenter : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 8.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePickerFlyoutPresenter)]
                [uuid(C5B2578F-96D8-55CC-97EE-3F88FC85E479)]
                interface IDatePickerFlyoutPresenter2 : IInspectable
                {
                    [propget] HRESULT IsDefaultShadowEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsDefaultShadowEnabled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 8.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePickerFlyoutPresenter)]
                [uuid(4DC0C49E-1F8E-5966-BBDB-215750C73ABA)]
                interface IDatePickerFlyoutPresenterStatics2 : IInspectable
                {
                    [propget] HRESULT IsDefaultShadowEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePickerFlyout)]
                [uuid(CD570377-5845-4C12-8C10-592D9FCC7CD9)]
                interface IDatePickerFlyoutStatics : IInspectable
                {
                    [propget] HRESULT CalendarIdentifierProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DayVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MonthVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT YearVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinYearProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxYearProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePickerFlyout)]
                [uuid(AFD3E569-81E6-4B54-84A9-68079B73E34E)]
                interface IDatePickerFlyoutStatics2 : IInspectable
                {
                    [propget] HRESULT DayFormatProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MonthFormatProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT YearFormatProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs)]
                [uuid(564DCEED-744A-5C3A-9BD2-4DCD9919A7B7)]
                interface IDatePickerSelectedValueChangedEventArgs : IInspectable
                {
                    [propget] HRESULT OldDate([out] [retval] Windows.Foundation.IReference<Windows.Foundation.DateTime>** value);
                    [propget] HRESULT NewDate([out] [retval] Windows.Foundation.IReference<Windows.Foundation.DateTime>** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePicker)]
                [uuid(182E7C69-2116-4C67-B513-713364831D79)]
                interface IDatePickerStatics : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CalendarIdentifierProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DayVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MonthVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT YearVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DayFormatProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MonthFormatProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT YearFormatProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinYearProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxYearProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePicker)]
                [uuid(F1076DF6-FBA6-4550-8B88-A6420847F60D)]
                interface IDatePickerStatics2 : IInspectable
                {
                    [propget] HRESULT LightDismissOverlayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePicker)]
                [uuid(A9F80AFE-A30A-5F26-A446-FEC2075D4A0E)]
                interface IDatePickerStatics3 : IInspectable
                {
                    [propget] HRESULT SelectedDateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DatePickerValueChangedEventArgs)]
                [uuid(1AE661B2-B1B4-4273-96E0-19DAFF187446)]
                interface IDatePickerValueChangedEventArgs : IInspectable
                {
                    [propget] HRESULT OldDate([out] [retval] Windows.Foundation.DateTime* value);
                    [propget] HRESULT NewDate([out] [retval] Windows.Foundation.DateTime* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs)]
                [uuid(AF05F22F-9E78-4B21-9A8E-41C2D1367A2A)]
                interface IDragItemsCompletedEventArgs : IInspectable
                {
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVectorView<IInspectable*>** value);
                    [propget] HRESULT DropResult([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageOperation* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DragItemsStartingEventArgs)]
                [uuid(71CF215C-DAED-4783-AA11-DC574D2713E9)]
                interface IDragItemsStartingEventArgs : IInspectable
                {
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT Data([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackage** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DropDownButton)]
                [uuid(671F74E6-2A27-5FA8-B0A2-79B2E71EBD87)]
                interface IDropDownButton : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DropDownButtonAutomationPeer)]
                [uuid(72F294F1-BFF6-5D07-9DB4-54134506BC80)]
                interface IDropDownButtonAutomationPeer : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DropDownButtonAutomationPeer)]
                [uuid(B8C449B2-6354-5C0C-9E95-E0C99A293A44)]
                interface IDropDownButtonAutomationPeerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] Windows.UI.Xaml.Controls.DropDownButton* owner, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.DropDownButtonAutomationPeer** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DropDownButton)]
                [uuid(0D9F8AB5-E70D-52BD-9CA0-36CEECAA642A)]
                interface IDropDownButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.DropDownButton** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs)]
                [uuid(C93C736F-6F6E-4E43-90D9-9B46A0D88B9F)]
                interface IDynamicOverflowItemsChangingEventArgs : IInspectable
                {
                    [propget] HRESULT Action([out] [retval] Windows.UI.Xaml.Controls.CommandBarDynamicOverflowAction* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FlipView)]
                [uuid(A1582F68-3D7D-4D3B-B71D-488EED1E3493)]
                interface IFlipView : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FlipView)]
                [uuid(C4FEA4FD-7AF3-4952-9FD9-9E0987FC4F29)]
                interface IFlipView2 : IInspectable
                {
                    [propget] HRESULT UseTouchAnimationsForAllNavigation([out] [retval] boolean* value);
                    [propput] HRESULT UseTouchAnimationsForAllNavigation([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FlipView)]
                [uuid(F1DEA9BE-9AE8-4D4B-AB43-16D31E05F4F3)]
                interface IFlipViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.FlipView** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FlipViewItem)]
                [uuid(56196565-CE2B-4BDA-A36B-82A2B8B0D4C0)]
                interface IFlipViewItem : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FlipViewItem)]
                [uuid(F21D91FE-22A0-4412-A853-9D6A6E8F2AAF)]
                interface IFlipViewItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.FlipViewItem** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FlipView)]
                [uuid(70E3D93F-4308-4BA2-BBCE-E2CB0ED34476)]
                interface IFlipViewStatics2 : IInspectable
                {
                    [propget] HRESULT UseTouchAnimationsForAllNavigationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Flyout)]
                [uuid(6584EBDF-CBC7-4E19-843A-A14F24A793EA)]
                interface IFlyout : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Content([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT FlyoutPresenterStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT FlyoutPresenterStyle([in] Windows.UI.Xaml.Style* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Flyout)]
                [uuid(4BED4933-008E-4B03-A385-79FE5266DDBA)]
                interface IFlyoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.Flyout** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FlyoutPresenter)]
                [uuid(827D5B79-E37B-46A5-8D44-63A11A580E83)]
                interface IFlyoutPresenter : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 8.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FlyoutPresenter)]
                [uuid(4F857E92-36B4-5048-9051-A992B43E8A1D)]
                interface IFlyoutPresenter2 : IInspectable
                {
                    [propget] HRESULT IsDefaultShadowEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsDefaultShadowEnabled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FlyoutPresenter)]
                [uuid(EE4D668F-DA76-469A-ACD7-3060E613ADE7)]
                interface IFlyoutPresenterFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.FlyoutPresenter** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 8.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FlyoutPresenter)]
                [uuid(1492AE4B-2727-5E8E-9105-6D7A2B1185B2)]
                interface IFlyoutPresenterStatics2 : IInspectable
                {
                    [propget] HRESULT IsDefaultShadowEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Flyout)]
                [uuid(61364E0B-DB75-47E1-B2C3-5B901C3D74B6)]
                interface IFlyoutStatics : IInspectable
                {
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FlyoutPresenterStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FocusDisengagedEventArgs)]
                [uuid(5E14280F-953E-4CF8-B9EA-C530A1CE02AD)]
                interface IFocusDisengagedEventArgs : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FocusEngagedEventArgs)]
                [uuid(A69FC352-DA66-404C-823F-5358594E70BB)]
                interface IFocusEngagedEventArgs : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FocusEngagedEventArgs)]
                [uuid(4A59E0F4-87C0-4CCD-93C4-A3A01CE39265)]
                interface IFocusEngagedEventArgs2 : IInspectable
                {
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FontIcon)]
                [uuid(D4D61391-39AC-4950-9166-3606C264418B)]
                interface IFontIcon : IInspectable
                {
                    [propget] HRESULT Glyph([out] [retval] HSTRING* value);
                    [propput] HRESULT Glyph([in] HSTRING value);
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FontIcon)]
                [uuid(F6EBD84D-37E8-46EE-A574-41AD550482E0)]
                interface IFontIcon2 : IInspectable
                {
                    [propget] HRESULT IsTextScaleFactorEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextScaleFactorEnabled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FontIcon)]
                [uuid(6155D919-1C6C-4950-8794-231EF0914D94)]
                interface IFontIcon3 : IInspectable
                {
                    [propget] HRESULT MirroredWhenRightToLeft([out] [retval] boolean* value);
                    [propput] HRESULT MirroredWhenRightToLeft([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FontIcon)]
                [uuid(1C781B6B-37BF-4DDC-A1A8-1B77DB3CF0EA)]
                interface IFontIconFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.FontIcon** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FontIconSource)]
                [uuid(2211AC9A-74E3-43ED-B61C-21AFC7DF4D10)]
                interface IFontIconSource : IInspectable
                {
                    [propget] HRESULT Glyph([out] [retval] HSTRING* value);
                    [propput] HRESULT Glyph([in] HSTRING value);
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT IsTextScaleFactorEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextScaleFactorEnabled([in] boolean value);
                    [propget] HRESULT MirroredWhenRightToLeft([out] [retval] boolean* value);
                    [propput] HRESULT MirroredWhenRightToLeft([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FontIconSource)]
                [uuid(8BDCF6BD-FC06-42B8-B30B-7505082AC38F)]
                interface IFontIconSourceFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.FontIconSource** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FontIconSource)]
                [uuid(8C0E422F-8269-43B1-B95A-EF070E86770D)]
                interface IFontIconSourceStatics : IInspectable
                {
                    [propget] HRESULT GlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTextScaleFactorEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MirroredWhenRightToLeftProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FontIcon)]
                [uuid(B3BE7BF6-1467-4086-BBCB-4E21D97A7B4D)]
                interface IFontIconStatics : IInspectable
                {
                    [propget] HRESULT GlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FontIcon)]
                [uuid(E6080672-08F8-43D3-8790-4604290CBEBD)]
                interface IFontIconStatics2 : IInspectable
                {
                    [propget] HRESULT IsTextScaleFactorEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.FontIcon)]
                [uuid(A4528B17-B084-4BD5-AAB4-FEAE9D3B5D26)]
                interface IFontIconStatics3 : IInspectable
                {
                    [propget] HRESULT MirroredWhenRightToLeftProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Frame)]
                [uuid(68EA500B-3FE9-4735-B6A0-E7601933B089)]
                interface IFrame : IInspectable
                {
                    [propget] HRESULT CacheSize([out] [retval] INT32* value);
                    [propput] HRESULT CacheSize([in] INT32 value);
                    [propget] HRESULT CanGoBack([out] [retval] boolean* value);
                    [propget] HRESULT CanGoForward([out] [retval] boolean* value);
                    [propget] HRESULT CurrentSourcePageType([out] [retval] Windows.UI.Xaml.Interop.TypeName* value);
                    [propget] HRESULT SourcePageType([out] [retval] Windows.UI.Xaml.Interop.TypeName* value);
                    [propput] HRESULT SourcePageType([in] Windows.UI.Xaml.Interop.TypeName value);
                    [propget] HRESULT BackStackDepth([out] [retval] INT32* value);
                    [eventadd] HRESULT Navigated([in] Windows.UI.Xaml.Navigation.NavigatedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Navigated([in] EventRegistrationToken token);
                    [eventadd] HRESULT Navigating([in] Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Navigating([in] EventRegistrationToken token);
                    [eventadd] HRESULT NavigationFailed([in] Windows.UI.Xaml.Navigation.NavigationFailedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NavigationFailed([in] EventRegistrationToken token);
                    [eventadd] HRESULT NavigationStopped([in] Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NavigationStopped([in] EventRegistrationToken token);
                    HRESULT GoBack();
                    HRESULT GoForward();
                    HRESULT Navigate([in] Windows.UI.Xaml.Interop.TypeName sourcePageType, [in] IInspectable* parameter, [out] [retval] boolean* result);
                    HRESULT GetNavigationState([out] [retval] HSTRING* result);
                    [overload("SetNavigationState")] HRESULT SetNavigationState([in] HSTRING navigationState);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Frame)]
                [uuid(3F367F87-9F5A-4B04-B818-B554C069597A)]
                interface IFrame2 : IInspectable
                {
                    [propget] HRESULT BackStack([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Navigation.PageStackEntry*>** value);
                    [propget] HRESULT ForwardStack([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Navigation.PageStackEntry*>** value);
                    HRESULT Navigate([in] Windows.UI.Xaml.Interop.TypeName sourcePageType, [in] IInspectable* parameter, [in] Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo* infoOverride, [out] [retval] boolean* result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Frame)]
                [uuid(648A2B4D-53CA-4B5A-AA8E-3CC7440F4A67)]
                interface IFrame3 : IInspectable
                {
                    HRESULT GoBack([in] Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo* transitionInfoOverride);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Frame)]
                [uuid(9B17C21A-BD2B-4A00-99EB-946BE9618084)]
                interface IFrame4 : IInspectable
                {
                    [overload("SetNavigationState")] HRESULT SetNavigationStateWithNavigationControl([in] HSTRING navigationState, [in] boolean suppressNavigate);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Frame)]
                [uuid(453FB92E-82B5-5F93-92AB-15341806C9DA)]
                interface IFrame5 : IInspectable
                {
                    [propget] HRESULT IsNavigationStackEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsNavigationStackEnabled([in] boolean value);
                    HRESULT NavigateToType([in] Windows.UI.Xaml.Interop.TypeName sourcePageType, [in] IInspectable* parameter, [in] Windows.UI.Xaml.Navigation.FrameNavigationOptions* navigationOptions, [out] [retval] boolean* result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Frame)]
                [uuid(02EE93D4-448E-469E-9799-0A8A1F70F171)]
                interface IFrameFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.Frame** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Frame)]
                [uuid(D5ACF0E9-D967-471B-8459-C8AF4341511B)]
                interface IFrameStatics : IInspectable
                {
                    [propget] HRESULT CacheSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanGoBackProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanGoForwardProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CurrentSourcePageTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SourcePageTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BackStackDepthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Frame)]
                [uuid(E4B5CDFE-42F0-4462-A1C1-5D259DD82A03)]
                interface IFrameStatics2 : IInspectable
                {
                    [propget] HRESULT BackStackProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForwardStackProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Frame)]
                [uuid(53C89B25-F0E0-58F1-A06D-441075914FF8)]
                interface IFrameStatics5 : IInspectable
                {
                    [propget] HRESULT IsNavigationStackEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Grid)]
                [uuid(FD104460-2E15-4BA3-8B8F-FA693A4161E9)]
                interface IGrid : IInspectable
                {
                    [propget] HRESULT RowDefinitions([out] [retval] Windows.UI.Xaml.Controls.RowDefinitionCollection** value);
                    [propget] HRESULT ColumnDefinitions([out] [retval] Windows.UI.Xaml.Controls.ColumnDefinitionCollection** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Grid)]
                [uuid(F76EFA41-380E-45DB-BE87-9E1326BA4B57)]
                interface IGrid2 : IInspectable
                {
                    [propget] HRESULT BorderBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT BorderBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT BorderThickness([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT BorderThickness([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT CornerRadius([out] [retval] Windows.UI.Xaml.CornerRadius* value);
                    [propput] HRESULT CornerRadius([in] Windows.UI.Xaml.CornerRadius value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Grid)]
                [uuid(12DFC5FC-2342-4DD2-9E7D-2090A171D1EF)]
                interface IGrid3 : IInspectable
                {
                    [propget] HRESULT RowSpacing([out] [retval] DOUBLE* value);
                    [propput] HRESULT RowSpacing([in] DOUBLE value);
                    [propget] HRESULT ColumnSpacing([out] [retval] DOUBLE* value);
                    [propput] HRESULT ColumnSpacing([in] DOUBLE value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Grid)]
                [uuid(ED02D274-81F1-5AC2-A0C3-BBDAF5A3FFEE)]
                interface IGrid4 : IInspectable
                {
                    [propget] HRESULT BackgroundSizing([out] [retval] Windows.UI.Xaml.Controls.BackgroundSizing* value);
                    [propput] HRESULT BackgroundSizing([in] Windows.UI.Xaml.Controls.BackgroundSizing value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Grid)]
                [uuid(AE814041-C531-43B4-BF99-12F506F7B01C)]
                interface IGridFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.Grid** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Grid)]
                [uuid(64FE2E9F-F951-42B6-A9CE-BB179AF11595)]
                interface IGridStatics : IInspectable
                {
                    [propget] HRESULT RowProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetRow([in] Windows.UI.Xaml.FrameworkElement* element, [out] [retval] INT32* result);
                    HRESULT SetRow([in] Windows.UI.Xaml.FrameworkElement* element, [in] INT32 value);
                    [propget] HRESULT ColumnProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetColumn([in] Windows.UI.Xaml.FrameworkElement* element, [out] [retval] INT32* result);
                    HRESULT SetColumn([in] Windows.UI.Xaml.FrameworkElement* element, [in] INT32 value);
                    [propget] HRESULT RowSpanProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetRowSpan([in] Windows.UI.Xaml.FrameworkElement* element, [out] [retval] INT32* result);
                    HRESULT SetRowSpan([in] Windows.UI.Xaml.FrameworkElement* element, [in] INT32 value);
                    [propget] HRESULT ColumnSpanProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetColumnSpan([in] Windows.UI.Xaml.FrameworkElement* element, [out] [retval] INT32* result);
                    HRESULT SetColumnSpan([in] Windows.UI.Xaml.FrameworkElement* element, [in] INT32 value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Grid)]
                [uuid(2D666658-58B6-4A1B-841B-875BA93B5D6A)]
                interface IGridStatics2 : IInspectable
                {
                    [propget] HRESULT BorderBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BorderThicknessProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CornerRadiusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Grid)]
                [uuid(C3FBA437-5A0C-407A-9621-79545386D811)]
                interface IGridStatics3 : IInspectable
                {
                    [propget] HRESULT RowSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ColumnSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Grid)]
                [uuid(691AF349-1F63-57AA-8726-9CDCC1B14C02)]
                interface IGridStatics4 : IInspectable
                {
                    [propget] HRESULT BackgroundSizingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.GridView)]
                [uuid(026AE934-B67E-4D80-8F72-8AA64B4D827B)]
                interface IGridView : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.GridView)]
                [uuid(D9BCCA89-09F9-4C6E-A83E-F199146F0E7D)]
                interface IGridViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.GridView** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.GridViewHeaderItem)]
                [uuid(72D75D7E-5DC3-4FFC-9B1C-939B5C37161C)]
                interface IGridViewHeaderItem : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.GridViewHeaderItem)]
                [uuid(36E0C96E-B56A-4B3B-8BAC-7AEF5E6F9945)]
                interface IGridViewHeaderItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.GridViewHeaderItem** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.GridViewItem)]
                [uuid(7D9901F1-E7C1-4E83-B470-C9D6D7BDA9F5)]
                interface IGridViewItem : IInspectable
                {
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.GridViewItemTemplateSettings** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.GridViewItem)]
                [uuid(229B00AF-3FA6-43E9-979D-07EA0D6280DC)]
                interface IGridViewItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.GridViewItem** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.GroupItem)]
                [uuid(4AE8D5D1-7228-4A16-A61F-88C0E8F45C76)]
                interface IGroupItem : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.GroupItem)]
                [uuid(D9A1D53E-B1E0-4319-9808-7A9E887E13B0)]
                interface IGroupItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.GroupItem** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.GroupStyle)]
                [uuid(71CA300B-B89E-4184-B0DF-A9E95447DE8D)]
                interface IGroupStyle : IInspectable
                {
                    [propget] HRESULT Panel([out] [retval] Windows.UI.Xaml.Controls.ItemsPanelTemplate** value);
                    [propput] HRESULT Panel([in] Windows.UI.Xaml.Controls.ItemsPanelTemplate* value);
                    [deprecated("ContainerStyle may be altered or unavailable for releases after Windows 8.1, and is not supported for ItemsControl.GroupStyle.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propget] HRESULT ContainerStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [deprecated("ContainerStyle may be altered or unavailable for releases after Windows 8.1, and is not supported for ItemsControl.GroupStyle.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propput] HRESULT ContainerStyle([in] Windows.UI.Xaml.Style* value);
                    [deprecated("ContainerStyleSelector may be altered or unavailable for releases after Windows 8.1, and is not supported for ItemsControl.GroupStyle.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propget] HRESULT ContainerStyleSelector([out] [retval] Windows.UI.Xaml.Controls.StyleSelector** value);
                    [deprecated("ContainerStyleSelector may be altered or unavailable for releases after Windows 8.1, and is not supported for ItemsControl.GroupStyle.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propput] HRESULT ContainerStyleSelector([in] Windows.UI.Xaml.Controls.StyleSelector* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT HeaderTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT HeaderTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT HidesIfEmpty([out] [retval] boolean* value);
                    [propput] HRESULT HidesIfEmpty([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.GroupStyle)]
                [uuid(69F90679-3A11-4FE7-B4DF-2A0139D4018B)]
                interface IGroupStyle2 : IInspectable
                {
                    [propget] HRESULT HeaderContainerStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT HeaderContainerStyle([in] Windows.UI.Xaml.Style* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.GroupStyle)]
                [uuid(56FF664F-E2D7-4F49-803D-C727CDF9372D)]
                interface IGroupStyleFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.GroupStyle** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.GroupStyleSelector)]
                [uuid(6DDA119E-9A74-478F-A339-5BB52DE6C51E)]
                interface IGroupStyleSelector : IInspectable
                {
                    HRESULT SelectGroupStyle([in] IInspectable* group, [in] UINT32 level, [out] [retval] Windows.UI.Xaml.Controls.GroupStyle** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.GroupStyleSelector)]
                [uuid(BF570D33-B2F6-481F-A450-C80C291FB22D)]
                interface IGroupStyleSelectorFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.GroupStyleSelector** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.GroupStyleSelector)]
                [uuid(F691CAB2-77AD-4D3D-A51C-8EF9C3836456)]
                interface IGroupStyleSelectorOverrides : IInspectable
                {
                    HRESULT SelectGroupStyleCore([in] IInspectable* group, [in] UINT32 level, [out] [retval] Windows.UI.Xaml.Controls.GroupStyle** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.HandwritingPanelClosedEventArgs)]
                [uuid(4FB91C73-192D-4DD2-A1A2-80ED01125876)]
                interface IHandwritingPanelClosedEventArgs : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.HandwritingPanelOpenedEventArgs)]
                [uuid(FC15B16D-9F15-47B0-B97A-94A68CC61345)]
                interface IHandwritingPanelOpenedEventArgs : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.HandwritingView)]
                [uuid(C44204A7-31E0-44BC-A38B-4BEE64ECD99F)]
                interface IHandwritingView : IInspectable
                {
                    [propget] HRESULT PlacementTarget([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT PlacementTarget([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT PlacementAlignment([out] [retval] Windows.UI.Xaml.Controls.HandwritingPanelPlacementAlignment* value);
                    [propput] HRESULT PlacementAlignment([in] Windows.UI.Xaml.Controls.HandwritingPanelPlacementAlignment value);
                    [propget] HRESULT IsOpen([out] [retval] boolean* value);
                    [propget] HRESULT AreCandidatesEnabled([out] [retval] boolean* value);
                    [propput] HRESULT AreCandidatesEnabled([in] boolean value);
                    [eventadd] HRESULT Opened([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.HandwritingView*, Windows.UI.Xaml.Controls.HandwritingPanelOpenedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Opened([in] EventRegistrationToken token);
                    [eventadd] HRESULT Closed([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.HandwritingView*, Windows.UI.Xaml.Controls.HandwritingPanelClosedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Closed([in] EventRegistrationToken token);
                    HRESULT TryClose([out] [retval] boolean* result);
                    HRESULT TryOpen([out] [retval] boolean* result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.HandwritingView)]
                [uuid(E00C873F-0012-475C-890C-97AE308642DE)]
                interface IHandwritingViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.HandwritingView** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.HandwritingView)]
                [uuid(BB7CEED0-CC5F-4004-B8C8-142E195F0618)]
                interface IHandwritingViewStatics : IInspectable
                {
                    [propget] HRESULT PlacementTargetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlacementAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsOpenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AreCandidatesEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Hub)]
                [uuid(AE692E82-7314-4F51-AB11-2AF1ED4A19F8)]
                interface IHub : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT DefaultSectionIndex([out] [retval] INT32* value);
                    [propput] HRESULT DefaultSectionIndex([in] INT32 value);
                    [propget] HRESULT Sections([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.HubSection*>** value);
                    [propget] HRESULT SectionsInView([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.HubSection*>** value);
                    [propget] HRESULT SectionHeaders([out] [retval] Windows.Foundation.Collections.IObservableVector<IInspectable*>** value);
                    [eventadd] HRESULT SectionHeaderClick([in] Windows.UI.Xaml.Controls.HubSectionHeaderClickEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SectionHeaderClick([in] EventRegistrationToken token);
                    [eventadd] HRESULT SectionsInViewChanged([in] Windows.UI.Xaml.Controls.SectionsInViewChangedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SectionsInViewChanged([in] EventRegistrationToken token);
                    HRESULT ScrollToSection([in] Windows.UI.Xaml.Controls.HubSection* section);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Hub)]
                [uuid(DCA6B2BA-C6F5-4961-9953-C51873DB5424)]
                interface IHubFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.Hub** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.HubSection)]
                [uuid(A4E66CB7-7FDD-4FE0-AB49-C246639DCCF9)]
                interface IHubSection : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT ContentTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT ContentTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT IsHeaderInteractive([out] [retval] boolean* value);
                    [propput] HRESULT IsHeaderInteractive([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.HubSection)]
                [uuid(FFF55FA2-ECE4-4BBA-AA3B-9804AEF47883)]
                interface IHubSectionFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.HubSection** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.HubSectionHeaderClickEventArgs)]
                [uuid(E1C5EF04-1EDD-4112-AEEB-996C96400698)]
                interface IHubSectionHeaderClickEventArgs : IInspectable
                {
                    [propget] HRESULT Section([out] [retval] Windows.UI.Xaml.Controls.HubSection** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.HubSection)]
                [uuid(12D2D85A-EA27-42D1-998B-61E52AED842B)]
                interface IHubSectionStatics : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsHeaderInteractiveProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Hub)]
                [uuid(0E6FA034-AD3C-4F32-B701-E24FAB562028)]
                interface IHubStatics : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DefaultSectionIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SemanticZoomOwnerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsActiveViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsZoomedInViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.HyperlinkButton)]
                [uuid(CCEBACA3-3B5C-4F4C-9BFD-86887BC79772)]
                interface IHyperlinkButton : IInspectable
                {
                    [propget] HRESULT NavigateUri([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT NavigateUri([in] Windows.Foundation.Uri* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.HyperlinkButton)]
                [uuid(43521BAD-4E97-4DA9-A64D-935DFD8CEDF2)]
                interface IHyperlinkButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.HyperlinkButton** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.HyperlinkButton)]
                [uuid(FBAEB5C7-CDB7-4263-B7D6-3C0D2904ED98)]
                interface IHyperlinkButtonStatics : IInspectable
                {
                    [propget] HRESULT NavigateUriProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.IconElement)]
                [uuid(9AF0803B-D04C-467A-BBD5-9B81F02D9A56)]
                interface IIconElement : IInspectable
                {
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.IconElement)]
                [uuid(CF37A562-0424-43C7-8BEA-720FBA973EF1)]
                interface IIconElementFactory : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.IconElement)]
                [uuid(BE19A623-77CF-472F-82EA-047801D12012)]
                interface IIconElementStatics : IInspectable
                {
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.IconSource)]
                [uuid(92EC8D55-45EB-47A4-863C-91B224044F9B)]
                interface IIconSource : IInspectable
                {
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.IconSourceElement)]
                [uuid(D7A64502-DDDA-55CD-B4C9-E79ABC8B0EA4)]
                interface IIconSourceElement : IInspectable
                {
                    [propget] HRESULT IconSource([out] [retval] Windows.UI.Xaml.Controls.IconSource** value);
                    [propput] HRESULT IconSource([in] Windows.UI.Xaml.Controls.IconSource* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.IconSourceElement)]
                [uuid(26B59FAB-2092-5B95-B59E-F27F210689E7)]
                interface IIconSourceElementFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.IconSourceElement** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.IconSourceElement)]
                [uuid(F37CFD45-F3D8-50FF-A1B8-0FBA4AE61D79)]
                interface IIconSourceElementStatics : IInspectable
                {
                    [propget] HRESULT IconSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.IconSource)]
                [uuid(4D117CF1-1FD6-49D7-B483-02EC3DE997D6)]
                interface IIconSourceFactory : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.IconSource)]
                [uuid(1D389DBE-1CD3-4F4F-83B0-55DC6387685B)]
                interface IIconSourceStatics : IInspectable
                {
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Image)]
                [uuid(495B7402-9AF3-4E50-AA90-03388F3086D2)]
                interface IImage : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT Source([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT Stretch([out] [retval] Windows.UI.Xaml.Media.Stretch* value);
                    [propput] HRESULT Stretch([in] Windows.UI.Xaml.Media.Stretch value);
                    [propget] HRESULT NineGrid([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT NineGrid([in] Windows.UI.Xaml.Thickness value);
                    [deprecated("PlayToSource may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propget] HRESULT PlayToSource([out] [retval] Windows.Media.PlayTo.PlayToSource** value);
                    [eventadd] HRESULT ImageFailed([in] Windows.UI.Xaml.ExceptionRoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ImageFailed([in] EventRegistrationToken token);
                    [eventadd] HRESULT ImageOpened([in] Windows.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ImageOpened([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Image)]
                [uuid(F445119E-881F-48BB-873A-64417CA4F002)]
                interface IImage2 : IInspectable
                {
                    HRESULT GetAsCastingSource([out] [retval] Windows.Media.Casting.CastingSource** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Image)]
                [uuid(06EBE792-47C2-4D92-A488-8CD685D06ACA)]
                interface IImage3 : IInspectable
                {
                    HRESULT GetAlphaMask([out] [retval] Windows.UI.Composition.CompositionBrush** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Image)]
                [uuid(89903772-C336-43D1-9D51-C3BBD5D5D691)]
                interface IImageStatics : IInspectable
                {
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NineGridProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [deprecated("PlayToSource may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propget] HRESULT PlayToSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkCanvas)]
                [uuid(29443C28-8E48-4FC8-A473-35B0BA12ACEA)]
                interface IInkCanvas : IInspectable
                {
                    [propget] HRESULT InkPresenter([out] [retval] Windows.UI.Input.Inking.InkPresenter** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkCanvas)]
                [uuid(924AC2DE-AB04-48F0-9653-E0F2DA4DBF1A)]
                interface IInkCanvasFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.InkCanvas** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbar)]
                [uuid(3DDD0CCA-51F0-486F-A03E-4EE13DC12BCB)]
                interface IInkToolbar : IInspectable
                {
                    [propget] HRESULT InitialControls([out] [retval] Windows.UI.Xaml.Controls.InkToolbarInitialControls* value);
                    [propput] HRESULT InitialControls([in] Windows.UI.Xaml.Controls.InkToolbarInitialControls value);
                    [propget] HRESULT Children([out] [retval] Windows.UI.Xaml.DependencyObjectCollection** value);
                    [propget] HRESULT ActiveTool([out] [retval] Windows.UI.Xaml.Controls.InkToolbarToolButton** value);
                    [propput] HRESULT ActiveTool([in] Windows.UI.Xaml.Controls.InkToolbarToolButton* value);
                    [propget] HRESULT InkDrawingAttributes([out] [retval] Windows.UI.Input.Inking.InkDrawingAttributes** value);
                    [propget] HRESULT IsRulerButtonChecked([out] [retval] boolean* value);
                    [propput] HRESULT IsRulerButtonChecked([in] boolean value);
                    [propget] HRESULT TargetInkCanvas([out] [retval] Windows.UI.Xaml.Controls.InkCanvas** value);
                    [propput] HRESULT TargetInkCanvas([in] Windows.UI.Xaml.Controls.InkCanvas* value);
                    [eventadd] HRESULT ActiveToolChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.InkToolbar*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ActiveToolChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT InkDrawingAttributesChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.InkToolbar*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT InkDrawingAttributesChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT EraseAllClicked([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.InkToolbar*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT EraseAllClicked([in] EventRegistrationToken token);
                    [deprecated("InkToolbarRulerButton is replaced by InkToolbarStencilButton starting from Windows 10 Creators Update. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 4.0)] [eventadd] HRESULT IsRulerButtonCheckedChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.InkToolbar*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [deprecated("InkToolbarRulerButton is replaced by InkToolbarStencilButton starting from Windows 10 Creators Update. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 4.0)] [eventremove] HRESULT IsRulerButtonCheckedChanged([in] EventRegistrationToken token);
                    HRESULT GetToolButton([in] Windows.UI.Xaml.Controls.InkToolbarTool tool, [out] [retval] Windows.UI.Xaml.Controls.InkToolbarToolButton** result);
                    HRESULT GetToggleButton([in] Windows.UI.Xaml.Controls.InkToolbarToggle tool, [out] [retval] Windows.UI.Xaml.Controls.InkToolbarToggleButton** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbar)]
                [uuid(86F0C111-B484-454A-AE78-1D25A33D1C67)]
                interface IInkToolbar2 : IInspectable
                {
                    [propget] HRESULT IsStencilButtonChecked([out] [retval] boolean* value);
                    [propput] HRESULT IsStencilButtonChecked([in] boolean value);
                    [propget] HRESULT ButtonFlyoutPlacement([out] [retval] Windows.UI.Xaml.Controls.InkToolbarButtonFlyoutPlacement* value);
                    [propput] HRESULT ButtonFlyoutPlacement([in] Windows.UI.Xaml.Controls.InkToolbarButtonFlyoutPlacement value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [eventadd] HRESULT IsStencilButtonCheckedChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.InkToolbar*, Windows.UI.Xaml.Controls.InkToolbarIsStencilButtonCheckedChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT IsStencilButtonCheckedChanged([in] EventRegistrationToken token);
                    HRESULT GetMenuButton([in] Windows.UI.Xaml.Controls.InkToolbarMenuKind menu, [out] [retval] Windows.UI.Xaml.Controls.InkToolbarMenuButton** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 8.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbar)]
                [uuid(A8A6DEF0-7AA8-5326-B7C4-88AE25013362)]
                interface IInkToolbar3 : IInspectable
                {
                    [propget] HRESULT TargetInkPresenter([out] [retval] Windows.UI.Input.Inking.InkPresenter** value);
                    [propput] HRESULT TargetInkPresenter([in] Windows.UI.Input.Inking.InkPresenter* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarBallpointPenButton)]
                [uuid(158329F8-1E99-3ACC-910F-9DA2D872AE12)]
                interface IInkToolbarBallpointPenButton : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarBallpointPenButton)]
                [uuid(2F0BD3E4-D754-4255-8EC4-00CD101296AB)]
                interface IInkToolbarBallpointPenButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.InkToolbarBallpointPenButton** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarCustomPen)]
                [uuid(4082207B-2F3D-4E6A-8C27-FE61EF7E70EB)]
                interface IInkToolbarCustomPen : IInspectable
                {
                    HRESULT CreateInkDrawingAttributes([in] Windows.UI.Xaml.Media.Brush* brush, [in] DOUBLE strokeWidth, [out] [retval] Windows.UI.Input.Inking.InkDrawingAttributes** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarCustomPenButton)]
                [uuid(46024401-2B2A-4F3C-A53C-1A045A408EFA)]
                interface IInkToolbarCustomPenButton : IInspectable
                {
                    [propget] HRESULT CustomPen([out] [retval] Windows.UI.Xaml.Controls.InkToolbarCustomPen** value);
                    [propput] HRESULT CustomPen([in] Windows.UI.Xaml.Controls.InkToolbarCustomPen* value);
                    [propget] HRESULT ConfigurationContent([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT ConfigurationContent([in] Windows.UI.Xaml.UIElement* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarCustomPenButton)]
                [uuid(0F2EF0BA-C8B9-4C36-8987-94D3DAFEDE18)]
                interface IInkToolbarCustomPenButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.InkToolbarCustomPenButton** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarCustomPenButton)]
                [uuid(373C25F4-E555-4E85-A80D-DA6B8433DBDE)]
                interface IInkToolbarCustomPenButtonStatics : IInspectable
                {
                    [propget] HRESULT CustomPenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ConfigurationContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarCustomPen)]
                [uuid(D214D636-F1AA-4F48-BF2C-A926CAAE4C60)]
                interface IInkToolbarCustomPenFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.InkToolbarCustomPen** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarCustomPen)]
                [uuid(9D22EB6C-1255-4256-B6BD-82C2FD273488)]
                interface IInkToolbarCustomPenOverrides : IInspectable
                {
                    HRESULT CreateInkDrawingAttributesCore([in] Windows.UI.Xaml.Media.Brush* brush, [in] DOUBLE strokeWidth, [out] [retval] Windows.UI.Input.Inking.InkDrawingAttributes** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarCustomToggleButton)]
                [uuid(550C4D84-4F54-4FBE-B12B-E0A50AAB0D05)]
                interface IInkToolbarCustomToggleButton : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarCustomToggleButton)]
                [uuid(4A00374D-4CD2-4ED9-863E-83B8CF3FD2AF)]
                interface IInkToolbarCustomToggleButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.InkToolbarCustomToggleButton** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarCustomToolButton)]
                [uuid(9F98ACD7-C605-4105-BE10-3943A7C0DA3C)]
                interface IInkToolbarCustomToolButton : IInspectable
                {
                    [propget] HRESULT ConfigurationContent([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT ConfigurationContent([in] Windows.UI.Xaml.UIElement* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarCustomToolButton)]
                [uuid(C295FE4E-30EB-4130-A6B6-8C85D8E26E89)]
                interface IInkToolbarCustomToolButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.InkToolbarCustomToolButton** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarCustomToolButton)]
                [uuid(11FE4CB9-BBAC-4314-9344-92C6693DDEAF)]
                interface IInkToolbarCustomToolButtonStatics : IInspectable
                {
                    [propget] HRESULT ConfigurationContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarEraserButton)]
                [uuid(4CBDB92E-5F5E-4B35-A41C-16FFB0283BC0)]
                interface IInkToolbarEraserButton : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarEraserButton)]
                [uuid(E7A59257-5AE8-436D-B2E2-93C200900CA0)]
                interface IInkToolbarEraserButton2 : IInspectable
                {
                    [propget] HRESULT IsClearAllVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsClearAllVisible([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarEraserButton)]
                [uuid(FD40611D-D1BA-4D67-AF00-148036AD492C)]
                interface IInkToolbarEraserButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.InkToolbarEraserButton** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarEraserButton)]
                [uuid(038A1736-C5CD-4311-83F4-38CBF07C2066)]
                interface IInkToolbarEraserButtonStatics2 : IInspectable
                {
                    [propget] HRESULT IsClearAllVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbar)]
                [uuid(3947AA99-36B1-4374-AB5C-98BF07A4320B)]
                interface IInkToolbarFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.InkToolbar** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarFlyoutItem)]
                [uuid(92B68786-37EE-4915-9E89-E187564A889A)]
                interface IInkToolbarFlyoutItem : IInspectable
                {
                    [propget] HRESULT Kind([out] [retval] Windows.UI.Xaml.Controls.InkToolbarFlyoutItemKind* value);
                    [propput] HRESULT Kind([in] Windows.UI.Xaml.Controls.InkToolbarFlyoutItemKind value);
                    [propget] HRESULT IsChecked([out] [retval] boolean* value);
                    [propput] HRESULT IsChecked([in] boolean value);
                    [eventadd] HRESULT Checked([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.InkToolbarFlyoutItem*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Checked([in] EventRegistrationToken token);
                    [eventadd] HRESULT Unchecked([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.InkToolbarFlyoutItem*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Unchecked([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarFlyoutItem)]
                [uuid(352E7B93-803B-4F0E-8C72-9DFC0329329F)]
                interface IInkToolbarFlyoutItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.InkToolbarFlyoutItem** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarFlyoutItem)]
                [uuid(1FE54B64-4063-4A5F-B89C-9F58935EE379)]
                interface IInkToolbarFlyoutItemStatics : IInspectable
                {
                    [propget] HRESULT KindProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsCheckedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarHighlighterButton)]
                [uuid(0B3CC15B-7ABF-487E-ACC1-5B5048FEE6D2)]
                interface IInkToolbarHighlighterButton : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarHighlighterButton)]
                [uuid(7C334ADD-42CA-4943-94A4-23B5A6E55CF1)]
                interface IInkToolbarHighlighterButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.InkToolbarHighlighterButton** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarIsStencilButtonCheckedChangedEventArgs)]
                [uuid(026EDD26-D32B-4E28-A033-D5097662B292)]
                interface IInkToolbarIsStencilButtonCheckedChangedEventArgs : IInspectable
                {
                    [propget] HRESULT StencilButton([out] [retval] Windows.UI.Xaml.Controls.InkToolbarStencilButton** value);
                    [propget] HRESULT StencilKind([out] [retval] Windows.UI.Xaml.Controls.InkToolbarStencilKind* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarMenuButton)]
                [uuid(860ECAE5-7633-4EA1-A209-50392D1AEBD1)]
                interface IInkToolbarMenuButton : IInspectable
                {
                    [propget] HRESULT MenuKind([out] [retval] Windows.UI.Xaml.Controls.InkToolbarMenuKind* value);
                    [propget] HRESULT IsExtensionGlyphShown([out] [retval] boolean* value);
                    [propput] HRESULT IsExtensionGlyphShown([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarMenuButton)]
                [uuid(7A463A9D-5DC7-44A7-AFD0-2B685CB9A96C)]
                interface IInkToolbarMenuButtonFactory : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarMenuButton)]
                [uuid(F03B17A6-B8B0-4A87-A961-37CD05D83137)]
                interface IInkToolbarMenuButtonStatics : IInspectable
                {
                    [propget] HRESULT IsExtensionGlyphShownProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarPenButton)]
                [uuid(E0B80C21-B032-40EE-A2B9-507F6CCB827B)]
                interface IInkToolbarPenButton : IInspectable
                {
                    [propget] HRESULT Palette([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.Brush*>** value);
                    [propput] HRESULT Palette([in] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.Brush*>* value);
                    [propget] HRESULT MinStrokeWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT MinStrokeWidth([in] DOUBLE value);
                    [propget] HRESULT MaxStrokeWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT MaxStrokeWidth([in] DOUBLE value);
                    [propget] HRESULT SelectedBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propget] HRESULT SelectedBrushIndex([out] [retval] INT32* value);
                    [propput] HRESULT SelectedBrushIndex([in] INT32 value);
                    [propget] HRESULT SelectedStrokeWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT SelectedStrokeWidth([in] DOUBLE value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarPenButton)]
                [uuid(B1463D21-59CB-4A83-92E1-692842797B2E)]
                interface IInkToolbarPenButtonFactory : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarPenButton)]
                [uuid(B922CE42-09F0-453D-8026-44DAF2753F65)]
                interface IInkToolbarPenButtonStatics : IInspectable
                {
                    [propget] HRESULT PaletteProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinStrokeWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxStrokeWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedBrushIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedStrokeWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarPenConfigurationControl)]
                [uuid(601AE5F6-28A5-44CC-89A6-380E91A572DD)]
                interface IInkToolbarPenConfigurationControl : IInspectable
                {
                    [propget] HRESULT PenButton([out] [retval] Windows.UI.Xaml.Controls.InkToolbarPenButton** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarPenConfigurationControl)]
                [uuid(67F065EE-F5E7-46EB-9187-8D3CA3AF891B)]
                interface IInkToolbarPenConfigurationControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.InkToolbarPenConfigurationControl** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarPenConfigurationControl)]
                [uuid(48A61BEF-19CE-41BB-ABE0-7C8726FAE75E)]
                interface IInkToolbarPenConfigurationControlStatics : IInspectable
                {
                    [propget] HRESULT PenButtonProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarPencilButton)]
                [uuid(5B112832-1984-4148-9F25-382B35DB087F)]
                interface IInkToolbarPencilButton : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarPencilButton)]
                [uuid(DB66D85F-CFD6-495F-93AB-B8566AF9F8AF)]
                interface IInkToolbarPencilButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.InkToolbarPencilButton** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [deprecated("InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarRulerButton)]
                [uuid(4A992832-1984-4148-9F25-382B35DB087F)]
                interface IInkToolbarRulerButton : IInspectable
                {
                    [deprecated("InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 4.0)] [propget] HRESULT Ruler([out] [retval] Windows.UI.Input.Inking.InkPresenterRuler** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [deprecated("InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarRulerButton)]
                [uuid(BB26D85F-CFD6-495F-93AB-B8566AF9F8AF)]
                interface IInkToolbarRulerButtonFactory : IInspectable
                {
                    [deprecated("InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 4.0)] HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.InkToolbarRulerButton** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [deprecated("InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarRulerButton)]
                [uuid(BAE75F65-BE30-4BEE-964B-FF9E498FEE37)]
                interface IInkToolbarRulerButtonStatics : IInspectable
                {
                    [deprecated("InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 4.0)] [propget] HRESULT RulerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbar)]
                [uuid(A3B493BB-CB4F-4E6B-A33D-F11E7A295EFA)]
                interface IInkToolbarStatics : IInspectable
                {
                    [propget] HRESULT InitialControlsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ChildrenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ActiveToolProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT InkDrawingAttributesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsRulerButtonCheckedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TargetInkCanvasProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbar)]
                [uuid(AAC1F8F2-2C1F-4E9C-B3F3-31FF22B51C7A)]
                interface IInkToolbarStatics2 : IInspectable
                {
                    [propget] HRESULT IsStencilButtonCheckedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ButtonFlyoutPlacementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 8.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbar)]
                [uuid(A0EE663D-B63F-516E-A0A4-0704C4544D62)]
                interface IInkToolbarStatics3 : IInspectable
                {
                    [propget] HRESULT TargetInkPresenterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarStencilButton)]
                [uuid(306A2616-5B40-4BF3-92B7-F1DF936AEFF5)]
                interface IInkToolbarStencilButton : IInspectable
                {
                    [propget] HRESULT Ruler([out] [retval] Windows.UI.Input.Inking.InkPresenterRuler** value);
                    [propget] HRESULT Protractor([out] [retval] Windows.UI.Input.Inking.InkPresenterProtractor** value);
                    [propget] HRESULT SelectedStencil([out] [retval] Windows.UI.Xaml.Controls.InkToolbarStencilKind* value);
                    [propput] HRESULT SelectedStencil([in] Windows.UI.Xaml.Controls.InkToolbarStencilKind value);
                    [propget] HRESULT IsRulerItemVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsRulerItemVisible([in] boolean value);
                    [propget] HRESULT IsProtractorItemVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsProtractorItemVisible([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarStencilButton)]
                [uuid(A20701D1-8A70-4D77-89D4-1730A3A58EDF)]
                interface IInkToolbarStencilButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.InkToolbarStencilButton** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarStencilButton)]
                [uuid(4748C07F-63E4-420D-939A-6B7243E9D124)]
                interface IInkToolbarStencilButtonStatics : IInspectable
                {
                    [propget] HRESULT RulerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ProtractorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedStencilProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsRulerItemVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsProtractorItemVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarToggleButton)]
                [uuid(B4A278FA-F5F0-4B1F-BEB0-0B8A29905A4A)]
                interface IInkToolbarToggleButton : IInspectable
                {
                    [propget] HRESULT ToggleKind([out] [retval] Windows.UI.Xaml.Controls.InkToolbarToggle* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarToggleButton)]
                [uuid(B2F90710-E5A1-4365-9D1A-E5B7AD8B9668)]
                interface IInkToolbarToggleButtonFactory : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarToolButton)]
                [uuid(5C5AF41E-CCB7-4458-8064-A9849D31561B)]
                interface IInkToolbarToolButton : IInspectable
                {
                    [propget] HRESULT ToolKind([out] [retval] Windows.UI.Xaml.Controls.InkToolbarTool* value);
                    [propget] HRESULT IsExtensionGlyphShown([out] [retval] boolean* value);
                    [propput] HRESULT IsExtensionGlyphShown([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarToolButton)]
                [uuid(6293BF4B-89FE-4ED0-A1A6-88D3EBA917B2)]
                interface IInkToolbarToolButtonFactory : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.InkToolbarToolButton)]
                [uuid(9E097D18-D136-4EF6-B0FD-1A78C2884A01)]
                interface IInkToolbarToolButtonStatics : IInspectable
                {
                    [propget] HRESULT IsExtensionGlyphShownProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [uuid(6B8DE08F-6527-4D39-BCBF-58B01DA923D7)]
                interface IInsertionPanel : IInspectable
                {
                    HRESULT GetInsertionIndexes([in] Windows.Foundation.Point position, [out] INT32* first, [out] INT32* second);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs)]
                [uuid(16F597CD-EBFF-4FB4-8714-26147418B945)]
                interface IIsTextTrimmedChangedEventArgs : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemClickEventArgs)]
                [uuid(9C314242-F29A-494D-A3A5-D4C7B2A46852)]
                interface IItemClickEventArgs : IInspectable
                {
                    [propget] HRESULT ClickedItem([out] [retval] IInspectable** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemContainerGenerator)]
                [uuid(40765F00-83F0-4D7F-B1B8-F19DE4F1D5DA)]
                interface IItemContainerGenerator : IInspectable
                {
                    [eventadd] HRESULT ItemsChanged([in] Windows.UI.Xaml.Controls.Primitives.ItemsChangedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ItemsChanged([in] EventRegistrationToken token);
                    [deprecated("ItemFromContainer may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ItemFromContainer.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] HRESULT ItemFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] IInspectable** result);
                    [deprecated("ContainerFromItem may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ContainerFromItem.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] HRESULT ContainerFromItem([in] IInspectable* item, [out] [retval] Windows.UI.Xaml.DependencyObject** result);
                    [deprecated("IndexFromContainer may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.IndexFromContainer.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] HRESULT IndexFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] INT32* result);
                    [deprecated("ContainerFromIndex may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ContainerFromIndex.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] HRESULT ContainerFromIndex([in] INT32 index, [out] [retval] Windows.UI.Xaml.DependencyObject** result);
                    HRESULT GetItemContainerGeneratorForPanel([in] Windows.UI.Xaml.Controls.Panel* panel, [out] [retval] Windows.UI.Xaml.Controls.ItemContainerGenerator** result);
                    HRESULT StartAt([in] Windows.UI.Xaml.Controls.Primitives.GeneratorPosition position, [in] Windows.UI.Xaml.Controls.Primitives.GeneratorDirection direction, [in] boolean allowStartAtRealizedItem);
                    HRESULT Stop();
                    HRESULT GenerateNext([out] boolean* isNewlyRealized, [out] [retval] Windows.UI.Xaml.DependencyObject** returnValue);
                    HRESULT PrepareItemContainer([in] Windows.UI.Xaml.DependencyObject* container);
                    HRESULT RemoveAll();
                    HRESULT Remove([in] Windows.UI.Xaml.Controls.Primitives.GeneratorPosition position, [in] INT32 count);
                    HRESULT GeneratorPositionFromIndex([in] INT32 itemIndex, [out] [retval] Windows.UI.Xaml.Controls.Primitives.GeneratorPosition* result);
                    HRESULT IndexFromGeneratorPosition([in] Windows.UI.Xaml.Controls.Primitives.GeneratorPosition position, [out] [retval] INT32* result);
                    HRESULT Recycle([in] Windows.UI.Xaml.Controls.Primitives.GeneratorPosition position, [in] INT32 count);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(53C9F23A-F25D-446A-99B8-C7AEB839050F)]
                interface IItemContainerMapping : IInspectable
                {
                    HRESULT ItemFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] IInspectable** result);
                    HRESULT ContainerFromItem([in] IInspectable* item, [out] [retval] Windows.UI.Xaml.DependencyObject** result);
                    HRESULT IndexFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] INT32* result);
                    HRESULT ContainerFromIndex([in] INT32 index, [out] [retval] Windows.UI.Xaml.DependencyObject** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsControl)]
                [uuid(F4A91DD8-D979-4381-8652-BDA0342A765E)]
                interface IItemsControl : IInspectable
                {
                    [propget] HRESULT ItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT ItemsSource([in] IInspectable* value);
                    [propget] HRESULT Items([out] [retval] Windows.UI.Xaml.Controls.ItemCollection** value);
                    [propget] HRESULT ItemTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT ItemTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT ItemTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT ItemTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT ItemsPanel([out] [retval] Windows.UI.Xaml.Controls.ItemsPanelTemplate** value);
                    [propput] HRESULT ItemsPanel([in] Windows.UI.Xaml.Controls.ItemsPanelTemplate* value);
                    [propget] HRESULT DisplayMemberPath([out] [retval] HSTRING* value);
                    [propput] HRESULT DisplayMemberPath([in] HSTRING value);
                    [propget] HRESULT ItemContainerStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT ItemContainerStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT ItemContainerStyleSelector([out] [retval] Windows.UI.Xaml.Controls.StyleSelector** value);
                    [propput] HRESULT ItemContainerStyleSelector([in] Windows.UI.Xaml.Controls.StyleSelector* value);
                    [propget] HRESULT ItemContainerGenerator([out] [retval] Windows.UI.Xaml.Controls.ItemContainerGenerator** value);
                    [propget] HRESULT ItemContainerTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT ItemContainerTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                    [propget] HRESULT GroupStyle([out] [retval] Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.Controls.GroupStyle*>** value);
                    [propget] HRESULT GroupStyleSelector([out] [retval] Windows.UI.Xaml.Controls.GroupStyleSelector** value);
                    [propput] HRESULT GroupStyleSelector([in] Windows.UI.Xaml.Controls.GroupStyleSelector* value);
                    [propget] HRESULT IsGrouping([out] [retval] boolean* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsControl)]
                [uuid(754C3266-0529-45E3-8748-BF747D158357)]
                interface IItemsControl2 : IInspectable
                {
                    [propget] HRESULT ItemsPanelRoot([out] [retval] Windows.UI.Xaml.Controls.Panel** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsControl)]
                [uuid(502B7489-AEE4-4DE3-A2AB-195AC20C4212)]
                interface IItemsControl3 : IInspectable
                {
                    HRESULT GroupHeaderContainerFromItemContainer([in] Windows.UI.Xaml.DependencyObject* itemContainer, [out] [retval] Windows.UI.Xaml.DependencyObject** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsControl)]
                [uuid(F7BBC359-F8FD-471C-BCB2-2C74BE8EBF8C)]
                interface IItemsControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ItemsControl** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsControl)]
                [uuid(C79BB41B-A084-4301-A496-72971F364ED1)]
                interface IItemsControlOverrides : IInspectable
                {
                    HRESULT IsItemItsOwnContainerOverride([in] IInspectable* item, [out] [retval] boolean* result);
                    HRESULT GetContainerForItemOverride([out] [retval] Windows.UI.Xaml.DependencyObject** result);
                    HRESULT ClearContainerForItemOverride([in] Windows.UI.Xaml.DependencyObject* element, [in] IInspectable* item);
                    HRESULT PrepareContainerForItemOverride([in] Windows.UI.Xaml.DependencyObject* element, [in] IInspectable* item);
                    HRESULT OnItemsChanged([in] IInspectable* e);
                    HRESULT OnItemContainerStyleChanged([in] Windows.UI.Xaml.Style* oldItemContainerStyle, [in] Windows.UI.Xaml.Style* newItemContainerStyle);
                    HRESULT OnItemContainerStyleSelectorChanged([in] Windows.UI.Xaml.Controls.StyleSelector* oldItemContainerStyleSelector, [in] Windows.UI.Xaml.Controls.StyleSelector* newItemContainerStyleSelector);
                    HRESULT OnItemTemplateChanged([in] Windows.UI.Xaml.DataTemplate* oldItemTemplate, [in] Windows.UI.Xaml.DataTemplate* newItemTemplate);
                    HRESULT OnItemTemplateSelectorChanged([in] Windows.UI.Xaml.Controls.DataTemplateSelector* oldItemTemplateSelector, [in] Windows.UI.Xaml.Controls.DataTemplateSelector* newItemTemplateSelector);
                    HRESULT OnGroupStyleSelectorChanged([in] Windows.UI.Xaml.Controls.GroupStyleSelector* oldGroupStyleSelector, [in] Windows.UI.Xaml.Controls.GroupStyleSelector* newGroupStyleSelector);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsControl)]
                [uuid(37DABD89-DCFB-45B8-9AFE-874DF097905E)]
                interface IItemsControlStatics : IInspectable
                {
                    [propget] HRESULT ItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemTemplateSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemsPanelProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DisplayMemberPathProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemContainerStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemContainerStyleSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemContainerTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GroupStyleSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsGroupingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetItemsOwner([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.ItemsControl** result);
                    HRESULT ItemsControlFromItemContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] Windows.UI.Xaml.Controls.ItemsControl** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsPanelTemplate)]
                [uuid(14EAD768-34B2-4B97-BF3C-E8D73230A2AA)]
                interface IItemsPanelTemplate : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsPickedEventArgs)]
                [uuid(F95B9AAC-A621-488E-9156-8EE31165BE04)]
                interface IItemsPickedEventArgs : IInspectable
                {
                    [propget] HRESULT AddedItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT RemovedItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsPresenter)]
                [uuid(C271569B-6DCA-4E2B-8E14-C55136B02A71)]
                interface IItemsPresenter : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT HeaderTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT HeaderTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsPresenter)]
                [uuid(5C04AA33-1DF3-4731-A4C9-DA818378D63D)]
                interface IItemsPresenter2 : IInspectable
                {
                    [propget] HRESULT Footer([out] [retval] IInspectable** value);
                    [propput] HRESULT Footer([in] IInspectable* value);
                    [propget] HRESULT FooterTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT FooterTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT FooterTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT FooterTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsPresenter)]
                [uuid(18DE66CD-4A6C-4B2E-AA86-CB126C9A2920)]
                interface IItemsPresenterStatics : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsPresenter)]
                [uuid(8971632E-7867-4D66-9630-29F1C5F7403F)]
                interface IItemsPresenterStatics2 : IInspectable
                {
                    [propget] HRESULT FooterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FooterTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FooterTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsStackPanel)]
                [uuid(DF7AB79D-7AD5-4B58-9363-919AF90226E6)]
                interface IItemsStackPanel : IInspectable
                {
                    [propget] HRESULT GroupPadding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT GroupPadding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT FirstCacheIndex([out] [retval] INT32* value);
                    [propget] HRESULT FirstVisibleIndex([out] [retval] INT32* value);
                    [propget] HRESULT LastVisibleIndex([out] [retval] INT32* value);
                    [propget] HRESULT LastCacheIndex([out] [retval] INT32* value);
                    [propget] HRESULT ScrollingDirection([out] [retval] Windows.UI.Xaml.Controls.PanelScrollingDirection* value);
                    [propget] HRESULT GroupHeaderPlacement([out] [retval] Windows.UI.Xaml.Controls.Primitives.GroupHeaderPlacement* value);
                    [propput] HRESULT GroupHeaderPlacement([in] Windows.UI.Xaml.Controls.Primitives.GroupHeaderPlacement value);
                    [propget] HRESULT ItemsUpdatingScrollMode([out] [retval] Windows.UI.Xaml.Controls.ItemsUpdatingScrollMode* value);
                    [propput] HRESULT ItemsUpdatingScrollMode([in] Windows.UI.Xaml.Controls.ItemsUpdatingScrollMode value);
                    [propget] HRESULT CacheLength([out] [retval] DOUBLE* value);
                    [propput] HRESULT CacheLength([in] DOUBLE value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsStackPanel)]
                [uuid(EEEECDB0-00B4-4534-937B-56318B293E92)]
                interface IItemsStackPanel2 : IInspectable
                {
                    [propget] HRESULT AreStickyGroupHeadersEnabled([out] [retval] boolean* value);
                    [propput] HRESULT AreStickyGroupHeadersEnabled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsStackPanel)]
                [uuid(CA25D63F-044F-4B6B-B315-0B60E0B4F87D)]
                interface IItemsStackPanelStatics : IInspectable
                {
                    [propget] HRESULT GroupPaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GroupHeaderPlacementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CacheLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsStackPanel)]
                [uuid(3972EB2C-384A-48BF-ADFD-772E2572C504)]
                interface IItemsStackPanelStatics2 : IInspectable
                {
                    [propget] HRESULT AreStickyGroupHeadersEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsWrapGrid)]
                [uuid(DDFE6B5F-BA88-4A7D-8A5B-E58CAF0F4E2D)]
                interface IItemsWrapGrid : IInspectable
                {
                    [propget] HRESULT GroupPadding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT GroupPadding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT MaximumRowsOrColumns([out] [retval] INT32* value);
                    [propput] HRESULT MaximumRowsOrColumns([in] INT32 value);
                    [propget] HRESULT ItemWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT ItemWidth([in] DOUBLE value);
                    [propget] HRESULT ItemHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT ItemHeight([in] DOUBLE value);
                    [propget] HRESULT FirstCacheIndex([out] [retval] INT32* value);
                    [propget] HRESULT FirstVisibleIndex([out] [retval] INT32* value);
                    [propget] HRESULT LastVisibleIndex([out] [retval] INT32* value);
                    [propget] HRESULT LastCacheIndex([out] [retval] INT32* value);
                    [propget] HRESULT ScrollingDirection([out] [retval] Windows.UI.Xaml.Controls.PanelScrollingDirection* value);
                    [propget] HRESULT GroupHeaderPlacement([out] [retval] Windows.UI.Xaml.Controls.Primitives.GroupHeaderPlacement* value);
                    [propput] HRESULT GroupHeaderPlacement([in] Windows.UI.Xaml.Controls.Primitives.GroupHeaderPlacement value);
                    [propget] HRESULT CacheLength([out] [retval] DOUBLE* value);
                    [propput] HRESULT CacheLength([in] DOUBLE value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsWrapGrid)]
                [uuid(80C21C0F-63EC-4258-BD61-D4A6956C864A)]
                interface IItemsWrapGrid2 : IInspectable
                {
                    [propget] HRESULT AreStickyGroupHeadersEnabled([out] [retval] boolean* value);
                    [propput] HRESULT AreStickyGroupHeadersEnabled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsWrapGrid)]
                [uuid(4EC5427D-24A0-449A-B763-3077BA0F2DD5)]
                interface IItemsWrapGridStatics : IInspectable
                {
                    [propget] HRESULT GroupPaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaximumRowsOrColumnsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GroupHeaderPlacementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CacheLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsWrapGrid)]
                [uuid(2E27D3F7-FEAA-478D-BFD1-29338ADC5A03)]
                interface IItemsWrapGridStatics2 : IInspectable
                {
                    [propget] HRESULT AreStickyGroupHeadersEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListBox)]
                [uuid(E9F3B9FF-8E91-4ECF-A707-C927F694F881)]
                interface IListBox : IInspectable
                {
                    [propget] HRESULT SelectedItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT SelectionMode([out] [retval] Windows.UI.Xaml.Controls.SelectionMode* value);
                    [propput] HRESULT SelectionMode([in] Windows.UI.Xaml.Controls.SelectionMode value);
                    HRESULT ScrollIntoView([in] IInspectable* item);
                    HRESULT SelectAll();
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListBox)]
                [uuid(70572ABA-8AD1-4085-9350-DEEE359294E3)]
                interface IListBox2 : IInspectable
                {
                    [propget] HRESULT SingleSelectionFollowsFocus([out] [retval] boolean* value);
                    [propput] HRESULT SingleSelectionFollowsFocus([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListBox)]
                [uuid(60CDFDA2-2F44-444B-9C94-B8C9FDA46F59)]
                interface IListBoxFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ListBox** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListBoxItem)]
                [uuid(43C13323-6EDF-4E4B-B6B2-3A93EEC41D95)]
                interface IListBoxItem : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListBoxItem)]
                [uuid(4398B8D4-A3DE-402C-B23D-190384B27CA8)]
                interface IListBoxItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ListBoxItem** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListBox)]
                [uuid(6D3F7F73-706A-4E53-A9AA-C9A53C9CDD70)]
                interface IListBoxStatics : IInspectable
                {
                    [propget] HRESULT SelectionModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListBox)]
                [uuid(0089ADEB-B709-4C8D-B1ED-4A7D97EE7716)]
                interface IListBoxStatics2 : IInspectable
                {
                    [propget] HRESULT SingleSelectionFollowsFocusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListPickerFlyout)]
                [uuid(0F0CB9D7-E5F3-45E6-9063-FF7BBB193C47)]
                interface IListPickerFlyout : IInspectable
                {
                    [propget] HRESULT ItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT ItemsSource([in] IInspectable* value);
                    [propget] HRESULT ItemTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT ItemTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT DisplayMemberPath([out] [retval] HSTRING* value);
                    [propput] HRESULT DisplayMemberPath([in] HSTRING value);
                    [propget] HRESULT SelectionMode([out] [retval] Windows.UI.Xaml.Controls.ListPickerFlyoutSelectionMode* value);
                    [propput] HRESULT SelectionMode([in] Windows.UI.Xaml.Controls.ListPickerFlyoutSelectionMode value);
                    [propget] HRESULT SelectedIndex([out] [retval] INT32* value);
                    [propput] HRESULT SelectedIndex([in] INT32 value);
                    [propget] HRESULT SelectedItem([out] [retval] IInspectable** value);
                    [propput] HRESULT SelectedItem([in] IInspectable* value);
                    [propget] HRESULT SelectedValue([out] [retval] IInspectable** value);
                    [propput] HRESULT SelectedValue([in] IInspectable* value);
                    [propget] HRESULT SelectedValuePath([out] [retval] HSTRING* value);
                    [propput] HRESULT SelectedValuePath([in] HSTRING value);
                    [propget] HRESULT SelectedItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [eventadd] HRESULT ItemsPicked([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListPickerFlyout*, Windows.UI.Xaml.Controls.ItemsPickedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ItemsPicked([in] EventRegistrationToken token);
                    HRESULT ShowAtAsync([in] Windows.UI.Xaml.FrameworkElement* target, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<IInspectable*>*>** operation);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListPickerFlyoutPresenter)]
                [uuid(68155FB3-883E-417A-80D0-E2FD88410084)]
                interface IListPickerFlyoutPresenter : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListPickerFlyout)]
                [uuid(FEE25B97-8B96-4602-81D2-82FD8E0F7EA8)]
                interface IListPickerFlyoutStatics : IInspectable
                {
                    [propget] HRESULT ItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DisplayMemberPathProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectionModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedItemProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedValuePathProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListView)]
                [uuid(F6CE8C6D-FE96-41AD-A64A-C2B81C4AF7F8)]
                interface IListView : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [uuid(3D0813BA-6890-4537-BFE5-796D9458EDD6)]
                interface IListViewBase : IInspectable
                {
                    [propget] HRESULT SelectedItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT SelectionMode([out] [retval] Windows.UI.Xaml.Controls.ListViewSelectionMode* value);
                    [propput] HRESULT SelectionMode([in] Windows.UI.Xaml.Controls.ListViewSelectionMode value);
                    [propget] HRESULT IsSwipeEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsSwipeEnabled([in] boolean value);
                    [propget] HRESULT CanDragItems([out] [retval] boolean* value);
                    [propput] HRESULT CanDragItems([in] boolean value);
                    [propget] HRESULT CanReorderItems([out] [retval] boolean* value);
                    [propput] HRESULT CanReorderItems([in] boolean value);
                    [propget] HRESULT IsItemClickEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsItemClickEnabled([in] boolean value);
                    [propget] HRESULT DataFetchSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT DataFetchSize([in] DOUBLE value);
                    [propget] HRESULT IncrementalLoadingThreshold([out] [retval] DOUBLE* value);
                    [propput] HRESULT IncrementalLoadingThreshold([in] DOUBLE value);
                    [propget] HRESULT IncrementalLoadingTrigger([out] [retval] Windows.UI.Xaml.Controls.IncrementalLoadingTrigger* value);
                    [propput] HRESULT IncrementalLoadingTrigger([in] Windows.UI.Xaml.Controls.IncrementalLoadingTrigger value);
                    [eventadd] HRESULT ItemClick([in] Windows.UI.Xaml.Controls.ItemClickEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ItemClick([in] EventRegistrationToken token);
                    [eventadd] HRESULT DragItemsStarting([in] Windows.UI.Xaml.Controls.DragItemsStartingEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DragItemsStarting([in] EventRegistrationToken token);
                    [overload("ScrollIntoView")] HRESULT ScrollIntoView([in] IInspectable* item);
                    HRESULT SelectAll();
                    HRESULT LoadMoreItemsAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.UI.Xaml.Data.LoadMoreItemsResult>** operation);
                    [overload("ScrollIntoView")] HRESULT ScrollIntoViewWithAlignment([in] IInspectable* item, [in] Windows.UI.Xaml.Controls.ScrollIntoViewAlignment alignment);
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT HeaderTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT HeaderTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [uuid(D1C2A4F7-78A3-4491-86E0-2DDEBC007AC5)]
                interface IListViewBase2 : IInspectable
                {
                    [propget] HRESULT ShowsScrollingPlaceholders([out] [retval] boolean* value);
                    [propput] HRESULT ShowsScrollingPlaceholders([in] boolean value);
                    [eventadd] HRESULT ContainerContentChanging([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase*, Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContainerContentChanging([in] EventRegistrationToken token);
                    HRESULT SetDesiredContainerUpdateDuration([in] Windows.Foundation.TimeSpan duration);
                    [propget] HRESULT Footer([out] [retval] IInspectable** value);
                    [propput] HRESULT Footer([in] IInspectable* value);
                    [propget] HRESULT FooterTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT FooterTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT FooterTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT FooterTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [uuid(B364C035-0A13-406F-A3FB-F30E7DDCA94C)]
                interface IListViewBase3 : IInspectable
                {
                    [propget] HRESULT ReorderMode([out] [retval] Windows.UI.Xaml.Controls.ListViewReorderMode* value);
                    [propput] HRESULT ReorderMode([in] Windows.UI.Xaml.Controls.ListViewReorderMode value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [uuid(18B7792B-11DC-4EB6-A7BC-741ADB3EEB79)]
                interface IListViewBase4 : IInspectable
                {
                    [propget] HRESULT SelectedRanges([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Data.ItemIndexRange*>** value);
                    [propget] HRESULT IsMultiSelectCheckBoxEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsMultiSelectCheckBoxEnabled([in] boolean value);
                    [eventadd] HRESULT DragItemsCompleted([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase*, Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DragItemsCompleted([in] EventRegistrationToken token);
                    [eventadd] HRESULT ChoosingItemContainer([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase*, Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ChoosingItemContainer([in] EventRegistrationToken token);
                    [eventadd] HRESULT ChoosingGroupHeaderContainer([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase*, Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ChoosingGroupHeaderContainer([in] EventRegistrationToken token);
                    HRESULT SelectRange([in] Windows.UI.Xaml.Data.ItemIndexRange* itemIndexRange);
                    HRESULT DeselectRange([in] Windows.UI.Xaml.Data.ItemIndexRange* itemIndexRange);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [uuid(1A9C6E99-1719-4B80-B335-628331A07019)]
                interface IListViewBase5 : IInspectable
                {
                    [propget] HRESULT SingleSelectionFollowsFocus([out] [retval] boolean* value);
                    [propput] HRESULT SingleSelectionFollowsFocus([in] boolean value);
                    HRESULT IsDragSource([out] [retval] boolean* result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [uuid(F8A42637-965B-483B-94E5-E5C9FEF0E352)]
                interface IListViewBase6 : IInspectable
                {
                    HRESULT TryStartConnectedAnimationAsync([in] Windows.UI.Xaml.Media.Animation.ConnectedAnimation* animation, [in] IInspectable* item, [in] HSTRING elementName, [out] [retval] Windows.Foundation.IAsyncOperation<boolean>** operation);
                    HRESULT PrepareConnectedAnimation([in] HSTRING key, [in] IInspectable* item, [in] HSTRING elementName, [out] [retval] Windows.UI.Xaml.Media.Animation.ConnectedAnimation** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [uuid(E67E6C7F-150F-46D0-A6AC-C5002BD9CA53)]
                interface IListViewBaseFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ListViewBase** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBaseHeaderItem)]
                [uuid(6D0DED27-0D19-4091-8917-CE7C85C1E630)]
                interface IListViewBaseHeaderItem : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBaseHeaderItem)]
                [uuid(3872A6A1-EA19-455F-9DF7-147CC41D329C)]
                interface IListViewBaseHeaderItemFactory : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [uuid(8532B8F7-3E16-455B-89A8-C1346223F6D3)]
                interface IListViewBaseStatics : IInspectable
                {
                    [propget] HRESULT SelectionModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSwipeEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanDragItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanReorderItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsItemClickEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DataFetchSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IncrementalLoadingThresholdProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IncrementalLoadingTriggerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SemanticZoomOwnerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsActiveViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsZoomedInViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [uuid(821C00C8-78CC-411F-9F2E-A55758227F3E)]
                interface IListViewBaseStatics2 : IInspectable
                {
                    [propget] HRESULT ShowsScrollingPlaceholdersProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FooterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FooterTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FooterTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [uuid(3B539091-31C6-4D0C-90AF-5DC1D6AE9C05)]
                interface IListViewBaseStatics3 : IInspectable
                {
                    [propget] HRESULT ReorderModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [uuid(AD13258B-FBD0-4F18-8BF8-9B8613951C22)]
                interface IListViewBaseStatics4 : IInspectable
                {
                    [propget] HRESULT IsMultiSelectCheckBoxEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [uuid(40346FCF-0476-4259-895F-A6569738620F)]
                interface IListViewBaseStatics5 : IInspectable
                {
                    [propget] HRESULT SingleSelectionFollowsFocusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListView)]
                [uuid(BDFF696D-3F22-41F9-97A6-883134A76113)]
                interface IListViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ListView** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewHeaderItem)]
                [uuid(1B61BAEB-E196-4B3B-A5F9-1ED636F3F79B)]
                interface IListViewHeaderItem : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewHeaderItem)]
                [uuid(68D2C96A-96B0-4F08-A7A5-F1086720A0FA)]
                interface IListViewHeaderItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ListViewHeaderItem** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewItem)]
                [uuid(B7BB4305-3DD9-43DE-A8C0-C472F085BC11)]
                interface IListViewItem : IInspectable
                {
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.ListViewItemTemplateSettings** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewItem)]
                [uuid(F431073D-9CAC-42A2-82DF-0F4490BC4E2E)]
                interface IListViewItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ListViewItem** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewPersistenceHelper)]
                [uuid(05BDE8A6-2191-4B4B-8C22-9B25676E806E)]
                interface IListViewPersistenceHelper : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewPersistenceHelper)]
                [uuid(6D0C2B08-BB9B-44F9-8063-5C3F9C21884B)]
                interface IListViewPersistenceHelperStatics : IInspectable
                {
                    HRESULT GetRelativeScrollPosition([in] Windows.UI.Xaml.Controls.ListViewBase* listViewBase, [in] Windows.UI.Xaml.Controls.ListViewItemToKeyHandler* itemToKeyHandler, [out] [retval] HSTRING* result);
                    HRESULT SetRelativeScrollPositionAsync([in] Windows.UI.Xaml.Controls.ListViewBase* listViewBase, [in] HSTRING relativeScrollPosition, [in] Windows.UI.Xaml.Controls.ListViewKeyToItemHandler* keyToItemHandler, [out] [retval] Windows.Foundation.IAsyncAction** operation);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaElement)]
                [uuid(A38ED2CF-13DE-4299-ADE2-AE18F74ED353)]
                interface IMediaElement : IInspectable
                {
                    [propget] HRESULT PosterSource([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT PosterSource([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT Source([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT Source([in] Windows.Foundation.Uri* value);
                    [propget] HRESULT IsMuted([out] [retval] boolean* value);
                    [propput] HRESULT IsMuted([in] boolean value);
                    [propget] HRESULT IsAudioOnly([out] [retval] boolean* value);
                    [propget] HRESULT AutoPlay([out] [retval] boolean* value);
                    [propput] HRESULT AutoPlay([in] boolean value);
                    [propget] HRESULT Volume([out] [retval] DOUBLE* value);
                    [propput] HRESULT Volume([in] DOUBLE value);
                    [propget] HRESULT Balance([out] [retval] DOUBLE* value);
                    [propput] HRESULT Balance([in] DOUBLE value);
                    [propget] HRESULT NaturalVideoHeight([out] [retval] INT32* value);
                    [propget] HRESULT NaturalVideoWidth([out] [retval] INT32* value);
                    [propget] HRESULT NaturalDuration([out] [retval] Windows.UI.Xaml.Duration* value);
                    [propget] HRESULT Position([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propput] HRESULT Position([in] Windows.Foundation.TimeSpan value);
                    [propget] HRESULT DownloadProgress([out] [retval] DOUBLE* value);
                    [propget] HRESULT BufferingProgress([out] [retval] DOUBLE* value);
                    [propget] HRESULT DownloadProgressOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT CurrentState([out] [retval] Windows.UI.Xaml.Media.MediaElementState* value);
                    [propget] HRESULT Markers([out] [retval] Windows.UI.Xaml.Media.TimelineMarkerCollection** value);
                    [propget] HRESULT CanSeek([out] [retval] boolean* value);
                    [propget] HRESULT CanPause([out] [retval] boolean* value);
                    [propget] HRESULT AudioStreamCount([out] [retval] INT32* value);
                    [propget] HRESULT AudioStreamIndex([out] [retval] Windows.Foundation.IReference<INT32>** value);
                    [propput] HRESULT AudioStreamIndex([in] Windows.Foundation.IReference<INT32>* value);
                    [propget] HRESULT PlaybackRate([out] [retval] DOUBLE* value);
                    [propput] HRESULT PlaybackRate([in] DOUBLE value);
                    [propget] HRESULT IsLooping([out] [retval] boolean* value);
                    [propput] HRESULT IsLooping([in] boolean value);
                    [deprecated("PlayToSource may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propget] HRESULT PlayToSource([out] [retval] Windows.Media.PlayTo.PlayToSource** value);
                    [propget] HRESULT DefaultPlaybackRate([out] [retval] DOUBLE* value);
                    [propput] HRESULT DefaultPlaybackRate([in] DOUBLE value);
                    [propget] HRESULT AspectRatioWidth([out] [retval] INT32* value);
                    [propget] HRESULT AspectRatioHeight([out] [retval] INT32* value);
                    [propget] HRESULT RealTimePlayback([out] [retval] boolean* value);
                    [propput] HRESULT RealTimePlayback([in] boolean value);
                    [propget] HRESULT AudioCategory([out] [retval] Windows.UI.Xaml.Media.AudioCategory* value);
                    [propput] HRESULT AudioCategory([in] Windows.UI.Xaml.Media.AudioCategory value);
                    [propget] HRESULT AudioDeviceType([out] [retval] Windows.UI.Xaml.Media.AudioDeviceType* value);
                    [propput] HRESULT AudioDeviceType([in] Windows.UI.Xaml.Media.AudioDeviceType value);
                    [propget] HRESULT ProtectionManager([out] [retval] Windows.Media.Protection.MediaProtectionManager** value);
                    [propput] HRESULT ProtectionManager([in] Windows.Media.Protection.MediaProtectionManager* value);
                    [propget] HRESULT Stereo3DVideoPackingMode([out] [retval] Windows.UI.Xaml.Media.Stereo3DVideoPackingMode* value);
                    [propput] HRESULT Stereo3DVideoPackingMode([in] Windows.UI.Xaml.Media.Stereo3DVideoPackingMode value);
                    [propget] HRESULT Stereo3DVideoRenderMode([out] [retval] Windows.UI.Xaml.Media.Stereo3DVideoRenderMode* value);
                    [propput] HRESULT Stereo3DVideoRenderMode([in] Windows.UI.Xaml.Media.Stereo3DVideoRenderMode value);
                    [propget] HRESULT IsStereo3DVideo([out] [retval] boolean* value);
                    [eventadd] HRESULT MediaOpened([in] Windows.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT MediaOpened([in] EventRegistrationToken token);
                    [eventadd] HRESULT MediaEnded([in] Windows.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT MediaEnded([in] EventRegistrationToken token);
                    [eventadd] HRESULT MediaFailed([in] Windows.UI.Xaml.ExceptionRoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT MediaFailed([in] EventRegistrationToken token);
                    [eventadd] HRESULT DownloadProgressChanged([in] Windows.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DownloadProgressChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT BufferingProgressChanged([in] Windows.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT BufferingProgressChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT CurrentStateChanged([in] Windows.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CurrentStateChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT MarkerReached([in] Windows.UI.Xaml.Media.TimelineMarkerRoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT MarkerReached([in] EventRegistrationToken token);
                    [eventadd] HRESULT RateChanged([in] Windows.UI.Xaml.Media.RateChangedRoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT RateChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT VolumeChanged([in] Windows.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT VolumeChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT SeekCompleted([in] Windows.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SeekCompleted([in] EventRegistrationToken token);
                    HRESULT Stop();
                    HRESULT Play();
                    HRESULT Pause();
                    HRESULT CanPlayType([in] HSTRING type, [out] [retval] Windows.UI.Xaml.Media.MediaCanPlayResponse* result);
                    HRESULT SetSource([in] Windows.Storage.Streams.IRandomAccessStream* stream, [in] HSTRING mimeType);
                    HRESULT GetAudioStreamLanguage([in] Windows.Foundation.IReference<INT32>* index, [out] [retval] HSTRING* result);
                    HRESULT AddAudioEffect([in] HSTRING effectID, [in] boolean effectOptional, [in] Windows.Foundation.Collections.IPropertySet* effectConfiguration);
                    HRESULT AddVideoEffect([in] HSTRING effectID, [in] boolean effectOptional, [in] Windows.Foundation.Collections.IPropertySet* effectConfiguration);
                    HRESULT RemoveAllEffects();
                    [propget] HRESULT ActualStereo3DVideoPackingMode([out] [retval] Windows.UI.Xaml.Media.Stereo3DVideoPackingMode* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaElement)]
                [uuid(FD53DA65-B186-4654-BFDB-180ED26CAD07)]
                interface IMediaElement2 : IInspectable
                {
                    [propget] HRESULT AreTransportControlsEnabled([out] [retval] boolean* value);
                    [propput] HRESULT AreTransportControlsEnabled([in] boolean value);
                    [propget] HRESULT Stretch([out] [retval] Windows.UI.Xaml.Media.Stretch* value);
                    [propput] HRESULT Stretch([in] Windows.UI.Xaml.Media.Stretch value);
                    [propget] HRESULT IsFullWindow([out] [retval] boolean* value);
                    [propput] HRESULT IsFullWindow([in] boolean value);
                    HRESULT SetMediaStreamSource([in] Windows.Media.Core.IMediaSource* source);
                    [deprecated("PlayToPreferredSourceUri may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource().PreferredSourceUri.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propget] HRESULT PlayToPreferredSourceUri([out] [retval] Windows.Foundation.Uri** value);
                    [deprecated("PlayToPreferredSourceUri may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource().PreferredSourceUri.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propput] HRESULT PlayToPreferredSourceUri([in] Windows.Foundation.Uri* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaElement)]
                [uuid(479F6F13-0FDB-4ED8-928A-4D39169C3CD2)]
                interface IMediaElement3 : IInspectable
                {
                    [propget] HRESULT TransportControls([out] [retval] Windows.UI.Xaml.Controls.MediaTransportControls** value);
                    [propput] HRESULT TransportControls([in] Windows.UI.Xaml.Controls.MediaTransportControls* value);
                    [eventadd] HRESULT PartialMediaFailureDetected([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.MediaElement*, Windows.UI.Xaml.Media.PartialMediaFailureDetectedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PartialMediaFailureDetected([in] EventRegistrationToken token);
                    HRESULT SetPlaybackSource([in] Windows.Media.Playback.IMediaPlaybackSource* source);
                    HRESULT GetAsCastingSource([out] [retval] Windows.Media.Casting.CastingSource** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaElement)]
                [uuid(DCCD2CB9-7568-4682-A72A-8DDF2A2665CA)]
                interface IMediaElementStatics : IInspectable
                {
                    [propget] HRESULT PosterSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsMutedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsAudioOnlyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AutoPlayProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VolumeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BalanceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NaturalVideoHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NaturalVideoWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NaturalDurationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PositionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DownloadProgressProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BufferingProgressProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DownloadProgressOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CurrentStateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanSeekProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanPauseProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AudioStreamCountProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AudioStreamIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaybackRateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsLoopingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [deprecated("PlayToSource may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propget] HRESULT PlayToSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DefaultPlaybackRateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AspectRatioWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AspectRatioHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RealTimePlaybackProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AudioCategoryProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AudioDeviceTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ProtectionManagerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Stereo3DVideoPackingModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Stereo3DVideoRenderModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsStereo3DVideoProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ActualStereo3DVideoPackingModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaElement)]
                [uuid(9EE7F826-F154-4DC6-8014-A6EBA987F847)]
                interface IMediaElementStatics2 : IInspectable
                {
                    [propget] HRESULT AreTransportControlsEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsFullWindowProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [deprecated("PlayToPreferredSourceUri may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource().PreferredSourceUri.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propget] HRESULT PlayToPreferredSourceUriProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaPlayerElement)]
                [uuid(3B4CA526-2E25-4598-BC71-D491F8E8DE39)]
                interface IMediaPlayerElement : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Windows.Media.Playback.IMediaPlaybackSource** value);
                    [propput] HRESULT Source([in] Windows.Media.Playback.IMediaPlaybackSource* value);
                    [propget] HRESULT TransportControls([out] [retval] Windows.UI.Xaml.Controls.MediaTransportControls** value);
                    [propput] HRESULT TransportControls([in] Windows.UI.Xaml.Controls.MediaTransportControls* value);
                    [propget] HRESULT AreTransportControlsEnabled([out] [retval] boolean* value);
                    [propput] HRESULT AreTransportControlsEnabled([in] boolean value);
                    [propget] HRESULT PosterSource([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT PosterSource([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT Stretch([out] [retval] Windows.UI.Xaml.Media.Stretch* value);
                    [propput] HRESULT Stretch([in] Windows.UI.Xaml.Media.Stretch value);
                    [propget] HRESULT AutoPlay([out] [retval] boolean* value);
                    [propput] HRESULT AutoPlay([in] boolean value);
                    [propget] HRESULT IsFullWindow([out] [retval] boolean* value);
                    [propput] HRESULT IsFullWindow([in] boolean value);
                    [propget] HRESULT MediaPlayer([out] [retval] Windows.Media.Playback.MediaPlayer** value);
                    HRESULT SetMediaPlayer([in] Windows.Media.Playback.MediaPlayer* mediaPlayer);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaPlayerElement)]
                [uuid(77E525C3-EB17-4B8D-889D-1EA8ABDBD4EF)]
                interface IMediaPlayerElementFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.MediaPlayerElement** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaPlayerElement)]
                [uuid(1E7C4020-AC57-42DD-AD1C-3EBC2D7F08BA)]
                interface IMediaPlayerElementStatics : IInspectable
                {
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AreTransportControlsEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PosterSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AutoPlayProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsFullWindowProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MediaPlayerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaPlayerPresenter)]
                [uuid(77A92326-0C5B-41FC-BF49-15F6C3524B6B)]
                interface IMediaPlayerPresenter : IInspectable
                {
                    [propget] HRESULT MediaPlayer([out] [retval] Windows.Media.Playback.MediaPlayer** value);
                    [propput] HRESULT MediaPlayer([in] Windows.Media.Playback.MediaPlayer* value);
                    [propget] HRESULT Stretch([out] [retval] Windows.UI.Xaml.Media.Stretch* value);
                    [propput] HRESULT Stretch([in] Windows.UI.Xaml.Media.Stretch value);
                    [propget] HRESULT IsFullWindow([out] [retval] boolean* value);
                    [propput] HRESULT IsFullWindow([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaPlayerPresenter)]
                [uuid(E6766FB7-D96F-4B95-B33C-59E81CB1E9BA)]
                interface IMediaPlayerPresenterFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.MediaPlayerPresenter** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaPlayerPresenter)]
                [uuid(84D774FE-EAD4-4957-B42B-223158CA0DE7)]
                interface IMediaPlayerPresenterStatics : IInspectable
                {
                    [propget] HRESULT MediaPlayerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsFullWindowProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaTransportControls)]
                [uuid(D6F69E7D-0825-49A9-9FCE-5586D8694F0C)]
                interface IMediaTransportControls : IInspectable
                {
                    [propget] HRESULT IsFullWindowButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsFullWindowButtonVisible([in] boolean value);
                    [propget] HRESULT IsFullWindowEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsFullWindowEnabled([in] boolean value);
                    [propget] HRESULT IsZoomButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsZoomButtonVisible([in] boolean value);
                    [propget] HRESULT IsZoomEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsZoomEnabled([in] boolean value);
                    [propget] HRESULT IsFastForwardButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsFastForwardButtonVisible([in] boolean value);
                    [propget] HRESULT IsFastForwardEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsFastForwardEnabled([in] boolean value);
                    [propget] HRESULT IsFastRewindButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsFastRewindButtonVisible([in] boolean value);
                    [propget] HRESULT IsFastRewindEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsFastRewindEnabled([in] boolean value);
                    [propget] HRESULT IsStopButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsStopButtonVisible([in] boolean value);
                    [propget] HRESULT IsStopEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsStopEnabled([in] boolean value);
                    [propget] HRESULT IsVolumeButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsVolumeButtonVisible([in] boolean value);
                    [propget] HRESULT IsVolumeEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsVolumeEnabled([in] boolean value);
                    [propget] HRESULT IsPlaybackRateButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsPlaybackRateButtonVisible([in] boolean value);
                    [propget] HRESULT IsPlaybackRateEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsPlaybackRateEnabled([in] boolean value);
                    [propget] HRESULT IsSeekBarVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsSeekBarVisible([in] boolean value);
                    [propget] HRESULT IsSeekEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsSeekEnabled([in] boolean value);
                    [propget] HRESULT IsCompact([out] [retval] boolean* value);
                    [propput] HRESULT IsCompact([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaTransportControls)]
                [uuid(2B89EFEC-1BEA-451E-8BCD-CFE2D9423262)]
                interface IMediaTransportControls2 : IInspectable
                {
                    [propget] HRESULT IsSkipForwardButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsSkipForwardButtonVisible([in] boolean value);
                    [propget] HRESULT IsSkipForwardEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsSkipForwardEnabled([in] boolean value);
                    [propget] HRESULT IsSkipBackwardButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsSkipBackwardButtonVisible([in] boolean value);
                    [propget] HRESULT IsSkipBackwardEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsSkipBackwardEnabled([in] boolean value);
                    [propget] HRESULT IsNextTrackButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsNextTrackButtonVisible([in] boolean value);
                    [propget] HRESULT IsPreviousTrackButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsPreviousTrackButtonVisible([in] boolean value);
                    [propget] HRESULT FastPlayFallbackBehaviour([out] [retval] Windows.UI.Xaml.Media.FastPlayFallbackBehaviour* value);
                    [propput] HRESULT FastPlayFallbackBehaviour([in] Windows.UI.Xaml.Media.FastPlayFallbackBehaviour value);
                    [eventadd] HRESULT ThumbnailRequested([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.MediaTransportControls*, Windows.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ThumbnailRequested([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaTransportControls)]
                [uuid(5086430E-0940-11E7-93AE-92361F002671)]
                interface IMediaTransportControls3 : IInspectable
                {
                    [propget] HRESULT ShowAndHideAutomatically([out] [retval] boolean* value);
                    [propput] HRESULT ShowAndHideAutomatically([in] boolean value);
                    [propget] HRESULT IsRepeatEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsRepeatEnabled([in] boolean value);
                    [propget] HRESULT IsRepeatButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsRepeatButtonVisible([in] boolean value);
                    HRESULT Show();
                    HRESULT Hide();
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaTransportControls)]
                [uuid(0FB17C58-9F23-11E7-ABC4-CEC278B6B50A)]
                interface IMediaTransportControls4 : IInspectable
                {
                    [propget] HRESULT IsCompactOverlayButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsCompactOverlayButtonVisible([in] boolean value);
                    [propget] HRESULT IsCompactOverlayEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsCompactOverlayEnabled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaTransportControls)]
                [uuid(1DA2015A-A8E4-4C1B-88C9-0B183ECC62E3)]
                interface IMediaTransportControlsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.MediaTransportControls** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaTransportControlsHelper)]
                [uuid(3D41D509-FF44-4420-807E-8F7A2E2C4251)]
                interface IMediaTransportControlsHelper : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaTransportControlsHelper)]
                [uuid(5A772047-A9A1-4625-9270-7F49875D4394)]
                interface IMediaTransportControlsHelperStatics : IInspectable
                {
                    [propget] HRESULT DropoutOrderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetDropoutOrder([in] Windows.UI.Xaml.UIElement* element, [out] [retval] Windows.Foundation.IReference<INT32>** result);
                    HRESULT SetDropoutOrder([in] Windows.UI.Xaml.UIElement* element, [in] Windows.Foundation.IReference<INT32>* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaTransportControls)]
                [uuid(590EA907-D2EF-4C1A-9429-B4B15D64FD56)]
                interface IMediaTransportControlsStatics : IInspectable
                {
                    [propget] HRESULT IsFullWindowButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsFullWindowEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsZoomButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsZoomEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsFastForwardButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsFastForwardEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsFastRewindButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsFastRewindEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsStopButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsStopEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsVolumeButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsVolumeEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsPlaybackRateButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsPlaybackRateEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSeekBarVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSeekEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsCompactProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaTransportControls)]
                [uuid(1728CFDC-561F-4386-A7F8-090D95F68D96)]
                interface IMediaTransportControlsStatics2 : IInspectable
                {
                    [propget] HRESULT IsSkipForwardButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSkipForwardEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSkipBackwardButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSkipBackwardEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsNextTrackButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsPreviousTrackButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FastPlayFallbackBehaviourProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaTransportControls)]
                [uuid(5FE05542-0940-11E7-93AE-92361F002671)]
                interface IMediaTransportControlsStatics3 : IInspectable
                {
                    [propget] HRESULT ShowAndHideAutomaticallyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsRepeatEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsRepeatButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaTransportControls)]
                [uuid(0FB18144-9F23-11E7-ABC4-CEC278B6B50A)]
                interface IMediaTransportControlsStatics4 : IInspectable
                {
                    [propget] HRESULT IsCompactOverlayButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsCompactOverlayEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuBar)]
                [uuid(C8F67B0C-0E76-5AF2-BADE-785049C80A41)]
                interface IMenuBar : IInspectable
                {
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.MenuBarItem*>** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuBar)]
                [uuid(DC619E50-72BA-513F-80AA-DDD093825DDE)]
                interface IMenuBarFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.MenuBar** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuBarItem)]
                [uuid(BF643B4C-8125-5B53-A454-06E896A5ACEE)]
                interface IMenuBarItem : IInspectable
                {
                    [propget] HRESULT Title([out] [retval] HSTRING* value);
                    [propput] HRESULT Title([in] HSTRING value);
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.MenuFlyoutItemBase*>** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuBarItem)]
                [uuid(ECF86F62-C394-50E2-A568-17AF8CF26874)]
                interface IMenuBarItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.MenuBarItem** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuBarItemFlyout)]
                [uuid(ED00D2D8-B686-55FE-8DBB-F04A640E42EF)]
                interface IMenuBarItemFlyout : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuBarItemFlyout)]
                [uuid(1D24F9BD-BD19-5D95-B573-711F649FCBE9)]
                interface IMenuBarItemFlyoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.MenuBarItemFlyout** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuBarItem)]
                [uuid(60A9E3FB-B405-50D0-BB78-D396A34DA267)]
                interface IMenuBarItemStatics : IInspectable
                {
                    [propget] HRESULT TitleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuBar)]
                [uuid(BED31C25-7DB8-51CC-9706-1D79327DAF93)]
                interface IMenuBarStatics : IInspectable
                {
                    [propget] HRESULT ItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyout)]
                [uuid(AD3210F1-985B-4171-BBBA-67BCC729649B)]
                interface IMenuFlyout : IInspectable
                {
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.MenuFlyoutItemBase*>** value);
                    [propget] HRESULT MenuFlyoutPresenterStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT MenuFlyoutPresenterStyle([in] Windows.UI.Xaml.Style* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyout)]
                [uuid(507C7BAD-D9D1-4C05-9D4B-CDA8DE9AB242)]
                interface IMenuFlyout2 : IInspectable
                {
                    HRESULT ShowAt([in] Windows.UI.Xaml.UIElement* targetElement, [in] Windows.Foundation.Point point);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyout)]
                [uuid(644533AB-BBB9-499B-9FF3-30D40E2C56D8)]
                interface IMenuFlyoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.MenuFlyout** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutItem)]
                [uuid(160775CF-B598-44AF-A488-C3CE2AF6D3F0)]
                interface IMenuFlyoutItem : IInspectable
                {
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                    [propget] HRESULT Command([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT Command([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT CommandParameter([out] [retval] IInspectable** value);
                    [propput] HRESULT CommandParameter([in] IInspectable* value);
                    [eventadd] HRESULT Click([in] Windows.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Click([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutItem)]
                [uuid(0AE266EB-028C-4423-A8E3-989FD9DD7126)]
                interface IMenuFlyoutItem2 : IInspectable
                {
                    [propget] HRESULT Icon([out] [retval] Windows.UI.Xaml.Controls.IconElement** value);
                    [propput] HRESULT Icon([in] Windows.UI.Xaml.Controls.IconElement* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutItem)]
                [uuid(9727B2E3-B2B6-49DC-8C22-E0138B941559)]
                interface IMenuFlyoutItem3 : IInspectable
                {
                    [propget] HRESULT KeyboardAcceleratorTextOverride([out] [retval] HSTRING* value);
                    [propput] HRESULT KeyboardAcceleratorTextOverride([in] HSTRING value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.MenuFlyoutItemTemplateSettings** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutItemBase)]
                [uuid(F9B56047-8DA6-4730-9208-144125C6B396)]
                interface IMenuFlyoutItemBase : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutItemBase)]
                [uuid(83E6DBAD-FC67-41D5-8797-60ACD1CEB1D9)]
                interface IMenuFlyoutItemBaseFactory : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutItem)]
                [uuid(C5AA39E2-44F3-455E-9C5B-62BB6AFCE3AD)]
                interface IMenuFlyoutItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.MenuFlyoutItem** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutItem)]
                [uuid(4950B424-A43A-41F7-AA3A-9CE9619747D5)]
                interface IMenuFlyoutItemStatics : IInspectable
                {
                    [propget] HRESULT TextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CommandParameterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutItem)]
                [uuid(ACA4F564-1790-4601-916E-5AE1F01F4BD6)]
                interface IMenuFlyoutItemStatics2 : IInspectable
                {
                    [propget] HRESULT IconProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutItem)]
                [uuid(D83FD7C3-0AEB-4EF3-8270-8B9B95F2B298)]
                interface IMenuFlyoutItemStatics3 : IInspectable
                {
                    [propget] HRESULT KeyboardAcceleratorTextOverrideProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutPresenter)]
                [uuid(906E0304-254E-413F-B219-C7B97F003752)]
                interface IMenuFlyoutPresenter : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 2.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutPresenter)]
                [uuid(895894DF-5A9F-4A1F-85EC-6F3C1B6DCB89)]
                interface IMenuFlyoutPresenter2 : IInspectable
                {
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.MenuFlyoutPresenterTemplateSettings** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 8.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutPresenter)]
                [uuid(6AFD4E16-AEE0-584A-9849-EDAA323A484F)]
                interface IMenuFlyoutPresenter3 : IInspectable
                {
                    [propget] HRESULT IsDefaultShadowEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsDefaultShadowEnabled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutPresenter)]
                [uuid(B88B5091-101C-41F8-AAC1-1B105C14FB99)]
                interface IMenuFlyoutPresenterFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.MenuFlyoutPresenter** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 8.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutPresenter)]
                [uuid(3772A818-825A-520C-80AE-4D39A2D59AB5)]
                interface IMenuFlyoutPresenterStatics3 : IInspectable
                {
                    [propget] HRESULT IsDefaultShadowEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutSeparator)]
                [uuid(71FA2B7D-0B51-4950-A1A4-BBC42EAC4C12)]
                interface IMenuFlyoutSeparator : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutSeparator)]
                [uuid(C159DCC8-B437-44E0-B24B-5720AEA1DBAC)]
                interface IMenuFlyoutSeparatorFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.MenuFlyoutSeparator** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyout)]
                [uuid(3DBEFBA1-9522-4045-9E58-C99B13AAB9B9)]
                interface IMenuFlyoutStatics : IInspectable
                {
                    [propget] HRESULT MenuFlyoutPresenterStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutSubItem)]
                [uuid(E5386550-FE2C-43E2-A73F-62168F619973)]
                interface IMenuFlyoutSubItem : IInspectable
                {
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.MenuFlyoutItemBase*>** value);
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutSubItem)]
                [uuid(AC935626-190A-4DE2-8D71-7CC4747DA580)]
                interface IMenuFlyoutSubItem2 : IInspectable
                {
                    [propget] HRESULT Icon([out] [retval] Windows.UI.Xaml.Controls.IconElement** value);
                    [propput] HRESULT Icon([in] Windows.UI.Xaml.Controls.IconElement* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutSubItem)]
                [uuid(DDB27A36-1874-4AEF-837D-6FEC9DA4E681)]
                interface IMenuFlyoutSubItemStatics : IInspectable
                {
                    [propget] HRESULT TextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutSubItem)]
                [uuid(AC14D09B-3E93-4785-94EF-FDB23BABA965)]
                interface IMenuFlyoutSubItemStatics2 : IInspectable
                {
                    [propget] HRESULT IconProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(BF2195A9-F4EA-4336-977C-F8FCF78B0D9E)]
                interface INavigate : IInspectable
                {
                    HRESULT Navigate([in] Windows.UI.Xaml.Interop.TypeName sourcePageType, [out] [retval] boolean* result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationView)]
                [uuid(F209CE15-391A-42CA-9FC6-F79DA65ACA32)]
                interface INavigationView : IInspectable
                {
                    [propget] HRESULT IsPaneOpen([out] [retval] boolean* value);
                    [propput] HRESULT IsPaneOpen([in] boolean value);
                    [propget] HRESULT CompactModeThresholdWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT CompactModeThresholdWidth([in] DOUBLE value);
                    [propget] HRESULT ExpandedModeThresholdWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT ExpandedModeThresholdWidth([in] DOUBLE value);
                    [propget] HRESULT PaneFooter([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT PaneFooter([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT DisplayMode([out] [retval] Windows.UI.Xaml.Controls.NavigationViewDisplayMode* value);
                    [propget] HRESULT IsSettingsVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsSettingsVisible([in] boolean value);
                    [propget] HRESULT IsPaneToggleButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsPaneToggleButtonVisible([in] boolean value);
                    [propget] HRESULT AlwaysShowHeader([out] [retval] boolean* value);
                    [propput] HRESULT AlwaysShowHeader([in] boolean value);
                    [propget] HRESULT CompactPaneLength([out] [retval] DOUBLE* value);
                    [propput] HRESULT CompactPaneLength([in] DOUBLE value);
                    [propget] HRESULT OpenPaneLength([out] [retval] DOUBLE* value);
                    [propput] HRESULT OpenPaneLength([in] DOUBLE value);
                    [propget] HRESULT PaneToggleButtonStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT PaneToggleButtonStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT SelectedItem([out] [retval] IInspectable** value);
                    [propput] HRESULT SelectedItem([in] IInspectable* value);
                    [propget] HRESULT MenuItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT MenuItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT MenuItemsSource([in] IInspectable* value);
                    [propget] HRESULT SettingsItem([out] [retval] IInspectable** value);
                    [propget] HRESULT AutoSuggestBox([out] [retval] Windows.UI.Xaml.Controls.AutoSuggestBox** value);
                    [propput] HRESULT AutoSuggestBox([in] Windows.UI.Xaml.Controls.AutoSuggestBox* value);
                    [propget] HRESULT MenuItemTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT MenuItemTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT MenuItemTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT MenuItemTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT MenuItemContainerStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT MenuItemContainerStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT MenuItemContainerStyleSelector([out] [retval] Windows.UI.Xaml.Controls.StyleSelector** value);
                    [propput] HRESULT MenuItemContainerStyleSelector([in] Windows.UI.Xaml.Controls.StyleSelector* value);
                    HRESULT MenuItemFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] IInspectable** result);
                    HRESULT ContainerFromMenuItem([in] IInspectable* item, [out] [retval] Windows.UI.Xaml.DependencyObject** result);
                    [eventadd] HRESULT SelectionChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.NavigationView*, Windows.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ItemInvoked([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.NavigationView*, Windows.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ItemInvoked([in] EventRegistrationToken token);
                    [eventadd] HRESULT DisplayModeChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.NavigationView*, Windows.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DisplayModeChanged([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationView)]
                [uuid(2BE49737-7C13-4C44-86C3-8B25E697A80E)]
                interface INavigationView2 : IInspectable
                {
                    [propget] HRESULT IsBackButtonVisible([out] [retval] Windows.UI.Xaml.Controls.NavigationViewBackButtonVisible* value);
                    [propput] HRESULT IsBackButtonVisible([in] Windows.UI.Xaml.Controls.NavigationViewBackButtonVisible value);
                    [propget] HRESULT IsBackEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsBackEnabled([in] boolean value);
                    [propget] HRESULT PaneTitle([out] [retval] HSTRING* value);
                    [propput] HRESULT PaneTitle([in] HSTRING value);
                    [eventadd] HRESULT BackRequested([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.NavigationView*, Windows.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT BackRequested([in] EventRegistrationToken token);
                    [eventadd] HRESULT PaneClosed([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.NavigationView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PaneClosed([in] EventRegistrationToken token);
                    [eventadd] HRESULT PaneClosing([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.NavigationView*, Windows.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PaneClosing([in] EventRegistrationToken token);
                    [eventadd] HRESULT PaneOpened([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.NavigationView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PaneOpened([in] EventRegistrationToken token);
                    [eventadd] HRESULT PaneOpening([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.NavigationView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PaneOpening([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationView)]
                [uuid(8FDFAB66-9BBC-5FA3-9043-A02BB4F8EF37)]
                interface INavigationView3 : IInspectable
                {
                    [propget] HRESULT PaneDisplayMode([out] [retval] Windows.UI.Xaml.Controls.NavigationViewPaneDisplayMode* value);
                    [propput] HRESULT PaneDisplayMode([in] Windows.UI.Xaml.Controls.NavigationViewPaneDisplayMode value);
                    [propget] HRESULT PaneHeader([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT PaneHeader([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT PaneCustomContent([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT PaneCustomContent([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT ContentOverlay([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT ContentOverlay([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT IsPaneVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsPaneVisible([in] boolean value);
                    [propget] HRESULT SelectionFollowsFocus([out] [retval] Windows.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus* value);
                    [propput] HRESULT SelectionFollowsFocus([in] Windows.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.NavigationViewTemplateSettings** value);
                    [propget] HRESULT ShoulderNavigationEnabled([out] [retval] Windows.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled* value);
                    [propput] HRESULT ShoulderNavigationEnabled([in] Windows.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled value);
                    [propget] HRESULT OverflowLabelMode([out] [retval] Windows.UI.Xaml.Controls.NavigationViewOverflowLabelMode* value);
                    [propput] HRESULT OverflowLabelMode([in] Windows.UI.Xaml.Controls.NavigationViewOverflowLabelMode value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs)]
                [uuid(446700E1-9A9D-4500-A71D-25C15809B879)]
                interface INavigationViewBackRequestedEventArgs : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs)]
                [uuid(B7C1AD35-5544-40C1-9B33-ACFE1D6C8094)]
                interface INavigationViewDisplayModeChangedEventArgs : IInspectable
                {
                    [propget] HRESULT DisplayMode([out] [retval] Windows.UI.Xaml.Controls.NavigationViewDisplayMode* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationView)]
                [uuid(E50687C1-B7C2-4975-AD7A-5F4FE6A514C9)]
                interface INavigationViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.NavigationView** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewItem)]
                [uuid(8614BE0F-B7B6-4851-960A-F5E3F69F624A)]
                interface INavigationViewItem : IInspectable
                {
                    [propget] HRESULT Icon([out] [retval] Windows.UI.Xaml.Controls.IconElement** value);
                    [propput] HRESULT Icon([in] Windows.UI.Xaml.Controls.IconElement* value);
                    [propget] HRESULT CompactPaneLength([out] [retval] DOUBLE* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewItem)]
                [uuid(EE488EF9-EA9C-5E04-B26C-83BF9655342F)]
                interface INavigationViewItem2 : IInspectable
                {
                    [propget] HRESULT SelectsOnInvoked([out] [retval] boolean* value);
                    [propput] HRESULT SelectsOnInvoked([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewItemBase)]
                [uuid(EDF04EB1-37D1-471F-8570-3829EE5B2BC6)]
                interface INavigationViewItemBase : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewItemBase)]
                [uuid(EB014CEF-7890-4EBB-8245-02E8510F321D)]
                interface INavigationViewItemBaseFactory : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewItem)]
                [uuid(973BDB4A-7E08-4F76-923C-F12BD685E86E)]
                interface INavigationViewItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.NavigationViewItem** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewItemHeader)]
                [uuid(E21DF22C-DA4A-4E74-9FFC-B163BD7ADACD)]
                interface INavigationViewItemHeader : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewItemHeader)]
                [uuid(F3105988-7768-45D3-8BB0-6DED9E43A98B)]
                interface INavigationViewItemHeaderFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.NavigationViewItemHeader** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs)]
                [uuid(29496822-55D2-49FA-964B-F1DBAFEF85C4)]
                interface INavigationViewItemInvokedEventArgs : IInspectable
                {
                    [propget] HRESULT InvokedItem([out] [retval] IInspectable** value);
                    [propget] HRESULT IsSettingsInvoked([out] [retval] boolean* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs)]
                [uuid(B568F2DD-515E-5770-A466-BD5F43FB6442)]
                interface INavigationViewItemInvokedEventArgs2 : IInspectable
                {
                    [propget] HRESULT InvokedItemContainer([out] [retval] Windows.UI.Xaml.Controls.NavigationViewItemBase** value);
                    [propget] HRESULT RecommendedNavigationTransitionInfo([out] [retval] Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewItemSeparator)]
                [uuid(DE62C951-BB9B-471E-83E3-AF4791E7096A)]
                interface INavigationViewItemSeparator : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewItemSeparator)]
                [uuid(71CF3A66-DB86-49E0-8154-5FD356AEDEC0)]
                interface INavigationViewItemSeparatorFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.NavigationViewItemSeparator** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewItem)]
                [uuid(803C0081-FDA5-4B90-AACE-3F2306DBE5C4)]
                interface INavigationViewItemStatics : IInspectable
                {
                    [propget] HRESULT IconProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CompactPaneLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewItem)]
                [uuid(F4F2F77C-54B4-541D-B747-3A96E9FF3D55)]
                interface INavigationViewItemStatics2 : IInspectable
                {
                    [propget] HRESULT SelectsOnInvokedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewList)]
                [uuid(4F726F85-5CE0-48CD-8EF2-1A29458A3404)]
                interface INavigationViewList : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewList)]
                [uuid(FAEE9541-C3BF-47BF-B904-6155F4DF6B4F)]
                interface INavigationViewListFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.NavigationViewList** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs)]
                [uuid(955575BA-75F5-432D-B49B-60E47552D5EE)]
                interface INavigationViewPaneClosingEventArgs : IInspectable
                {
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs)]
                [uuid(5AA509A0-3A5E-4F54-896C-98B85F819508)]
                interface INavigationViewSelectionChangedEventArgs : IInspectable
                {
                    [propget] HRESULT SelectedItem([out] [retval] IInspectable** value);
                    [propget] HRESULT IsSettingsSelected([out] [retval] boolean* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs)]
                [uuid(FD5AF806-D10A-5E8B-973F-3B8FDA944625)]
                interface INavigationViewSelectionChangedEventArgs2 : IInspectable
                {
                    [propget] HRESULT SelectedItemContainer([out] [retval] Windows.UI.Xaml.Controls.NavigationViewItemBase** value);
                    [propget] HRESULT RecommendedNavigationTransitionInfo([out] [retval] Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationView)]
                [uuid(363A86C7-72DA-4420-B871-15D9D0D45756)]
                interface INavigationViewStatics : IInspectable
                {
                    [propget] HRESULT IsPaneOpenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CompactModeThresholdWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ExpandedModeThresholdWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneFooterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DisplayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSettingsVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsPaneToggleButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AlwaysShowHeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CompactPaneLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OpenPaneLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneToggleButtonStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedItemProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SettingsItemProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AutoSuggestBoxProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemTemplateSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemContainerStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemContainerStyleSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationView)]
                [uuid(8CC50D74-1A42-4852-AB5A-6DC82F28A4BA)]
                interface INavigationViewStatics2 : IInspectable
                {
                    [propget] HRESULT IsBackButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsBackEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneTitleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationView)]
                [uuid(9B6B69B7-F746-5550-91E1-EE0C9A85C05E)]
                interface INavigationViewStatics3 : IInspectable
                {
                    [propget] HRESULT PaneDisplayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneHeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneCustomContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentOverlayProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsPaneVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectionFollowsFocusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TemplateSettingsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ShoulderNavigationEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OverflowLabelModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewTemplateSettings)]
                [uuid(2956CBC4-0528-55D5-B2D1-EAE807AEA6DA)]
                interface INavigationViewTemplateSettings : IInspectable
                {
                    [propget] HRESULT TopPadding([out] [retval] DOUBLE* value);
                    [propget] HRESULT OverflowButtonVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT PaneToggleButtonVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT BackButtonVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT TopPaneVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT LeftPaneVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT SingleSelectionFollowsFocus([out] [retval] boolean* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewTemplateSettings)]
                [uuid(28A6A351-64BC-5B60-8F74-E9EE908A240E)]
                interface INavigationViewTemplateSettingsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.NavigationViewTemplateSettings** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NavigationViewTemplateSettings)]
                [uuid(2C885E59-F7B9-5078-AEB6-8D7A03C05D02)]
                interface INavigationViewTemplateSettingsStatics : IInspectable
                {
                    [propget] HRESULT TopPaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OverflowButtonVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneToggleButtonVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BackButtonVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TopPaneVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LeftPaneVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SingleSelectionFollowsFocusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NotifyEventArgs)]
                [uuid(AF0E05F7-C4B7-44C5-B09D-5CB7052B3A97)]
                interface INotifyEventArgs : IInspectable
                {
                    [propget] HRESULT Value([out] [retval] HSTRING* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.NotifyEventArgs)]
                [uuid(0D140F56-1DCE-4FCD-85BC-5A5572273B9C)]
                interface INotifyEventArgs2 : IInspectable
                {
                    [propget] HRESULT CallingUri([out] [retval] Windows.Foundation.Uri** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Page)]
                [uuid(C4B27075-E641-453E-824D-012FC7CF95CF)]
                interface IPage : IInspectable
                {
                    [propget] HRESULT Frame([out] [retval] Windows.UI.Xaml.Controls.Frame** value);
                    [propget] HRESULT NavigationCacheMode([out] [retval] Windows.UI.Xaml.Navigation.NavigationCacheMode* value);
                    [propput] HRESULT NavigationCacheMode([in] Windows.UI.Xaml.Navigation.NavigationCacheMode value);
                    [propget] HRESULT TopAppBar([out] [retval] Windows.UI.Xaml.Controls.AppBar** value);
                    [propput] HRESULT TopAppBar([in] Windows.UI.Xaml.Controls.AppBar* value);
                    [propget] HRESULT BottomAppBar([out] [retval] Windows.UI.Xaml.Controls.AppBar** value);
                    [propput] HRESULT BottomAppBar([in] Windows.UI.Xaml.Controls.AppBar* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Page)]
                [uuid(DFA149AC-1849-445E-937C-40A9590CC076)]
                interface IPageFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.Page** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Page)]
                [uuid(230B9CB8-3419-4306-AABE-4A8E680D3627)]
                interface IPageOverrides : IInspectable
                {
                    HRESULT OnNavigatedFrom([in] Windows.UI.Xaml.Navigation.NavigationEventArgs* e);
                    HRESULT OnNavigatedTo([in] Windows.UI.Xaml.Navigation.NavigationEventArgs* e);
                    HRESULT OnNavigatingFrom([in] Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs* e);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Page)]
                [uuid(376DDE71-F725-46DD-8D80-EEEAF7DA74E5)]
                interface IPageStatics : IInspectable
                {
                    [propget] HRESULT FrameProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TopAppBarProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BottomAppBarProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Panel)]
                [uuid(A50A4BBD-8361-469C-90DA-E9A40C7474DF)]
                interface IPanel : IInspectable
                {
                    [propget] HRESULT Children([out] [retval] Windows.UI.Xaml.Controls.UIElementCollection** value);
                    [propget] HRESULT Background([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Background([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT IsItemsHost([out] [retval] boolean* value);
                    [propget] HRESULT ChildrenTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT ChildrenTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Panel)]
                [uuid(709133C7-38F3-5083-A4BB-06A548A1D231)]
                interface IPanel2 : IInspectable
                {
                    [propget] HRESULT BackgroundTransition([out] [retval] Windows.UI.Xaml.BrushTransition** value);
                    [propput] HRESULT BackgroundTransition([in] Windows.UI.Xaml.BrushTransition* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Panel)]
                [uuid(EEE68111-C7CC-433F-95CD-D630C34302DD)]
                interface IPanelFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.Panel** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Panel)]
                [uuid(F23D6B5D-8330-47A6-A046-25F509B25232)]
                interface IPanelStatics : IInspectable
                {
                    [propget] HRESULT BackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsItemsHostProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ChildrenTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ParallaxView)]
                [uuid(6B84FCD4-4083-5B4B-BC40-D9204E19B41A)]
                interface IParallaxView : IInspectable
                {
                    [propget] HRESULT Child([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Child([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT HorizontalShift([out] [retval] DOUBLE* value);
                    [propput] HRESULT HorizontalShift([in] DOUBLE value);
                    [propget] HRESULT HorizontalSourceEndOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT HorizontalSourceEndOffset([in] DOUBLE value);
                    [propget] HRESULT HorizontalSourceOffsetKind([out] [retval] Windows.UI.Xaml.Controls.ParallaxSourceOffsetKind* value);
                    [propput] HRESULT HorizontalSourceOffsetKind([in] Windows.UI.Xaml.Controls.ParallaxSourceOffsetKind value);
                    [propget] HRESULT HorizontalSourceStartOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT HorizontalSourceStartOffset([in] DOUBLE value);
                    [propget] HRESULT IsHorizontalShiftClamped([out] [retval] boolean* value);
                    [propput] HRESULT IsHorizontalShiftClamped([in] boolean value);
                    [propget] HRESULT IsVerticalShiftClamped([out] [retval] boolean* value);
                    [propput] HRESULT IsVerticalShiftClamped([in] boolean value);
                    [propget] HRESULT MaxHorizontalShiftRatio([out] [retval] DOUBLE* value);
                    [propput] HRESULT MaxHorizontalShiftRatio([in] DOUBLE value);
                    [propget] HRESULT MaxVerticalShiftRatio([out] [retval] DOUBLE* value);
                    [propput] HRESULT MaxVerticalShiftRatio([in] DOUBLE value);
                    [propget] HRESULT Source([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Source([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT VerticalShift([out] [retval] DOUBLE* value);
                    [propput] HRESULT VerticalShift([in] DOUBLE value);
                    [propget] HRESULT VerticalSourceEndOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT VerticalSourceEndOffset([in] DOUBLE value);
                    [propget] HRESULT VerticalSourceOffsetKind([out] [retval] Windows.UI.Xaml.Controls.ParallaxSourceOffsetKind* value);
                    [propput] HRESULT VerticalSourceOffsetKind([in] Windows.UI.Xaml.Controls.ParallaxSourceOffsetKind value);
                    [propget] HRESULT VerticalSourceStartOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT VerticalSourceStartOffset([in] DOUBLE value);
                    HRESULT RefreshAutomaticHorizontalOffsets();
                    HRESULT RefreshAutomaticVerticalOffsets();
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ParallaxView)]
                [uuid(E4EB9642-3E8E-5A26-94F2-9121D121B916)]
                interface IParallaxViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ParallaxView** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ParallaxView)]
                [uuid(8836E49C-0E0E-57D8-9395-F0A9A0D1BB28)]
                interface IParallaxViewStatics : IInspectable
                {
                    [propget] HRESULT ChildProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalSourceEndOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalSourceOffsetKindProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalSourceStartOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxHorizontalShiftRatioProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalShiftProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsHorizontalShiftClampedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsVerticalShiftClampedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalSourceEndOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalSourceOffsetKindProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalSourceStartOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxVerticalShiftRatioProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalShiftProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PasswordBox)]
                [uuid(02B9AA11-0B47-4E7D-AD91-3A4168ED230D)]
                interface IPasswordBox : IInspectable
                {
                    [propget] HRESULT Password([out] [retval] HSTRING* value);
                    [propput] HRESULT Password([in] HSTRING value);
                    [propget] HRESULT PasswordChar([out] [retval] HSTRING* value);
                    [propput] HRESULT PasswordChar([in] HSTRING value);
                    [deprecated("IsPasswordRevealButtonEnabledProperty may be altered or unavailable for releases after Windows 10.0. Instead, use PasswordRevealModeProperty.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propget] HRESULT IsPasswordRevealButtonEnabled([out] [retval] boolean* value);
                    [deprecated("IsPasswordRevealButtonEnabledProperty may be altered or unavailable for releases after Windows 10.0. Instead, use PasswordRevealModeProperty.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propput] HRESULT IsPasswordRevealButtonEnabled([in] boolean value);
                    [propget] HRESULT MaxLength([out] [retval] INT32* value);
                    [propput] HRESULT MaxLength([in] INT32 value);
                    [eventadd] HRESULT PasswordChanged([in] Windows.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PasswordChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContextMenuOpening([in] Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContextMenuOpening([in] EventRegistrationToken token);
                    HRESULT SelectAll();
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PasswordBox)]
                [uuid(5ED738DF-212F-4AEB-B5B8-2C219AEC3C0C)]
                interface IPasswordBox2 : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT PlaceholderText([out] [retval] HSTRING* value);
                    [propput] HRESULT PlaceholderText([in] HSTRING value);
                    [propget] HRESULT SelectionHighlightColor([out] [retval] Windows.UI.Xaml.Media.SolidColorBrush** value);
                    [propput] HRESULT SelectionHighlightColor([in] Windows.UI.Xaml.Media.SolidColorBrush* value);
                    [propget] HRESULT PreventKeyboardDisplayOnProgrammaticFocus([out] [retval] boolean* value);
                    [propput] HRESULT PreventKeyboardDisplayOnProgrammaticFocus([in] boolean value);
                    [eventadd] HRESULT Paste([in] Windows.UI.Xaml.Controls.TextControlPasteEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Paste([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PasswordBox)]
                [uuid(6024D9D1-56B7-41F0-9558-3934C14244D6)]
                interface IPasswordBox3 : IInspectable
                {
                    [propget] HRESULT PasswordRevealMode([out] [retval] Windows.UI.Xaml.Controls.PasswordRevealMode* value);
                    [propput] HRESULT PasswordRevealMode([in] Windows.UI.Xaml.Controls.PasswordRevealMode value);
                    [propget] HRESULT TextReadingOrder([out] [retval] Windows.UI.Xaml.TextReadingOrder* value);
                    [propput] HRESULT TextReadingOrder([in] Windows.UI.Xaml.TextReadingOrder value);
                    [propget] HRESULT InputScope([out] [retval] Windows.UI.Xaml.Input.InputScope** value);
                    [propput] HRESULT InputScope([in] Windows.UI.Xaml.Input.InputScope* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PasswordBox)]
                [uuid(569F4343-8E6C-44BF-808D-0E03964ED32F)]
                interface IPasswordBox4 : IInspectable
                {
                    [eventadd] HRESULT PasswordChanging([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.PasswordBox*, Windows.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PasswordChanging([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PasswordBox)]
                [uuid(F96C2753-E1D4-5142-86C2-7318BFBBC705)]
                interface IPasswordBox5 : IInspectable
                {
                    [propget] HRESULT CanPasteClipboardContent([out] [retval] boolean* value);
                    [propget] HRESULT SelectionFlyout([out] [retval] Windows.UI.Xaml.Controls.Primitives.FlyoutBase** value);
                    [propput] HRESULT SelectionFlyout([in] Windows.UI.Xaml.Controls.Primitives.FlyoutBase* value);
                    [propget] HRESULT Description([out] [retval] IInspectable** value);
                    [propput] HRESULT Description([in] IInspectable* value);
                    HRESULT PasteFromClipboard();
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs)]
                [uuid(142EDA22-3552-4AB8-81A6-A48620EE9C53)]
                interface IPasswordBoxPasswordChangingEventArgs : IInspectable
                {
                    [propget] HRESULT IsContentChanging([out] [retval] boolean* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PasswordBox)]
                [uuid(5EE67563-2D74-4ACE-BD79-FCAB61A7D77B)]
                interface IPasswordBoxStatics : IInspectable
                {
                    [propget] HRESULT PasswordProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PasswordCharProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [deprecated("IsPasswordRevealButtonEnabledProperty may be altered or unavailable for releases after Windows 10.0. Instead, use PasswordRevealModeProperty.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propget] HRESULT IsPasswordRevealButtonEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PasswordBox)]
                [uuid(FC57935F-98FA-4066-B785-FA725ECDE232)]
                interface IPasswordBoxStatics2 : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectionHighlightColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreventKeyboardDisplayOnProgrammaticFocusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PasswordBox)]
                [uuid(A2CDD319-AD6A-4352-B590-F696FFCB8E3F)]
                interface IPasswordBoxStatics3 : IInspectable
                {
                    [propget] HRESULT PasswordRevealModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextReadingOrderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT InputScopeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PasswordBox)]
                [uuid(4BDAC1AC-6B42-55F3-BFA4-65C7235078D6)]
                interface IPasswordBoxStatics5 : IInspectable
                {
                    [propget] HRESULT CanPasteClipboardContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectionFlyoutProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DescriptionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PathIcon)]
                [uuid(214C62DB-C366-4A0E-B9AD-DCF168D7EC0C)]
                interface IPathIcon : IInspectable
                {
                    [propget] HRESULT Data([out] [retval] Windows.UI.Xaml.Media.Geometry** value);
                    [propput] HRESULT Data([in] Windows.UI.Xaml.Media.Geometry* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PathIcon)]
                [uuid(AF9D9652-9C5D-4A37-9E1A-044ABEEF792B)]
                interface IPathIconFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.PathIcon** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PathIconSource)]
                [uuid(1F47010E-B305-4863-8B7A-15D08D633C7A)]
                interface IPathIconSource : IInspectable
                {
                    [propget] HRESULT Data([out] [retval] Windows.UI.Xaml.Media.Geometry** value);
                    [propput] HRESULT Data([in] Windows.UI.Xaml.Media.Geometry* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PathIconSource)]
                [uuid(8F7F85B9-5247-4F3B-833F-E384BF7E9C84)]
                interface IPathIconSourceFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.PathIconSource** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PathIconSource)]
                [uuid(DF7027D5-3682-43FF-80F0-AFA256B2FDC3)]
                interface IPathIconSourceStatics : IInspectable
                {
                    [propget] HRESULT DataProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PathIcon)]
                [uuid(77B75DB8-FB15-491A-B6E3-7DBBA911BAFE)]
                interface IPathIconStatics : IInspectable
                {
                    [propget] HRESULT DataProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PersonPicture)]
                [uuid(6C230B6D-0D75-4059-91BC-7B174D1D7315)]
                interface IPersonPicture : IInspectable
                {
                    [propget] HRESULT BadgeNumber([out] [retval] INT32* value);
                    [propput] HRESULT BadgeNumber([in] INT32 value);
                    [propget] HRESULT BadgeGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT BadgeGlyph([in] HSTRING value);
                    [propget] HRESULT BadgeImageSource([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT BadgeImageSource([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT BadgeText([out] [retval] HSTRING* value);
                    [propput] HRESULT BadgeText([in] HSTRING value);
                    [propget] HRESULT IsGroup([out] [retval] boolean* value);
                    [propput] HRESULT IsGroup([in] boolean value);
                    [propget] HRESULT Contact([out] [retval] Windows.ApplicationModel.Contacts.Contact** value);
                    [propput] HRESULT Contact([in] Windows.ApplicationModel.Contacts.Contact* value);
                    [propget] HRESULT DisplayName([out] [retval] HSTRING* value);
                    [propput] HRESULT DisplayName([in] HSTRING value);
                    [propget] HRESULT Initials([out] [retval] HSTRING* value);
                    [propput] HRESULT Initials([in] HSTRING value);
                    [propget] HRESULT PreferSmallImage([out] [retval] boolean* value);
                    [propput] HRESULT PreferSmallImage([in] boolean value);
                    [propget] HRESULT ProfilePicture([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT ProfilePicture([in] Windows.UI.Xaml.Media.ImageSource* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PersonPicture)]
                [uuid(4F18330D-0416-4B92-BFD3-BF5780B46AB2)]
                interface IPersonPictureFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.PersonPicture** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PersonPicture)]
                [uuid(DBEC0982-3C10-4639-9614-AA5B7CDC32CA)]
                interface IPersonPictureStatics : IInspectable
                {
                    [propget] HRESULT BadgeNumberProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BadgeGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BadgeImageSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BadgeTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsGroupProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContactProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DisplayNameProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT InitialsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreferSmallImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ProfilePictureProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PickerConfirmedEventArgs)]
                [uuid(447A9B51-1E23-4779-992B-986849713941)]
                interface IPickerConfirmedEventArgs : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PickerFlyout)]
                [uuid(A336FFDB-08D9-43E6-944E-F2E5C7CEE630)]
                interface IPickerFlyout : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Content([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT ConfirmationButtonsVisible([out] [retval] boolean* value);
                    [propput] HRESULT ConfirmationButtonsVisible([in] boolean value);
                    [eventadd] HRESULT Confirmed([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.PickerFlyout*, Windows.UI.Xaml.Controls.PickerConfirmedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Confirmed([in] EventRegistrationToken token);
                    HRESULT ShowAtAsync([in] Windows.UI.Xaml.FrameworkElement* target, [out] [retval] Windows.Foundation.IAsyncOperation<boolean>** operation);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PickerFlyoutPresenter)]
                [uuid(5884C978-6B27-4B38-A9AE-677C2994652E)]
                interface IPickerFlyoutPresenter : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PickerFlyout)]
                [uuid(AF18A436-F38A-4ABD-B933-6286C115B07F)]
                interface IPickerFlyoutStatics : IInspectable
                {
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ConfirmationButtonsVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Pivot)]
                [uuid(103E9B13-3400-4A16-90B9-6912BF06974E)]
                interface IPivot : IInspectable
                {
                    [propget] HRESULT Title([out] [retval] IInspectable** value);
                    [propput] HRESULT Title([in] IInspectable* value);
                    [propget] HRESULT TitleTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT TitleTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT SelectedIndex([out] [retval] INT32* value);
                    [propput] HRESULT SelectedIndex([in] INT32 value);
                    [propget] HRESULT SelectedItem([out] [retval] IInspectable** value);
                    [propput] HRESULT SelectedItem([in] IInspectable* value);
                    [propget] HRESULT IsLocked([out] [retval] boolean* value);
                    [propput] HRESULT IsLocked([in] boolean value);
                    [eventadd] HRESULT SelectionChanged([in] Windows.UI.Xaml.Controls.SelectionChangedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT PivotItemLoading([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Pivot*, Windows.UI.Xaml.Controls.PivotItemEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PivotItemLoading([in] EventRegistrationToken token);
                    [eventadd] HRESULT PivotItemLoaded([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Pivot*, Windows.UI.Xaml.Controls.PivotItemEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PivotItemLoaded([in] EventRegistrationToken token);
                    [eventadd] HRESULT PivotItemUnloading([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Pivot*, Windows.UI.Xaml.Controls.PivotItemEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PivotItemUnloading([in] EventRegistrationToken token);
                    [eventadd] HRESULT PivotItemUnloaded([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Pivot*, Windows.UI.Xaml.Controls.PivotItemEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PivotItemUnloaded([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Pivot)]
                [uuid(8B8A8660-1A55-411C-A82D-18991C3F0D6F)]
                interface IPivot2 : IInspectable
                {
                    [propget] HRESULT LeftHeader([out] [retval] IInspectable** value);
                    [propput] HRESULT LeftHeader([in] IInspectable* value);
                    [propget] HRESULT LeftHeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT LeftHeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT RightHeader([out] [retval] IInspectable** value);
                    [propput] HRESULT RightHeader([in] IInspectable* value);
                    [propget] HRESULT RightHeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT RightHeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Pivot)]
                [uuid(95BCBF96-F0DA-4089-8C65-E8B81354C766)]
                interface IPivot3 : IInspectable
                {
                    [propget] HRESULT HeaderFocusVisualPlacement([out] [retval] Windows.UI.Xaml.Controls.PivotHeaderFocusVisualPlacement* value);
                    [propput] HRESULT HeaderFocusVisualPlacement([in] Windows.UI.Xaml.Controls.PivotHeaderFocusVisualPlacement value);
                    [propget] HRESULT IsHeaderItemsCarouselEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsHeaderItemsCarouselEnabled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Pivot)]
                [uuid(1B0A818E-2529-4762-BA44-9ABC68C3CECA)]
                interface IPivotFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.Pivot** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PivotItem)]
                [uuid(A4764371-A502-47A3-915E-4AA096DAF87F)]
                interface IPivotItem : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PivotItemEventArgs)]
                [uuid(1A6F7254-1ED5-4BC5-A060-655530BCA6BA)]
                interface IPivotItemEventArgs : IInspectable
                {
                    [propget] HRESULT Item([out] [retval] Windows.UI.Xaml.Controls.PivotItem** value);
                    [propput] HRESULT Item([in] Windows.UI.Xaml.Controls.PivotItem* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PivotItem)]
                [uuid(0DCED981-636E-4A34-8A3F-8EE018639285)]
                interface IPivotItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.PivotItem** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.PivotItem)]
                [uuid(E147AD0C-488B-4A6E-BECD-A5DBD9941754)]
                interface IPivotItemStatics : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Pivot)]
                [uuid(EE22C7F4-C15D-4FF3-8A94-F50DFDFBE899)]
                interface IPivotStatics : IInspectable
                {
                    [propget] HRESULT TitleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TitleTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedItemProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsLockedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SlideInAnimationGroupProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetSlideInAnimationGroup([in] Windows.UI.Xaml.FrameworkElement* element, [out] [retval] Windows.UI.Xaml.Controls.PivotSlideInAnimationGroup* result);
                    HRESULT SetSlideInAnimationGroup([in] Windows.UI.Xaml.FrameworkElement* element, [in] Windows.UI.Xaml.Controls.PivotSlideInAnimationGroup value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Pivot)]
                [uuid(D7518ADD-BE75-4023-8DEB-C6513C3192A3)]
                interface IPivotStatics2 : IInspectable
                {
                    [propget] HRESULT LeftHeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LeftHeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RightHeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RightHeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Pivot)]
                [uuid(78B6274E-6616-4600-A039-922A5D09330B)]
                interface IPivotStatics3 : IInspectable
                {
                    [propget] HRESULT HeaderFocusVisualPlacementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsHeaderItemsCarouselEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ProgressBar)]
                [uuid(AE752C89-0067-4963-BF4C-29DB0C4A507E)]
                interface IProgressBar : IInspectable
                {
                    [propget] HRESULT IsIndeterminate([out] [retval] boolean* value);
                    [propput] HRESULT IsIndeterminate([in] boolean value);
                    [propget] HRESULT ShowError([out] [retval] boolean* value);
                    [propput] HRESULT ShowError([in] boolean value);
                    [propget] HRESULT ShowPaused([out] [retval] boolean* value);
                    [propput] HRESULT ShowPaused([in] boolean value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.ProgressBarTemplateSettings** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ProgressBar)]
                [uuid(DA9A8C11-1591-400B-A993-0F1C5CC12F3B)]
                interface IProgressBarFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ProgressBar** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ProgressBar)]
                [uuid(7A129FDA-5837-4E26-B3B4-E1C092CEBBEC)]
                interface IProgressBarStatics : IInspectable
                {
                    [propget] HRESULT IsIndeterminateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ShowErrorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ShowPausedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ProgressRing)]
                [uuid(6DA5E49E-6E9D-425C-BD7C-02173E39763F)]
                interface IProgressRing : IInspectable
                {
                    [propget] HRESULT IsActive([out] [retval] boolean* value);
                    [propput] HRESULT IsActive([in] boolean value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.ProgressRingTemplateSettings** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ProgressRing)]
                [uuid(E8B62507-4E2C-47D5-A54A-C6C48A5E6989)]
                interface IProgressRingStatics : IInspectable
                {
                    [propget] HRESULT IsActiveProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RadioButton)]
                [uuid(325C44E0-9A03-4BF3-ABD6-6FBB46C9A486)]
                interface IRadioButton : IInspectable
                {
                    [propget] HRESULT GroupName([out] [retval] HSTRING* value);
                    [propput] HRESULT GroupName([in] HSTRING value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RadioButton)]
                [uuid(F1D04933-34E1-4A5C-B2AE-CA3B1C0B20DE)]
                interface IRadioButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.RadioButton** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RadioButton)]
                [uuid(6B149293-F50F-4BD8-B0AC-5C162F33A208)]
                interface IRadioButtonStatics : IInspectable
                {
                    [propget] HRESULT GroupNameProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RatingControl)]
                [uuid(A7D91CA7-E5CF-4963-A24E-9673FE5FFDD5)]
                interface IRatingControl : IInspectable
                {
                    [propget] HRESULT Caption([out] [retval] HSTRING* value);
                    [propput] HRESULT Caption([in] HSTRING value);
                    [propget] HRESULT InitialSetValue([out] [retval] INT32* value);
                    [propput] HRESULT InitialSetValue([in] INT32 value);
                    [propget] HRESULT IsClearEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsClearEnabled([in] boolean value);
                    [propget] HRESULT IsReadOnly([out] [retval] boolean* value);
                    [propput] HRESULT IsReadOnly([in] boolean value);
                    [propget] HRESULT MaxRating([out] [retval] INT32* value);
                    [propput] HRESULT MaxRating([in] INT32 value);
                    [propget] HRESULT PlaceholderValue([out] [retval] DOUBLE* value);
                    [propput] HRESULT PlaceholderValue([in] DOUBLE value);
                    [propget] HRESULT ItemInfo([out] [retval] Windows.UI.Xaml.Controls.RatingItemInfo** value);
                    [propput] HRESULT ItemInfo([in] Windows.UI.Xaml.Controls.RatingItemInfo* value);
                    [propget] HRESULT Value([out] [retval] DOUBLE* value);
                    [propput] HRESULT Value([in] DOUBLE value);
                    [eventadd] HRESULT ValueChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RatingControl*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ValueChanged([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RatingControl)]
                [uuid(18D81716-C542-4CCB-B347-5E62C5DB782E)]
                interface IRatingControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.RatingControl** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RatingControl)]
                [uuid(D062D399-AD85-4C1C-B2C4-35DD4432275E)]
                interface IRatingControlStatics : IInspectable
                {
                    [propget] HRESULT CaptionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT InitialSetValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsClearEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsReadOnlyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxRatingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemInfoProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RatingItemFontInfo)]
                [uuid(054723E9-7989-4D5C-9D01-A7EB876F1071)]
                interface IRatingItemFontInfo : IInspectable
                {
                    [propget] HRESULT DisabledGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT DisabledGlyph([in] HSTRING value);
                    [propget] HRESULT Glyph([out] [retval] HSTRING* value);
                    [propput] HRESULT Glyph([in] HSTRING value);
                    [propget] HRESULT PointerOverGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT PointerOverGlyph([in] HSTRING value);
                    [propget] HRESULT PointerOverPlaceholderGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT PointerOverPlaceholderGlyph([in] HSTRING value);
                    [propget] HRESULT PlaceholderGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT PlaceholderGlyph([in] HSTRING value);
                    [propget] HRESULT UnsetGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT UnsetGlyph([in] HSTRING value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RatingItemFontInfo)]
                [uuid(9603FE56-9E9F-40B5-BAE1-4481BB73BCD3)]
                interface IRatingItemFontInfoFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.RatingItemFontInfo** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RatingItemFontInfo)]
                [uuid(FB214F01-6434-4EEB-82FF-7CE5D40BF510)]
                interface IRatingItemFontInfoStatics : IInspectable
                {
                    [propget] HRESULT DisabledGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PointerOverGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PointerOverPlaceholderGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT UnsetGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RatingItemImageInfo)]
                [uuid(25240E8C-E0D2-490E-B8F8-96C8EE0512B9)]
                interface IRatingItemImageInfo : IInspectable
                {
                    [propget] HRESULT DisabledImage([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT DisabledImage([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT Image([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT Image([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT PlaceholderImage([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT PlaceholderImage([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT PointerOverImage([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT PointerOverImage([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT PointerOverPlaceholderImage([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT PointerOverPlaceholderImage([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT UnsetImage([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT UnsetImage([in] Windows.UI.Xaml.Media.ImageSource* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RatingItemImageInfo)]
                [uuid(269E03F2-DA79-4787-9F4A-24A6FA56CDE2)]
                interface IRatingItemImageInfoFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.RatingItemImageInfo** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RatingItemImageInfo)]
                [uuid(8438486B-4B1C-4123-BA0B-73484D68C338)]
                interface IRatingItemImageInfoStatics : IInspectable
                {
                    [propget] HRESULT DisabledImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PointerOverImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PointerOverPlaceholderImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT UnsetImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RatingItemInfo)]
                [uuid(9CCBE6A2-591E-47A0-A318-6A1F7947DA2D)]
                interface IRatingItemInfo : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RatingItemInfo)]
                [uuid(B0FD43D6-CFEC-43C8-9AC5-0B0D5E25D862)]
                interface IRatingItemInfoFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.RatingItemInfo** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RefreshContainer)]
                [uuid(535DC413-B1D5-43C1-B057-8658CE1E0BA2)]
                interface IRefreshContainer : IInspectable
                {
                    [propget] HRESULT Visualizer([out] [retval] Windows.UI.Xaml.Controls.RefreshVisualizer** value);
                    [propput] HRESULT Visualizer([in] Windows.UI.Xaml.Controls.RefreshVisualizer* value);
                    [propget] HRESULT PullDirection([out] [retval] Windows.UI.Xaml.Controls.RefreshPullDirection* value);
                    [propput] HRESULT PullDirection([in] Windows.UI.Xaml.Controls.RefreshPullDirection value);
                    [eventadd] HRESULT RefreshRequested([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RefreshContainer*, Windows.UI.Xaml.Controls.RefreshRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT RefreshRequested([in] EventRegistrationToken token);
                    HRESULT RequestRefresh();
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RefreshContainer)]
                [uuid(0A04777F-089E-4239-BAEB-C4641484C37E)]
                interface IRefreshContainerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.RefreshContainer** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RefreshContainer)]
                [uuid(A20AF5A5-7015-475D-9DE3-81A0479DDA38)]
                interface IRefreshContainerStatics : IInspectable
                {
                    [propget] HRESULT VisualizerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PullDirectionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RefreshInteractionRatioChangedEventArgs)]
                [uuid(D7E47820-DC47-4B8E-BB27-7F0A83F29A07)]
                interface IRefreshInteractionRatioChangedEventArgs : IInspectable
                {
                    [propget] HRESULT InteractionRatio([out] [retval] DOUBLE* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RefreshRequestedEventArgs)]
                [uuid(1B089F43-CFCF-4AC6-B31F-8DAB6EEFDD93)]
                interface IRefreshRequestedEventArgs : IInspectable
                {
                    HRESULT GetDeferral([out] [retval] Windows.Foundation.Deferral** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RefreshStateChangedEventArgs)]
                [uuid(BB6C901E-21FE-4109-AF80-73EC661B678A)]
                interface IRefreshStateChangedEventArgs : IInspectable
                {
                    [propget] HRESULT OldState([out] [retval] Windows.UI.Xaml.Controls.RefreshVisualizerState* value);
                    [propget] HRESULT NewState([out] [retval] Windows.UI.Xaml.Controls.RefreshVisualizerState* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RefreshVisualizer)]
                [uuid(C0E30122-F3EB-4BAA-A11F-C3F87342CBF4)]
                interface IRefreshVisualizer : IInspectable
                {
                    HRESULT RequestRefresh();
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.RefreshVisualizerOrientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.RefreshVisualizerOrientation value);
                    [propget] HRESULT Content([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Content([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT State([out] [retval] Windows.UI.Xaml.Controls.RefreshVisualizerState* value);
                    [eventadd] HRESULT RefreshRequested([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RefreshVisualizer*, Windows.UI.Xaml.Controls.RefreshRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT RefreshRequested([in] EventRegistrationToken token);
                    [eventadd] HRESULT RefreshStateChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RefreshVisualizer*, Windows.UI.Xaml.Controls.RefreshStateChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT RefreshStateChanged([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RefreshVisualizer)]
                [uuid(6F5C6132-6E09-4C10-824A-127D36672715)]
                interface IRefreshVisualizerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.RefreshVisualizer** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RefreshVisualizer)]
                [uuid(AFEA56AF-362A-4015-B155-733A1F869831)]
                interface IRefreshVisualizerStatics : IInspectable
                {
                    [propget] HRESULT InfoProviderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RelativePanel)]
                [uuid(2EABFAEB-B35A-4035-ACEA-3C4A3730683F)]
                interface IRelativePanel : IInspectable
                {
                    [propget] HRESULT BorderBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT BorderBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT BorderThickness([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT BorderThickness([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT CornerRadius([out] [retval] Windows.UI.Xaml.CornerRadius* value);
                    [propput] HRESULT CornerRadius([in] Windows.UI.Xaml.CornerRadius value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RelativePanel)]
                [uuid(C09BD88C-1E82-53B3-8C01-7D0432F5F7DB)]
                interface IRelativePanel2 : IInspectable
                {
                    [propget] HRESULT BackgroundSizing([out] [retval] Windows.UI.Xaml.Controls.BackgroundSizing* value);
                    [propput] HRESULT BackgroundSizing([in] Windows.UI.Xaml.Controls.BackgroundSizing value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RelativePanel)]
                [uuid(8460193C-361B-44BA-A17E-B84C9DCDC772)]
                interface IRelativePanelFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.RelativePanel** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RelativePanel)]
                [uuid(15903C27-F18C-4C35-8E19-6A7459D907B6)]
                interface IRelativePanelStatics : IInspectable
                {
                    [propget] HRESULT LeftOfProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetLeftOf([in] Windows.UI.Xaml.UIElement* element, [out] [retval] IInspectable** result);
                    HRESULT SetLeftOf([in] Windows.UI.Xaml.UIElement* element, [in] IInspectable* value);
                    [propget] HRESULT AboveProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAbove([in] Windows.UI.Xaml.UIElement* element, [out] [retval] IInspectable** result);
                    HRESULT SetAbove([in] Windows.UI.Xaml.UIElement* element, [in] IInspectable* value);
                    [propget] HRESULT RightOfProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetRightOf([in] Windows.UI.Xaml.UIElement* element, [out] [retval] IInspectable** result);
                    HRESULT SetRightOf([in] Windows.UI.Xaml.UIElement* element, [in] IInspectable* value);
                    [propget] HRESULT BelowProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetBelow([in] Windows.UI.Xaml.UIElement* element, [out] [retval] IInspectable** result);
                    HRESULT SetBelow([in] Windows.UI.Xaml.UIElement* element, [in] IInspectable* value);
                    [propget] HRESULT AlignHorizontalCenterWithProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAlignHorizontalCenterWith([in] Windows.UI.Xaml.UIElement* element, [out] [retval] IInspectable** result);
                    HRESULT SetAlignHorizontalCenterWith([in] Windows.UI.Xaml.UIElement* element, [in] IInspectable* value);
                    [propget] HRESULT AlignVerticalCenterWithProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAlignVerticalCenterWith([in] Windows.UI.Xaml.UIElement* element, [out] [retval] IInspectable** result);
                    HRESULT SetAlignVerticalCenterWith([in] Windows.UI.Xaml.UIElement* element, [in] IInspectable* value);
                    [propget] HRESULT AlignLeftWithProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAlignLeftWith([in] Windows.UI.Xaml.UIElement* element, [out] [retval] IInspectable** result);
                    HRESULT SetAlignLeftWith([in] Windows.UI.Xaml.UIElement* element, [in] IInspectable* value);
                    [propget] HRESULT AlignTopWithProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAlignTopWith([in] Windows.UI.Xaml.UIElement* element, [out] [retval] IInspectable** result);
                    HRESULT SetAlignTopWith([in] Windows.UI.Xaml.UIElement* element, [in] IInspectable* value);
                    [propget] HRESULT AlignRightWithProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAlignRightWith([in] Windows.UI.Xaml.UIElement* element, [out] [retval] IInspectable** result);
                    HRESULT SetAlignRightWith([in] Windows.UI.Xaml.UIElement* element, [in] IInspectable* value);
                    [propget] HRESULT AlignBottomWithProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAlignBottomWith([in] Windows.UI.Xaml.UIElement* element, [out] [retval] IInspectable** result);
                    HRESULT SetAlignBottomWith([in] Windows.UI.Xaml.UIElement* element, [in] IInspectable* value);
                    [propget] HRESULT AlignLeftWithPanelProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAlignLeftWithPanel([in] Windows.UI.Xaml.UIElement* element, [out] [retval] boolean* result);
                    HRESULT SetAlignLeftWithPanel([in] Windows.UI.Xaml.UIElement* element, [in] boolean value);
                    [propget] HRESULT AlignTopWithPanelProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAlignTopWithPanel([in] Windows.UI.Xaml.UIElement* element, [out] [retval] boolean* result);
                    HRESULT SetAlignTopWithPanel([in] Windows.UI.Xaml.UIElement* element, [in] boolean value);
                    [propget] HRESULT AlignRightWithPanelProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAlignRightWithPanel([in] Windows.UI.Xaml.UIElement* element, [out] [retval] boolean* result);
                    HRESULT SetAlignRightWithPanel([in] Windows.UI.Xaml.UIElement* element, [in] boolean value);
                    [propget] HRESULT AlignBottomWithPanelProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAlignBottomWithPanel([in] Windows.UI.Xaml.UIElement* element, [out] [retval] boolean* result);
                    HRESULT SetAlignBottomWithPanel([in] Windows.UI.Xaml.UIElement* element, [in] boolean value);
                    [propget] HRESULT AlignHorizontalCenterWithPanelProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAlignHorizontalCenterWithPanel([in] Windows.UI.Xaml.UIElement* element, [out] [retval] boolean* result);
                    HRESULT SetAlignHorizontalCenterWithPanel([in] Windows.UI.Xaml.UIElement* element, [in] boolean value);
                    [propget] HRESULT AlignVerticalCenterWithPanelProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAlignVerticalCenterWithPanel([in] Windows.UI.Xaml.UIElement* element, [out] [retval] boolean* result);
                    HRESULT SetAlignVerticalCenterWithPanel([in] Windows.UI.Xaml.UIElement* element, [in] boolean value);
                    [propget] HRESULT BorderBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BorderThicknessProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CornerRadiusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RelativePanel)]
                [uuid(8D6B3444-5FBC-5D8B-8B46-22176F21FA8E)]
                interface IRelativePanelStatics2 : IInspectable
                {
                    [propget] HRESULT BackgroundSizingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(90A57A40-80B6-4FCE-B1EC-E3C616284B6A)]
                interface IRichEditBox : IInspectable
                {
                    [propget] HRESULT IsReadOnly([out] [retval] boolean* value);
                    [propput] HRESULT IsReadOnly([in] boolean value);
                    [propget] HRESULT AcceptsReturn([out] [retval] boolean* value);
                    [propput] HRESULT AcceptsReturn([in] boolean value);
                    [propget] HRESULT TextAlignment([out] [retval] Windows.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT TextAlignment([in] Windows.UI.Xaml.TextAlignment value);
                    [propget] HRESULT TextWrapping([out] [retval] Windows.UI.Xaml.TextWrapping* value);
                    [propput] HRESULT TextWrapping([in] Windows.UI.Xaml.TextWrapping value);
                    [propget] HRESULT IsSpellCheckEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsSpellCheckEnabled([in] boolean value);
                    [propget] HRESULT IsTextPredictionEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextPredictionEnabled([in] boolean value);
                    [propget] HRESULT Document([out] [retval] Windows.UI.Text.ITextDocument** value);
                    [propget] HRESULT InputScope([out] [retval] Windows.UI.Xaml.Input.InputScope** value);
                    [propput] HRESULT InputScope([in] Windows.UI.Xaml.Input.InputScope* value);
                    [eventadd] HRESULT TextChanged([in] Windows.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TextChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT SelectionChanged([in] Windows.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContextMenuOpening([in] Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContextMenuOpening([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(BBEA6EAD-E805-47A4-BBE7-47E59B8F74A7)]
                interface IRichEditBox2 : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT PlaceholderText([out] [retval] HSTRING* value);
                    [propput] HRESULT PlaceholderText([in] HSTRING value);
                    [propget] HRESULT SelectionHighlightColor([out] [retval] Windows.UI.Xaml.Media.SolidColorBrush** value);
                    [propput] HRESULT SelectionHighlightColor([in] Windows.UI.Xaml.Media.SolidColorBrush* value);
                    [propget] HRESULT PreventKeyboardDisplayOnProgrammaticFocus([out] [retval] boolean* value);
                    [propput] HRESULT PreventKeyboardDisplayOnProgrammaticFocus([in] boolean value);
                    [propget] HRESULT IsColorFontEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsColorFontEnabled([in] boolean value);
                    [eventadd] HRESULT Paste([in] Windows.UI.Xaml.Controls.TextControlPasteEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Paste([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(6B17A462-FBB6-4FFF-9991-9399CB9C0B90)]
                interface IRichEditBox3 : IInspectable
                {
                    [eventadd] HRESULT TextCompositionStarted([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TextCompositionStarted([in] EventRegistrationToken token);
                    [eventadd] HRESULT TextCompositionChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TextCompositionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT TextCompositionEnded([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TextCompositionEnded([in] EventRegistrationToken token);
                    [propget] HRESULT TextReadingOrder([out] [retval] Windows.UI.Xaml.TextReadingOrder* value);
                    [propput] HRESULT TextReadingOrder([in] Windows.UI.Xaml.TextReadingOrder value);
                    [propget] HRESULT DesiredCandidateWindowAlignment([out] [retval] Windows.UI.Xaml.Controls.CandidateWindowAlignment* value);
                    [propput] HRESULT DesiredCandidateWindowAlignment([in] Windows.UI.Xaml.Controls.CandidateWindowAlignment value);
                    [eventadd] HRESULT CandidateWindowBoundsChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CandidateWindowBoundsChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT TextChanging([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TextChanging([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 2.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(5CAA8D35-C838-4BAD-A07C-204183BB751F)]
                interface IRichEditBox4 : IInspectable
                {
                    HRESULT GetLinguisticAlternativesAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<HSTRING>*>** operation);
                    [propget] HRESULT ClipboardCopyFormat([out] [retval] Windows.UI.Xaml.Controls.RichEditClipboardFormat* value);
                    [propput] HRESULT ClipboardCopyFormat([in] Windows.UI.Xaml.Controls.RichEditClipboardFormat value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(A66D9CEA-6391-4F3B-9FD3-1FD01F49F327)]
                interface IRichEditBox5 : IInspectable
                {
                    [propget] HRESULT SelectionHighlightColorWhenNotFocused([out] [retval] Windows.UI.Xaml.Media.SolidColorBrush** value);
                    [propput] HRESULT SelectionHighlightColorWhenNotFocused([in] Windows.UI.Xaml.Media.SolidColorBrush* value);
                    [propget] HRESULT MaxLength([out] [retval] INT32* value);
                    [propput] HRESULT MaxLength([in] INT32 value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(0C89D500-E8D8-4EAE-8804-33649205D7D2)]
                interface IRichEditBox6 : IInspectable
                {
                    [propget] HRESULT HorizontalTextAlignment([out] [retval] Windows.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT HorizontalTextAlignment([in] Windows.UI.Xaml.TextAlignment value);
                    [propget] HRESULT CharacterCasing([out] [retval] Windows.UI.Xaml.Controls.CharacterCasing* value);
                    [propput] HRESULT CharacterCasing([in] Windows.UI.Xaml.Controls.CharacterCasing value);
                    [propget] HRESULT DisabledFormattingAccelerators([out] [retval] Windows.UI.Xaml.Controls.DisabledFormattingAccelerators* value);
                    [propput] HRESULT DisabledFormattingAccelerators([in] Windows.UI.Xaml.Controls.DisabledFormattingAccelerators value);
                    [eventadd] HRESULT CopyingToClipboard([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CopyingToClipboard([in] EventRegistrationToken token);
                    [eventadd] HRESULT CuttingToClipboard([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CuttingToClipboard([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(980C93EA-241F-4F6A-A539-9D185C8CF18A)]
                interface IRichEditBox7 : IInspectable
                {
                    [propget] HRESULT ContentLinkForegroundColor([out] [retval] Windows.UI.Xaml.Media.SolidColorBrush** value);
                    [propput] HRESULT ContentLinkForegroundColor([in] Windows.UI.Xaml.Media.SolidColorBrush* value);
                    [propget] HRESULT ContentLinkBackgroundColor([out] [retval] Windows.UI.Xaml.Media.SolidColorBrush** value);
                    [propput] HRESULT ContentLinkBackgroundColor([in] Windows.UI.Xaml.Media.SolidColorBrush* value);
                    [propget] HRESULT ContentLinkProviders([out] [retval] Windows.UI.Xaml.Documents.ContentLinkProviderCollection** value);
                    [propput] HRESULT ContentLinkProviders([in] Windows.UI.Xaml.Documents.ContentLinkProviderCollection* value);
                    [propget] HRESULT HandwritingView([out] [retval] Windows.UI.Xaml.Controls.HandwritingView** value);
                    [propput] HRESULT HandwritingView([in] Windows.UI.Xaml.Controls.HandwritingView* value);
                    [propget] HRESULT IsHandwritingViewEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsHandwritingViewEnabled([in] boolean value);
                    [eventadd] HRESULT ContentLinkChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Controls.ContentLinkChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContentLinkChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContentLinkInvoked([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Documents.ContentLinkInvokedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContentLinkInvoked([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(A098E0B8-18E2-513E-9D8D-4E9703410C03)]
                interface IRichEditBox8 : IInspectable
                {
                    [propget] HRESULT TextDocument([out] [retval] Windows.UI.Text.RichEditTextDocument** value);
                    [propget] HRESULT SelectionFlyout([out] [retval] Windows.UI.Xaml.Controls.Primitives.FlyoutBase** value);
                    [propput] HRESULT SelectionFlyout([in] Windows.UI.Xaml.Controls.Primitives.FlyoutBase* value);
                    [propget] HRESULT ProofingMenuFlyout([out] [retval] Windows.UI.Xaml.Controls.Primitives.FlyoutBase** value);
                    [propget] HRESULT Description([out] [retval] IInspectable** value);
                    [propput] HRESULT Description([in] IInspectable* value);
                    [eventadd] HRESULT SelectionChanging([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichEditBox*, Windows.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanging([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(61A1DF62-2806-41ED-88ED-AE21F47AB422)]
                interface IRichEditBoxFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.RichEditBox** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs)]
                [uuid(90E0035C-E8B8-5C33-9896-4E989D65829C)]
                interface IRichEditBoxSelectionChangingEventArgs : IInspectable
                {
                    [propget] HRESULT SelectionStart([out] [retval] INT32* value);
                    [propget] HRESULT SelectionLength([out] [retval] INT32* value);
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(F5E03A74-88EA-479B-9A05-37089FF30EDE)]
                interface IRichEditBoxStatics : IInspectable
                {
                    [propget] HRESULT IsReadOnlyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AcceptsReturnProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextWrappingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSpellCheckEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTextPredictionEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT InputScopeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(E3EB26DE-2748-420B-B1FC-CE95B6E85EEC)]
                interface IRichEditBoxStatics2 : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectionHighlightColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreventKeyboardDisplayOnProgrammaticFocusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorFontEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(6D17EEC5-1FB3-4C8B-AA23-F5E15D6AB64E)]
                interface IRichEditBoxStatics3 : IInspectable
                {
                    [propget] HRESULT DesiredCandidateWindowAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextReadingOrderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 2.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(F5D54FD7-7796-42A5-A5E5-2CD211EE8176)]
                interface IRichEditBoxStatics4 : IInspectable
                {
                    [propget] HRESULT ClipboardCopyFormatProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(4B5C4568-43D5-43E6-BBB9-CB4E6250F45A)]
                interface IRichEditBoxStatics5 : IInspectable
                {
                    [propget] HRESULT SelectionHighlightColorWhenNotFocusedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(FE40E287-82ED-4F7E-92BA-66F67BC1FF44)]
                interface IRichEditBoxStatics6 : IInspectable
                {
                    [propget] HRESULT HorizontalTextAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CharacterCasingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DisabledFormattingAcceleratorsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(59FA898F-F861-43DA-A7CE-4B9C21D835F9)]
                interface IRichEditBoxStatics7 : IInspectable
                {
                    [propget] HRESULT ContentLinkForegroundColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentLinkBackgroundColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentLinkProvidersProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HandwritingViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsHandwritingViewEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(58045172-106B-56A9-A8E4-4B74BF347D4E)]
                interface IRichEditBoxStatics8 : IInspectable
                {
                    [propget] HRESULT SelectionFlyoutProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ProofingMenuFlyoutProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DescriptionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs)]
                [uuid(54065018-2813-4922-9F8E-B6BBAFD995D8)]
                interface IRichEditBoxTextChangingEventArgs : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs)]
                [uuid(395B0DB5-636E-413E-9EB4-FC22EBFA3628)]
                interface IRichEditBoxTextChangingEventArgs2 : IInspectable
                {
                    [propget] HRESULT IsContentChanging([out] [retval] boolean* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlock)]
                [uuid(E5FFF9E2-B968-49E7-97D4-8CCA2AC3AE7C)]
                interface IRichTextBlock : IInspectable
                {
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT FontStretch([out] [retval] Windows.UI.Text.FontStretch* value);
                    [propput] HRESULT FontStretch([in] Windows.UI.Text.FontStretch value);
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT TextWrapping([out] [retval] Windows.UI.Xaml.TextWrapping* value);
                    [propput] HRESULT TextWrapping([in] Windows.UI.Xaml.TextWrapping value);
                    [propget] HRESULT TextTrimming([out] [retval] Windows.UI.Xaml.TextTrimming* value);
                    [propput] HRESULT TextTrimming([in] Windows.UI.Xaml.TextTrimming value);
                    [propget] HRESULT TextAlignment([out] [retval] Windows.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT TextAlignment([in] Windows.UI.Xaml.TextAlignment value);
                    [propget] HRESULT Blocks([out] [retval] Windows.UI.Xaml.Documents.BlockCollection** value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT LineHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT LineHeight([in] DOUBLE value);
                    [propget] HRESULT LineStackingStrategy([out] [retval] Windows.UI.Xaml.LineStackingStrategy* value);
                    [propput] HRESULT LineStackingStrategy([in] Windows.UI.Xaml.LineStackingStrategy value);
                    [propget] HRESULT CharacterSpacing([out] [retval] INT32* value);
                    [propput] HRESULT CharacterSpacing([in] INT32 value);
                    [propget] HRESULT OverflowContentTarget([out] [retval] Windows.UI.Xaml.Controls.RichTextBlockOverflow** value);
                    [propput] HRESULT OverflowContentTarget([in] Windows.UI.Xaml.Controls.RichTextBlockOverflow* value);
                    [propget] HRESULT IsTextSelectionEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextSelectionEnabled([in] boolean value);
                    [propget] HRESULT HasOverflowContent([out] [retval] boolean* value);
                    [propget] HRESULT SelectedText([out] [retval] HSTRING* value);
                    [propget] HRESULT ContentStart([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT ContentEnd([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT SelectionStart([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT SelectionEnd([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT BaselineOffset([out] [retval] DOUBLE* value);
                    [eventadd] HRESULT SelectionChanged([in] Windows.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContextMenuOpening([in] Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContextMenuOpening([in] EventRegistrationToken token);
                    HRESULT SelectAll();
                    HRESULT Select([in] Windows.UI.Xaml.Documents.TextPointer* start, [in] Windows.UI.Xaml.Documents.TextPointer* end);
                    HRESULT GetPositionFromPoint([in] Windows.Foundation.Point point, [out] [retval] Windows.UI.Xaml.Documents.TextPointer** result);
                    HRESULT Focus([in] Windows.UI.Xaml.FocusState value, [out] [retval] boolean* result);
                    [propget] HRESULT TextIndent([out] [retval] DOUBLE* value);
                    [propput] HRESULT TextIndent([in] DOUBLE value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlock)]
                [uuid(3F209013-03E7-4508-964A-91AEDAB3D11E)]
                interface IRichTextBlock2 : IInspectable
                {
                    [propget] HRESULT MaxLines([out] [retval] INT32* value);
                    [propput] HRESULT MaxLines([in] INT32 value);
                    [propget] HRESULT TextLineBounds([out] [retval] Windows.UI.Xaml.TextLineBounds* value);
                    [propput] HRESULT TextLineBounds([in] Windows.UI.Xaml.TextLineBounds value);
                    [propget] HRESULT SelectionHighlightColor([out] [retval] Windows.UI.Xaml.Media.SolidColorBrush** value);
                    [propput] HRESULT SelectionHighlightColor([in] Windows.UI.Xaml.Media.SolidColorBrush* value);
                    [propget] HRESULT OpticalMarginAlignment([out] [retval] Windows.UI.Xaml.OpticalMarginAlignment* value);
                    [propput] HRESULT OpticalMarginAlignment([in] Windows.UI.Xaml.OpticalMarginAlignment value);
                    [propget] HRESULT IsColorFontEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsColorFontEnabled([in] boolean value);
                    [propget] HRESULT TextReadingOrder([out] [retval] Windows.UI.Xaml.TextReadingOrder* value);
                    [propput] HRESULT TextReadingOrder([in] Windows.UI.Xaml.TextReadingOrder value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlock)]
                [uuid(7D39AE83-8918-4613-B007-7C898BA2950E)]
                interface IRichTextBlock3 : IInspectable
                {
                    [propget] HRESULT IsTextScaleFactorEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextScaleFactorEnabled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlock)]
                [uuid(3577C1EA-24FD-4F50-BBE4-3FB654EA58C5)]
                interface IRichTextBlock4 : IInspectable
                {
                    [propget] HRESULT TextDecorations([out] [retval] Windows.UI.Text.TextDecorations* value);
                    [propput] HRESULT TextDecorations([in] Windows.UI.Text.TextDecorations value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlock)]
                [uuid(9C7DC0C6-7A9F-45B6-8818-822C549BA094)]
                interface IRichTextBlock5 : IInspectable
                {
                    [propget] HRESULT IsTextTrimmed([out] [retval] boolean* value);
                    [propget] HRESULT HorizontalTextAlignment([out] [retval] Windows.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT HorizontalTextAlignment([in] Windows.UI.Xaml.TextAlignment value);
                    [propget] HRESULT TextHighlighters([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Documents.TextHighlighter*>** value);
                    [eventadd] HRESULT IsTextTrimmedChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichTextBlock*, Windows.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT IsTextTrimmedChanged([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlock)]
                [uuid(AE9010CD-E899-526E-927E-88E0EED693C8)]
                interface IRichTextBlock6 : IInspectable
                {
                    [propget] HRESULT SelectionFlyout([out] [retval] Windows.UI.Xaml.Controls.Primitives.FlyoutBase** value);
                    [propput] HRESULT SelectionFlyout([in] Windows.UI.Xaml.Controls.Primitives.FlyoutBase* value);
                    HRESULT CopySelectionToClipboard();
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlockOverflow)]
                [uuid(4F93749B-DAC3-4A42-9CBB-99F0DE37C071)]
                interface IRichTextBlockOverflow : IInspectable
                {
                    [propget] HRESULT OverflowContentTarget([out] [retval] Windows.UI.Xaml.Controls.RichTextBlockOverflow** value);
                    [propput] HRESULT OverflowContentTarget([in] Windows.UI.Xaml.Controls.RichTextBlockOverflow* value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT ContentSource([out] [retval] Windows.UI.Xaml.Controls.RichTextBlock** value);
                    [propget] HRESULT HasOverflowContent([out] [retval] boolean* value);
                    [propget] HRESULT ContentStart([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT ContentEnd([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT BaselineOffset([out] [retval] DOUBLE* value);
                    HRESULT GetPositionFromPoint([in] Windows.Foundation.Point point, [out] [retval] Windows.UI.Xaml.Documents.TextPointer** result);
                    HRESULT Focus([in] Windows.UI.Xaml.FocusState value, [out] [retval] boolean* result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlockOverflow)]
                [uuid(8742624E-A882-4826-B929-4D5C3905B9A1)]
                interface IRichTextBlockOverflow2 : IInspectable
                {
                    [propget] HRESULT MaxLines([out] [retval] INT32* value);
                    [propput] HRESULT MaxLines([in] INT32 value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlockOverflow)]
                [uuid(7F69587B-5C7F-4B5F-BDBC-FB95C90E10DE)]
                interface IRichTextBlockOverflow3 : IInspectable
                {
                    [propget] HRESULT IsTextTrimmed([out] [retval] boolean* value);
                    [eventadd] HRESULT IsTextTrimmedChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.RichTextBlockOverflow*, Windows.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT IsTextTrimmedChanged([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlockOverflow)]
                [uuid(041AC2F7-4F2B-43C3-A122-3FEA9CA9DC87)]
                interface IRichTextBlockOverflowStatics : IInspectable
                {
                    [propget] HRESULT OverflowContentTargetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HasOverflowContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlockOverflow)]
                [uuid(B5EBED4C-F8C4-4A3A-907F-E53E78279FA3)]
                interface IRichTextBlockOverflowStatics2 : IInspectable
                {
                    [propget] HRESULT MaxLinesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlockOverflow)]
                [uuid(D1D4A705-EB0B-4ECB-B9B7-E65D03087C8E)]
                interface IRichTextBlockOverflowStatics3 : IInspectable
                {
                    [propget] HRESULT IsTextTrimmedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlock)]
                [uuid(492D883C-ADEA-433C-BE1C-208A164262BE)]
                interface IRichTextBlockStatics : IInspectable
                {
                    [propget] HRESULT FontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextWrappingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextTrimmingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineStackingStrategyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CharacterSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OverflowContentTargetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTextSelectionEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HasOverflowContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextIndentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlock)]
                [uuid(0D6131E1-AF29-48CE-8AAF-74ECC28BFBB0)]
                interface IRichTextBlockStatics2 : IInspectable
                {
                    [propget] HRESULT MaxLinesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextLineBoundsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectionHighlightColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OpticalMarginAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorFontEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextReadingOrderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlock)]
                [uuid(073F7EF4-CA2B-4B49-A59A-31D8FA743332)]
                interface IRichTextBlockStatics3 : IInspectable
                {
                    [propget] HRESULT IsTextScaleFactorEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlock)]
                [uuid(80155BC4-6D96-4B08-AD57-13DB0F046412)]
                interface IRichTextBlockStatics4 : IInspectable
                {
                    [propget] HRESULT TextDecorationsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlock)]
                [uuid(AC9283A1-4F25-4280-8868-3EEEE82821E8)]
                interface IRichTextBlockStatics5 : IInspectable
                {
                    [propget] HRESULT IsTextTrimmedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalTextAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlock)]
                [uuid(073057E7-91C5-5857-BE7C-E72621239786)]
                interface IRichTextBlockStatics6 : IInspectable
                {
                    [propget] HRESULT SelectionFlyoutProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RowDefinition)]
                [uuid(4ABAE829-D80C-4A5E-A48C-F8B3D3B6533D)]
                interface IRowDefinition : IInspectable
                {
                    [propget] HRESULT Height([out] [retval] Windows.UI.Xaml.GridLength* value);
                    [propput] HRESULT Height([in] Windows.UI.Xaml.GridLength value);
                    [propget] HRESULT MaxHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT MaxHeight([in] DOUBLE value);
                    [propget] HRESULT MinHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT MinHeight([in] DOUBLE value);
                    [propget] HRESULT ActualHeight([out] [retval] DOUBLE* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.RowDefinition)]
                [uuid(5ADF3FE5-2056-4724-94D6-E4812B022EC8)]
                interface IRowDefinitionStatics : IInspectable
                {
                    [propget] HRESULT HeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [uuid(6AE99A0F-478C-5440-B2C6-EAD4378EF8E4)]
                interface IScrollAnchorProvider : IInspectable
                {
                    [propget] HRESULT CurrentAnchor([out] [retval] Windows.UI.Xaml.UIElement** value);
                    HRESULT RegisterAnchorCandidate([in] Windows.UI.Xaml.UIElement* element);
                    HRESULT UnregisterAnchorCandidate([in] Windows.UI.Xaml.UIElement* element);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ScrollContentPresenter)]
                [uuid(5712EE2B-0EEB-46D3-AA31-5F6801B8DE20)]
                interface IScrollContentPresenter : IInspectable
                {
                    [propget] HRESULT CanVerticallyScroll([out] [retval] boolean* value);
                    [propput] HRESULT CanVerticallyScroll([in] boolean value);
                    [propget] HRESULT CanHorizontallyScroll([out] [retval] boolean* value);
                    [propput] HRESULT CanHorizontallyScroll([in] boolean value);
                    [propget] HRESULT ExtentWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT ExtentHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT ViewportWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT ViewportHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT HorizontalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT VerticalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT ScrollOwner([out] [retval] IInspectable** value);
                    [propput] HRESULT ScrollOwner([in] IInspectable* value);
                    HRESULT LineUp();
                    HRESULT LineDown();
                    HRESULT LineLeft();
                    HRESULT LineRight();
                    HRESULT PageUp();
                    HRESULT PageDown();
                    HRESULT PageLeft();
                    HRESULT PageRight();
                    HRESULT MouseWheelUp();
                    HRESULT MouseWheelDown();
                    HRESULT MouseWheelLeft();
                    HRESULT MouseWheelRight();
                    HRESULT SetHorizontalOffset([in] DOUBLE offset);
                    HRESULT SetVerticalOffset([in] DOUBLE offset);
                    HRESULT MakeVisible([in] Windows.UI.Xaml.UIElement* visual, [in] Windows.Foundation.Rect rectangle, [out] [retval] Windows.Foundation.Rect* result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ScrollContentPresenter)]
                [uuid(5F9F2737-2318-5999-8A62-C3ED3C0E98B6)]
                interface IScrollContentPresenter2 : IInspectable
                {
                    [propget] HRESULT CanContentRenderOutsideBounds([out] [retval] boolean* value);
                    [propput] HRESULT CanContentRenderOutsideBounds([in] boolean value);
                    [propget] HRESULT SizesContentToTemplatedParent([out] [retval] boolean* value);
                    [propput] HRESULT SizesContentToTemplatedParent([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ScrollContentPresenter)]
                [uuid(E172FF1A-C676-524B-8F20-96152149D05E)]
                interface IScrollContentPresenterStatics2 : IInspectable
                {
                    [propget] HRESULT CanContentRenderOutsideBoundsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SizesContentToTemplatedParentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewer)]
                [uuid(64E9BE00-4DC1-493D-ABE7-CBD3C577490D)]
                interface IScrollViewer : IInspectable
                {
                    [propget] HRESULT HorizontalScrollBarVisibility([out] [retval] Windows.UI.Xaml.Controls.ScrollBarVisibility* value);
                    [propput] HRESULT HorizontalScrollBarVisibility([in] Windows.UI.Xaml.Controls.ScrollBarVisibility value);
                    [propget] HRESULT VerticalScrollBarVisibility([out] [retval] Windows.UI.Xaml.Controls.ScrollBarVisibility* value);
                    [propput] HRESULT VerticalScrollBarVisibility([in] Windows.UI.Xaml.Controls.ScrollBarVisibility value);
                    [propget] HRESULT IsHorizontalRailEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsHorizontalRailEnabled([in] boolean value);
                    [propget] HRESULT IsVerticalRailEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsVerticalRailEnabled([in] boolean value);
                    [propget] HRESULT IsHorizontalScrollChainingEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsHorizontalScrollChainingEnabled([in] boolean value);
                    [propget] HRESULT IsVerticalScrollChainingEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsVerticalScrollChainingEnabled([in] boolean value);
                    [propget] HRESULT IsZoomChainingEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsZoomChainingEnabled([in] boolean value);
                    [propget] HRESULT IsScrollInertiaEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsScrollInertiaEnabled([in] boolean value);
                    [propget] HRESULT IsZoomInertiaEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsZoomInertiaEnabled([in] boolean value);
                    [propget] HRESULT HorizontalScrollMode([out] [retval] Windows.UI.Xaml.Controls.ScrollMode* value);
                    [propput] HRESULT HorizontalScrollMode([in] Windows.UI.Xaml.Controls.ScrollMode value);
                    [propget] HRESULT VerticalScrollMode([out] [retval] Windows.UI.Xaml.Controls.ScrollMode* value);
                    [propput] HRESULT VerticalScrollMode([in] Windows.UI.Xaml.Controls.ScrollMode value);
                    [propget] HRESULT ZoomMode([out] [retval] Windows.UI.Xaml.Controls.ZoomMode* value);
                    [propput] HRESULT ZoomMode([in] Windows.UI.Xaml.Controls.ZoomMode value);
                    [propget] HRESULT HorizontalSnapPointsAlignment([out] [retval] Windows.UI.Xaml.Controls.Primitives.SnapPointsAlignment* value);
                    [propput] HRESULT HorizontalSnapPointsAlignment([in] Windows.UI.Xaml.Controls.Primitives.SnapPointsAlignment value);
                    [propget] HRESULT VerticalSnapPointsAlignment([out] [retval] Windows.UI.Xaml.Controls.Primitives.SnapPointsAlignment* value);
                    [propput] HRESULT VerticalSnapPointsAlignment([in] Windows.UI.Xaml.Controls.Primitives.SnapPointsAlignment value);
                    [propget] HRESULT HorizontalSnapPointsType([out] [retval] Windows.UI.Xaml.Controls.SnapPointsType* value);
                    [propput] HRESULT HorizontalSnapPointsType([in] Windows.UI.Xaml.Controls.SnapPointsType value);
                    [propget] HRESULT VerticalSnapPointsType([out] [retval] Windows.UI.Xaml.Controls.SnapPointsType* value);
                    [propput] HRESULT VerticalSnapPointsType([in] Windows.UI.Xaml.Controls.SnapPointsType value);
                    [propget] HRESULT ZoomSnapPointsType([out] [retval] Windows.UI.Xaml.Controls.SnapPointsType* value);
                    [propput] HRESULT ZoomSnapPointsType([in] Windows.UI.Xaml.Controls.SnapPointsType value);
                    [propget] HRESULT HorizontalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT ViewportWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT ScrollableWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT ComputedHorizontalScrollBarVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT ExtentWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT VerticalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT ViewportHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT ScrollableHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT ComputedVerticalScrollBarVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT ExtentHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT MinZoomFactor([out] [retval] FLOAT* value);
                    [propput] HRESULT MinZoomFactor([in] FLOAT value);
                    [propget] HRESULT MaxZoomFactor([out] [retval] FLOAT* value);
                    [propput] HRESULT MaxZoomFactor([in] FLOAT value);
                    [propget] HRESULT ZoomFactor([out] [retval] FLOAT* value);
                    [propget] HRESULT ZoomSnapPoints([out] [retval] Windows.Foundation.Collections.IVector<FLOAT>** value);
                    [eventadd] HRESULT ViewChanged([in] Windows.Foundation.EventHandler<Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ViewChanged([in] EventRegistrationToken token);
                    [deprecated("ScrollToHorizontalOffset may be altered or unavailable for releases after Windows 8.1. Instead, use ChangeView.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] HRESULT ScrollToHorizontalOffset([in] DOUBLE offset);
                    [deprecated("ScrollToVerticalOffset may be altered or unavailable for releases after Windows 8.1. Instead, use ChangeView.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] HRESULT ScrollToVerticalOffset([in] DOUBLE offset);
                    [deprecated("ZoomToFactor may be altered or unavailable for releases after Windows 8.1. Instead, use ChangeView.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] HRESULT ZoomToFactor([in] FLOAT factor);
                    HRESULT InvalidateScrollInfo();
                    [propget] HRESULT IsDeferredScrollingEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsDeferredScrollingEnabled([in] boolean value);
                    [propget] HRESULT BringIntoViewOnFocusChange([out] [retval] boolean* value);
                    [propput] HRESULT BringIntoViewOnFocusChange([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewer)]
                [uuid(64E9BE10-4DD1-494D-ABF7-CBD3C577491D)]
                interface IScrollViewer2 : IInspectable
                {
                    [propget] HRESULT TopLeftHeader([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT TopLeftHeader([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT LeftHeader([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT LeftHeader([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT TopHeader([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT TopHeader([in] Windows.UI.Xaml.UIElement* value);
                    [eventadd] HRESULT ViewChanging([in] Windows.Foundation.EventHandler<Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ViewChanging([in] EventRegistrationToken token);
                    [overload("ChangeView")] HRESULT ChangeView([in] Windows.Foundation.IReference<DOUBLE>* horizontalOffset, [in] Windows.Foundation.IReference<DOUBLE>* verticalOffset, [in] Windows.Foundation.IReference<FLOAT>* zoomFactor, [out] [retval] boolean* result);
                    [overload("ChangeView")] HRESULT ChangeViewWithOptionalAnimation([in] Windows.Foundation.IReference<DOUBLE>* horizontalOffset, [in] Windows.Foundation.IReference<DOUBLE>* verticalOffset, [in] Windows.Foundation.IReference<FLOAT>* zoomFactor, [in] boolean disableAnimation, [out] [retval] boolean* result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewer)]
                [uuid(74E9BE21-5DE2-595E-BC08-DBD3C577492C)]
                interface IScrollViewer3 : IInspectable
                {
                    [eventadd] HRESULT DirectManipulationStarted([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DirectManipulationStarted([in] EventRegistrationToken token);
                    [eventadd] HRESULT DirectManipulationCompleted([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DirectManipulationCompleted([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewer)]
                [uuid(786FB0C4-50A9-5A45-8A92-7BF372E19098)]
                interface IScrollViewer4 : IInspectable
                {
                    [propget] HRESULT ReduceViewportForCoreInputViewOcclusions([out] [retval] boolean* value);
                    [propput] HRESULT ReduceViewportForCoreInputViewOcclusions([in] boolean value);
                    [propget] HRESULT HorizontalAnchorRatio([out] [retval] DOUBLE* value);
                    [propput] HRESULT HorizontalAnchorRatio([in] DOUBLE value);
                    [propget] HRESULT VerticalAnchorRatio([out] [retval] DOUBLE* value);
                    [propput] HRESULT VerticalAnchorRatio([in] DOUBLE value);
                    [propget] HRESULT CanContentRenderOutsideBounds([out] [retval] boolean* value);
                    [propput] HRESULT CanContentRenderOutsideBounds([in] boolean value);
                    [eventadd] HRESULT AnchorRequested([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ScrollViewer*, Windows.UI.Xaml.Controls.AnchorRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT AnchorRequested([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewer)]
                [uuid(33D1299D-8D6E-4290-BF22-905CCCD04D31)]
                interface IScrollViewerStatics : IInspectable
                {
                    [propget] HRESULT HorizontalSnapPointsAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalSnapPointsAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalSnapPointsTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalSnapPointsTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ZoomSnapPointsTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ViewportWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ScrollableWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ComputedHorizontalScrollBarVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ExtentWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ViewportHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ScrollableHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ComputedVerticalScrollBarVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ExtentHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinZoomFactorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxZoomFactorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ZoomFactorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ZoomSnapPointsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalScrollBarVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetHorizontalScrollBarVisibility([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.ScrollBarVisibility* result);
                    HRESULT SetHorizontalScrollBarVisibility([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.ScrollBarVisibility horizontalScrollBarVisibility);
                    [propget] HRESULT VerticalScrollBarVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetVerticalScrollBarVisibility([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.ScrollBarVisibility* result);
                    HRESULT SetVerticalScrollBarVisibility([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.ScrollBarVisibility verticalScrollBarVisibility);
                    [propget] HRESULT IsHorizontalRailEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsHorizontalRailEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetIsHorizontalRailEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isHorizontalRailEnabled);
                    [propget] HRESULT IsVerticalRailEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsVerticalRailEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetIsVerticalRailEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isVerticalRailEnabled);
                    [propget] HRESULT IsHorizontalScrollChainingEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsHorizontalScrollChainingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetIsHorizontalScrollChainingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isHorizontalScrollChainingEnabled);
                    [propget] HRESULT IsVerticalScrollChainingEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsVerticalScrollChainingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetIsVerticalScrollChainingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isVerticalScrollChainingEnabled);
                    [propget] HRESULT IsZoomChainingEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsZoomChainingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetIsZoomChainingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isZoomChainingEnabled);
                    [propget] HRESULT IsScrollInertiaEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsScrollInertiaEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetIsScrollInertiaEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isScrollInertiaEnabled);
                    [propget] HRESULT IsZoomInertiaEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsZoomInertiaEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetIsZoomInertiaEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isZoomInertiaEnabled);
                    [propget] HRESULT HorizontalScrollModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetHorizontalScrollMode([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.ScrollMode* result);
                    HRESULT SetHorizontalScrollMode([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.ScrollMode horizontalScrollMode);
                    [propget] HRESULT VerticalScrollModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetVerticalScrollMode([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.ScrollMode* result);
                    HRESULT SetVerticalScrollMode([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.ScrollMode verticalScrollMode);
                    [propget] HRESULT ZoomModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetZoomMode([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.ZoomMode* result);
                    HRESULT SetZoomMode([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.ZoomMode zoomMode);
                    [propget] HRESULT IsDeferredScrollingEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsDeferredScrollingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetIsDeferredScrollingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isDeferredScrollingEnabled);
                    [propget] HRESULT BringIntoViewOnFocusChangeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetBringIntoViewOnFocusChange([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetBringIntoViewOnFocusChange([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean bringIntoViewOnFocusChange);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewer)]
                [uuid(33D129AD-8D7E-42A0-BF32-905CCCD04D41)]
                interface IScrollViewerStatics2 : IInspectable
                {
                    [propget] HRESULT TopLeftHeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LeftHeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TopHeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewer)]
                [uuid(220CF7CC-4F46-59F1-AF9B-67FA8EB33D01)]
                interface IScrollViewerStatics4 : IInspectable
                {
                    [propget] HRESULT ReduceViewportForCoreInputViewOcclusionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalAnchorRatioProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalAnchorRatioProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanContentRenderOutsideBoundsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetCanContentRenderOutsideBounds([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetCanContentRenderOutsideBounds([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean canContentRenderOutsideBounds);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewerView)]
                [uuid(64E9BE01-4DC2-493E-ABE8-CBD3C577490E)]
                interface IScrollViewerView : IInspectable
                {
                    [propget] HRESULT HorizontalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT VerticalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT ZoomFactor([out] [retval] FLOAT* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs)]
                [uuid(4DD04F7E-7A11-4B2E-9933-577DF39252B6)]
                interface IScrollViewerViewChangedEventArgs : IInspectable
                {
                    [propget] HRESULT IsIntermediate([out] [retval] boolean* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs)]
                [uuid(4DD04F7F-7A11-4B2E-9933-577DF39252B6)]
                interface IScrollViewerViewChangingEventArgs : IInspectable
                {
                    [propget] HRESULT NextView([out] [retval] Windows.UI.Xaml.Controls.ScrollViewerView** value);
                    [propget] HRESULT FinalView([out] [retval] Windows.UI.Xaml.Controls.ScrollViewerView** value);
                    [propget] HRESULT IsInertial([out] [retval] boolean* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SearchBox)]
                [uuid(F89ECC5A-99BA-4BD4-966C-F11FA443D13C)]
                interface ISearchBox : IInspectable
                {
                    [propget] HRESULT SearchHistoryEnabled([out] [retval] boolean* value);
                    [propput] HRESULT SearchHistoryEnabled([in] boolean value);
                    [propget] HRESULT SearchHistoryContext([out] [retval] HSTRING* value);
                    [propput] HRESULT SearchHistoryContext([in] HSTRING value);
                    [propget] HRESULT PlaceholderText([out] [retval] HSTRING* value);
                    [propput] HRESULT PlaceholderText([in] HSTRING value);
                    [propget] HRESULT QueryText([out] [retval] HSTRING* value);
                    [propput] HRESULT QueryText([in] HSTRING value);
                    [propget] HRESULT FocusOnKeyboardInput([out] [retval] boolean* value);
                    [propput] HRESULT FocusOnKeyboardInput([in] boolean value);
                    [propget] HRESULT ChooseSuggestionOnEnter([out] [retval] boolean* value);
                    [propput] HRESULT ChooseSuggestionOnEnter([in] boolean value);
                    [eventadd] HRESULT QueryChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SearchBox*, Windows.UI.Xaml.Controls.SearchBoxQueryChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT QueryChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT SuggestionsRequested([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SearchBox*, Windows.UI.Xaml.Controls.SearchBoxSuggestionsRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SuggestionsRequested([in] EventRegistrationToken token);
                    [eventadd] HRESULT QuerySubmitted([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SearchBox*, Windows.UI.Xaml.Controls.SearchBoxQuerySubmittedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT QuerySubmitted([in] EventRegistrationToken token);
                    [eventadd] HRESULT ResultSuggestionChosen([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SearchBox*, Windows.UI.Xaml.Controls.SearchBoxResultSuggestionChosenEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ResultSuggestionChosen([in] EventRegistrationToken token);
                    [eventadd] HRESULT PrepareForFocusOnKeyboardInput([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SearchBox*, Windows.UI.Xaml.RoutedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PrepareForFocusOnKeyboardInput([in] EventRegistrationToken token);
                    HRESULT SetLocalContentSuggestionSettings([in] Windows.ApplicationModel.Search.LocalContentSuggestionSettings* settings);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SearchBox)]
                [uuid(CD743F6D-8685-46B4-9DDD-202F6941B701)]
                interface ISearchBoxFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.SearchBox** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SearchBoxQueryChangedEventArgs)]
                [uuid(A9A70F8F-0CB0-4BD2-9998-2FB57AD5E731)]
                interface ISearchBoxQueryChangedEventArgs : IInspectable
                {
                    [propget] HRESULT QueryText([out] [retval] HSTRING* value);
                    [propget] HRESULT Language([out] [retval] HSTRING* value);
                    [propget] HRESULT LinguisticDetails([out] [retval] Windows.ApplicationModel.Search.SearchQueryLinguisticDetails** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SearchBoxQuerySubmittedEventArgs)]
                [uuid(126E90FD-3C4E-4CCB-9AEF-4705D19FE548)]
                interface ISearchBoxQuerySubmittedEventArgs : IInspectable
                {
                    [propget] HRESULT QueryText([out] [retval] HSTRING* value);
                    [propget] HRESULT Language([out] [retval] HSTRING* value);
                    [propget] HRESULT LinguisticDetails([out] [retval] Windows.ApplicationModel.Search.SearchQueryLinguisticDetails** value);
                    [propget] HRESULT KeyModifiers([out] [retval] Windows.System.VirtualKeyModifiers* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SearchBoxResultSuggestionChosenEventArgs)]
                [uuid(18918C23-E4C3-4662-A03B-D054FFD0F905)]
                interface ISearchBoxResultSuggestionChosenEventArgs : IInspectable
                {
                    [propget] HRESULT Tag([out] [retval] HSTRING* value);
                    [propget] HRESULT KeyModifiers([out] [retval] Windows.System.VirtualKeyModifiers* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SearchBox)]
                [uuid(B123634F-6871-48CD-92DF-4CFF22459082)]
                interface ISearchBoxStatics : IInspectable
                {
                    [propget] HRESULT SearchHistoryEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SearchHistoryContextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT QueryTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FocusOnKeyboardInputProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ChooseSuggestionOnEnterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SearchBoxSuggestionsRequestedEventArgs)]
                [uuid(DA15170E-E566-48CB-BD11-FE4B0F30A44D)]
                interface ISearchBoxSuggestionsRequestedEventArgs : IInspectable
                {
                    [propget] HRESULT QueryText([out] [retval] HSTRING* value);
                    [propget] HRESULT Language([out] [retval] HSTRING* value);
                    [propget] HRESULT LinguisticDetails([out] [retval] Windows.ApplicationModel.Search.SearchQueryLinguisticDetails** value);
                    [propget] HRESULT Request([out] [retval] Windows.ApplicationModel.Search.SearchSuggestionsRequest** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SectionsInViewChangedEventArgs)]
                [uuid(DD49EE6B-D165-430F-A37D-B807064F85E1)]
                interface ISectionsInViewChangedEventArgs : IInspectable
                {
                    [propget] HRESULT AddedSections([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.HubSection*>** value);
                    [propget] HRESULT RemovedSections([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.HubSection*>** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SectionsInViewChangedEventArgs)]
                [uuid(557F5244-92F8-4150-B730-E6346E8F50D1)]
                interface ISectionsInViewChangedEventArgsFactory : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SelectionChangedEventArgs)]
                [uuid(C972D2DC-B609-4758-851E-A799C21DE97D)]
                interface ISelectionChangedEventArgs : IInspectable
                {
                    [propget] HRESULT AddedItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT RemovedItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SelectionChangedEventArgs)]
                [uuid(11A8B6B5-2830-4517-84CD-5524C8B88B45)]
                interface ISelectionChangedEventArgsFactory : IInspectable
                {
                    HRESULT CreateInstanceWithRemovedItemsAndAddedItems([in] Windows.Foundation.Collections.IVector<IInspectable*>* removedItems, [in] Windows.Foundation.Collections.IVector<IInspectable*>* addedItems, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.SelectionChangedEventArgs** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SemanticZoom)]
                [uuid(019FFF21-ECE6-4FBC-BF40-8938D4813E27)]
                interface ISemanticZoom : IInspectable
                {
                    [propget] HRESULT ZoomedInView([out] [retval] Windows.UI.Xaml.Controls.ISemanticZoomInformation** value);
                    [propput] HRESULT ZoomedInView([in] Windows.UI.Xaml.Controls.ISemanticZoomInformation* value);
                    [propget] HRESULT ZoomedOutView([out] [retval] Windows.UI.Xaml.Controls.ISemanticZoomInformation** value);
                    [propput] HRESULT ZoomedOutView([in] Windows.UI.Xaml.Controls.ISemanticZoomInformation* value);
                    [propget] HRESULT IsZoomedInViewActive([out] [retval] boolean* value);
                    [propput] HRESULT IsZoomedInViewActive([in] boolean value);
                    [propget] HRESULT CanChangeViews([out] [retval] boolean* value);
                    [propput] HRESULT CanChangeViews([in] boolean value);
                    [eventadd] HRESULT ViewChangeStarted([in] Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ViewChangeStarted([in] EventRegistrationToken token);
                    [eventadd] HRESULT ViewChangeCompleted([in] Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ViewChangeCompleted([in] EventRegistrationToken token);
                    HRESULT ToggleActiveView();
                    [propget] HRESULT IsZoomOutButtonEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsZoomOutButtonEnabled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [uuid(A76A3B63-229B-4DC5-AA11-9D922FBF8A98)]
                interface ISemanticZoomInformation : IInspectable
                {
                    [propget] HRESULT SemanticZoomOwner([out] [retval] Windows.UI.Xaml.Controls.SemanticZoom** value);
                    [propput] HRESULT SemanticZoomOwner([in] Windows.UI.Xaml.Controls.SemanticZoom* value);
                    [propget] HRESULT IsActiveView([out] [retval] boolean* value);
                    [propput] HRESULT IsActiveView([in] boolean value);
                    [propget] HRESULT IsZoomedInView([out] [retval] boolean* value);
                    [propput] HRESULT IsZoomedInView([in] boolean value);
                    HRESULT InitializeViewChange();
                    HRESULT CompleteViewChange();
                    HRESULT MakeVisible([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* item);
                    HRESULT StartViewChangeFrom([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* source, [in] Windows.UI.Xaml.Controls.SemanticZoomLocation* destination);
                    HRESULT StartViewChangeTo([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* source, [in] Windows.UI.Xaml.Controls.SemanticZoomLocation* destination);
                    HRESULT CompleteViewChangeFrom([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* source, [in] Windows.UI.Xaml.Controls.SemanticZoomLocation* destination);
                    HRESULT CompleteViewChangeTo([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* source, [in] Windows.UI.Xaml.Controls.SemanticZoomLocation* destination);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SemanticZoomLocation)]
                [uuid(42011736-E3C2-496B-BC4E-D750D4375B9A)]
                interface ISemanticZoomLocation : IInspectable
                {
                    [propget] HRESULT Item([out] [retval] IInspectable** value);
                    [propput] HRESULT Item([in] IInspectable* value);
                    [propget] HRESULT Bounds([out] [retval] Windows.Foundation.Rect* value);
                    [propput] HRESULT Bounds([in] Windows.Foundation.Rect value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SemanticZoom)]
                [uuid(8EF17EF2-9898-4666-B285-3ED38A07910E)]
                interface ISemanticZoomStatics : IInspectable
                {
                    [propget] HRESULT ZoomedInViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ZoomedOutViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsZoomedInViewActiveProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanChangeViewsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsZoomOutButtonEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs)]
                [uuid(47DFC068-B569-4B19-842D-8E6CF90989AF)]
                interface ISemanticZoomViewChangedEventArgs : IInspectable
                {
                    [propget] HRESULT IsSourceZoomedInView([out] [retval] boolean* value);
                    [propput] HRESULT IsSourceZoomedInView([in] boolean value);
                    [propget] HRESULT SourceItem([out] [retval] Windows.UI.Xaml.Controls.SemanticZoomLocation** value);
                    [propput] HRESULT SourceItem([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* value);
                    [propget] HRESULT DestinationItem([out] [retval] Windows.UI.Xaml.Controls.SemanticZoomLocation** value);
                    [propput] HRESULT DestinationItem([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SettingsFlyout)]
                [uuid(830BA82B-C55B-4E32-A51C-5791E024C8AF)]
                interface ISettingsFlyout : IInspectable
                {
                    [propget] HRESULT Title([out] [retval] HSTRING* value);
                    [propput] HRESULT Title([in] HSTRING value);
                    [propget] HRESULT HeaderBackground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT HeaderBackground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT HeaderForeground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT HeaderForeground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT IconSource([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT IconSource([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.SettingsFlyoutTemplateSettings** value);
                    [eventadd] HRESULT BackClick([in] Windows.UI.Xaml.Controls.BackClickEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT BackClick([in] EventRegistrationToken token);
                    HRESULT Show();
                    HRESULT ShowIndependent();
                    HRESULT Hide();
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SettingsFlyout)]
                [uuid(480C7011-57AA-4DB6-B6FD-EC676F6D414E)]
                interface ISettingsFlyoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.SettingsFlyout** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SettingsFlyout)]
                [uuid(D0E3B535-9157-4BE4-A42A-F591698846AC)]
                interface ISettingsFlyoutStatics : IInspectable
                {
                    [propget] HRESULT TitleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderBackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IconSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Slider)]
                [uuid(89572027-4C48-4700-8076-497BA73D9C18)]
                interface ISlider : IInspectable
                {
                    [propget] HRESULT IntermediateValue([out] [retval] DOUBLE* value);
                    [propput] HRESULT IntermediateValue([in] DOUBLE value);
                    [propget] HRESULT StepFrequency([out] [retval] DOUBLE* value);
                    [propput] HRESULT StepFrequency([in] DOUBLE value);
                    [propget] HRESULT SnapsTo([out] [retval] Windows.UI.Xaml.Controls.Primitives.SliderSnapsTo* value);
                    [propput] HRESULT SnapsTo([in] Windows.UI.Xaml.Controls.Primitives.SliderSnapsTo value);
                    [propget] HRESULT TickFrequency([out] [retval] DOUBLE* value);
                    [propput] HRESULT TickFrequency([in] DOUBLE value);
                    [propget] HRESULT TickPlacement([out] [retval] Windows.UI.Xaml.Controls.Primitives.TickPlacement* value);
                    [propput] HRESULT TickPlacement([in] Windows.UI.Xaml.Controls.Primitives.TickPlacement value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT IsDirectionReversed([out] [retval] boolean* value);
                    [propput] HRESULT IsDirectionReversed([in] boolean value);
                    [propget] HRESULT IsThumbToolTipEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsThumbToolTipEnabled([in] boolean value);
                    [propget] HRESULT ThumbToolTipValueConverter([out] [retval] Windows.UI.Xaml.Data.IValueConverter** value);
                    [propput] HRESULT ThumbToolTipValueConverter([in] Windows.UI.Xaml.Data.IValueConverter* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Slider)]
                [uuid(40A3C50E-87D6-4D2F-B1CF-B279CC996F26)]
                interface ISlider2 : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Slider)]
                [uuid(03A67B37-C7BF-437C-848F-8CB5B753EAB4)]
                interface ISliderFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.Slider** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Slider)]
                [uuid(8A4363D7-7FDF-4D30-98FE-CE78C05B31CF)]
                interface ISliderStatics : IInspectable
                {
                    [propget] HRESULT IntermediateValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StepFrequencyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SnapsToProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TickFrequencyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TickPlacementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsDirectionReversedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsThumbToolTipEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ThumbToolTipValueConverterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Slider)]
                [uuid(00E7935D-79A5-4759-96A6-29E0A94ADD33)]
                interface ISliderStatics2 : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SplitButton)]
                [uuid(58BBB066-C2EA-5499-8150-40FAA75F6BB5)]
                interface ISplitButton : IInspectable
                {
                    [propget] HRESULT Flyout([out] [retval] Windows.UI.Xaml.Controls.Primitives.FlyoutBase** value);
                    [propput] HRESULT Flyout([in] Windows.UI.Xaml.Controls.Primitives.FlyoutBase* value);
                    [propget] HRESULT Command([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT Command([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT CommandParameter([out] [retval] IInspectable** value);
                    [propput] HRESULT CommandParameter([in] IInspectable* value);
                    [eventadd] HRESULT Click([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SplitButton*, Windows.UI.Xaml.Controls.SplitButtonClickEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Click([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SplitButtonAutomationPeer)]
                [uuid(C46A58B8-3828-5C36-AA13-F79F02C12F34)]
                interface ISplitButtonAutomationPeer : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SplitButtonAutomationPeer)]
                [uuid(D63A2534-77DC-5361-8422-4AD8750F45F4)]
                interface ISplitButtonAutomationPeerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] Windows.UI.Xaml.Controls.SplitButton* owner, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.SplitButtonAutomationPeer** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SplitButtonClickEventArgs)]
                [uuid(C227C2CA-26F4-5960-98D5-919149D1B525)]
                interface ISplitButtonClickEventArgs : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SplitButton)]
                [uuid(3201C32F-4D55-589D-97DD-617FA3642137)]
                interface ISplitButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.SplitButton** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SplitButton)]
                [uuid(8DF07A81-0B1F-5EA9-BE42-152AB9A4BC5E)]
                interface ISplitButtonStatics : IInspectable
                {
                    [propget] HRESULT FlyoutProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CommandParameterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SplitView)]
                [uuid(97222F31-3844-429E-939C-1673155322A1)]
                interface ISplitView : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Content([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT Pane([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Pane([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT IsPaneOpen([out] [retval] boolean* value);
                    [propput] HRESULT IsPaneOpen([in] boolean value);
                    [propget] HRESULT OpenPaneLength([out] [retval] DOUBLE* value);
                    [propput] HRESULT OpenPaneLength([in] DOUBLE value);
                    [propget] HRESULT CompactPaneLength([out] [retval] DOUBLE* value);
                    [propput] HRESULT CompactPaneLength([in] DOUBLE value);
                    [propget] HRESULT PanePlacement([out] [retval] Windows.UI.Xaml.Controls.SplitViewPanePlacement* value);
                    [propput] HRESULT PanePlacement([in] Windows.UI.Xaml.Controls.SplitViewPanePlacement value);
                    [propget] HRESULT DisplayMode([out] [retval] Windows.UI.Xaml.Controls.SplitViewDisplayMode* value);
                    [propput] HRESULT DisplayMode([in] Windows.UI.Xaml.Controls.SplitViewDisplayMode value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings** value);
                    [propget] HRESULT PaneBackground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT PaneBackground([in] Windows.UI.Xaml.Media.Brush* value);
                    [eventadd] HRESULT PaneClosing([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SplitView*, Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PaneClosing([in] EventRegistrationToken token);
                    [eventadd] HRESULT PaneClosed([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SplitView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PaneClosed([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SplitView)]
                [uuid(5EA7DC10-CC83-409A-82F9-3E91D6D7084F)]
                interface ISplitView2 : IInspectable
                {
                    [propget] HRESULT LightDismissOverlayMode([out] [retval] Windows.UI.Xaml.Controls.LightDismissOverlayMode* value);
                    [propput] HRESULT LightDismissOverlayMode([in] Windows.UI.Xaml.Controls.LightDismissOverlayMode value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SplitView)]
                [uuid(0EA12D8D-1171-407B-96D3-5E1B470C3EC5)]
                interface ISplitView3 : IInspectable
                {
                    [eventadd] HRESULT PaneOpening([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SplitView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PaneOpening([in] EventRegistrationToken token);
                    [eventadd] HRESULT PaneOpened([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SplitView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PaneOpened([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SplitView)]
                [uuid(F101773A-084E-4FB9-8442-63221B44533F)]
                interface ISplitViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.SplitView** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs)]
                [uuid(93CF494E-7A95-44D8-9562-1B348248DA9F)]
                interface ISplitViewPaneClosingEventArgs : IInspectable
                {
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SplitView)]
                [uuid(859B4F6F-44AB-4E4B-91C1-17B7056D9B5F)]
                interface ISplitViewStatics : IInspectable
                {
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsPaneOpenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OpenPaneLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CompactPaneLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PanePlacementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DisplayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TemplateSettingsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneBackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SplitView)]
                [uuid(14B7CD7A-DFBC-422C-80A9-585871297113)]
                interface ISplitViewStatics2 : IInspectable
                {
                    [propget] HRESULT LightDismissOverlayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.StackPanel)]
                [uuid(B8AE8FE2-D641-4FD7-80B4-7439207D2798)]
                interface IStackPanel : IInspectable
                {
                    [propget] HRESULT AreScrollSnapPointsRegular([out] [retval] boolean* value);
                    [propput] HRESULT AreScrollSnapPointsRegular([in] boolean value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.StackPanel)]
                [uuid(36F23359-040E-48F7-9A98-F2664591959C)]
                interface IStackPanel2 : IInspectable
                {
                    [propget] HRESULT BorderBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT BorderBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT BorderThickness([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT BorderThickness([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT CornerRadius([out] [retval] Windows.UI.Xaml.CornerRadius* value);
                    [propput] HRESULT CornerRadius([in] Windows.UI.Xaml.CornerRadius value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.StackPanel)]
                [uuid(43EBF7F6-3196-412E-8A95-ADD002FF43F0)]
                interface IStackPanel4 : IInspectable
                {
                    [propget] HRESULT Spacing([out] [retval] DOUBLE* value);
                    [propput] HRESULT Spacing([in] DOUBLE value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.StackPanel)]
                [uuid(F73E3117-61A8-5A01-865E-88511C04A992)]
                interface IStackPanel5 : IInspectable
                {
                    [propget] HRESULT BackgroundSizing([out] [retval] Windows.UI.Xaml.Controls.BackgroundSizing* value);
                    [propput] HRESULT BackgroundSizing([in] Windows.UI.Xaml.Controls.BackgroundSizing value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.StackPanel)]
                [uuid(63D8248A-8B34-445A-808F-B6ECD62A27D9)]
                interface IStackPanelFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.StackPanel** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.StackPanel)]
                [uuid(F0D0CD93-4DBC-48A7-9914-954924657771)]
                interface IStackPanelStatics : IInspectable
                {
                    [propget] HRESULT AreScrollSnapPointsRegularProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.StackPanel)]
                [uuid(D97E6257-080D-412E-A91A-CE6E5D02AAD3)]
                interface IStackPanelStatics2 : IInspectable
                {
                    [propget] HRESULT BorderBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BorderThicknessProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CornerRadiusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.StackPanel)]
                [uuid(279CDD71-067B-459F-815F-ECD85C5E4843)]
                interface IStackPanelStatics4 : IInspectable
                {
                    [propget] HRESULT SpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.StackPanel)]
                [uuid(87287490-BFF2-5347-8787-FB5AEC942878)]
                interface IStackPanelStatics5 : IInspectable
                {
                    [propget] HRESULT BackgroundSizingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.StyleSelector)]
                [uuid(D1113F67-D8C1-4AE4-98F0-D8504502F08B)]
                interface IStyleSelector : IInspectable
                {
                    HRESULT SelectStyle([in] IInspectable* item, [in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] Windows.UI.Xaml.Style** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.StyleSelector)]
                [uuid(9E942AE7-3761-447F-8F97-29E39D5EB310)]
                interface IStyleSelectorFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.StyleSelector** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.StyleSelector)]
                [uuid(08ADD66D-0E2E-43A0-AECA-8FAA94B9D017)]
                interface IStyleSelectorOverrides : IInspectable
                {
                    HRESULT SelectStyleCore([in] IInspectable* item, [in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] Windows.UI.Xaml.Style** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SwapChainBackgroundPanel)]
                [uuid(1C59DB48-8233-4C0C-BCF5-02A5FB35AE00)]
                interface ISwapChainBackgroundPanel : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SwapChainBackgroundPanel)]
                [uuid(21E672F2-2592-4C38-870F-28FBCF52C095)]
                interface ISwapChainBackgroundPanel2 : IInspectable
                {
                    HRESULT CreateCoreIndependentInputSource([in] Windows.UI.Core.CoreInputDeviceTypes deviceTypes, [out] [retval] Windows.UI.Core.CoreIndependentInputSource** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SwapChainBackgroundPanel)]
                [uuid(198289D4-C89B-49B2-896C-5917BF8ADCAE)]
                interface ISwapChainBackgroundPanelFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.SwapChainBackgroundPanel** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SwapChainPanel)]
                [uuid(C589644F-EBA8-427A-B75A-9F1F93A11AE9)]
                interface ISwapChainPanel : IInspectable
                {
                    [propget] HRESULT CompositionScaleX([out] [retval] FLOAT* value);
                    [propget] HRESULT CompositionScaleY([out] [retval] FLOAT* value);
                    [eventadd] HRESULT CompositionScaleChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SwapChainPanel*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CompositionScaleChanged([in] EventRegistrationToken token);
                    HRESULT CreateCoreIndependentInputSource([in] Windows.UI.Core.CoreInputDeviceTypes deviceTypes, [out] [retval] Windows.UI.Core.CoreIndependentInputSource** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SwapChainPanel)]
                [uuid(F38F8D7F-1A48-49CB-86D2-10EAAAF6FD70)]
                interface ISwapChainPanelFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.SwapChainPanel** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SwapChainPanel)]
                [uuid(F89C0297-EEA8-498C-99C4-257E3660DF7E)]
                interface ISwapChainPanelStatics : IInspectable
                {
                    [propget] HRESULT CompositionScaleXProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CompositionScaleYProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SwipeControl)]
                [uuid(9EE3D96F-6704-4823-AA15-1C143BC53CF7)]
                interface ISwipeControl : IInspectable
                {
                    [propget] HRESULT LeftItems([out] [retval] Windows.UI.Xaml.Controls.SwipeItems** value);
                    [propput] HRESULT LeftItems([in] Windows.UI.Xaml.Controls.SwipeItems* value);
                    [propget] HRESULT RightItems([out] [retval] Windows.UI.Xaml.Controls.SwipeItems** value);
                    [propput] HRESULT RightItems([in] Windows.UI.Xaml.Controls.SwipeItems* value);
                    [propget] HRESULT TopItems([out] [retval] Windows.UI.Xaml.Controls.SwipeItems** value);
                    [propput] HRESULT TopItems([in] Windows.UI.Xaml.Controls.SwipeItems* value);
                    [propget] HRESULT BottomItems([out] [retval] Windows.UI.Xaml.Controls.SwipeItems** value);
                    [propput] HRESULT BottomItems([in] Windows.UI.Xaml.Controls.SwipeItems* value);
                    HRESULT Close();
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SwipeControl)]
                [uuid(C0AAA3AE-D141-4E12-A728-5F95B507E7AB)]
                interface ISwipeControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.SwipeControl** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SwipeControl)]
                [uuid(E57AE83C-2216-4717-9EF6-4662334C6501)]
                interface ISwipeControlStatics : IInspectable
                {
                    [propget] HRESULT LeftItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RightItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TopItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BottomItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SwipeItem)]
                [uuid(836EDADC-45C8-4A00-90A0-7107FA894A1B)]
                interface ISwipeItem : IInspectable
                {
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                    [propget] HRESULT IconSource([out] [retval] Windows.UI.Xaml.Controls.IconSource** value);
                    [propput] HRESULT IconSource([in] Windows.UI.Xaml.Controls.IconSource* value);
                    [propget] HRESULT Background([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Background([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT Command([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT Command([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT CommandParameter([out] [retval] IInspectable** value);
                    [propput] HRESULT CommandParameter([in] IInspectable* value);
                    [propget] HRESULT BehaviorOnInvoked([out] [retval] Windows.UI.Xaml.Controls.SwipeBehaviorOnInvoked* value);
                    [propput] HRESULT BehaviorOnInvoked([in] Windows.UI.Xaml.Controls.SwipeBehaviorOnInvoked value);
                    [eventadd] HRESULT Invoked([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SwipeItem*, Windows.UI.Xaml.Controls.SwipeItemInvokedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Invoked([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SwipeItem)]
                [uuid(844BD61A-1716-4097-BBA2-7526DA22DE39)]
                interface ISwipeItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.SwipeItem** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SwipeItemInvokedEventArgs)]
                [uuid(C5B025F5-CB32-4733-8011-5D0D37F4550A)]
                interface ISwipeItemInvokedEventArgs : IInspectable
                {
                    [propget] HRESULT SwipeControl([out] [retval] Windows.UI.Xaml.Controls.SwipeControl** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SwipeItem)]
                [uuid(D0B44E96-2766-4D93-B5DB-F5E1BE832C2D)]
                interface ISwipeItemStatics : IInspectable
                {
                    [propget] HRESULT IconSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CommandParameterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BehaviorOnInvokedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SwipeItems)]
                [uuid(B01726FF-969A-40D0-9F04-76084CE6D7B7)]
                interface ISwipeItems : IInspectable
                {
                    [propget] HRESULT Mode([out] [retval] Windows.UI.Xaml.Controls.SwipeMode* value);
                    [propput] HRESULT Mode([in] Windows.UI.Xaml.Controls.SwipeMode value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SwipeItems)]
                [uuid(47C460EE-D5AA-445F-B31E-50C076C011B9)]
                interface ISwipeItemsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.SwipeItems** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SwipeItems)]
                [uuid(376250DF-48DB-43E3-B0E9-089E5DA9A114)]
                interface ISwipeItemsStatics : IInspectable
                {
                    [propget] HRESULT ModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SymbolIcon)]
                [uuid(7A4774C9-A6A3-4B30-8FF1-9081D70E9A5C)]
                interface ISymbolIcon : IInspectable
                {
                    [propget] HRESULT Symbol([out] [retval] Windows.UI.Xaml.Controls.Symbol* value);
                    [propput] HRESULT Symbol([in] Windows.UI.Xaml.Controls.Symbol value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SymbolIcon)]
                [uuid(C7252B88-E76C-4B44-8A05-046B9DC772B8)]
                interface ISymbolIconFactory : IInspectable
                {
                    HRESULT CreateInstanceWithSymbol([in] Windows.UI.Xaml.Controls.Symbol symbol, [out] [retval] Windows.UI.Xaml.Controls.SymbolIcon** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SymbolIconSource)]
                [uuid(625D95A2-B6B1-408A-B289-EAB2ECBA62D8)]
                interface ISymbolIconSource : IInspectable
                {
                    [propget] HRESULT Symbol([out] [retval] Windows.UI.Xaml.Controls.Symbol* value);
                    [propput] HRESULT Symbol([in] Windows.UI.Xaml.Controls.Symbol value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SymbolIconSource)]
                [uuid(A526AAB0-4130-4907-B049-21F9240C7A40)]
                interface ISymbolIconSourceFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.SymbolIconSource** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SymbolIconSource)]
                [uuid(8BC49738-D94E-4148-8D64-1ADF0F23F25F)]
                interface ISymbolIconSourceStatics : IInspectable
                {
                    [propget] HRESULT SymbolProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.SymbolIcon)]
                [uuid(8624FBDF-952C-4F76-B03F-30833BE99572)]
                interface ISymbolIconStatics : IInspectable
                {
                    [propget] HRESULT SymbolProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                [uuid(AE2D9271-3B4A-45FC-8468-F7949548F4D5)]
                interface ITextBlock : IInspectable
                {
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT FontStretch([out] [retval] Windows.UI.Text.FontStretch* value);
                    [propput] HRESULT FontStretch([in] Windows.UI.Text.FontStretch value);
                    [propget] HRESULT CharacterSpacing([out] [retval] INT32* value);
                    [propput] HRESULT CharacterSpacing([in] INT32 value);
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT TextWrapping([out] [retval] Windows.UI.Xaml.TextWrapping* value);
                    [propput] HRESULT TextWrapping([in] Windows.UI.Xaml.TextWrapping value);
                    [propget] HRESULT TextTrimming([out] [retval] Windows.UI.Xaml.TextTrimming* value);
                    [propput] HRESULT TextTrimming([in] Windows.UI.Xaml.TextTrimming value);
                    [propget] HRESULT TextAlignment([out] [retval] Windows.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT TextAlignment([in] Windows.UI.Xaml.TextAlignment value);
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                    [propget] HRESULT Inlines([out] [retval] Windows.UI.Xaml.Documents.InlineCollection** value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT LineHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT LineHeight([in] DOUBLE value);
                    [propget] HRESULT LineStackingStrategy([out] [retval] Windows.UI.Xaml.LineStackingStrategy* value);
                    [propput] HRESULT LineStackingStrategy([in] Windows.UI.Xaml.LineStackingStrategy value);
                    [propget] HRESULT IsTextSelectionEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextSelectionEnabled([in] boolean value);
                    [propget] HRESULT SelectedText([out] [retval] HSTRING* value);
                    [propget] HRESULT ContentStart([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT ContentEnd([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT SelectionStart([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT SelectionEnd([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT BaselineOffset([out] [retval] DOUBLE* value);
                    [eventadd] HRESULT SelectionChanged([in] Windows.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContextMenuOpening([in] Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContextMenuOpening([in] EventRegistrationToken token);
                    HRESULT SelectAll();
                    HRESULT Select([in] Windows.UI.Xaml.Documents.TextPointer* start, [in] Windows.UI.Xaml.Documents.TextPointer* end);
                    HRESULT Focus([in] Windows.UI.Xaml.FocusState value, [out] [retval] boolean* result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                [uuid(45206A4C-0A4E-4FBF-AEE9-335D5A205F6E)]
                interface ITextBlock2 : IInspectable
                {
                    [propget] HRESULT SelectionHighlightColor([out] [retval] Windows.UI.Xaml.Media.SolidColorBrush** value);
                    [propput] HRESULT SelectionHighlightColor([in] Windows.UI.Xaml.Media.SolidColorBrush* value);
                    [propget] HRESULT MaxLines([out] [retval] INT32* value);
                    [propput] HRESULT MaxLines([in] INT32 value);
                    [propget] HRESULT TextLineBounds([out] [retval] Windows.UI.Xaml.TextLineBounds* value);
                    [propput] HRESULT TextLineBounds([in] Windows.UI.Xaml.TextLineBounds value);
                    [propget] HRESULT OpticalMarginAlignment([out] [retval] Windows.UI.Xaml.OpticalMarginAlignment* value);
                    [propput] HRESULT OpticalMarginAlignment([in] Windows.UI.Xaml.OpticalMarginAlignment value);
                    [propget] HRESULT IsColorFontEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsColorFontEnabled([in] boolean value);
                    [propget] HRESULT TextReadingOrder([out] [retval] Windows.UI.Xaml.TextReadingOrder* value);
                    [propput] HRESULT TextReadingOrder([in] Windows.UI.Xaml.TextReadingOrder value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                [uuid(B651DD5A-424B-48C3-9B67-486F4E139899)]
                interface ITextBlock3 : IInspectable
                {
                    [propget] HRESULT IsTextScaleFactorEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextScaleFactorEnabled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                [uuid(B014F270-9808-4ADC-B452-60CDA54100C1)]
                interface ITextBlock4 : IInspectable
                {
                    HRESULT GetAlphaMask([out] [retval] Windows.UI.Composition.CompositionBrush** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                [uuid(624A2D38-EDBD-4A5A-B678-E49F1E07AFBD)]
                interface ITextBlock5 : IInspectable
                {
                    [propget] HRESULT TextDecorations([out] [retval] Windows.UI.Text.TextDecorations* value);
                    [propput] HRESULT TextDecorations([in] Windows.UI.Text.TextDecorations value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                [uuid(31816CD9-0404-410F-91EC-33B0A0BB92B2)]
                interface ITextBlock6 : IInspectable
                {
                    [propget] HRESULT IsTextTrimmed([out] [retval] boolean* value);
                    [propget] HRESULT HorizontalTextAlignment([out] [retval] Windows.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT HorizontalTextAlignment([in] Windows.UI.Xaml.TextAlignment value);
                    [propget] HRESULT TextHighlighters([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Documents.TextHighlighter*>** value);
                    [eventadd] HRESULT IsTextTrimmedChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBlock*, Windows.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT IsTextTrimmedChanged([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                [uuid(DFE20A4E-8BE7-5E33-9F37-72416875B121)]
                interface ITextBlock7 : IInspectable
                {
                    [propget] HRESULT SelectionFlyout([out] [retval] Windows.UI.Xaml.Controls.Primitives.FlyoutBase** value);
                    [propput] HRESULT SelectionFlyout([in] Windows.UI.Xaml.Controls.Primitives.FlyoutBase* value);
                    HRESULT CopySelectionToClipboard();
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                [uuid(193EC042-A847-4552-B4E8-DB36655B840A)]
                interface ITextBlockStatics : IInspectable
                {
                    [propget] HRESULT FontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CharacterSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextWrappingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextTrimmingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineStackingStrategyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTextSelectionEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                [uuid(88100B1B-FF24-4B93-A0E6-F029C94871F1)]
                interface ITextBlockStatics2 : IInspectable
                {
                    [propget] HRESULT SelectionHighlightColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxLinesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextLineBoundsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OpticalMarginAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorFontEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextReadingOrderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                [uuid(8D16B9EB-20A1-4EAB-BBF2-1D6BDCBCD705)]
                interface ITextBlockStatics3 : IInspectable
                {
                    [propget] HRESULT IsTextScaleFactorEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                [uuid(8E4D9C70-0D4E-48DF-AE7F-BB7A9AF6852E)]
                interface ITextBlockStatics5 : IInspectable
                {
                    [propget] HRESULT TextDecorationsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                [uuid(3D1013A9-F9A6-43A2-99D3-573B89A83CA3)]
                interface ITextBlockStatics6 : IInspectable
                {
                    [propget] HRESULT IsTextTrimmedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalTextAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                [uuid(CFD57E3B-0256-585D-8B3F-FEAFB69D3320)]
                interface ITextBlockStatics7 : IInspectable
                {
                    [propget] HRESULT SelectionFlyoutProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(E48F5A8B-1DFF-4352-A1F4-E516514EC882)]
                interface ITextBox : IInspectable
                {
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                    [propget] HRESULT SelectedText([out] [retval] HSTRING* value);
                    [propput] HRESULT SelectedText([in] HSTRING value);
                    [propget] HRESULT SelectionLength([out] [retval] INT32* value);
                    [propput] HRESULT SelectionLength([in] INT32 value);
                    [propget] HRESULT SelectionStart([out] [retval] INT32* value);
                    [propput] HRESULT SelectionStart([in] INT32 value);
                    [propget] HRESULT MaxLength([out] [retval] INT32* value);
                    [propput] HRESULT MaxLength([in] INT32 value);
                    [propget] HRESULT IsReadOnly([out] [retval] boolean* value);
                    [propput] HRESULT IsReadOnly([in] boolean value);
                    [propget] HRESULT AcceptsReturn([out] [retval] boolean* value);
                    [propput] HRESULT AcceptsReturn([in] boolean value);
                    [propget] HRESULT TextAlignment([out] [retval] Windows.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT TextAlignment([in] Windows.UI.Xaml.TextAlignment value);
                    [propget] HRESULT TextWrapping([out] [retval] Windows.UI.Xaml.TextWrapping* value);
                    [propput] HRESULT TextWrapping([in] Windows.UI.Xaml.TextWrapping value);
                    [propget] HRESULT IsSpellCheckEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsSpellCheckEnabled([in] boolean value);
                    [propget] HRESULT IsTextPredictionEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextPredictionEnabled([in] boolean value);
                    [propget] HRESULT InputScope([out] [retval] Windows.UI.Xaml.Input.InputScope** value);
                    [propput] HRESULT InputScope([in] Windows.UI.Xaml.Input.InputScope* value);
                    [eventadd] HRESULT TextChanged([in] Windows.UI.Xaml.Controls.TextChangedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TextChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT SelectionChanged([in] Windows.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContextMenuOpening([in] Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContextMenuOpening([in] EventRegistrationToken token);
                    HRESULT Select([in] INT32 start, [in] INT32 length);
                    HRESULT SelectAll();
                    HRESULT GetRectFromCharacterIndex([in] INT32 charIndex, [in] boolean trailingEdge, [out] [retval] Windows.Foundation.Rect* result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(F7168C00-1432-462A-9405-38F385BFC37C)]
                interface ITextBox2 : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT PlaceholderText([out] [retval] HSTRING* value);
                    [propput] HRESULT PlaceholderText([in] HSTRING value);
                    [propget] HRESULT SelectionHighlightColor([out] [retval] Windows.UI.Xaml.Media.SolidColorBrush** value);
                    [propput] HRESULT SelectionHighlightColor([in] Windows.UI.Xaml.Media.SolidColorBrush* value);
                    [propget] HRESULT PreventKeyboardDisplayOnProgrammaticFocus([out] [retval] boolean* value);
                    [propput] HRESULT PreventKeyboardDisplayOnProgrammaticFocus([in] boolean value);
                    [propget] HRESULT IsColorFontEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsColorFontEnabled([in] boolean value);
                    [eventadd] HRESULT Paste([in] Windows.UI.Xaml.Controls.TextControlPasteEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Paste([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(7DF18C3C-2826-425E-9A94-00B7F73F3756)]
                interface ITextBox3 : IInspectable
                {
                    [eventadd] HRESULT TextCompositionStarted([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox*, Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TextCompositionStarted([in] EventRegistrationToken token);
                    [eventadd] HRESULT TextCompositionChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox*, Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TextCompositionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT TextCompositionEnded([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox*, Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TextCompositionEnded([in] EventRegistrationToken token);
                    [propget] HRESULT TextReadingOrder([out] [retval] Windows.UI.Xaml.TextReadingOrder* value);
                    [propput] HRESULT TextReadingOrder([in] Windows.UI.Xaml.TextReadingOrder value);
                    [propget] HRESULT DesiredCandidateWindowAlignment([out] [retval] Windows.UI.Xaml.Controls.CandidateWindowAlignment* value);
                    [propput] HRESULT DesiredCandidateWindowAlignment([in] Windows.UI.Xaml.Controls.CandidateWindowAlignment value);
                    [eventadd] HRESULT CandidateWindowBoundsChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox*, Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CandidateWindowBoundsChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT TextChanging([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox*, Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TextChanging([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 2.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(B5F1A675-CCE1-45AF-AEF9-C4787BBB5E30)]
                interface ITextBox4 : IInspectable
                {
                    HRESULT GetLinguisticAlternativesAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<HSTRING>*>** operation);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(35F9CFC1-4176-44F4-B756-E9CCC4399805)]
                interface ITextBox5 : IInspectable
                {
                    [propget] HRESULT SelectionHighlightColorWhenNotFocused([out] [retval] Windows.UI.Xaml.Media.SolidColorBrush** value);
                    [propput] HRESULT SelectionHighlightColorWhenNotFocused([in] Windows.UI.Xaml.Media.SolidColorBrush* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(41FF2D07-5085-4E52-A51C-F94B06CD558B)]
                interface ITextBox6 : IInspectable
                {
                    [propget] HRESULT HorizontalTextAlignment([out] [retval] Windows.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT HorizontalTextAlignment([in] Windows.UI.Xaml.TextAlignment value);
                    [propget] HRESULT CharacterCasing([out] [retval] Windows.UI.Xaml.Controls.CharacterCasing* value);
                    [propput] HRESULT CharacterCasing([in] Windows.UI.Xaml.Controls.CharacterCasing value);
                    [propget] HRESULT PlaceholderForeground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT PlaceholderForeground([in] Windows.UI.Xaml.Media.Brush* value);
                    [eventadd] HRESULT CopyingToClipboard([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox*, Windows.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CopyingToClipboard([in] EventRegistrationToken token);
                    [eventadd] HRESULT CuttingToClipboard([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox*, Windows.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CuttingToClipboard([in] EventRegistrationToken token);
                    [eventadd] HRESULT BeforeTextChanging([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox*, Windows.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT BeforeTextChanging([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(DA4911F9-FFE1-4C6A-AC6D-1B4A174CCF80)]
                interface ITextBox7 : IInspectable
                {
                    [propget] HRESULT HandwritingView([out] [retval] Windows.UI.Xaml.Controls.HandwritingView** value);
                    [propput] HRESULT HandwritingView([in] Windows.UI.Xaml.Controls.HandwritingView* value);
                    [propget] HRESULT IsHandwritingViewEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsHandwritingViewEnabled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(1EB6D027-0317-5C37-8AEA-F747AE7F0463)]
                interface ITextBox8 : IInspectable
                {
                    [propget] HRESULT CanPasteClipboardContent([out] [retval] boolean* value);
                    [propget] HRESULT CanUndo([out] [retval] boolean* value);
                    [propget] HRESULT CanRedo([out] [retval] boolean* value);
                    [propget] HRESULT SelectionFlyout([out] [retval] Windows.UI.Xaml.Controls.Primitives.FlyoutBase** value);
                    [propput] HRESULT SelectionFlyout([in] Windows.UI.Xaml.Controls.Primitives.FlyoutBase* value);
                    [propget] HRESULT ProofingMenuFlyout([out] [retval] Windows.UI.Xaml.Controls.Primitives.FlyoutBase** value);
                    [propget] HRESULT Description([out] [retval] IInspectable** value);
                    [propput] HRESULT Description([in] IInspectable* value);
                    [eventadd] HRESULT SelectionChanging([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox*, Windows.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanging([in] EventRegistrationToken token);
                    HRESULT Undo();
                    HRESULT Redo();
                    HRESULT PasteFromClipboard();
                    HRESULT CopySelectionToClipboard();
                    HRESULT CutSelectionToClipboard();
                    HRESULT ClearUndoRedoHistory();
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs)]
                [uuid(A5541DB3-7784-4258-AA83-E4BEDD727467)]
                interface ITextBoxBeforeTextChangingEventArgs : IInspectable
                {
                    [propget] HRESULT NewText([out] [retval] HSTRING* value);
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(710E4278-8529-47D3-8D8E-307E34CFF081)]
                interface ITextBoxFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.TextBox** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs)]
                [uuid(847A24DD-9ABE-52DF-A80A-0CCE4B496632)]
                interface ITextBoxSelectionChangingEventArgs : IInspectable
                {
                    [propget] HRESULT SelectionStart([out] [retval] INT32* value);
                    [propget] HRESULT SelectionLength([out] [retval] INT32* value);
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(7E37F4FB-A4BC-4625-8838-8EB2A9091283)]
                interface ITextBoxStatics : IInspectable
                {
                    [propget] HRESULT TextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsReadOnlyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AcceptsReturnProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextWrappingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSpellCheckEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTextPredictionEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT InputScopeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(7592F37D-4E76-4EE4-8E0F-7D6E1A23326B)]
                interface ITextBoxStatics2 : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectionHighlightColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreventKeyboardDisplayOnProgrammaticFocusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorFontEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(0E1005C0-10B5-40F6-92C2-CE134B0D3457)]
                interface ITextBoxStatics3 : IInspectable
                {
                    [propget] HRESULT DesiredCandidateWindowAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextReadingOrderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(07D04B45-1B2F-4627-82FD-683F197E5A75)]
                interface ITextBoxStatics5 : IInspectable
                {
                    [propget] HRESULT SelectionHighlightColorWhenNotFocusedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(DC0D97E7-1CB7-433E-AA4F-9C64C98CDEE5)]
                interface ITextBoxStatics6 : IInspectable
                {
                    [propget] HRESULT HorizontalTextAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CharacterCasingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(CD6C6F47-147E-46F8-A4E8-749C49847A3E)]
                interface ITextBoxStatics7 : IInspectable
                {
                    [propget] HRESULT HandwritingViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsHandwritingViewEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(7F93D7C4-7D88-5F4D-8955-A5AD3848BCB6)]
                interface ITextBoxStatics8 : IInspectable
                {
                    [propget] HRESULT CanPasteClipboardContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanUndoProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanRedoProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectionFlyoutProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ProofingMenuFlyoutProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DescriptionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs)]
                [uuid(4E6A4B75-43DD-4E33-ACBE-2D8796A17927)]
                interface ITextBoxTextChangingEventArgs : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs)]
                [uuid(C0723D44-53A6-415F-A981-50DFAF1BECBE)]
                interface ITextBoxTextChangingEventArgs2 : IInspectable
                {
                    [propget] HRESULT IsContentChanging([out] [retval] boolean* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextChangedEventArgs)]
                [uuid(4DD04F7D-7A11-4B2E-9933-577DF39252B6)]
                interface ITextChangedEventArgs : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextCommandBarFlyout)]
                [uuid(90384F66-CD3D-5325-8F40-59B076463C40)]
                interface ITextCommandBarFlyout : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextCommandBarFlyout)]
                [uuid(1B5918D8-B006-5ECD-AB72-6FDB48ABC1F4)]
                interface ITextCommandBarFlyoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.TextCommandBarFlyout** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs)]
                [uuid(B9C7E0F2-50B7-441D-990C-68553E2E056B)]
                interface ITextCompositionChangedEventArgs : IInspectable
                {
                    [propget] HRESULT StartIndex([out] [retval] INT32* value);
                    [propget] HRESULT Length([out] [retval] INT32* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs)]
                [uuid(46E34DB2-77C0-4015-8EB4-92EEFDFC5914)]
                interface ITextCompositionEndedEventArgs : IInspectable
                {
                    [propget] HRESULT StartIndex([out] [retval] INT32* value);
                    [propget] HRESULT Length([out] [retval] INT32* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs)]
                [uuid(DF22ABB2-10CF-491E-91E8-D3CD72D8A0D3)]
                interface ITextCompositionStartedEventArgs : IInspectable
                {
                    [propget] HRESULT StartIndex([out] [retval] INT32* value);
                    [propget] HRESULT Length([out] [retval] INT32* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs)]
                [uuid(E405EF19-D0DF-43DA-ACE6-16F9113868C3)]
                interface ITextControlCopyingToClipboardEventArgs : IInspectable
                {
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs)]
                [uuid(5F894995-A58D-4CF3-B589-B5E500E06475)]
                interface ITextControlCuttingToClipboardEventArgs : IInspectable
                {
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextControlPasteEventArgs)]
                [uuid(4BD1D625-221A-477E-BB2C-AD0C1ED125E7)]
                interface ITextControlPasteEventArgs : IInspectable
                {
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TimePickedEventArgs)]
                [uuid(8AD3FF21-5F66-4785-B999-24FEF39FB6DB)]
                interface ITimePickedEventArgs : IInspectable
                {
                    [propget] HRESULT OldTime([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propget] HRESULT NewTime([out] [retval] Windows.Foundation.TimeSpan* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TimePicker)]
                [uuid(E39099F2-3AFF-4792-909E-2D9941EC0357)]
                interface ITimePicker : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT ClockIdentifier([out] [retval] HSTRING* value);
                    [propput] HRESULT ClockIdentifier([in] HSTRING value);
                    [propget] HRESULT MinuteIncrement([out] [retval] INT32* value);
                    [propput] HRESULT MinuteIncrement([in] INT32 value);
                    [propget] HRESULT Time([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propput] HRESULT Time([in] Windows.Foundation.TimeSpan value);
                    [eventadd] HRESULT TimeChanged([in] Windows.Foundation.EventHandler<Windows.UI.Xaml.Controls.TimePickerValueChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TimeChanged([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TimePicker)]
                [uuid(0FF0798C-F922-419F-8B3D-23EE7586D48E)]
                interface ITimePicker2 : IInspectable
                {
                    [propget] HRESULT LightDismissOverlayMode([out] [retval] Windows.UI.Xaml.Controls.LightDismissOverlayMode* value);
                    [propput] HRESULT LightDismissOverlayMode([in] Windows.UI.Xaml.Controls.LightDismissOverlayMode value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TimePicker)]
                [uuid(FA6E4F91-AC32-59A4-94DA-8B3D64289ED6)]
                interface ITimePicker3 : IInspectable
                {
                    [propget] HRESULT SelectedTime([out] [retval] Windows.Foundation.IReference<Windows.Foundation.TimeSpan>** value);
                    [propput] HRESULT SelectedTime([in] Windows.Foundation.IReference<Windows.Foundation.TimeSpan>* value);
                    [eventadd] HRESULT SelectedTimeChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TimePicker*, Windows.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectedTimeChanged([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TimePicker)]
                [uuid(553FE413-6CD7-46A9-A97B-A18BDC4B4CA3)]
                interface ITimePickerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.TimePicker** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TimePickerFlyout)]
                [uuid(BB739D75-E836-439E-86D5-506D2D18E404)]
                interface ITimePickerFlyout : IInspectable
                {
                    [propget] HRESULT ClockIdentifier([out] [retval] HSTRING* value);
                    [propput] HRESULT ClockIdentifier([in] HSTRING value);
                    [propget] HRESULT Time([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propput] HRESULT Time([in] Windows.Foundation.TimeSpan value);
                    [propget] HRESULT MinuteIncrement([out] [retval] INT32* value);
                    [propput] HRESULT MinuteIncrement([in] INT32 value);
                    [eventadd] HRESULT TimePicked([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TimePickerFlyout*, Windows.UI.Xaml.Controls.TimePickedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TimePicked([in] EventRegistrationToken token);
                    HRESULT ShowAtAsync([in] Windows.UI.Xaml.FrameworkElement* target, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.IReference<Windows.Foundation.TimeSpan>*>** operation);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TimePickerFlyoutPresenter)]
                [uuid(C5320638-7A18-40ED-9FD0-4C852C09B24E)]
                interface ITimePickerFlyoutPresenter : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 8.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TimePickerFlyoutPresenter)]
                [uuid(A13B5B68-7EE9-59F7-AAD6-6532A8A8C3BF)]
                interface ITimePickerFlyoutPresenter2 : IInspectable
                {
                    [propget] HRESULT IsDefaultShadowEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsDefaultShadowEnabled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 8.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TimePickerFlyoutPresenter)]
                [uuid(AA5F0DDC-F2BB-53F2-A54D-B34ACCCF51E4)]
                interface ITimePickerFlyoutPresenterStatics2 : IInspectable
                {
                    [propget] HRESULT IsDefaultShadowEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TimePickerFlyout)]
                [uuid(3F6728CE-2169-4003-B4A8-8DE7035A0AD6)]
                interface ITimePickerFlyoutStatics : IInspectable
                {
                    [propget] HRESULT ClockIdentifierProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TimeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinuteIncrementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs)]
                [uuid(6E20FB35-3B9B-5BB6-9888-266524DB181E)]
                interface ITimePickerSelectedValueChangedEventArgs : IInspectable
                {
                    [propget] HRESULT OldTime([out] [retval] Windows.Foundation.IReference<Windows.Foundation.TimeSpan>** value);
                    [propget] HRESULT NewTime([out] [retval] Windows.Foundation.IReference<Windows.Foundation.TimeSpan>** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TimePicker)]
                [uuid(FA71DFB1-233E-4F31-B8BE-A6EA670C25CD)]
                interface ITimePickerStatics : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ClockIdentifierProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinuteIncrementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TimeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TimePicker)]
                [uuid(36D8ABCD-4E10-451A-B93B-1A731EA7EE3F)]
                interface ITimePickerStatics2 : IInspectable
                {
                    [propget] HRESULT LightDismissOverlayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TimePicker)]
                [uuid(CFEF1763-BA87-54D8-82D4-7C6B9734DC9D)]
                interface ITimePickerStatics3 : IInspectable
                {
                    [propget] HRESULT SelectedTimeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TimePickerValueChangedEventArgs)]
                [uuid(2F4EDB8D-B995-4E31-8BA9-C4DCDEB21CA3)]
                interface ITimePickerValueChangedEventArgs : IInspectable
                {
                    [propget] HRESULT OldTime([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propget] HRESULT NewTime([out] [retval] Windows.Foundation.TimeSpan* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem)]
                [uuid(49841EDD-88E9-4663-A701-CD4FD25E398F)]
                interface IToggleMenuFlyoutItem : IInspectable
                {
                    [propget] HRESULT IsChecked([out] [retval] boolean* value);
                    [propput] HRESULT IsChecked([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem)]
                [uuid(A151966F-3BF7-46B6-B61C-9B2C1BA68843)]
                interface IToggleMenuFlyoutItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem)]
                [uuid(16C724FB-6C1A-4852-9258-08C038367907)]
                interface IToggleMenuFlyoutItemStatics : IInspectable
                {
                    [propget] HRESULT IsCheckedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToggleSplitButton)]
                [uuid(28981B31-8E78-570C-BEBB-685814485AE9)]
                interface IToggleSplitButton : IInspectable
                {
                    [propget] HRESULT IsChecked([out] [retval] boolean* value);
                    [propput] HRESULT IsChecked([in] boolean value);
                    [eventadd] HRESULT IsCheckedChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ToggleSplitButton*, Windows.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT IsCheckedChanged([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToggleSplitButtonAutomationPeer)]
                [uuid(538E61DE-7D46-5DA7-94AB-ACEDE6A12B9E)]
                interface IToggleSplitButtonAutomationPeer : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToggleSplitButtonAutomationPeer)]
                [uuid(9829B0A0-5A30-5EED-A3A3-1472C53B0A66)]
                interface IToggleSplitButtonAutomationPeerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] Windows.UI.Xaml.Controls.ToggleSplitButton* owner, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ToggleSplitButtonAutomationPeer** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToggleSplitButton)]
                [uuid(3FCF073B-E57C-573D-AF38-D1B2AD387951)]
                interface IToggleSplitButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ToggleSplitButton** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs)]
                [uuid(2138F0CF-5FCD-5DBB-99AE-359483070F6B)]
                interface IToggleSplitButtonIsCheckedChangedEventArgs : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToggleSwitch)]
                [uuid(331D8F00-C5F9-46A5-B6C8-EDE539304567)]
                interface IToggleSwitch : IInspectable
                {
                    [propget] HRESULT IsOn([out] [retval] boolean* value);
                    [propput] HRESULT IsOn([in] boolean value);
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT OnContent([out] [retval] IInspectable** value);
                    [propput] HRESULT OnContent([in] IInspectable* value);
                    [propget] HRESULT OnContentTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT OnContentTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT OffContent([out] [retval] IInspectable** value);
                    [propput] HRESULT OffContent([in] IInspectable* value);
                    [propget] HRESULT OffContentTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT OffContentTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings** value);
                    [eventadd] HRESULT Toggled([in] Windows.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Toggled([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToggleSwitch)]
                [uuid(BFD07F53-F8CA-4E47-949E-9E80429B3D16)]
                interface IToggleSwitchOverrides : IInspectable
                {
                    HRESULT OnToggled();
                    HRESULT OnOnContentChanged([in] IInspectable* oldContent, [in] IInspectable* newContent);
                    HRESULT OnOffContentChanged([in] IInspectable* oldContent, [in] IInspectable* newContent);
                    HRESULT OnHeaderChanged([in] IInspectable* oldContent, [in] IInspectable* newContent);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToggleSwitch)]
                [uuid(1D37147F-97DF-4226-92CA-DDF453D7FD5A)]
                interface IToggleSwitchStatics : IInspectable
                {
                    [propget] HRESULT IsOnProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OnContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OnContentTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OffContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OffContentTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToolTip)]
                [uuid(7DE5D75F-4415-429F-B523-699BDB8C30DB)]
                interface IToolTip : IInspectable
                {
                    [propget] HRESULT HorizontalOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT HorizontalOffset([in] DOUBLE value);
                    [propget] HRESULT IsOpen([out] [retval] boolean* value);
                    [propput] HRESULT IsOpen([in] boolean value);
                    [propget] HRESULT Placement([out] [retval] Windows.UI.Xaml.Controls.Primitives.PlacementMode* value);
                    [propput] HRESULT Placement([in] Windows.UI.Xaml.Controls.Primitives.PlacementMode value);
                    [propget] HRESULT PlacementTarget([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT PlacementTarget([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT VerticalOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT VerticalOffset([in] DOUBLE value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings** value);
                    [eventadd] HRESULT Closed([in] Windows.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Closed([in] EventRegistrationToken token);
                    [eventadd] HRESULT Opened([in] Windows.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Opened([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToolTip)]
                [uuid(2B1ADE26-299A-5D54-800B-3BEA123B4C20)]
                interface IToolTip2 : IInspectable
                {
                    [propget] HRESULT PlacementRect([out] [retval] Windows.Foundation.IReference<Windows.Foundation.Rect>** value);
                    [propput] HRESULT PlacementRect([in] Windows.Foundation.IReference<Windows.Foundation.Rect>* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToolTip)]
                [uuid(89839403-B538-49E3-A430-3AC037DC6FE0)]
                interface IToolTipFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.ToolTip** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToolTipService)]
                [uuid(03A55F87-BFCC-4A1E-8FEA-98F610832CEA)]
                interface IToolTipService : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToolTipService)]
                [uuid(86E649F8-E245-48AA-A8C8-D1073ED76319)]
                interface IToolTipServiceStatics : IInspectable
                {
                    [propget] HRESULT PlacementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetPlacement([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.Primitives.PlacementMode* result);
                    HRESULT SetPlacement([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.Primitives.PlacementMode value);
                    [propget] HRESULT PlacementTargetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetPlacementTarget([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.UIElement** result);
                    HRESULT SetPlacementTarget([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT ToolTipProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetToolTip([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] IInspectable** result);
                    HRESULT SetToolTip([in] Windows.UI.Xaml.DependencyObject* element, [in] IInspectable* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToolTip)]
                [uuid(F00285B8-4BA9-4F4F-86A7-86003813CEB3)]
                interface IToolTipStatics : IInspectable
                {
                    [propget] HRESULT HorizontalOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsOpenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlacementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlacementTargetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToolTip)]
                [uuid(6845E646-9C7F-5011-8A78-7DA9D87EB3B6)]
                interface IToolTipStatics2 : IInspectable
                {
                    [propget] HRESULT PlacementRectProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeView)]
                [uuid(9353CC5C-DD6E-453C-AEDD-0C3AC993978B)]
                interface ITreeView : IInspectable
                {
                    [propget] HRESULT RootNodes([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.TreeViewNode*>** value);
                    [propget] HRESULT SelectionMode([out] [retval] Windows.UI.Xaml.Controls.TreeViewSelectionMode* value);
                    [propput] HRESULT SelectionMode([in] Windows.UI.Xaml.Controls.TreeViewSelectionMode value);
                    [propget] HRESULT SelectedNodes([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.TreeViewNode*>** value);
                    HRESULT Expand([in] Windows.UI.Xaml.Controls.TreeViewNode* value);
                    HRESULT Collapse([in] Windows.UI.Xaml.Controls.TreeViewNode* value);
                    HRESULT SelectAll();
                    [eventadd] HRESULT ItemInvoked([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TreeView*, Windows.UI.Xaml.Controls.TreeViewItemInvokedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ItemInvoked([in] EventRegistrationToken token);
                    [eventadd] HRESULT Expanding([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TreeView*, Windows.UI.Xaml.Controls.TreeViewExpandingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Expanding([in] EventRegistrationToken token);
                    [eventadd] HRESULT Collapsed([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TreeView*, Windows.UI.Xaml.Controls.TreeViewCollapsedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Collapsed([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeView)]
                [uuid(4F33A2E6-2F29-55D3-A1AB-1F4A863BF960)]
                interface ITreeView2 : IInspectable
                {
                    HRESULT NodeFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] Windows.UI.Xaml.Controls.TreeViewNode** result);
                    HRESULT ContainerFromNode([in] Windows.UI.Xaml.Controls.TreeViewNode* node, [out] [retval] Windows.UI.Xaml.DependencyObject** result);
                    HRESULT ItemFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] IInspectable** result);
                    HRESULT ContainerFromItem([in] IInspectable* item, [out] [retval] Windows.UI.Xaml.DependencyObject** result);
                    [propget] HRESULT CanDragItems([out] [retval] boolean* value);
                    [propput] HRESULT CanDragItems([in] boolean value);
                    [propget] HRESULT CanReorderItems([out] [retval] boolean* value);
                    [propput] HRESULT CanReorderItems([in] boolean value);
                    [propget] HRESULT ItemTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT ItemTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT ItemTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT ItemTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT ItemContainerStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT ItemContainerStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT ItemContainerStyleSelector([out] [retval] Windows.UI.Xaml.Controls.StyleSelector** value);
                    [propput] HRESULT ItemContainerStyleSelector([in] Windows.UI.Xaml.Controls.StyleSelector* value);
                    [propget] HRESULT ItemContainerTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT ItemContainerTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                    [propget] HRESULT ItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT ItemsSource([in] IInspectable* value);
                    [eventadd] HRESULT DragItemsStarting([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TreeView*, Windows.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DragItemsStarting([in] EventRegistrationToken token);
                    [eventadd] HRESULT DragItemsCompleted([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TreeView*, Windows.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DragItemsCompleted([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewCollapsedEventArgs)]
                [uuid(391DB3B0-1E58-4539-9E93-387978F46CCE)]
                interface ITreeViewCollapsedEventArgs : IInspectable
                {
                    [propget] HRESULT Node([out] [retval] Windows.UI.Xaml.Controls.TreeViewNode** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewCollapsedEventArgs)]
                [uuid(747B2F4F-7B25-56AA-8300-78D83B7AB2DB)]
                interface ITreeViewCollapsedEventArgs2 : IInspectable
                {
                    [propget] HRESULT Item([out] [retval] IInspectable** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs)]
                [uuid(3CA8632C-4311-574E-8AB4-3B7AA5DE7A88)]
                interface ITreeViewDragItemsCompletedEventArgs : IInspectable
                {
                    [propget] HRESULT DropResult([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageOperation* value);
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVectorView<IInspectable*>** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs)]
                [uuid(7BDB7EC4-E125-5773-9A3F-6695233D6250)]
                interface ITreeViewDragItemsStartingEventArgs : IInspectable
                {
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                    [propget] HRESULT Data([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackage** value);
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewExpandingEventArgs)]
                [uuid(C5E1FA63-4154-49D2-A21F-C34176605E3A)]
                interface ITreeViewExpandingEventArgs : IInspectable
                {
                    [propget] HRESULT Node([out] [retval] Windows.UI.Xaml.Controls.TreeViewNode** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewExpandingEventArgs)]
                [uuid(A12F54C3-87B9-5623-9C74-E6DD443CDE18)]
                interface ITreeViewExpandingEventArgs2 : IInspectable
                {
                    [propget] HRESULT Item([out] [retval] IInspectable** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeView)]
                [uuid(CC5267C3-6C69-49CE-B445-753ACEE7948B)]
                interface ITreeViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.TreeView** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewItem)]
                [uuid(4E05D3E6-6167-44E7-9C74-291DDD6DF6EB)]
                interface ITreeViewItem : IInspectable
                {
                    [propget] HRESULT GlyphOpacity([out] [retval] DOUBLE* value);
                    [propput] HRESULT GlyphOpacity([in] DOUBLE value);
                    [propget] HRESULT GlyphBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT GlyphBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT ExpandedGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT ExpandedGlyph([in] HSTRING value);
                    [propget] HRESULT CollapsedGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT CollapsedGlyph([in] HSTRING value);
                    [propget] HRESULT GlyphSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT GlyphSize([in] DOUBLE value);
                    [propget] HRESULT IsExpanded([out] [retval] boolean* value);
                    [propput] HRESULT IsExpanded([in] boolean value);
                    [propget] HRESULT TreeViewItemTemplateSettings([out] [retval] Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewItem)]
                [uuid(007BAF7F-0493-51B4-879C-458024B34149)]
                interface ITreeViewItem2 : IInspectable
                {
                    [propget] HRESULT HasUnrealizedChildren([out] [retval] boolean* value);
                    [propput] HRESULT HasUnrealizedChildren([in] boolean value);
                    [propget] HRESULT ItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT ItemsSource([in] IInspectable* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewItem)]
                [uuid(4EA32731-568D-4D0D-ADFD-3D8DC5AA5D88)]
                interface ITreeViewItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.TreeViewItem** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewItemInvokedEventArgs)]
                [uuid(472AB521-0242-4290-9363-AB4FE704527F)]
                interface ITreeViewItemInvokedEventArgs : IInspectable
                {
                    [propget] HRESULT InvokedItem([out] [retval] IInspectable** value);
                    [propput] HRESULT Handled([in] boolean value);
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewItem)]
                [uuid(436795BE-7396-46DC-A264-21C56581C5E5)]
                interface ITreeViewItemStatics : IInspectable
                {
                    [propget] HRESULT GlyphOpacityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GlyphBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ExpandedGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CollapsedGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GlyphSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsExpandedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TreeViewItemTemplateSettingsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewItem)]
                [uuid(A8AF82F3-D803-5C25-B48D-AE0E73B16D8E)]
                interface ITreeViewItemStatics2 : IInspectable
                {
                    [propget] HRESULT HasUnrealizedChildrenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings)]
                [uuid(EC323744-DE31-4936-BFC2-1CB37BA1DC08)]
                interface ITreeViewItemTemplateSettings : IInspectable
                {
                    [propget] HRESULT ExpandedGlyphVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT CollapsedGlyphVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT Indentation([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propget] HRESULT DragItemsCount([out] [retval] INT32* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings)]
                [uuid(11A1953B-31B7-4F40-8633-02FC614B518C)]
                interface ITreeViewItemTemplateSettingsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings)]
                [uuid(55C720A8-70ED-4C21-93F4-2D79C1A4A5F7)]
                interface ITreeViewItemTemplateSettingsStatics : IInspectable
                {
                    [propget] HRESULT ExpandedGlyphVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CollapsedGlyphVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IndentationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DragItemsCountProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewList)]
                [uuid(0F00A54E-099A-47A5-A942-94692B01F452)]
                interface ITreeViewList : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewList)]
                [uuid(288F6232-41D2-46F7-B1F5-691C625264B7)]
                interface ITreeViewListFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.TreeViewList** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewNode)]
                [uuid(C04C8ED3-9AF2-4E75-A329-7497A110E7A8)]
                interface ITreeViewNode : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] IInspectable** value);
                    [propput] HRESULT Content([in] IInspectable* value);
                    [propget] HRESULT Parent([out] [retval] Windows.UI.Xaml.Controls.TreeViewNode** value);
                    [propget] HRESULT IsExpanded([out] [retval] boolean* value);
                    [propput] HRESULT IsExpanded([in] boolean value);
                    [propget] HRESULT HasChildren([out] [retval] boolean* value);
                    [propget] HRESULT Depth([out] [retval] INT32* value);
                    [propget] HRESULT HasUnrealizedChildren([out] [retval] boolean* value);
                    [propput] HRESULT HasUnrealizedChildren([in] boolean value);
                    [propget] HRESULT Children([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.TreeViewNode*>** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewNode)]
                [uuid(6EC62D90-AA19-414A-8A45-0A5589A836F7)]
                interface ITreeViewNodeFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.TreeViewNode** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeViewNode)]
                [uuid(5D8276FE-E1D1-4B61-9E81-C7FB189A2980)]
                interface ITreeViewNodeStatics : IInspectable
                {
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DepthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsExpandedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HasChildrenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeView)]
                [uuid(EF913E08-83F2-4E16-BFB1-1577B98355F5)]
                interface ITreeViewStatics : IInspectable
                {
                    [propget] HRESULT SelectionModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TreeView)]
                [uuid(16B1C8F9-7AA1-5E38-8218-7BBA3EA417C0)]
                interface ITreeViewStatics2 : IInspectable
                {
                    [propget] HRESULT CanDragItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanReorderItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemTemplateSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemContainerStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemContainerStyleSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemContainerTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 8.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TwoPaneView)]
                [uuid(1B4D0DB5-14AD-5926-BB8A-5B0A5C0085F0)]
                interface ITwoPaneView : IInspectable
                {
                    [propget] HRESULT Pane1([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Pane1([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT Pane2([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Pane2([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT Pane1Length([out] [retval] Windows.UI.Xaml.GridLength* value);
                    [propput] HRESULT Pane1Length([in] Windows.UI.Xaml.GridLength value);
                    [propget] HRESULT Pane2Length([out] [retval] Windows.UI.Xaml.GridLength* value);
                    [propput] HRESULT Pane2Length([in] Windows.UI.Xaml.GridLength value);
                    [propget] HRESULT PanePriority([out] [retval] Windows.UI.Xaml.Controls.TwoPaneViewPriority* value);
                    [propput] HRESULT PanePriority([in] Windows.UI.Xaml.Controls.TwoPaneViewPriority value);
                    [propget] HRESULT Mode([out] [retval] Windows.UI.Xaml.Controls.TwoPaneViewMode* value);
                    [propget] HRESULT WideModeConfiguration([out] [retval] Windows.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration* value);
                    [propput] HRESULT WideModeConfiguration([in] Windows.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration value);
                    [propget] HRESULT TallModeConfiguration([out] [retval] Windows.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration* value);
                    [propput] HRESULT TallModeConfiguration([in] Windows.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration value);
                    [propget] HRESULT MinWideModeWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT MinWideModeWidth([in] DOUBLE value);
                    [propget] HRESULT MinTallModeHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT MinTallModeHeight([in] DOUBLE value);
                    [eventadd] HRESULT ModeChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TwoPaneView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ModeChanged([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 8.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TwoPaneView)]
                [uuid(18FF792D-58B4-59ED-A051-51ACEFFBCCA9)]
                interface ITwoPaneViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.TwoPaneView** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 8.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.TwoPaneView)]
                [uuid(5A35C389-85C4-55F4-ABB1-97451BC32D71)]
                interface ITwoPaneViewStatics : IInspectable
                {
                    [propget] HRESULT Pane1Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Pane2Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Pane1LengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Pane2LengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PanePriorityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT WideModeConfigurationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TallModeConfigurationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinWideModeWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinTallModeHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.UIElementCollection)]
                [uuid(D6602D54-88F6-43F6-85D8-A9D914A6DD3B)]
                interface IUIElementCollection : IInspectable
                {
                    HRESULT Move([in] UINT32 oldIndex, [in] UINT32 newIndex);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.UserControl)]
                [uuid(A7A69EC9-EA35-4679-BF29-F4F09286D314)]
                interface IUserControl : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Content([in] Windows.UI.Xaml.UIElement* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.UserControl)]
                [uuid(38B1ED92-A28A-4972-93DF-F4F759B8AFD2)]
                interface IUserControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Windows.UI.Xaml.Controls.UserControl** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.UserControl)]
                [uuid(E8887976-2C5C-41CF-BE6A-9E44BEFDF655)]
                interface IUserControlStatics : IInspectable
                {
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.VariableSizedWrapGrid)]
                [uuid(9CA507C7-23C9-4F01-B80F-BE5C21EEF474)]
                interface IVariableSizedWrapGrid : IInspectable
                {
                    [propget] HRESULT ItemHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT ItemHeight([in] DOUBLE value);
                    [propget] HRESULT ItemWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT ItemWidth([in] DOUBLE value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT HorizontalChildrenAlignment([out] [retval] Windows.UI.Xaml.HorizontalAlignment* value);
                    [propput] HRESULT HorizontalChildrenAlignment([in] Windows.UI.Xaml.HorizontalAlignment value);
                    [propget] HRESULT VerticalChildrenAlignment([out] [retval] Windows.UI.Xaml.VerticalAlignment* value);
                    [propput] HRESULT VerticalChildrenAlignment([in] Windows.UI.Xaml.VerticalAlignment value);
                    [propget] HRESULT MaximumRowsOrColumns([out] [retval] INT32* value);
                    [propput] HRESULT MaximumRowsOrColumns([in] INT32 value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.VariableSizedWrapGrid)]
                [uuid(FE9DB859-8127-4AEF-B7A2-949847486E96)]
                interface IVariableSizedWrapGridStatics : IInspectable
                {
                    [propget] HRESULT ItemHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalChildrenAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalChildrenAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaximumRowsOrColumnsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RowSpanProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetRowSpan([in] Windows.UI.Xaml.UIElement* element, [out] [retval] INT32* result);
                    HRESULT SetRowSpan([in] Windows.UI.Xaml.UIElement* element, [in] INT32 value);
                    [propget] HRESULT ColumnSpanProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetColumnSpan([in] Windows.UI.Xaml.UIElement* element, [out] [retval] INT32* result);
                    HRESULT SetColumnSpan([in] Windows.UI.Xaml.UIElement* element, [in] INT32 value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Viewbox)]
                [uuid(05252C58-BA9D-4809-9EC3-FA0D16710BA1)]
                interface IViewbox : IInspectable
                {
                    [propget] HRESULT Child([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Child([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT Stretch([out] [retval] Windows.UI.Xaml.Media.Stretch* value);
                    [propput] HRESULT Stretch([in] Windows.UI.Xaml.Media.Stretch value);
                    [propget] HRESULT StretchDirection([out] [retval] Windows.UI.Xaml.Controls.StretchDirection* value);
                    [propput] HRESULT StretchDirection([in] Windows.UI.Xaml.Controls.StretchDirection value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.Viewbox)]
                [uuid(5CD1E72D-E8D3-4865-8F08-B6B2D689ADF1)]
                interface IViewboxStatics : IInspectable
                {
                    [propget] HRESULT StretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StretchDirectionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingPanel)]
                [uuid(38AAD50C-12CF-4D1E-A884-C9DF85F07CD9)]
                interface IVirtualizingPanel : IInspectable
                {
                    [propget] HRESULT ItemContainerGenerator([out] [retval] Windows.UI.Xaml.Controls.ItemContainerGenerator** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingPanel)]
                [uuid(BE19F839-CBD0-43E9-A5D0-0BDBA0FFBD38)]
                interface IVirtualizingPanelFactory : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingPanel)]
                [uuid(5EF6BD7D-677F-408D-A96C-B19507750466)]
                interface IVirtualizingPanelOverrides : IInspectable
                {
                    HRESULT OnItemsChanged([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs* args);
                    HRESULT OnClearChildren();
                    HRESULT BringIndexIntoView([in] INT32 index);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingPanel)]
                [uuid(C9C9AB42-C232-479D-A7C9-5E7611196A45)]
                interface IVirtualizingPanelProtected : IInspectable
                {
                    HRESULT AddInternalChild([in] Windows.UI.Xaml.UIElement* child);
                    HRESULT InsertInternalChild([in] INT32 index, [in] Windows.UI.Xaml.UIElement* child);
                    HRESULT RemoveInternalChildRange([in] INT32 index, [in] INT32 range);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingStackPanel)]
                [uuid(7567CD9A-A3B4-4DEA-BB11-549E2C2F919D)]
                interface IVirtualizingStackPanel : IInspectable
                {
                    [propget] HRESULT AreScrollSnapPointsRegular([out] [retval] boolean* value);
                    [propput] HRESULT AreScrollSnapPointsRegular([in] boolean value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [eventadd] HRESULT CleanUpVirtualizedItemEvent([in] Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CleanUpVirtualizedItemEvent([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingStackPanel)]
                [uuid(CBE6F72C-2892-46D1-987F-58CA1081F040)]
                interface IVirtualizingStackPanelOverrides : IInspectable
                {
                    HRESULT OnCleanUpVirtualizedItem([in] Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs* e);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingStackPanel)]
                [uuid(8314E778-91D3-4D56-AC09-223ADCD2BD3F)]
                interface IVirtualizingStackPanelStatics : IInspectable
                {
                    [propget] HRESULT AreScrollSnapPointsRegularProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VirtualizationModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetVirtualizationMode([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.VirtualizationMode* result);
                    HRESULT SetVirtualizationMode([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.VirtualizationMode value);
                    [propget] HRESULT IsVirtualizingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsVirtualizing([in] Windows.UI.Xaml.DependencyObject* o, [out] [retval] boolean* result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                [uuid(5862CC46-1F7D-479B-92A6-DE7858FE8D54)]
                interface IWebView : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT Source([in] Windows.Foundation.Uri* value);
                    [deprecated("AllowedScriptNotifyUris is unavailable for releases beginning with Windows 8.1. Instead, list URIs under ApplicationContentUriRules in the package manifest. For more info, see the AllowedScriptNotifyUris documentation.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propget] HRESULT AllowedScriptNotifyUris([out] [retval] Windows.Foundation.Collections.IVector<Windows.Foundation.Uri*>** value);
                    [deprecated("AllowedScriptNotifyUris is unavailable for releases beginning with Windows 8.1. Instead, list URIs under ApplicationContentUriRules in the package manifest. For more info, see the AllowedScriptNotifyUris documentation.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propput] HRESULT AllowedScriptNotifyUris([in] Windows.Foundation.Collections.IVector<Windows.Foundation.Uri*>* value);
                    [deprecated("Use CaptureSelectedContentToDataPackageAsync instead of DataTransferPackage. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propget] HRESULT DataTransferPackage([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackage** value);
                    [deprecated("LoadCompleted may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [eventadd] HRESULT LoadCompleted([in] Windows.UI.Xaml.Navigation.LoadCompletedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [deprecated("LoadCompleted may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [eventremove] HRESULT LoadCompleted([in] EventRegistrationToken token);
                    [eventadd] HRESULT ScriptNotify([in] Windows.UI.Xaml.Controls.NotifyEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ScriptNotify([in] EventRegistrationToken token);
                    [deprecated("NavigationFailed may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [eventadd] HRESULT NavigationFailed([in] Windows.UI.Xaml.Controls.WebViewNavigationFailedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [deprecated("NavigationFailed may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [eventremove] HRESULT NavigationFailed([in] EventRegistrationToken token);
                    [deprecated("Use InvokeScriptAsync instead of InvokeScript. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] HRESULT InvokeScript([in] HSTRING scriptName, [in] UINT32 __argumentsSize, [in] [size_is(__argumentsSize)] HSTRING* arguments, [out] [retval] HSTRING* result);
                    HRESULT Navigate([in] Windows.Foundation.Uri* source);
                    HRESULT NavigateToString([in] HSTRING text);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                [uuid(D481759E-3EFF-4462-823D-FD52F9BA4CC8)]
                interface IWebView2 : IInspectable
                {
                    [propget] HRESULT CanGoBack([out] [retval] boolean* value);
                    [propget] HRESULT CanGoForward([out] [retval] boolean* value);
                    [propget] HRESULT DocumentTitle([out] [retval] HSTRING* value);
                    [eventadd] HRESULT NavigationStarting([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewNavigationStartingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NavigationStarting([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContentLoading([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewContentLoadingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContentLoading([in] EventRegistrationToken token);
                    [eventadd] HRESULT DOMContentLoaded([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewDOMContentLoadedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DOMContentLoaded([in] EventRegistrationToken token);
                    HRESULT GoForward();
                    HRESULT GoBack();
                    HRESULT Refresh();
                    HRESULT Stop();
                    HRESULT CapturePreviewToStreamAsync([in] Windows.Storage.Streams.IRandomAccessStream* stream, [out] [retval] Windows.Foundation.IAsyncAction** operation);
                    HRESULT InvokeScriptAsync([in] HSTRING scriptName, [in] Windows.Foundation.Collections.IIterable<HSTRING>* arguments, [out] [retval] Windows.Foundation.IAsyncOperation<HSTRING>** operation);
                    HRESULT CaptureSelectedContentToDataPackageAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.DataTransfer.DataPackage*>** operation);
                    HRESULT NavigateToLocalStreamUri([in] Windows.Foundation.Uri* source, [in] Windows.Web.IUriToStreamResolver* streamResolver);
                    HRESULT BuildLocalStreamUri([in] HSTRING contentIdentifier, [in] HSTRING relativePath, [out] [retval] Windows.Foundation.Uri** result);
                    [propget] HRESULT DefaultBackgroundColor([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT DefaultBackgroundColor([in] Windows.UI.Color value);
                    [eventadd] HRESULT NavigationCompleted([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewNavigationCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NavigationCompleted([in] EventRegistrationToken token);
                    [eventadd] HRESULT FrameNavigationStarting([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewNavigationStartingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT FrameNavigationStarting([in] EventRegistrationToken token);
                    [eventadd] HRESULT FrameContentLoading([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewContentLoadingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT FrameContentLoading([in] EventRegistrationToken token);
                    [eventadd] HRESULT FrameDOMContentLoaded([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewDOMContentLoadedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT FrameDOMContentLoaded([in] EventRegistrationToken token);
                    [eventadd] HRESULT FrameNavigationCompleted([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewNavigationCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT FrameNavigationCompleted([in] EventRegistrationToken token);
                    [eventadd] HRESULT LongRunningScriptDetected([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewLongRunningScriptDetectedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT LongRunningScriptDetected([in] EventRegistrationToken token);
                    [eventadd] HRESULT UnsafeContentWarningDisplaying([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT UnsafeContentWarningDisplaying([in] EventRegistrationToken token);
                    [eventadd] HRESULT UnviewableContentIdentified([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewUnviewableContentIdentifiedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT UnviewableContentIdentified([in] EventRegistrationToken token);
                    HRESULT NavigateWithHttpRequestMessage([in] Windows.Web.Http.HttpRequestMessage* requestMessage);
                    HRESULT Focus([in] Windows.UI.Xaml.FocusState value, [out] [retval] boolean* result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                [uuid(C497789B-B499-4D69-B5C2-AE9D5D6D594E)]
                interface IWebView3 : IInspectable
                {
                    [propget] HRESULT ContainsFullScreenElement([out] [retval] boolean* value);
                    [eventadd] HRESULT ContainsFullScreenElementChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContainsFullScreenElementChanged([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                [uuid(E28243BC-67F3-462A-B4E0-3BBF6C3DAB0B)]
                interface IWebView4 : IInspectable
                {
                    [propget] HRESULT ExecutionMode([out] [retval] Windows.UI.Xaml.Controls.WebViewExecutionMode* value);
                    [propget] HRESULT DeferredPermissionRequests([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.WebViewDeferredPermissionRequest*>** value);
                    [propget] HRESULT Settings([out] [retval] Windows.UI.Xaml.Controls.WebViewSettings** value);
                    [eventadd] HRESULT UnsupportedUriSchemeIdentified([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewUnsupportedUriSchemeIdentifiedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT UnsupportedUriSchemeIdentified([in] EventRegistrationToken token);
                    [eventadd] HRESULT NewWindowRequested([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewNewWindowRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NewWindowRequested([in] EventRegistrationToken token);
                    [eventadd] HRESULT PermissionRequested([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewPermissionRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PermissionRequested([in] EventRegistrationToken token);
                    HRESULT AddWebAllowedObject([in] HSTRING name, [in] IInspectable* pObject);
                    HRESULT DeferredPermissionRequestById([in] UINT32 id, [out] [retval] Windows.UI.Xaml.Controls.WebViewDeferredPermissionRequest** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                [uuid(8C9884A6-2F3B-4A55-A463-8444C2095D00)]
                interface IWebView5 : IInspectable
                {
                    [propget] HRESULT XYFocusLeft([out] [retval] Windows.UI.Xaml.DependencyObject** value);
                    [propput] HRESULT XYFocusLeft([in] Windows.UI.Xaml.DependencyObject* value);
                    [propget] HRESULT XYFocusRight([out] [retval] Windows.UI.Xaml.DependencyObject** value);
                    [propput] HRESULT XYFocusRight([in] Windows.UI.Xaml.DependencyObject* value);
                    [propget] HRESULT XYFocusUp([out] [retval] Windows.UI.Xaml.DependencyObject** value);
                    [propput] HRESULT XYFocusUp([in] Windows.UI.Xaml.DependencyObject* value);
                    [propget] HRESULT XYFocusDown([out] [retval] Windows.UI.Xaml.DependencyObject** value);
                    [propput] HRESULT XYFocusDown([in] Windows.UI.Xaml.DependencyObject* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                [uuid(38CCD942-2536-467C-A211-AF359C3B4FDA)]
                interface IWebView6 : IInspectable
                {
                    [eventadd] HRESULT SeparateProcessLost([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewSeparateProcessLostEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SeparateProcessLost([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                [uuid(27707C2B-042F-5353-9021-55CD06585FDF)]
                interface IWebView7 : IInspectable
                {
                    [eventadd] HRESULT WebResourceRequested([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewWebResourceRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT WebResourceRequested([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewBrush)]
                [uuid(40E86F75-0CF4-4B72-A4D6-CF5D15780116)]
                interface IWebViewBrush : IInspectable
                {
                    [propget] HRESULT SourceName([out] [retval] HSTRING* value);
                    [propput] HRESULT SourceName([in] HSTRING value);
                    HRESULT Redraw();
                    HRESULT SetSource([in] Windows.UI.Xaml.Controls.WebView* source);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewBrush)]
                [uuid(D74DAA24-1D05-463E-B028-6BAA4420E762)]
                interface IWebViewBrushStatics : IInspectable
                {
                    [propget] HRESULT SourceNameProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewContentLoadingEventArgs)]
                [uuid(6E2980BB-98B8-413E-8129-971C6F7E4C8A)]
                interface IWebViewContentLoadingEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewDOMContentLoadedEventArgs)]
                [uuid(C47EBA15-DC6B-4B36-9D80-82FB8817B988)]
                interface IWebViewDOMContentLoadedEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewDeferredPermissionRequest)]
                [uuid(A3DCC461-7350-4D3A-8FB9-40EEEC2746C2)]
                interface IWebViewDeferredPermissionRequest : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                    [propget] HRESULT PermissionType([out] [retval] Windows.UI.Xaml.Controls.WebViewPermissionType* value);
                    [propget] HRESULT Id([out] [retval] UINT32* value);
                    HRESULT Allow();
                    HRESULT Deny();
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                [uuid(82EDAC58-EE6A-4C9B-A3A0-9347A7D0EF4C)]
                interface IWebViewFactory4 : IInspectable
                {
                    HRESULT CreateInstanceWithExecutionMode([in] Windows.UI.Xaml.Controls.WebViewExecutionMode executionMode, [out] [retval] Windows.UI.Xaml.Controls.WebView** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewLongRunningScriptDetectedEventArgs)]
                [uuid(F3F020AB-A46C-42B0-9EFE-69764D5CFFA6)]
                interface IWebViewLongRunningScriptDetectedEventArgs : IInspectable
                {
                    [propget] HRESULT ExecutionTime([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propget] HRESULT StopPageScriptExecution([out] [retval] boolean* value);
                    [propput] HRESULT StopPageScriptExecution([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewNavigationCompletedEventArgs)]
                [uuid(11E6F20B-EBA7-44C0-889B-EDEB6A064DDD)]
                interface IWebViewNavigationCompletedEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                    [propget] HRESULT IsSuccess([out] [retval] boolean* value);
                    [propget] HRESULT WebErrorStatus([out] [retval] Windows.Web.WebErrorStatus* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewNavigationFailedEventArgs)]
                [uuid(AF09609A-129C-4170-9E9C-E2CDF025DCA4)]
                interface IWebViewNavigationFailedEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                    [propget] HRESULT WebErrorStatus([out] [retval] Windows.Web.WebErrorStatus* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewNavigationStartingEventArgs)]
                [uuid(94CB8668-8367-43D5-91BB-96EBA37EC784)]
                interface IWebViewNavigationStartingEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewNewWindowRequestedEventArgs)]
                [uuid(470FA818-6862-44D9-B3D1-C0696373DE35)]
                interface IWebViewNewWindowRequestedEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                    [propget] HRESULT Referrer([out] [retval] Windows.Foundation.Uri** value);
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewPermissionRequest)]
                [uuid(17B76332-66C4-4131-999E-DF7DE20A8C9C)]
                interface IWebViewPermissionRequest : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                    [propget] HRESULT PermissionType([out] [retval] Windows.UI.Xaml.Controls.WebViewPermissionType* value);
                    [propget] HRESULT Id([out] [retval] UINT32* value);
                    [propget] HRESULT State([out] [retval] Windows.UI.Xaml.Controls.WebViewPermissionState* value);
                    HRESULT Defer();
                    HRESULT Allow();
                    HRESULT Deny();
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewPermissionRequestedEventArgs)]
                [uuid(DADECFD0-6E1E-473F-B0BE-B02404D6A86D)]
                interface IWebViewPermissionRequestedEventArgs : IInspectable
                {
                    [propget] HRESULT PermissionRequest([out] [retval] Windows.UI.Xaml.Controls.WebViewPermissionRequest** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewSeparateProcessLostEventArgs)]
                [uuid(A405700A-C482-40B5-AAEA-E10CFA9F5ABE)]
                interface IWebViewSeparateProcessLostEventArgs : IInspectable
                {
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewSettings)]
                [uuid(1D50AD4D-ABF6-4785-8DF3-FDEBC1270301)]
                interface IWebViewSettings : IInspectable
                {
                    [propget] HRESULT IsJavaScriptEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsJavaScriptEnabled([in] boolean value);
                    [propget] HRESULT IsIndexedDBEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsIndexedDBEnabled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                [uuid(A0B561DE-5FDB-443B-B9F0-5C30F6B7A1F4)]
                interface IWebViewStatics : IInspectable
                {
                    [deprecated("AnyScriptNotifyUri is unavailable for releases beginning with Windows 8.1. Instead, list URIs under ApplicationContentUriRules in the package manifest. For more info, see the AnyScriptNotifyUri documentation.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propget] HRESULT AnyScriptNotifyUri([out] [retval] Windows.Foundation.Collections.IVector<Windows.Foundation.Uri*>** value);
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [deprecated("AllowedScriptNotifyUris is unavailable for releases beginning with Windows 8.1. Instead, list URIs under ApplicationContentUriRules in the package manifest. For more info, see the AllowedScriptNotifyUris documentation.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propget] HRESULT AllowedScriptNotifyUrisProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [deprecated("Use CaptureSelectedContentToDataPackageAsync instead of DataTransferPackage. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propget] HRESULT DataTransferPackageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                [uuid(322F8780-E812-466B-9E50-8E9FEC24018A)]
                interface IWebViewStatics2 : IInspectable
                {
                    [propget] HRESULT CanGoBackProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanGoForwardProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DocumentTitleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DefaultBackgroundColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                [uuid(129BEF8A-4509-4374-B0D1-A7104D0C3A2F)]
                interface IWebViewStatics3 : IInspectable
                {
                    [propget] HRESULT ContainsFullScreenElementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                [uuid(44B197B0-B746-40F3-9936-4EBBFF6B47B8)]
                interface IWebViewStatics4 : IInspectable
                {
                    [propget] HRESULT DefaultExecutionMode([out] [retval] Windows.UI.Xaml.Controls.WebViewExecutionMode* value);
                    HRESULT ClearTemporaryWebDataAsync([out] [retval] Windows.Foundation.IAsyncAction** operation);
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                [uuid(08A0B8D1-508A-4DB8-97EF-0FA505E19EC2)]
                interface IWebViewStatics5 : IInspectable
                {
                    [propget] HRESULT XYFocusLeftProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT XYFocusRightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT XYFocusUpProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT XYFocusDownProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewUnsupportedUriSchemeIdentifiedEventArgs)]
                [uuid(B9C9E1A7-620F-4895-935D-10FBAC6FD29E)]
                interface IWebViewUnsupportedUriSchemeIdentifiedEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewUnviewableContentIdentifiedEventArgs)]
                [uuid(37BC16E1-6062-4678-B20B-6C36AC9C59AC)]
                interface IWebViewUnviewableContentIdentifiedEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                    [propget] HRESULT Referrer([out] [retval] Windows.Foundation.Uri** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewUnviewableContentIdentifiedEventArgs)]
                [uuid(9ABE1154-36F0-4268-8D88-121EEDF45E6A)]
                interface IWebViewUnviewableContentIdentifiedEventArgs2 : IInspectable
                {
                    [propget] HRESULT MediaType([out] [retval] HSTRING* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewWebResourceRequestedEventArgs)]
                [uuid(378D21F6-C77F-5D8B-8F30-93C99DF79435)]
                interface IWebViewWebResourceRequestedEventArgs : IInspectable
                {
                    [propget] HRESULT Request([out] [retval] Windows.Web.Http.HttpRequestMessage** value);
                    [propget] HRESULT Response([out] [retval] Windows.Web.Http.HttpResponseMessage** value);
                    [propput] HRESULT Response([in] Windows.Web.Http.HttpResponseMessage* value);
                    HRESULT GetDeferral([out] [retval] Windows.Foundation.Deferral** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WrapGrid)]
                [uuid(0552178B-7567-47C2-BD5C-AD8394C828BA)]
                interface IWrapGrid : IInspectable
                {
                    [propget] HRESULT ItemWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT ItemWidth([in] DOUBLE value);
                    [propget] HRESULT ItemHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT ItemHeight([in] DOUBLE value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT HorizontalChildrenAlignment([out] [retval] Windows.UI.Xaml.HorizontalAlignment* value);
                    [propput] HRESULT HorizontalChildrenAlignment([in] Windows.UI.Xaml.HorizontalAlignment value);
                    [propget] HRESULT VerticalChildrenAlignment([out] [retval] Windows.UI.Xaml.VerticalAlignment* value);
                    [propput] HRESULT VerticalChildrenAlignment([in] Windows.UI.Xaml.VerticalAlignment value);
                    [propget] HRESULT MaximumRowsOrColumns([out] [retval] INT32* value);
                    [propput] HRESULT MaximumRowsOrColumns([in] INT32 value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.UI.Xaml.Controls.WrapGrid)]
                [uuid(D04A6B97-13CB-479C-A285-E4E56846C4CB)]
                interface IWrapGridStatics : IInspectable
                {
                    [propget] HRESULT ItemWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalChildrenAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalChildrenAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaximumRowsOrColumnsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                runtimeclass AnchorRequestedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IAnchorRequestedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.IAppBarFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IAppBarStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IAppBarStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IAppBarStatics4, Windows.Foundation.UniversalApiContract, 3.0)]
                [threading(both)]
                runtimeclass AppBar : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IAppBar;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IAppBar2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IAppBar3;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.IAppBar4;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] [overridable] interface Windows.UI.Xaml.Controls.IAppBarOverrides;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] [overridable] interface Windows.UI.Xaml.Controls.IAppBarOverrides3;
                }

                [composable(Windows.UI.Xaml.Controls.IAppBarButtonFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IAppBarButtonStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IAppBarButtonStatics3, Windows.Foundation.UniversalApiContract, 3.0)]
                [static(Windows.UI.Xaml.Controls.IAppBarButtonStatics4, Windows.Foundation.UniversalApiContract, 6.0)]
                [threading(both)]
                runtimeclass AppBarButton : Windows.UI.Xaml.Controls.Button
                {
                    [default] interface Windows.UI.Xaml.Controls.IAppBarButton;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.IAppBarButton3;
                    [contract(Windows.Foundation.UniversalApiContract, 6.0)] interface Windows.UI.Xaml.Controls.IAppBarButton4;
                    [contract(Windows.Foundation.UniversalApiContract, 6.0)] interface Windows.UI.Xaml.Controls.IAppBarButton5;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.ICommandBarElement;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.ICommandBarElement2;
                }

                [composable(Windows.UI.Xaml.Controls.IAppBarElementContainerFactory, public, Windows.Foundation.UniversalApiContract, 7.0)]
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IAppBarElementContainerStatics, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass AppBarElementContainer : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IAppBarElementContainer;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.ICommandBarElement;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.ICommandBarElement2;
                }

                [composable(Windows.UI.Xaml.Controls.IAppBarSeparatorFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IAppBarSeparatorStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IAppBarSeparatorStatics3, Windows.Foundation.UniversalApiContract, 3.0)]
                [threading(both)]
                runtimeclass AppBarSeparator : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IAppBarSeparator;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.ICommandBarElement;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.ICommandBarElement2;
                }

                [composable(Windows.UI.Xaml.Controls.IAppBarToggleButtonFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics3, Windows.Foundation.UniversalApiContract, 3.0)]
                [static(Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics4, Windows.Foundation.UniversalApiContract, 6.0)]
                [threading(both)]
                runtimeclass AppBarToggleButton : Windows.UI.Xaml.Controls.Primitives.ToggleButton
                {
                    [default] interface Windows.UI.Xaml.Controls.IAppBarToggleButton;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.IAppBarToggleButton3;
                    [contract(Windows.Foundation.UniversalApiContract, 6.0)] interface Windows.UI.Xaml.Controls.IAppBarToggleButton4;
                    [contract(Windows.Foundation.UniversalApiContract, 6.0)] interface Windows.UI.Xaml.Controls.IAppBarToggleButton5;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.ICommandBarElement;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.ICommandBarElement2;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics3, Windows.Foundation.UniversalApiContract, 3.0)]
                [static(Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics4, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass AutoSuggestBox : Windows.UI.Xaml.Controls.ItemsControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IAutoSuggestBox;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IAutoSuggestBox2;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.IAutoSuggestBox3;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IAutoSuggestBox4;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass AutoSuggestBoxQuerySubmittedEventArgs : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.IAutoSuggestBoxQuerySubmittedEventArgs;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass AutoSuggestBoxSuggestionChosenEventArgs : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.IAutoSuggestBoxSuggestionChosenEventArgs;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IAutoSuggestBoxTextChangedEventArgsStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass AutoSuggestBoxTextChangedEventArgs : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.IAutoSuggestBoxTextChangedEventArgs;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass BackClickEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IBackClickEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.IBitmapIconFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IBitmapIconStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IBitmapIconStatics2, Windows.Foundation.UniversalApiContract, 4.0)]
                [threading(both)]
                runtimeclass BitmapIcon : Windows.UI.Xaml.Controls.IconElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IBitmapIcon;
                    [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Xaml.Controls.IBitmapIcon2;
                }

                [composable(Windows.UI.Xaml.Controls.IBitmapIconSourceFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IBitmapIconSourceStatics, Windows.Foundation.UniversalApiContract, 5.0)]
                [threading(both)]
                runtimeclass BitmapIconSource : Windows.UI.Xaml.Controls.IconSource
                {
                    [default] interface Windows.UI.Xaml.Controls.IBitmapIconSource;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IBorderStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IBorderStatics2, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass Border : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IBorder;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IBorder2;
                }

                [composable(Windows.UI.Xaml.Controls.IButtonFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IButtonStaticsWithFlyout, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass Button : Windows.UI.Xaml.Controls.Primitives.ButtonBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IButton;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IButtonWithFlyout;
                }

                [composable(Windows.UI.Xaml.Controls.ICalendarDatePickerFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ICalendarDatePickerStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.ICalendarDatePickerStatics2, Windows.Foundation.UniversalApiContract, 3.0)]
                [static(Windows.UI.Xaml.Controls.ICalendarDatePickerStatics3, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass CalendarDatePicker : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.ICalendarDatePicker;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.ICalendarDatePicker2;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.ICalendarDatePicker3;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass CalendarDatePickerDateChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ICalendarDatePickerDateChangedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.ICalendarViewFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ICalendarViewStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass CalendarView : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.ICalendarView;
                }

                [composable(Windows.UI.Xaml.Controls.ICalendarViewDayItemFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ICalendarViewDayItemStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass CalendarViewDayItem : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.ICalendarViewDayItem;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass CalendarViewDayItemChangingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ICalendarViewDayItemChangingEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass CalendarViewSelectedDatesChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ICalendarViewSelectedDatesChangedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass CandidateWindowBoundsChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.ICanvasFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ICanvasStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass Canvas : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.ICanvas;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ICaptureElementStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass CaptureElement : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.ICaptureElement;
                }

                [composable(Windows.UI.Xaml.Controls.ICheckBoxFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass CheckBox : Windows.UI.Xaml.Controls.Primitives.ToggleButton
                {
                    [default] interface Windows.UI.Xaml.Controls.ICheckBox;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ChoosingGroupHeaderContainerEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ChoosingItemContainerEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass CleanUpVirtualizedItemEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ICleanUpVirtualizedItemEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                runtimeclass ColorChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IColorChangedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.IColorPickerFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IColorPickerStatics, Windows.Foundation.UniversalApiContract, 5.0)]
                [threading(both)]
                runtimeclass ColorPicker : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IColorPicker;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IColumnDefinitionStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass ColumnDefinition : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.IColumnDefinition;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ColumnDefinitionCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.ColumnDefinition*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.ColumnDefinition*>;
                }

                [composable(Windows.UI.Xaml.Controls.IComboBoxFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IComboBoxStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IComboBoxStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IComboBoxStatics3, Windows.Foundation.UniversalApiContract, 3.0)]
                [static(Windows.UI.Xaml.Controls.IComboBoxStatics4, Windows.Foundation.UniversalApiContract, 4.0)]
                [static(Windows.UI.Xaml.Controls.IComboBoxStatics5, Windows.Foundation.UniversalApiContract, 5.0)]
                [static(Windows.UI.Xaml.Controls.IComboBoxStatics6, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass ComboBox : Windows.UI.Xaml.Controls.Primitives.Selector
                {
                    [default] interface Windows.UI.Xaml.Controls.IComboBox;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IComboBox2;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.IComboBox3;
                    [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Xaml.Controls.IComboBox4;
                    [contract(Windows.Foundation.UniversalApiContract, 5.0)] interface Windows.UI.Xaml.Controls.IComboBox5;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IComboBox6;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] [overridable] interface Windows.UI.Xaml.Controls.IComboBoxOverrides;
                }

                [composable(Windows.UI.Xaml.Controls.IComboBoxItemFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ComboBoxItem : Windows.UI.Xaml.Controls.Primitives.SelectorItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IComboBoxItem;
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                runtimeclass ComboBoxTextSubmittedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IComboBoxTextSubmittedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.ICommandBarFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ICommandBarStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.ICommandBarStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.ICommandBarStatics3, Windows.Foundation.UniversalApiContract, 3.0)]
                [threading(both)]
                runtimeclass CommandBar : Windows.UI.Xaml.Controls.AppBar
                {
                    [default] interface Windows.UI.Xaml.Controls.ICommandBar;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.ICommandBar2;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.ICommandBar3;
                }

                [composable(Windows.UI.Xaml.Controls.ICommandBarFlyoutFactory, public, Windows.Foundation.UniversalApiContract, 7.0)]
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass CommandBarFlyout : Windows.UI.Xaml.Controls.Primitives.FlyoutBase
                {
                    [default] interface Windows.UI.Xaml.Controls.ICommandBarFlyout;
                }

                [composable(Windows.UI.Xaml.Controls.ICommandBarOverflowPresenterFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass CommandBarOverflowPresenter : Windows.UI.Xaml.Controls.ItemsControl
                {
                    [default] interface Windows.UI.Xaml.Controls.ICommandBarOverflowPresenter;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ContainerContentChangingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.IContentControlFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IContentControlStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass ContentControl : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IContentControl;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IContentControl2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] [overridable] interface Windows.UI.Xaml.Controls.IContentControlOverrides;
                }

                [composable(Windows.UI.Xaml.Controls.IContentDialogFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IContentDialogStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IContentDialogStatics2, Windows.Foundation.UniversalApiContract, 4.0)]
                [threading(both)]
                runtimeclass ContentDialog : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IContentDialog;
                    [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Xaml.Controls.IContentDialog2;
                    [contract(Windows.Foundation.UniversalApiContract, 5.0)] interface Windows.UI.Xaml.Controls.IContentDialog3;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ContentDialogButtonClickDeferral
                {
                    [default] interface Windows.UI.Xaml.Controls.IContentDialogButtonClickDeferral;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ContentDialogButtonClickEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IContentDialogButtonClickEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ContentDialogClosedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IContentDialogClosedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ContentDialogClosingDeferral
                {
                    [default] interface Windows.UI.Xaml.Controls.IContentDialogClosingDeferral;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ContentDialogClosingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IContentDialogClosingEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ContentDialogOpenedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IContentDialogOpenedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                runtimeclass ContentLinkChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IContentLinkChangedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.IContentPresenterFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IContentPresenterStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IContentPresenterStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IContentPresenterStatics3, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IContentPresenterStatics4, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IContentPresenterStatics5, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass ContentPresenter : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IContentPresenter;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IContentPresenter2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IContentPresenter3;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IContentPresenter4;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IContentPresenter5;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] [overridable] interface Windows.UI.Xaml.Controls.IContentPresenterOverrides;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ContextMenuEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IContextMenuEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.IControlFactory, protected, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IControlStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IControlStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IControlStatics3, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IControlStatics4, Windows.Foundation.UniversalApiContract, 3.0)]
                [static(Windows.UI.Xaml.Controls.IControlStatics5, Windows.Foundation.UniversalApiContract, 4.0)]
                [static(Windows.UI.Xaml.Controls.IControlStatics7, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass Control : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IControl;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IControl2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IControl3;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.IControl4;
                    [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Xaml.Controls.IControl5;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IControl7;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] [protected] interface Windows.UI.Xaml.Controls.IControlProtected;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] [overridable] interface Windows.UI.Xaml.Controls.IControlOverrides;
                    [contract(Windows.Foundation.UniversalApiContract, 5.0)] [overridable] interface Windows.UI.Xaml.Controls.IControlOverrides6;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ControlTemplate : Windows.UI.Xaml.FrameworkTemplate
                {
                    [default] interface Windows.UI.Xaml.Controls.IControlTemplate;
                }

                [composable(Windows.UI.Xaml.Controls.IDataTemplateSelectorFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass DataTemplateSelector
                {
                    [default] interface Windows.UI.Xaml.Controls.IDataTemplateSelector;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IDataTemplateSelector2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] [overridable] interface Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] [overridable] interface Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.IElementFactory;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass DatePickedEventArgs : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.IDatePickedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.IDatePickerFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IDatePickerStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IDatePickerStatics2, Windows.Foundation.UniversalApiContract, 3.0)]
                [static(Windows.UI.Xaml.Controls.IDatePickerStatics3, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass DatePicker : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IDatePicker;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.IDatePicker2;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IDatePicker3;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IDatePickerFlyoutStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IDatePickerFlyoutStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass DatePickerFlyout : Windows.UI.Xaml.Controls.Primitives.PickerFlyoutBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IDatePickerFlyout;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IDatePickerFlyout2;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IDatePickerFlyoutItemStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass DatePickerFlyoutItem : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.IDatePickerFlyoutItem;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Data.ICustomPropertyProvider;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IDatePickerFlyoutPresenterStatics2, Windows.Foundation.UniversalApiContract, 8.0)]
                [threading(both)]
                runtimeclass DatePickerFlyoutPresenter : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IDatePickerFlyoutPresenter;
                    [contract(Windows.Foundation.UniversalApiContract, 8.0)] interface Windows.UI.Xaml.Controls.IDatePickerFlyoutPresenter2;
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                runtimeclass DatePickerSelectedValueChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IDatePickerSelectedValueChangedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass DatePickerValueChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IDatePickerValueChangedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass DragItemsCompletedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass DragItemsStartingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IDragItemsStartingEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.IDropDownButtonFactory, public, Windows.Foundation.UniversalApiContract, 7.0)]
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass DropDownButton : Windows.UI.Xaml.Controls.Button
                {
                    [default] interface Windows.UI.Xaml.Controls.IDropDownButton;
                }

                [composable(Windows.UI.Xaml.Controls.IDropDownButtonAutomationPeerFactory, public, Windows.Foundation.UniversalApiContract, 7.0)]
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass DropDownButtonAutomationPeer : Windows.UI.Xaml.Automation.Peers.ButtonAutomationPeer
                {
                    [default] interface Windows.UI.Xaml.Controls.IDropDownButtonAutomationPeer;
                    interface Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 3.0)]
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass DynamicOverflowItemsChangingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IDynamicOverflowItemsChangingEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.IFlipViewFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IFlipViewStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass FlipView : Windows.UI.Xaml.Controls.Primitives.Selector
                {
                    [default] interface Windows.UI.Xaml.Controls.IFlipView;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IFlipView2;
                }

                [composable(Windows.UI.Xaml.Controls.IFlipViewItemFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass FlipViewItem : Windows.UI.Xaml.Controls.Primitives.SelectorItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IFlipViewItem;
                }

                [composable(Windows.UI.Xaml.Controls.IFlyoutFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IFlyoutStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass Flyout : Windows.UI.Xaml.Controls.Primitives.FlyoutBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IFlyout;
                }

                [composable(Windows.UI.Xaml.Controls.IFlyoutPresenterFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IFlyoutPresenterStatics2, Windows.Foundation.UniversalApiContract, 8.0)]
                [threading(both)]
                runtimeclass FlyoutPresenter : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IFlyoutPresenter;
                    [contract(Windows.Foundation.UniversalApiContract, 8.0)] interface Windows.UI.Xaml.Controls.IFlyoutPresenter2;
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass FocusDisengagedEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IFocusDisengagedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass FocusEngagedEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IFocusEngagedEventArgs;
                    [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Xaml.Controls.IFocusEngagedEventArgs2;
                }

                [composable(Windows.UI.Xaml.Controls.IFontIconFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IFontIconStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IFontIconStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IFontIconStatics3, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass FontIcon : Windows.UI.Xaml.Controls.IconElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IFontIcon;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IFontIcon2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IFontIcon3;
                }

                [composable(Windows.UI.Xaml.Controls.IFontIconSourceFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IFontIconSourceStatics, Windows.Foundation.UniversalApiContract, 5.0)]
                [threading(both)]
                runtimeclass FontIconSource : Windows.UI.Xaml.Controls.IconSource
                {
                    [default] interface Windows.UI.Xaml.Controls.IFontIconSource;
                }

                [composable(Windows.UI.Xaml.Controls.IFrameFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IFrameStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IFrameStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IFrameStatics5, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass Frame : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IFrame;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IFrame2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IFrame3;
                    [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Xaml.Controls.IFrame4;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IFrame5;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.INavigate;
                }

                [composable(Windows.UI.Xaml.Controls.IGridFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IGridStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IGridStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IGridStatics3, Windows.Foundation.UniversalApiContract, 5.0)]
                [static(Windows.UI.Xaml.Controls.IGridStatics4, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass Grid : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.IGrid;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IGrid2;
                    [contract(Windows.Foundation.UniversalApiContract, 5.0)] interface Windows.UI.Xaml.Controls.IGrid3;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IGrid4;
                }

                [composable(Windows.UI.Xaml.Controls.IGridViewFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass GridView : Windows.UI.Xaml.Controls.ListViewBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IGridView;
                }

                [composable(Windows.UI.Xaml.Controls.IGridViewHeaderItemFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass GridViewHeaderItem : Windows.UI.Xaml.Controls.ListViewBaseHeaderItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IGridViewHeaderItem;
                }

                [composable(Windows.UI.Xaml.Controls.IGridViewItemFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass GridViewItem : Windows.UI.Xaml.Controls.Primitives.SelectorItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IGridViewItem;
                }

                [composable(Windows.UI.Xaml.Controls.IGroupItemFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass GroupItem : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IGroupItem;
                }

                [composable(Windows.UI.Xaml.Controls.IGroupStyleFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass GroupStyle
                {
                    [default] interface Windows.UI.Xaml.Controls.IGroupStyle;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IGroupStyle2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Data.INotifyPropertyChanged;
                }

                [composable(Windows.UI.Xaml.Controls.IGroupStyleSelectorFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass GroupStyleSelector
                {
                    [default] interface Windows.UI.Xaml.Controls.IGroupStyleSelector;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] [overridable] interface Windows.UI.Xaml.Controls.IGroupStyleSelectorOverrides;
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                runtimeclass HandwritingPanelClosedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IHandwritingPanelClosedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                runtimeclass HandwritingPanelOpenedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IHandwritingPanelOpenedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.IHandwritingViewFactory, public, Windows.Foundation.UniversalApiContract, 6.0)]
                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IHandwritingViewStatics, Windows.Foundation.UniversalApiContract, 6.0)]
                [threading(both)]
                runtimeclass HandwritingView : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IHandwritingView;
                }

                [composable(Windows.UI.Xaml.Controls.IHubFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IHubStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass Hub : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IHub;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.ISemanticZoomInformation;
                }

                [composable(Windows.UI.Xaml.Controls.IHubSectionFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IHubSectionStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass HubSection : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IHubSection;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass HubSectionCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.HubSection*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.HubSection*>;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass HubSectionHeaderClickEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IHubSectionHeaderClickEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.IHyperlinkButtonFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IHyperlinkButtonStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass HyperlinkButton : Windows.UI.Xaml.Controls.Primitives.ButtonBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IHyperlinkButton;
                }

                [composable(Windows.UI.Xaml.Controls.IIconElementFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IIconElementStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass IconElement : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IIconElement;
                }

                [composable(Windows.UI.Xaml.Controls.IIconSourceFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IIconSourceStatics, Windows.Foundation.UniversalApiContract, 5.0)]
                [threading(both)]
                runtimeclass IconSource : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.IIconSource;
                }

                [composable(Windows.UI.Xaml.Controls.IIconSourceElementFactory, public, Windows.Foundation.UniversalApiContract, 7.0)]
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IIconSourceElementStatics, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass IconSourceElement : Windows.UI.Xaml.Controls.IconElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IIconSourceElement;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IImageStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass Image : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IImage;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IImage2;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.IImage3;
                }

                [composable(Windows.UI.Xaml.Controls.IInkCanvasFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass InkCanvas : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkCanvas;
                }

                [composable(Windows.UI.Xaml.Controls.IInkToolbarFactory, public, Windows.Foundation.UniversalApiContract, 3.0)]
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IInkToolbarStatics, Windows.Foundation.UniversalApiContract, 3.0)]
                [static(Windows.UI.Xaml.Controls.IInkToolbarStatics2, Windows.Foundation.UniversalApiContract, 4.0)]
                [static(Windows.UI.Xaml.Controls.IInkToolbarStatics3, Windows.Foundation.UniversalApiContract, 8.0)]
                [threading(both)]
                runtimeclass InkToolbar : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkToolbar;
                    [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Xaml.Controls.IInkToolbar2;
                    [contract(Windows.Foundation.UniversalApiContract, 8.0)] interface Windows.UI.Xaml.Controls.IInkToolbar3;
                }

                [composable(Windows.UI.Xaml.Controls.IInkToolbarBallpointPenButtonFactory, public, Windows.Foundation.UniversalApiContract, 3.0)]
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass InkToolbarBallpointPenButton : Windows.UI.Xaml.Controls.InkToolbarPenButton
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkToolbarBallpointPenButton;
                }

                [composable(Windows.UI.Xaml.Controls.IInkToolbarCustomPenFactory, protected, Windows.Foundation.UniversalApiContract, 3.0)]
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass InkToolbarCustomPen : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkToolbarCustomPen;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] [overridable] interface Windows.UI.Xaml.Controls.IInkToolbarCustomPenOverrides;
                }

                [composable(Windows.UI.Xaml.Controls.IInkToolbarCustomPenButtonFactory, public, Windows.Foundation.UniversalApiContract, 3.0)]
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IInkToolbarCustomPenButtonStatics, Windows.Foundation.UniversalApiContract, 3.0)]
                [threading(both)]
                runtimeclass InkToolbarCustomPenButton : Windows.UI.Xaml.Controls.InkToolbarPenButton
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkToolbarCustomPenButton;
                }

                [composable(Windows.UI.Xaml.Controls.IInkToolbarCustomToggleButtonFactory, public, Windows.Foundation.UniversalApiContract, 3.0)]
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass InkToolbarCustomToggleButton : Windows.UI.Xaml.Controls.InkToolbarToggleButton
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkToolbarCustomToggleButton;
                }

                [composable(Windows.UI.Xaml.Controls.IInkToolbarCustomToolButtonFactory, public, Windows.Foundation.UniversalApiContract, 3.0)]
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IInkToolbarCustomToolButtonStatics, Windows.Foundation.UniversalApiContract, 3.0)]
                [threading(both)]
                runtimeclass InkToolbarCustomToolButton : Windows.UI.Xaml.Controls.InkToolbarToolButton
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkToolbarCustomToolButton;
                }

                [composable(Windows.UI.Xaml.Controls.IInkToolbarEraserButtonFactory, public, Windows.Foundation.UniversalApiContract, 3.0)]
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IInkToolbarEraserButtonStatics2, Windows.Foundation.UniversalApiContract, 4.0)]
                [threading(both)]
                runtimeclass InkToolbarEraserButton : Windows.UI.Xaml.Controls.InkToolbarToolButton
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkToolbarEraserButton;
                    [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Xaml.Controls.IInkToolbarEraserButton2;
                }

                [composable(Windows.UI.Xaml.Controls.IInkToolbarFlyoutItemFactory, public, Windows.Foundation.UniversalApiContract, 4.0)]
                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IInkToolbarFlyoutItemStatics, Windows.Foundation.UniversalApiContract, 4.0)]
                [threading(both)]
                runtimeclass InkToolbarFlyoutItem : Windows.UI.Xaml.Controls.Primitives.ButtonBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkToolbarFlyoutItem;
                }

                [composable(Windows.UI.Xaml.Controls.IInkToolbarHighlighterButtonFactory, public, Windows.Foundation.UniversalApiContract, 3.0)]
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass InkToolbarHighlighterButton : Windows.UI.Xaml.Controls.InkToolbarPenButton
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkToolbarHighlighterButton;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 4.0)]
                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass InkToolbarIsStencilButtonCheckedChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkToolbarIsStencilButtonCheckedChangedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.IInkToolbarMenuButtonFactory, public, Windows.Foundation.UniversalApiContract, 4.0)]
                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IInkToolbarMenuButtonStatics, Windows.Foundation.UniversalApiContract, 4.0)]
                [threading(both)]
                runtimeclass InkToolbarMenuButton : Windows.UI.Xaml.Controls.Primitives.ToggleButton
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkToolbarMenuButton;
                }

                [composable(Windows.UI.Xaml.Controls.IInkToolbarPenButtonFactory, public, Windows.Foundation.UniversalApiContract, 3.0)]
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IInkToolbarPenButtonStatics, Windows.Foundation.UniversalApiContract, 3.0)]
                [threading(both)]
                runtimeclass InkToolbarPenButton : Windows.UI.Xaml.Controls.InkToolbarToolButton
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkToolbarPenButton;
                }

                [composable(Windows.UI.Xaml.Controls.IInkToolbarPenConfigurationControlFactory, public, Windows.Foundation.UniversalApiContract, 3.0)]
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IInkToolbarPenConfigurationControlStatics, Windows.Foundation.UniversalApiContract, 3.0)]
                [threading(both)]
                runtimeclass InkToolbarPenConfigurationControl : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkToolbarPenConfigurationControl;
                }

                [composable(Windows.UI.Xaml.Controls.IInkToolbarPencilButtonFactory, public, Windows.Foundation.UniversalApiContract, 3.0)]
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass InkToolbarPencilButton : Windows.UI.Xaml.Controls.InkToolbarPenButton
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkToolbarPencilButton;
                }

                [composable(Windows.UI.Xaml.Controls.IInkToolbarRulerButtonFactory, public, Windows.Foundation.UniversalApiContract, 3.0)]
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [deprecated("InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 4.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IInkToolbarRulerButtonStatics, Windows.Foundation.UniversalApiContract, 3.0)]
                [threading(both)]
                runtimeclass InkToolbarRulerButton : Windows.UI.Xaml.Controls.InkToolbarToggleButton
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkToolbarRulerButton;
                }

                [composable(Windows.UI.Xaml.Controls.IInkToolbarStencilButtonFactory, public, Windows.Foundation.UniversalApiContract, 4.0)]
                [contract(Windows.Foundation.UniversalApiContract, 4.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IInkToolbarStencilButtonStatics, Windows.Foundation.UniversalApiContract, 4.0)]
                [threading(both)]
                runtimeclass InkToolbarStencilButton : Windows.UI.Xaml.Controls.InkToolbarMenuButton
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkToolbarStencilButton;
                }

                [composable(Windows.UI.Xaml.Controls.IInkToolbarToggleButtonFactory, public, Windows.Foundation.UniversalApiContract, 3.0)]
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass InkToolbarToggleButton : Windows.UI.Xaml.Controls.CheckBox
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkToolbarToggleButton;
                }

                [composable(Windows.UI.Xaml.Controls.IInkToolbarToolButtonFactory, public, Windows.Foundation.UniversalApiContract, 3.0)]
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IInkToolbarToolButtonStatics, Windows.Foundation.UniversalApiContract, 3.0)]
                [threading(both)]
                runtimeclass InkToolbarToolButton : Windows.UI.Xaml.Controls.RadioButton
                {
                    [default] interface Windows.UI.Xaml.Controls.IInkToolbarToolButton;
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                runtimeclass IsTextTrimmedChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ItemClickEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemClickEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ItemCollection
                {
                    [default] interface Windows.Foundation.Collections.IObservableVector<IInspectable*>;
                    interface Windows.Foundation.Collections.IVector<IInspectable*>;
                    interface Windows.Foundation.Collections.IIterable<IInspectable*>;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ItemContainerGenerator
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemContainerGenerator;
                }

                [composable(Windows.UI.Xaml.Controls.IItemsControlFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IItemsControlStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass ItemsControl : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemsControl;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IItemsControl2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IItemsControl3;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] [overridable] interface Windows.UI.Xaml.Controls.IItemsControlOverrides;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IItemContainerMapping;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ItemsPanelTemplate : Windows.UI.Xaml.FrameworkTemplate
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemsPanelTemplate;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ItemsPickedEventArgs : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemsPickedEventArgs;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IItemsPresenterStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IItemsPresenterStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass ItemsPresenter : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemsPresenter;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IItemsPresenter2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IItemsStackPanelStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IItemsStackPanelStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass ItemsStackPanel : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemsStackPanel;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IItemsStackPanel2;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IItemsWrapGridStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IItemsWrapGridStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass ItemsWrapGrid : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemsWrapGrid;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IItemsWrapGrid2;
                }

                [composable(Windows.UI.Xaml.Controls.IListBoxFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IListBoxStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IListBoxStatics2, Windows.Foundation.UniversalApiContract, 3.0)]
                [threading(both)]
                runtimeclass ListBox : Windows.UI.Xaml.Controls.Primitives.Selector
                {
                    [default] interface Windows.UI.Xaml.Controls.IListBox;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.IListBox2;
                }

                [composable(Windows.UI.Xaml.Controls.IListBoxItemFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ListBoxItem : Windows.UI.Xaml.Controls.Primitives.SelectorItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IListBoxItem;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IListPickerFlyoutStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass ListPickerFlyout : Windows.UI.Xaml.Controls.Primitives.PickerFlyoutBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IListPickerFlyout;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ListPickerFlyoutPresenter : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IListPickerFlyoutPresenter;
                }

                [composable(Windows.UI.Xaml.Controls.IListViewFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ListView : Windows.UI.Xaml.Controls.ListViewBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IListView;
                }

                [composable(Windows.UI.Xaml.Controls.IListViewBaseFactory, protected, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IListViewBaseStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IListViewBaseStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IListViewBaseStatics3, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IListViewBaseStatics4, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IListViewBaseStatics5, Windows.Foundation.UniversalApiContract, 3.0)]
                [threading(both)]
                runtimeclass ListViewBase : Windows.UI.Xaml.Controls.Primitives.Selector
                {
                    [default] interface Windows.UI.Xaml.Controls.IListViewBase;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IListViewBase2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IListViewBase3;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IListViewBase4;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.IListViewBase5;
                    [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Xaml.Controls.IListViewBase6;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.ISemanticZoomInformation;
                }

                [composable(Windows.UI.Xaml.Controls.IListViewBaseHeaderItemFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ListViewBaseHeaderItem : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IListViewBaseHeaderItem;
                }

                [composable(Windows.UI.Xaml.Controls.IListViewHeaderItemFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ListViewHeaderItem : Windows.UI.Xaml.Controls.ListViewBaseHeaderItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IListViewHeaderItem;
                }

                [composable(Windows.UI.Xaml.Controls.IListViewItemFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ListViewItem : Windows.UI.Xaml.Controls.Primitives.SelectorItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IListViewItem;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IListViewPersistenceHelperStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass ListViewPersistenceHelper
                {
                    [default] interface Windows.UI.Xaml.Controls.IListViewPersistenceHelper;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IMediaElementStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IMediaElementStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass MediaElement : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IMediaElement;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IMediaElement2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IMediaElement3;
                }

                [composable(Windows.UI.Xaml.Controls.IMediaPlayerElementFactory, public, Windows.Foundation.UniversalApiContract, 3.0)]
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IMediaPlayerElementStatics, Windows.Foundation.UniversalApiContract, 3.0)]
                [threading(both)]
                runtimeclass MediaPlayerElement : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IMediaPlayerElement;
                }

                [composable(Windows.UI.Xaml.Controls.IMediaPlayerPresenterFactory, public, Windows.Foundation.UniversalApiContract, 3.0)]
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IMediaPlayerPresenterStatics, Windows.Foundation.UniversalApiContract, 3.0)]
                [threading(both)]
                runtimeclass MediaPlayerPresenter : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IMediaPlayerPresenter;
                }

                [composable(Windows.UI.Xaml.Controls.IMediaTransportControlsFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IMediaTransportControlsStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IMediaTransportControlsStatics2, Windows.Foundation.UniversalApiContract, 3.0)]
                [static(Windows.UI.Xaml.Controls.IMediaTransportControlsStatics3, Windows.Foundation.UniversalApiContract, 5.0)]
                [static(Windows.UI.Xaml.Controls.IMediaTransportControlsStatics4, Windows.Foundation.UniversalApiContract, 6.0)]
                [threading(both)]
                runtimeclass MediaTransportControls : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IMediaTransportControls;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.IMediaTransportControls2;
                    [contract(Windows.Foundation.UniversalApiContract, 5.0)] interface Windows.UI.Xaml.Controls.IMediaTransportControls3;
                    [contract(Windows.Foundation.UniversalApiContract, 6.0)] interface Windows.UI.Xaml.Controls.IMediaTransportControls4;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IMediaTransportControlsHelperStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass MediaTransportControlsHelper
                {
                    [default] interface Windows.UI.Xaml.Controls.IMediaTransportControlsHelper;
                }

                [composable(Windows.UI.Xaml.Controls.IMenuBarFactory, public, Windows.Foundation.UniversalApiContract, 7.0)]
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IMenuBarStatics, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass MenuBar : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IMenuBar;
                }

                [composable(Windows.UI.Xaml.Controls.IMenuBarItemFactory, public, Windows.Foundation.UniversalApiContract, 7.0)]
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IMenuBarItemStatics, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass MenuBarItem : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IMenuBarItem;
                }

                [composable(Windows.UI.Xaml.Controls.IMenuBarItemFlyoutFactory, public, Windows.Foundation.UniversalApiContract, 7.0)]
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass MenuBarItemFlyout : Windows.UI.Xaml.Controls.MenuFlyout
                {
                    [default] interface Windows.UI.Xaml.Controls.IMenuBarItemFlyout;
                }

                [composable(Windows.UI.Xaml.Controls.IMenuFlyoutFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IMenuFlyoutStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass MenuFlyout : Windows.UI.Xaml.Controls.Primitives.FlyoutBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IMenuFlyout;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IMenuFlyout2;
                }

                [composable(Windows.UI.Xaml.Controls.IMenuFlyoutItemFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IMenuFlyoutItemStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IMenuFlyoutItemStatics2, Windows.Foundation.UniversalApiContract, 4.0)]
                [static(Windows.UI.Xaml.Controls.IMenuFlyoutItemStatics3, Windows.Foundation.UniversalApiContract, 6.0)]
                [threading(both)]
                runtimeclass MenuFlyoutItem : Windows.UI.Xaml.Controls.MenuFlyoutItemBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IMenuFlyoutItem;
                    [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Xaml.Controls.IMenuFlyoutItem2;
                    [contract(Windows.Foundation.UniversalApiContract, 6.0)] interface Windows.UI.Xaml.Controls.IMenuFlyoutItem3;
                }

                [composable(Windows.UI.Xaml.Controls.IMenuFlyoutItemBaseFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass MenuFlyoutItemBase : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IMenuFlyoutItemBase;
                }

                [composable(Windows.UI.Xaml.Controls.IMenuFlyoutPresenterFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IMenuFlyoutPresenterStatics3, Windows.Foundation.UniversalApiContract, 8.0)]
                [threading(both)]
                runtimeclass MenuFlyoutPresenter : Windows.UI.Xaml.Controls.ItemsControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IMenuFlyoutPresenter;
                    [contract(Windows.Foundation.UniversalApiContract, 2.0)] interface Windows.UI.Xaml.Controls.IMenuFlyoutPresenter2;
                    [contract(Windows.Foundation.UniversalApiContract, 8.0)] interface Windows.UI.Xaml.Controls.IMenuFlyoutPresenter3;
                }

                [composable(Windows.UI.Xaml.Controls.IMenuFlyoutSeparatorFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass MenuFlyoutSeparator : Windows.UI.Xaml.Controls.MenuFlyoutItemBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IMenuFlyoutSeparator;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IMenuFlyoutSubItemStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IMenuFlyoutSubItemStatics2, Windows.Foundation.UniversalApiContract, 4.0)]
                [threading(both)]
                runtimeclass MenuFlyoutSubItem : Windows.UI.Xaml.Controls.MenuFlyoutItemBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IMenuFlyoutSubItem;
                    [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Xaml.Controls.IMenuFlyoutSubItem2;
                }

                [composable(Windows.UI.Xaml.Controls.INavigationViewFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.INavigationViewStatics, Windows.Foundation.UniversalApiContract, 5.0)]
                [static(Windows.UI.Xaml.Controls.INavigationViewStatics2, Windows.Foundation.UniversalApiContract, 6.0)]
                [static(Windows.UI.Xaml.Controls.INavigationViewStatics3, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass NavigationView : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.INavigationView;
                    [contract(Windows.Foundation.UniversalApiContract, 6.0)] interface Windows.UI.Xaml.Controls.INavigationView2;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.INavigationView3;
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                runtimeclass NavigationViewBackRequestedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.INavigationViewBackRequestedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                runtimeclass NavigationViewDisplayModeChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.INavigationViewDisplayModeChangedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.INavigationViewItemFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.INavigationViewItemStatics, Windows.Foundation.UniversalApiContract, 5.0)]
                [static(Windows.UI.Xaml.Controls.INavigationViewItemStatics2, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass NavigationViewItem : Windows.UI.Xaml.Controls.NavigationViewItemBase
                {
                    [default] interface Windows.UI.Xaml.Controls.INavigationViewItem;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.INavigationViewItem2;
                }

                [composable(Windows.UI.Xaml.Controls.INavigationViewItemBaseFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass NavigationViewItemBase : Windows.UI.Xaml.Controls.ListViewItem
                {
                    [default] interface Windows.UI.Xaml.Controls.INavigationViewItemBase;
                }

                [composable(Windows.UI.Xaml.Controls.INavigationViewItemHeaderFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass NavigationViewItemHeader : Windows.UI.Xaml.Controls.NavigationViewItemBase
                {
                    [default] interface Windows.UI.Xaml.Controls.INavigationViewItemHeader;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass NavigationViewItemInvokedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs2;
                }

                [composable(Windows.UI.Xaml.Controls.INavigationViewItemSeparatorFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass NavigationViewItemSeparator : Windows.UI.Xaml.Controls.NavigationViewItemBase
                {
                    [default] interface Windows.UI.Xaml.Controls.INavigationViewItemSeparator;
                }

                [composable(Windows.UI.Xaml.Controls.INavigationViewListFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass NavigationViewList : Windows.UI.Xaml.Controls.ListView
                {
                    [default] interface Windows.UI.Xaml.Controls.INavigationViewList;
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                runtimeclass NavigationViewPaneClosingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.INavigationViewPaneClosingEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                runtimeclass NavigationViewSelectionChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs2;
                }

                [composable(Windows.UI.Xaml.Controls.INavigationViewTemplateSettingsFactory, public, Windows.Foundation.UniversalApiContract, 7.0)]
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass NavigationViewTemplateSettings : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.INavigationViewTemplateSettings;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass NotifyEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.INotifyEventArgs;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.INotifyEventArgs2;
                }

                [composable(Windows.UI.Xaml.Controls.IPageFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IPageStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass Page : Windows.UI.Xaml.Controls.UserControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IPage;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] [overridable] interface Windows.UI.Xaml.Controls.IPageOverrides;
                }

                [composable(Windows.UI.Xaml.Controls.IPanelFactory, protected, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IPanelStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass Panel : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IPanel;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IPanel2;
                }

                [composable(Windows.UI.Xaml.Controls.IParallaxViewFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IParallaxViewStatics, Windows.Foundation.UniversalApiContract, 5.0)]
                [threading(both)]
                runtimeclass ParallaxView : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IParallaxView;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IPasswordBoxStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IPasswordBoxStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IPasswordBoxStatics3, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IPasswordBoxStatics5, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass PasswordBox : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IPasswordBox;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IPasswordBox2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IPasswordBox3;
                    [contract(Windows.Foundation.UniversalApiContract, 5.0)] interface Windows.UI.Xaml.Controls.IPasswordBox4;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IPasswordBox5;
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                runtimeclass PasswordBoxPasswordChangingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IPasswordBoxPasswordChangingEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.IPathIconFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IPathIconStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass PathIcon : Windows.UI.Xaml.Controls.IconElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IPathIcon;
                }

                [composable(Windows.UI.Xaml.Controls.IPathIconSourceFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IPathIconSourceStatics, Windows.Foundation.UniversalApiContract, 5.0)]
                [threading(both)]
                runtimeclass PathIconSource : Windows.UI.Xaml.Controls.IconSource
                {
                    [default] interface Windows.UI.Xaml.Controls.IPathIconSource;
                }

                [composable(Windows.UI.Xaml.Controls.IPersonPictureFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IPersonPictureStatics, Windows.Foundation.UniversalApiContract, 5.0)]
                [threading(both)]
                runtimeclass PersonPicture : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IPersonPicture;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass PickerConfirmedEventArgs : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.IPickerConfirmedEventArgs;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IPickerFlyoutStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass PickerFlyout : Windows.UI.Xaml.Controls.Primitives.PickerFlyoutBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IPickerFlyout;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass PickerFlyoutPresenter : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IPickerFlyoutPresenter;
                }

                [composable(Windows.UI.Xaml.Controls.IPivotFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IPivotStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IPivotStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IPivotStatics3, Windows.Foundation.UniversalApiContract, 3.0)]
                [threading(both)]
                runtimeclass Pivot : Windows.UI.Xaml.Controls.ItemsControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IPivot;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IPivot2;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.IPivot3;
                }

                [composable(Windows.UI.Xaml.Controls.IPivotItemFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IPivotItemStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass PivotItem : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IPivotItem;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass PivotItemEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IPivotItemEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.IProgressBarFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IProgressBarStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass ProgressBar : Windows.UI.Xaml.Controls.Primitives.RangeBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IProgressBar;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IProgressRingStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass ProgressRing : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IProgressRing;
                }

                [composable(Windows.UI.Xaml.Controls.IRadioButtonFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IRadioButtonStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass RadioButton : Windows.UI.Xaml.Controls.Primitives.ToggleButton
                {
                    [default] interface Windows.UI.Xaml.Controls.IRadioButton;
                }

                [composable(Windows.UI.Xaml.Controls.IRatingControlFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IRatingControlStatics, Windows.Foundation.UniversalApiContract, 5.0)]
                [threading(both)]
                runtimeclass RatingControl : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IRatingControl;
                }

                [composable(Windows.UI.Xaml.Controls.IRatingItemFontInfoFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IRatingItemFontInfoStatics, Windows.Foundation.UniversalApiContract, 5.0)]
                [threading(both)]
                runtimeclass RatingItemFontInfo : Windows.UI.Xaml.Controls.RatingItemInfo
                {
                    [default] interface Windows.UI.Xaml.Controls.IRatingItemFontInfo;
                }

                [composable(Windows.UI.Xaml.Controls.IRatingItemImageInfoFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IRatingItemImageInfoStatics, Windows.Foundation.UniversalApiContract, 5.0)]
                [threading(both)]
                runtimeclass RatingItemImageInfo : Windows.UI.Xaml.Controls.RatingItemInfo
                {
                    [default] interface Windows.UI.Xaml.Controls.IRatingItemImageInfo;
                }

                [composable(Windows.UI.Xaml.Controls.IRatingItemInfoFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass RatingItemInfo : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.IRatingItemInfo;
                }

                [composable(Windows.UI.Xaml.Controls.IRefreshContainerFactory, public, Windows.Foundation.UniversalApiContract, 6.0)]
                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IRefreshContainerStatics, Windows.Foundation.UniversalApiContract, 6.0)]
                [threading(both)]
                runtimeclass RefreshContainer : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IRefreshContainer;
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                runtimeclass RefreshInteractionRatioChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IRefreshInteractionRatioChangedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                runtimeclass RefreshRequestedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IRefreshRequestedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                runtimeclass RefreshStateChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IRefreshStateChangedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.IRefreshVisualizerFactory, public, Windows.Foundation.UniversalApiContract, 6.0)]
                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IRefreshVisualizerStatics, Windows.Foundation.UniversalApiContract, 6.0)]
                [threading(both)]
                runtimeclass RefreshVisualizer : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IRefreshVisualizer;
                }

                [composable(Windows.UI.Xaml.Controls.IRelativePanelFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IRelativePanelStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IRelativePanelStatics2, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass RelativePanel : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.IRelativePanel;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IRelativePanel2;
                }

                [composable(Windows.UI.Xaml.Controls.IRichEditBoxFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IRichEditBoxStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IRichEditBoxStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IRichEditBoxStatics3, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IRichEditBoxStatics4, Windows.Foundation.UniversalApiContract, 2.0)]
                [static(Windows.UI.Xaml.Controls.IRichEditBoxStatics5, Windows.Foundation.UniversalApiContract, 4.0)]
                [static(Windows.UI.Xaml.Controls.IRichEditBoxStatics6, Windows.Foundation.UniversalApiContract, 5.0)]
                [static(Windows.UI.Xaml.Controls.IRichEditBoxStatics7, Windows.Foundation.UniversalApiContract, 6.0)]
                [static(Windows.UI.Xaml.Controls.IRichEditBoxStatics8, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass RichEditBox : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IRichEditBox;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IRichEditBox2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IRichEditBox3;
                    [contract(Windows.Foundation.UniversalApiContract, 2.0)] interface Windows.UI.Xaml.Controls.IRichEditBox4;
                    [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Xaml.Controls.IRichEditBox5;
                    [contract(Windows.Foundation.UniversalApiContract, 5.0)] interface Windows.UI.Xaml.Controls.IRichEditBox6;
                    [contract(Windows.Foundation.UniversalApiContract, 6.0)] interface Windows.UI.Xaml.Controls.IRichEditBox7;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IRichEditBox8;
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                runtimeclass RichEditBoxSelectionChangingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IRichEditBoxSelectionChangingEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass RichEditBoxTextChangingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IRichEditBoxTextChangingEventArgs;
                    [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Xaml.Controls.IRichEditBoxTextChangingEventArgs2;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IRichTextBlockStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IRichTextBlockStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IRichTextBlockStatics3, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IRichTextBlockStatics4, Windows.Foundation.UniversalApiContract, 4.0)]
                [static(Windows.UI.Xaml.Controls.IRichTextBlockStatics5, Windows.Foundation.UniversalApiContract, 5.0)]
                [static(Windows.UI.Xaml.Controls.IRichTextBlockStatics6, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass RichTextBlock : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IRichTextBlock;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IRichTextBlock2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IRichTextBlock3;
                    [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Xaml.Controls.IRichTextBlock4;
                    [contract(Windows.Foundation.UniversalApiContract, 5.0)] interface Windows.UI.Xaml.Controls.IRichTextBlock5;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IRichTextBlock6;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics3, Windows.Foundation.UniversalApiContract, 5.0)]
                [threading(both)]
                runtimeclass RichTextBlockOverflow : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IRichTextBlockOverflow;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IRichTextBlockOverflow2;
                    [contract(Windows.Foundation.UniversalApiContract, 5.0)] interface Windows.UI.Xaml.Controls.IRichTextBlockOverflow3;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IRowDefinitionStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass RowDefinition : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.IRowDefinition;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass RowDefinitionCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.RowDefinition*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.RowDefinition*>;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IScrollContentPresenterStatics2, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass ScrollContentPresenter : Windows.UI.Xaml.Controls.ContentPresenter
                {
                    [default] interface Windows.UI.Xaml.Controls.IScrollContentPresenter;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IScrollContentPresenter2;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IScrollViewerStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IScrollViewerStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IScrollViewerStatics4, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass ScrollViewer : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IScrollViewer;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IScrollViewer2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IScrollViewer3;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IScrollViewer4;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IScrollAnchorProvider;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ScrollViewerView
                {
                    [default] interface Windows.UI.Xaml.Controls.IScrollViewerView;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ScrollViewerViewChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ScrollViewerViewChangingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.ISearchBoxFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ISearchBoxStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass SearchBox : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.ISearchBox;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass SearchBoxQueryChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISearchBoxQueryChangedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass SearchBoxQuerySubmittedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISearchBoxQuerySubmittedEventArgs;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass SearchBoxResultSuggestionChosenEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISearchBoxResultSuggestionChosenEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass SearchBoxSuggestionsRequestedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISearchBoxSuggestionsRequestedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.ISectionsInViewChangedEventArgsFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass SectionsInViewChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISectionsInViewChangedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.ISelectionChangedEventArgsFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass SelectionChangedEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISelectionChangedEventArgs;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ISemanticZoomStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass SemanticZoom : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.ISemanticZoom;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass SemanticZoomLocation
                {
                    [default] interface Windows.UI.Xaml.Controls.ISemanticZoomLocation;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass SemanticZoomViewChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISemanticZoomViewChangedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.ISettingsFlyoutFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ISettingsFlyoutStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass SettingsFlyout : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.ISettingsFlyout;
                }

                [composable(Windows.UI.Xaml.Controls.ISliderFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ISliderStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.ISliderStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass Slider : Windows.UI.Xaml.Controls.Primitives.RangeBase
                {
                    [default] interface Windows.UI.Xaml.Controls.ISlider;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.ISlider2;
                }

                [composable(Windows.UI.Xaml.Controls.ISplitButtonFactory, public, Windows.Foundation.UniversalApiContract, 7.0)]
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ISplitButtonStatics, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass SplitButton : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.ISplitButton;
                }

                [composable(Windows.UI.Xaml.Controls.ISplitButtonAutomationPeerFactory, public, Windows.Foundation.UniversalApiContract, 7.0)]
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass SplitButtonAutomationPeer : Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
                {
                    [default] interface Windows.UI.Xaml.Controls.ISplitButtonAutomationPeer;
                    interface Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider;
                    interface Windows.UI.Xaml.Automation.Provider.IInvokeProvider;
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                runtimeclass SplitButtonClickEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISplitButtonClickEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.ISplitViewFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ISplitViewStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.ISplitViewStatics2, Windows.Foundation.UniversalApiContract, 3.0)]
                [threading(both)]
                runtimeclass SplitView : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.ISplitView;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.ISplitView2;
                    [contract(Windows.Foundation.UniversalApiContract, 5.0)] interface Windows.UI.Xaml.Controls.ISplitView3;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass SplitViewPaneClosingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISplitViewPaneClosingEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.IStackPanelFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IStackPanelStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IStackPanelStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IStackPanelStatics4, Windows.Foundation.UniversalApiContract, 5.0)]
                [static(Windows.UI.Xaml.Controls.IStackPanelStatics5, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass StackPanel : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.IStackPanel;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IStackPanel2;
                    [contract(Windows.Foundation.UniversalApiContract, 5.0)] interface Windows.UI.Xaml.Controls.IStackPanel4;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IStackPanel5;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.IInsertionPanel;
                }

                [composable(Windows.UI.Xaml.Controls.IStyleSelectorFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass StyleSelector
                {
                    [default] interface Windows.UI.Xaml.Controls.IStyleSelector;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] [overridable] interface Windows.UI.Xaml.Controls.IStyleSelectorOverrides;
                }

                [composable(Windows.UI.Xaml.Controls.ISwapChainBackgroundPanelFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass SwapChainBackgroundPanel : Windows.UI.Xaml.Controls.Grid
                {
                    [default] interface Windows.UI.Xaml.Controls.ISwapChainBackgroundPanel;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.ISwapChainBackgroundPanel2;
                }

                [composable(Windows.UI.Xaml.Controls.ISwapChainPanelFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ISwapChainPanelStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass SwapChainPanel : Windows.UI.Xaml.Controls.Grid
                {
                    [default] interface Windows.UI.Xaml.Controls.ISwapChainPanel;
                }

                [composable(Windows.UI.Xaml.Controls.ISwipeControlFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ISwipeControlStatics, Windows.Foundation.UniversalApiContract, 5.0)]
                [threading(both)]
                runtimeclass SwipeControl : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.ISwipeControl;
                }

                [composable(Windows.UI.Xaml.Controls.ISwipeItemFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ISwipeItemStatics, Windows.Foundation.UniversalApiContract, 5.0)]
                [threading(both)]
                runtimeclass SwipeItem : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.ISwipeItem;
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                runtimeclass SwipeItemInvokedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISwipeItemInvokedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.ISwipeItemsFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ISwipeItemsStatics, Windows.Foundation.UniversalApiContract, 5.0)]
                [threading(both)]
                runtimeclass SwipeItems : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.ISwipeItems;
                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.SwipeItem*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.SwipeItem*>;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [activatable(Windows.UI.Xaml.Controls.ISymbolIconFactory, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ISymbolIconStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass SymbolIcon : Windows.UI.Xaml.Controls.IconElement
                {
                    [default] interface Windows.UI.Xaml.Controls.ISymbolIcon;
                }

                [composable(Windows.UI.Xaml.Controls.ISymbolIconSourceFactory, public, Windows.Foundation.UniversalApiContract, 5.0)]
                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ISymbolIconSourceStatics, Windows.Foundation.UniversalApiContract, 5.0)]
                [threading(both)]
                runtimeclass SymbolIconSource : Windows.UI.Xaml.Controls.IconSource
                {
                    [default] interface Windows.UI.Xaml.Controls.ISymbolIconSource;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ITextBlockStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.ITextBlockStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.ITextBlockStatics3, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.ITextBlockStatics5, Windows.Foundation.UniversalApiContract, 4.0)]
                [static(Windows.UI.Xaml.Controls.ITextBlockStatics6, Windows.Foundation.UniversalApiContract, 5.0)]
                [static(Windows.UI.Xaml.Controls.ITextBlockStatics7, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass TextBlock : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextBlock;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.ITextBlock2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.ITextBlock3;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.ITextBlock4;
                    [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Xaml.Controls.ITextBlock5;
                    [contract(Windows.Foundation.UniversalApiContract, 5.0)] interface Windows.UI.Xaml.Controls.ITextBlock6;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.ITextBlock7;
                }

                [composable(Windows.UI.Xaml.Controls.ITextBoxFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ITextBoxStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.ITextBoxStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.ITextBoxStatics3, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.ITextBoxStatics5, Windows.Foundation.UniversalApiContract, 4.0)]
                [static(Windows.UI.Xaml.Controls.ITextBoxStatics6, Windows.Foundation.UniversalApiContract, 5.0)]
                [static(Windows.UI.Xaml.Controls.ITextBoxStatics7, Windows.Foundation.UniversalApiContract, 6.0)]
                [static(Windows.UI.Xaml.Controls.ITextBoxStatics8, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass TextBox : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextBox;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.ITextBox2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.ITextBox3;
                    [contract(Windows.Foundation.UniversalApiContract, 2.0)] interface Windows.UI.Xaml.Controls.ITextBox4;
                    [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Xaml.Controls.ITextBox5;
                    [contract(Windows.Foundation.UniversalApiContract, 5.0)] interface Windows.UI.Xaml.Controls.ITextBox6;
                    [contract(Windows.Foundation.UniversalApiContract, 6.0)] interface Windows.UI.Xaml.Controls.ITextBox7;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.ITextBox8;
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                runtimeclass TextBoxBeforeTextChangingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextBoxBeforeTextChangingEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                runtimeclass TextBoxSelectionChangingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextBoxSelectionChangingEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TextBoxTextChangingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs;
                    [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs2;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass TextChangedEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextChangedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.ITextCommandBarFlyoutFactory, public, Windows.Foundation.UniversalApiContract, 7.0)]
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass TextCommandBarFlyout : Windows.UI.Xaml.Controls.CommandBarFlyout
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextCommandBarFlyout;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TextCompositionChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TextCompositionEndedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TextCompositionStartedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                runtimeclass TextControlCopyingToClipboardEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 5.0)]
                [marshaling_behavior(agile)]
                runtimeclass TextControlCuttingToClipboardEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TextControlPasteEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextControlPasteEventArgs;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass TimePickedEventArgs : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.ITimePickedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.ITimePickerFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ITimePickerStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.ITimePickerStatics2, Windows.Foundation.UniversalApiContract, 3.0)]
                [static(Windows.UI.Xaml.Controls.ITimePickerStatics3, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass TimePicker : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.ITimePicker;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.ITimePicker2;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.ITimePicker3;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ITimePickerFlyoutStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass TimePickerFlyout : Windows.UI.Xaml.Controls.Primitives.PickerFlyoutBase
                {
                    [default] interface Windows.UI.Xaml.Controls.ITimePickerFlyout;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ITimePickerFlyoutPresenterStatics2, Windows.Foundation.UniversalApiContract, 8.0)]
                [threading(both)]
                runtimeclass TimePickerFlyoutPresenter : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.ITimePickerFlyoutPresenter;
                    [contract(Windows.Foundation.UniversalApiContract, 8.0)] interface Windows.UI.Xaml.Controls.ITimePickerFlyoutPresenter2;
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                runtimeclass TimePickerSelectedValueChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITimePickerSelectedValueChangedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TimePickerValueChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITimePickerValueChangedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass ToggleMenuFlyoutItem : Windows.UI.Xaml.Controls.MenuFlyoutItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IToggleMenuFlyoutItem;
                }

                [composable(Windows.UI.Xaml.Controls.IToggleSplitButtonFactory, public, Windows.Foundation.UniversalApiContract, 7.0)]
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ToggleSplitButton : Windows.UI.Xaml.Controls.SplitButton
                {
                    [default] interface Windows.UI.Xaml.Controls.IToggleSplitButton;
                }

                [composable(Windows.UI.Xaml.Controls.IToggleSplitButtonAutomationPeerFactory, public, Windows.Foundation.UniversalApiContract, 7.0)]
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ToggleSplitButtonAutomationPeer : Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
                {
                    [default] interface Windows.UI.Xaml.Controls.IToggleSplitButtonAutomationPeer;
                    interface Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider;
                    interface Windows.UI.Xaml.Automation.Provider.IToggleProvider;
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                runtimeclass ToggleSplitButtonIsCheckedChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IToggleSplitButtonIsCheckedChangedEventArgs;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IToggleSwitchStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass ToggleSwitch : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IToggleSwitch;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] [overridable] interface Windows.UI.Xaml.Controls.IToggleSwitchOverrides;
                }

                [composable(Windows.UI.Xaml.Controls.IToolTipFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IToolTipStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IToolTipStatics2, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass ToolTip : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IToolTip;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IToolTip2;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IToolTipServiceStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass ToolTipService
                {
                    [default] interface Windows.UI.Xaml.Controls.IToolTipService;
                }

                [composable(Windows.UI.Xaml.Controls.ITreeViewFactory, public, Windows.Foundation.UniversalApiContract, 6.0)]
                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ITreeViewStatics, Windows.Foundation.UniversalApiContract, 6.0)]
                [static(Windows.UI.Xaml.Controls.ITreeViewStatics2, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass TreeView : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.ITreeView;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.ITreeView2;
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                runtimeclass TreeViewCollapsedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITreeViewCollapsedEventArgs;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.ITreeViewCollapsedEventArgs2;
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                runtimeclass TreeViewDragItemsCompletedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                runtimeclass TreeViewDragItemsStartingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                runtimeclass TreeViewExpandingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITreeViewExpandingEventArgs;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.ITreeViewExpandingEventArgs2;
                }

                [composable(Windows.UI.Xaml.Controls.ITreeViewItemFactory, public, Windows.Foundation.UniversalApiContract, 6.0)]
                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ITreeViewItemStatics, Windows.Foundation.UniversalApiContract, 6.0)]
                [static(Windows.UI.Xaml.Controls.ITreeViewItemStatics2, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass TreeViewItem : Windows.UI.Xaml.Controls.ListViewItem
                {
                    [default] interface Windows.UI.Xaml.Controls.ITreeViewItem;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.ITreeViewItem2;
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                runtimeclass TreeViewItemInvokedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITreeViewItemInvokedEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.ITreeViewItemTemplateSettingsFactory, public, Windows.Foundation.UniversalApiContract, 6.0)]
                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ITreeViewItemTemplateSettingsStatics, Windows.Foundation.UniversalApiContract, 6.0)]
                [threading(both)]
                runtimeclass TreeViewItemTemplateSettings : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.ITreeViewItemTemplateSettings;
                }

                [composable(Windows.UI.Xaml.Controls.ITreeViewListFactory, public, Windows.Foundation.UniversalApiContract, 6.0)]
                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass TreeViewList : Windows.UI.Xaml.Controls.ListView
                {
                    [default] interface Windows.UI.Xaml.Controls.ITreeViewList;
                }

                [composable(Windows.UI.Xaml.Controls.ITreeViewNodeFactory, public, Windows.Foundation.UniversalApiContract, 6.0)]
                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ITreeViewNodeStatics, Windows.Foundation.UniversalApiContract, 6.0)]
                [threading(both)]
                runtimeclass TreeViewNode : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.ITreeViewNode;
                }

                [composable(Windows.UI.Xaml.Controls.ITwoPaneViewFactory, public, Windows.Foundation.UniversalApiContract, 8.0)]
                [contract(Windows.Foundation.UniversalApiContract, 8.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ITwoPaneViewStatics, Windows.Foundation.UniversalApiContract, 8.0)]
                [threading(both)]
                runtimeclass TwoPaneView : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.ITwoPaneView;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass UIElementCollection
                {
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IUIElementCollection;
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.UIElement*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.UIElement*>;
                }

                [composable(Windows.UI.Xaml.Controls.IUserControlFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IUserControlStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass UserControl : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IUserControl;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IVariableSizedWrapGridStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass VariableSizedWrapGrid : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.IVariableSizedWrapGrid;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IViewboxStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass Viewbox : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IViewbox;
                }

                [composable(Windows.UI.Xaml.Controls.IVirtualizingPanelFactory, public, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass VirtualizingPanel : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.IVirtualizingPanel;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] [protected] interface Windows.UI.Xaml.Controls.IVirtualizingPanelProtected;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] [overridable] interface Windows.UI.Xaml.Controls.IVirtualizingPanelOverrides;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IVirtualizingStackPanelStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass VirtualizingStackPanel : Windows.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel
                {
                    [default] interface Windows.UI.Xaml.Controls.IVirtualizingStackPanel;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] [overridable] interface Windows.UI.Xaml.Controls.IVirtualizingStackPanelOverrides;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [activatable(Windows.UI.Xaml.Controls.IWebViewFactory4, Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IWebViewStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IWebViewStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IWebViewStatics3, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IWebViewStatics4, Windows.Foundation.UniversalApiContract, 1.0)]
                [static(Windows.UI.Xaml.Controls.IWebViewStatics5, Windows.Foundation.UniversalApiContract, 3.0)]
                [threading(both)]
                runtimeclass WebView : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebView;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IWebView2;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IWebView3;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IWebView4;
                    [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.UI.Xaml.Controls.IWebView5;
                    [contract(Windows.Foundation.UniversalApiContract, 6.0)] interface Windows.UI.Xaml.Controls.IWebView6;
                    [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.UI.Xaml.Controls.IWebView7;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IWebViewBrushStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass WebViewBrush : Windows.UI.Xaml.Media.TileBrush
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewBrush;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass WebViewContentLoadingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewContentLoadingEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass WebViewDOMContentLoadedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewDOMContentLoadedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass WebViewDeferredPermissionRequest
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewDeferredPermissionRequest;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass WebViewLongRunningScriptDetectedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewLongRunningScriptDetectedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass WebViewNavigationCompletedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewNavigationCompletedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass WebViewNavigationFailedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewNavigationFailedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass WebViewNavigationStartingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewNavigationStartingEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass WebViewNewWindowRequestedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewNewWindowRequestedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass WebViewPermissionRequest
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewPermissionRequest;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass WebViewPermissionRequestedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewPermissionRequestedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 6.0)]
                [marshaling_behavior(agile)]
                runtimeclass WebViewSeparateProcessLostEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewSeparateProcessLostEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass WebViewSettings
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewSettings;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass WebViewUnsupportedUriSchemeIdentifiedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewUnsupportedUriSchemeIdentifiedEventArgs;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass WebViewUnviewableContentIdentifiedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewUnviewableContentIdentifiedEventArgs;
                    [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.UI.Xaml.Controls.IWebViewUnviewableContentIdentifiedEventArgs2;
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                runtimeclass WebViewWebResourceRequestedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewWebResourceRequestedEventArgs;
                }

                [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IWrapGridStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass WrapGrid : Windows.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel
                {
                    [default] interface Windows.UI.Xaml.Controls.IWrapGrid;
                }
            }
        }
    }
}
