//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Windows.ApplicationModel.Activation.idl";
import "Windows.ApplicationModel.Calls.idl";
import "Windows.ApplicationModel.Calls.Background.idl";
import "Windows.ApplicationModel.CommunicationBlocking.idl";
import "Windows.Devices.Bluetooth.idl";
import "Windows.Devices.Bluetooth.Advertisement.idl";
import "Windows.Devices.Bluetooth.Background.idl";
import "Windows.Devices.Bluetooth.GenericAttributeProfile.idl";
import "Windows.Devices.Geolocation.idl";
import "Windows.Devices.Sensors.idl";
import "Windows.Devices.SmartCards.idl";
import "Windows.Devices.Sms.idl";
import "Windows.Media.Capture.idl";
import "Windows.Networking.idl";
import "Windows.Networking.Sockets.idl";
import "Windows.Storage.idl";
import "Windows.Storage.Provider.idl";
import "Windows.System.idl";
import "Windows.UI.Notifications.idl";

// Forward Declare
namespace Windows
{
    namespace ApplicationModel
    {
        namespace Activation
        {
            runtimeclass BackgroundActivatedEventArgs;
        }
    }
}
namespace Windows
{
    namespace ApplicationModel
    {
        namespace Calls
        {
            namespace Background
            {
                apicontract CallsBackgroundContract;

                typedef enum PhoneTriggerType PhoneTriggerType;
            }
        }
    }
}
namespace Windows
{
    namespace ApplicationModel
    {
        namespace Calls
        {
            apicontract CallsPhoneContract;
        }
    }
}
namespace Windows
{
    namespace ApplicationModel
    {
        namespace CommunicationBlocking
        {
            apicontract CommunicationBlockingContract;
        }
    }
}
namespace Windows
{
    namespace Devices
    {
        namespace Bluetooth
        {
            namespace Advertisement
            {
                runtimeclass BluetoothLEAdvertisement;

                runtimeclass BluetoothLEAdvertisementFilter;
            }
        }
    }
}
namespace Windows
{
    namespace Devices
    {
        namespace Bluetooth
        {
            namespace Background
            {
                typedef enum BluetoothEventTriggeringMode BluetoothEventTriggeringMode;

                runtimeclass RfcommInboundConnectionInformation;

                runtimeclass RfcommOutboundConnectionInformation;
            }
        }
    }
}
namespace Windows
{
    namespace Devices
    {
        namespace Bluetooth
        {
            typedef enum BluetoothError BluetoothError;

            runtimeclass BluetoothSignalStrengthFilter;
        }
    }
}
namespace Windows
{
    namespace Devices
    {
        namespace Bluetooth
        {
            namespace GenericAttributeProfile
            {
                runtimeclass GattCharacteristic;

                runtimeclass GattLocalService;

                runtimeclass GattServiceProviderAdvertisingParameters;
            }
        }
    }
}
namespace Windows
{
    namespace Devices
    {
        namespace Geolocation
        {
            typedef enum VisitMonitoringScope VisitMonitoringScope;
        }
    }
}
namespace Windows
{
    namespace Devices
    {
        namespace Sensors
        {
            typedef enum ActivityType ActivityType;

            interface ISensorDataThreshold;
        }
    }
}
namespace Windows
{
    namespace Devices
    {
        namespace SmartCards
        {
            apicontract SmartCardBackgroundTriggerContract;

            typedef enum SmartCardTriggerType SmartCardTriggerType;
        }
    }
}
namespace Windows
{
    namespace Devices
    {
        namespace Sms
        {
            runtimeclass SmsFilterRules;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        namespace Collections
        {
            runtimeclass ValueSet;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct TimeSpan TimeSpan;

        apicontract UniversalApiContract;
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Capture
        {
            apicontract AppBroadcastContract;
        }
    }
}
namespace Windows
{
    namespace Networking
    {
        runtimeclass HostName;
    }
}
namespace Windows
{
    namespace Networking
    {
        namespace Sockets
        {
            typedef enum SocketProtectionLevel SocketProtectionLevel;
        }
    }
}
namespace Windows
{
    namespace Storage
    {
        namespace Provider
        {
            typedef enum CachedFileTarget CachedFileTarget;

            runtimeclass FileUpdateRequest;
        }
    }
}
namespace Windows
{
    namespace Storage
    {
        runtimeclass StorageLibrary;

        runtimeclass StorageLibraryChangeTracker;
    }
}
namespace Windows
{
    namespace System
    {
        runtimeclass User;
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Notifications
        {
            typedef enum NotificationKinds NotificationKinds;
        }
    }
}
namespace Windows
{
    namespace ApplicationModel
    {
        namespace Background
        {
            apicontract BackgroundAlarmApplicationContract;

            typedef enum AlarmAccessStatus AlarmAccessStatus;

            typedef enum ApplicationTriggerResult ApplicationTriggerResult;

            typedef enum BackgroundAccessRequestKind BackgroundAccessRequestKind;

            typedef enum BackgroundAccessStatus BackgroundAccessStatus;

            typedef enum BackgroundTaskCancellationReason BackgroundTaskCancellationReason;

            typedef enum BackgroundTaskThrottleCounter BackgroundTaskThrottleCounter;

            typedef enum BackgroundWorkCostValue BackgroundWorkCostValue;

            typedef enum CustomSystemEventTriggerRecurrence CustomSystemEventTriggerRecurrence;

            typedef enum DeviceTriggerResult DeviceTriggerResult;

            typedef enum LocationTriggerType LocationTriggerType;

            typedef enum MediaProcessingTriggerResult MediaProcessingTriggerResult;

            typedef enum SystemConditionType SystemConditionType;

            typedef enum SystemTriggerType SystemTriggerType;

            delegate BackgroundTaskCanceledEventHandler;

            delegate BackgroundTaskCompletedEventHandler;

            delegate BackgroundTaskProgressEventHandler;

            interface IActivitySensorTrigger;

            interface IActivitySensorTriggerFactory;

            interface IAlarmApplicationManagerStatics;

            interface IAppBroadcastTrigger;

            interface IAppBroadcastTriggerFactory;

            interface IAppBroadcastTriggerProviderInfo;

            interface IApplicationTrigger;

            interface IApplicationTriggerDetails;

            interface IAppointmentStoreNotificationTrigger;

            interface IBackgroundCondition;

            interface IBackgroundExecutionManagerStatics;

            interface IBackgroundExecutionManagerStatics2;

            interface IBackgroundTask;

            interface IBackgroundTaskBuilder;

            interface IBackgroundTaskBuilder2;

            interface IBackgroundTaskBuilder3;

            interface IBackgroundTaskBuilder4;

            interface IBackgroundTaskBuilder5;

            interface IBackgroundTaskCompletedEventArgs;

            interface IBackgroundTaskDeferral;

            interface IBackgroundTaskInstance;

            interface IBackgroundTaskInstance2;

            interface IBackgroundTaskInstance4;

            interface IBackgroundTaskProgressEventArgs;

            interface IBackgroundTaskRegistration;

            interface IBackgroundTaskRegistration2;

            interface IBackgroundTaskRegistration3;

            interface IBackgroundTaskRegistrationGroup;

            interface IBackgroundTaskRegistrationGroupFactory;

            interface IBackgroundTaskRegistrationStatics;

            interface IBackgroundTaskRegistrationStatics2;

            interface IBackgroundTrigger;

            interface IBackgroundWorkCostStatics;

            interface IBluetoothLEAdvertisementPublisherTrigger;

            interface IBluetoothLEAdvertisementPublisherTrigger2;

            interface IBluetoothLEAdvertisementWatcherTrigger;

            interface IBluetoothLEAdvertisementWatcherTrigger2;

            interface ICachedFileUpdaterTrigger;

            interface ICachedFileUpdaterTriggerDetails;

            interface IChatMessageNotificationTrigger;

            interface IChatMessageReceivedNotificationTrigger;

            interface ICommunicationBlockingAppSetAsActiveTrigger;

            interface IContactStoreNotificationTrigger;

            interface IContentPrefetchTrigger;

            interface IContentPrefetchTriggerFactory;

            interface ICustomSystemEventTrigger;

            interface ICustomSystemEventTriggerFactory;

            interface IDeviceConnectionChangeTrigger;

            interface IDeviceConnectionChangeTriggerStatics;

            interface IDeviceManufacturerNotificationTrigger;

            interface IDeviceManufacturerNotificationTriggerFactory;

            interface IDeviceServicingTrigger;

            interface IDeviceUseTrigger;

            interface IDeviceWatcherTrigger;

            interface IEmailStoreNotificationTrigger;

            interface IGattCharacteristicNotificationTrigger;

            interface IGattCharacteristicNotificationTrigger2;

            interface IGattCharacteristicNotificationTriggerFactory;

            interface IGattCharacteristicNotificationTriggerFactory2;

            interface IGattServiceProviderTrigger;

            interface IGattServiceProviderTriggerResult;

            interface IGattServiceProviderTriggerStatics;

            interface IGeovisitTrigger;

            interface ILocationTrigger;

            interface ILocationTriggerFactory;

            interface IMaintenanceTrigger;

            interface IMaintenanceTriggerFactory;

            interface IMediaProcessingTrigger;

            interface INetworkOperatorHotspotAuthenticationTrigger;

            interface INetworkOperatorNotificationTrigger;

            interface INetworkOperatorNotificationTriggerFactory;

            interface IPhoneTrigger;

            interface IPhoneTriggerFactory;

            interface IPushNotificationTriggerFactory;

            interface IRcsEndUserMessageAvailableTrigger;

            interface IRfcommConnectionTrigger;

            interface ISecondaryAuthenticationFactorAuthenticationTrigger;

            interface ISensorDataThresholdTrigger;

            interface ISensorDataThresholdTriggerFactory;

            interface ISmartCardTrigger;

            interface ISmartCardTriggerFactory;

            interface ISmsMessageReceivedTriggerFactory;

            interface ISocketActivityTrigger;

            interface IStorageLibraryChangeTrackerTriggerFactory;

            interface IStorageLibraryContentChangedTrigger;

            interface IStorageLibraryContentChangedTriggerStatics;

            interface ISystemCondition;

            interface ISystemConditionFactory;

            interface ISystemTrigger;

            interface ISystemTriggerFactory;

            interface ITimeTrigger;

            interface ITimeTriggerFactory;

            interface IToastNotificationActionTriggerFactory;

            interface IToastNotificationHistoryChangedTriggerFactory;

            interface IUserNotificationChangedTriggerFactory;

            runtimeclass ActivitySensorTrigger;

            runtimeclass AlarmApplicationManager;

            runtimeclass AppBroadcastTrigger;

            runtimeclass AppBroadcastTriggerProviderInfo;

            runtimeclass ApplicationTrigger;

            runtimeclass ApplicationTriggerDetails;

            runtimeclass AppointmentStoreNotificationTrigger;

            runtimeclass BackgroundExecutionManager;

            runtimeclass BackgroundTaskBuilder;

            runtimeclass BackgroundTaskCompletedEventArgs;

            runtimeclass BackgroundTaskDeferral;

            runtimeclass BackgroundTaskProgressEventArgs;

            runtimeclass BackgroundTaskRegistration;

            runtimeclass BackgroundTaskRegistrationGroup;

            runtimeclass BackgroundWorkCost;

            runtimeclass BluetoothLEAdvertisementPublisherTrigger;

            runtimeclass BluetoothLEAdvertisementWatcherTrigger;

            runtimeclass CachedFileUpdaterTrigger;

            runtimeclass CachedFileUpdaterTriggerDetails;

            runtimeclass ChatMessageNotificationTrigger;

            runtimeclass ChatMessageReceivedNotificationTrigger;

            runtimeclass CommunicationBlockingAppSetAsActiveTrigger;

            runtimeclass ContactStoreNotificationTrigger;

            runtimeclass ContentPrefetchTrigger;

            runtimeclass ConversationalAgentTrigger;

            runtimeclass CustomSystemEventTrigger;

            runtimeclass DeviceConnectionChangeTrigger;

            runtimeclass DeviceManufacturerNotificationTrigger;

            runtimeclass DeviceServicingTrigger;

            runtimeclass DeviceUseTrigger;

            runtimeclass DeviceWatcherTrigger;

            runtimeclass EmailStoreNotificationTrigger;

            runtimeclass GattCharacteristicNotificationTrigger;

            runtimeclass GattServiceProviderTrigger;

            runtimeclass GattServiceProviderTriggerResult;

            runtimeclass GeovisitTrigger;

            runtimeclass LocationTrigger;

            runtimeclass MaintenanceTrigger;

            runtimeclass MediaProcessingTrigger;

            runtimeclass MobileBroadbandDeviceServiceNotificationTrigger;

            runtimeclass MobileBroadbandPcoDataChangeTrigger;

            runtimeclass MobileBroadbandPinLockStateChangeTrigger;

            runtimeclass MobileBroadbandRadioStateChangeTrigger;

            runtimeclass MobileBroadbandRegistrationStateChangeTrigger;

            runtimeclass NetworkOperatorDataUsageTrigger;

            runtimeclass NetworkOperatorHotspotAuthenticationTrigger;

            runtimeclass NetworkOperatorNotificationTrigger;

            runtimeclass PaymentAppCanMakePaymentTrigger;

            runtimeclass PhoneTrigger;

            runtimeclass PushNotificationTrigger;

            runtimeclass RcsEndUserMessageAvailableTrigger;

            runtimeclass RfcommConnectionTrigger;

            runtimeclass SecondaryAuthenticationFactorAuthenticationTrigger;

            runtimeclass SensorDataThresholdTrigger;

            runtimeclass SmartCardTrigger;

            runtimeclass SmsMessageReceivedTrigger;

            runtimeclass SocketActivityTrigger;

            runtimeclass StorageLibraryChangeTrackerTrigger;

            runtimeclass StorageLibraryContentChangedTrigger;

            runtimeclass SystemCondition;

            runtimeclass SystemTrigger;

            runtimeclass TetheringEntitlementCheckTrigger;

            runtimeclass TimeTrigger;

            runtimeclass ToastNotificationActionTrigger;

            runtimeclass ToastNotificationHistoryChangedTrigger;

            runtimeclass UserNotificationChangedTrigger;
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace ApplicationModel
    {
        namespace Background
        {
            declare
            {
                interface Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<GUID, Windows.ApplicationModel.Background.BackgroundTaskRegistration*>*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<GUID, Windows.ApplicationModel.Background.IBackgroundTaskRegistration*>*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<HSTRING, Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup*>*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Foundation.Collections.IKeyValuePair<GUID, Windows.ApplicationModel.Background.BackgroundTaskRegistration*>*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Foundation.Collections.IKeyValuePair<GUID, Windows.ApplicationModel.Background.IBackgroundTaskRegistration*>*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Foundation.Collections.IKeyValuePair<HSTRING, Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup*>*>;

                interface Windows.Foundation.Collections.IKeyValuePair<GUID, Windows.ApplicationModel.Background.BackgroundTaskRegistration*>;

                interface Windows.Foundation.Collections.IKeyValuePair<GUID, Windows.ApplicationModel.Background.IBackgroundTaskRegistration*>;

                interface Windows.Foundation.Collections.IKeyValuePair<HSTRING, Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup*>;

                interface Windows.Foundation.Collections.IMapView<GUID, Windows.ApplicationModel.Background.BackgroundTaskRegistration*>;

                interface Windows.Foundation.Collections.IMapView<GUID, Windows.ApplicationModel.Background.IBackgroundTaskRegistration*>;

                interface Windows.Foundation.Collections.IMapView<HSTRING, Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup*>;

                interface Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.AlarmAccessStatus>;

                interface Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.ApplicationTriggerResult>;

                interface Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.BackgroundAccessStatus>;

                interface Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.DeviceConnectionChangeTrigger*>;

                interface Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.DeviceTriggerResult>;

                interface Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.GattServiceProviderTriggerResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.MediaProcessingTriggerResult>;
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace ApplicationModel
    {
        namespace Background
        {
            [contractversion(1.0)]
            apicontract BackgroundAlarmApplicationContract
            {
            }

            [contract(Windows.ApplicationModel.Background.BackgroundAlarmApplicationContract, 1.0)]
            enum AlarmAccessStatus
            {
                Unspecified                    = 0,
                AllowedWithWakeupCapability    = 1,
                AllowedWithoutWakeupCapability = 2,
                Denied                         = 3
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum ApplicationTriggerResult
            {
                Allowed          = 0,
                CurrentlyRunning = 1,
                DisabledByPolicy = 2,
                UnknownError     = 3
            };

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            enum BackgroundAccessRequestKind
            {
                AlwaysAllowed                = 0,
                AllowedSubjectToSystemPolicy = 1
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum BackgroundAccessStatus
            {
                Unspecified                             = 0,
                [deprecated("Use AlwaysAllowed or AllowedSubjectToSystemPolicy instead of AllowedWithAlwaysOnRealTimeConnectivity. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 3.0)]
                AllowedWithAlwaysOnRealTimeConnectivity = 1,
                [deprecated("Use AlwaysAllowed or AllowedSubjectToSystemPolicy instead of AllowedMayUseActiveRealTimeConnectivity. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 3.0)]
                AllowedMayUseActiveRealTimeConnectivity = 2,
                [deprecated("Use DeniedByUser or DeniedBySystemPolicy instead of Denied. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 3.0)]
                Denied                                  = 3,
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                AlwaysAllowed                           = 4,
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                AllowedSubjectToSystemPolicy            = 5,
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                DeniedBySystemPolicy                    = 6,
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                DeniedByUser                            = 7
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum BackgroundTaskCancellationReason
            {
                Abort                 = 0,
                Terminating           = 1,
                LoggingOff            = 2,
                ServicingUpdate       = 3,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                IdleTask              = 4,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                Uninstall             = 5,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                ConditionLoss         = 6,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                SystemPolicy          = 7,
                [deprecated("QuietHoursEntered is deprecated after Windows 8.1", deprecate, Windows.Foundation.UniversalApiContract, 1.0)]
                QuietHoursEntered     = 8,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                ExecutionTimeExceeded = 9,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                ResourceRevocation    = 10,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                EnergySaver           = 11
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum BackgroundTaskThrottleCounter
            {
                All     = 0,
                Cpu     = 1,
                Network = 2
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum BackgroundWorkCostValue
            {
                Low    = 0,
                Medium = 1,
                High   = 2
            };

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            enum CustomSystemEventTriggerRecurrence
            {
                Once   = 0,
                Always = 1
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum DeviceTriggerResult
            {
                Allowed        = 0,
                DeniedByUser   = 1,
                DeniedBySystem = 2,
                LowBattery     = 3
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum LocationTriggerType
            {
                Geofence = 0
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum MediaProcessingTriggerResult
            {
                Allowed          = 0,
                CurrentlyRunning = 1,
                DisabledByPolicy = 2,
                UnknownError     = 3
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum SystemConditionType
            {
                Invalid                   = 0,
                UserPresent               = 1,
                UserNotPresent            = 2,
                InternetAvailable         = 3,
                InternetNotAvailable      = 4,
                SessionConnected          = 5,
                SessionDisconnected       = 6,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                FreeNetworkAvailable      = 7,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                BackgroundWorkCostNotHigh = 8
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            enum SystemTriggerType
            {
                Invalid                      = 0,
                SmsReceived                  = 1,
                UserPresent                  = 2,
                UserAway                     = 3,
                NetworkStateChange           = 4,
                ControlChannelReset          = 5,
                InternetAvailable            = 6,
                SessionConnected             = 7,
                ServicingComplete            = 8,
                LockScreenApplicationAdded   = 9,
                LockScreenApplicationRemoved = 10,
                TimeZoneChange               = 11,
                OnlineIdConnectedStateChange = 12,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                BackgroundWorkCostChange     = 13,
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                PowerStateChange             = 14,
                [contract(Windows.Foundation.UniversalApiContract, 3.0)]
                DefaultSignInAccountChange   = 15
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [uuid(A6C4BAC0-51F8-4C57-AC3F-156DD1680C4F)]
            delegate
                HRESULT BackgroundTaskCanceledEventHandler([in] Windows.ApplicationModel.Background.IBackgroundTaskInstance* sender, [in] Windows.ApplicationModel.Background.BackgroundTaskCancellationReason reason);

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [uuid(5B38E929-A086-46A7-A678-439135822BCF)]
            delegate
                HRESULT BackgroundTaskCompletedEventHandler([in] Windows.ApplicationModel.Background.BackgroundTaskRegistration* sender, [in] Windows.ApplicationModel.Background.BackgroundTaskCompletedEventArgs* args);

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [uuid(46E0683C-8A88-4C99-804C-76897F6277A6)]
            delegate
                HRESULT BackgroundTaskProgressEventHandler([in] Windows.ApplicationModel.Background.BackgroundTaskRegistration* sender, [in] Windows.ApplicationModel.Background.BackgroundTaskProgressEventArgs* args);

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.ActivitySensorTrigger)]
            [uuid(D0DD4342-E37B-4823-A5FE-6B31DFEFDEB0)]
            interface IActivitySensorTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [propget] HRESULT SubscribedActivities([out] [retval] Windows.Foundation.Collections.IVector<Windows.Devices.Sensors.ActivityType>** value);
                [propget] HRESULT ReportInterval([out] [retval] UINT32* value);
                [propget] HRESULT SupportedActivities([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Devices.Sensors.ActivityType>** value);
                [propget] HRESULT MinimumReportInterval([out] [retval] UINT32* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.ActivitySensorTrigger)]
            [uuid(A72691C3-3837-44F7-831B-0132CC872BC3)]
            interface IActivitySensorTriggerFactory : IInspectable
            {
                HRESULT Create([in] UINT32 reportIntervalInMilliseconds, [out] [retval] Windows.ApplicationModel.Background.ActivitySensorTrigger** activityTrigger);
            }

            [contract(Windows.ApplicationModel.Background.BackgroundAlarmApplicationContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.AlarmApplicationManager)]
            [uuid(CA03FA3B-CCE6-4DE2-B09B-9628BD33BBBE)]
            interface IAlarmApplicationManagerStatics : IInspectable
            {
                [overload("RequestAccessAsync")] HRESULT RequestAccessAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.AlarmAccessStatus>** operation);
                [overload("GetAccessStatus")] HRESULT GetAccessStatus([out] [retval] Windows.ApplicationModel.Background.AlarmAccessStatus* status);
            }

            [contract(Windows.Media.Capture.AppBroadcastContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.AppBroadcastTrigger)]
            [uuid(74D4F496-8D37-44EC-9481-2A0B9854EB48)]
            interface IAppBroadcastTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [propput] HRESULT ProviderInfo([in] Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo* value);
                [propget] HRESULT ProviderInfo([out] [retval] Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo** value);
            }

            [contract(Windows.Media.Capture.AppBroadcastContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.AppBroadcastTrigger)]
            [uuid(280B9F44-22F4-4618-A02E-E7E411EB7238)]
            interface IAppBroadcastTriggerFactory : IInspectable
            {
                HRESULT CreateAppBroadcastTrigger([in] HSTRING providerKey, [out] [retval] Windows.ApplicationModel.Background.AppBroadcastTrigger** broadcastTrigger);
            }

            [contract(Windows.Media.Capture.AppBroadcastContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo)]
            [uuid(F219352D-9DE8-4420-9CE2-5EFF8F17376B)]
            interface IAppBroadcastTriggerProviderInfo : IInspectable
            {
                [propput] HRESULT DisplayNameResource([in] HSTRING value);
                [propget] HRESULT DisplayNameResource([out] [retval] HSTRING* value);
                [propput] HRESULT LogoResource([in] HSTRING value);
                [propget] HRESULT LogoResource([out] [retval] HSTRING* value);
                [propput] HRESULT VideoKeyFrameInterval([in] Windows.Foundation.TimeSpan value);
                [propget] HRESULT VideoKeyFrameInterval([out] [retval] Windows.Foundation.TimeSpan* value);
                [propput] HRESULT MaxVideoBitrate([in] UINT32 value);
                [propget] HRESULT MaxVideoBitrate([out] [retval] UINT32* value);
                [propput] HRESULT MaxVideoWidth([in] UINT32 value);
                [propget] HRESULT MaxVideoWidth([out] [retval] UINT32* value);
                [propput] HRESULT MaxVideoHeight([in] UINT32 value);
                [propget] HRESULT MaxVideoHeight([out] [retval] UINT32* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.ApplicationTrigger)]
            [uuid(0B468630-9574-492C-9E93-1A3AE6335FE9)]
            interface IApplicationTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [overload("RequestAsync")] HRESULT RequestAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.ApplicationTriggerResult>** result);
                [overload("RequestAsync")] HRESULT RequestAsyncWithArguments([in] Windows.Foundation.Collections.ValueSet* arguments, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.ApplicationTriggerResult>** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.ApplicationTriggerDetails)]
            [uuid(97DC6AB2-2219-4A9E-9C5E-41D047F76E82)]
            interface IApplicationTriggerDetails : IInspectable
            {
                [propget] HRESULT Arguments([out] [retval] Windows.Foundation.Collections.ValueSet** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.AppointmentStoreNotificationTrigger)]
            [uuid(64D4040C-C201-42AD-AA2A-E21BA3425B6D)]
            interface IAppointmentStoreNotificationTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [uuid(AE48A1EE-8951-400A-8302-9C9C9A2A3A3B)]
            interface IBackgroundCondition : IInspectable
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BackgroundExecutionManager)]
            [uuid(E826EA58-66A9-4D41-83D4-B4C18C87B846)]
            interface IBackgroundExecutionManagerStatics : IInspectable
            {
                [overload("RequestAccessAsync")] HRESULT RequestAccessAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.BackgroundAccessStatus>** operation);
                [overload("RequestAccessAsync")] HRESULT RequestAccessForApplicationAsync([in] HSTRING applicationId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.BackgroundAccessStatus>** operation);
                [overload("RemoveAccess")] HRESULT RemoveAccess();
                [overload("RemoveAccess")] HRESULT RemoveAccessForApplication([in] HSTRING applicationId);
                [overload("GetAccessStatus")] HRESULT GetAccessStatus([out] [retval] Windows.ApplicationModel.Background.BackgroundAccessStatus* status);
                [overload("GetAccessStatus")] HRESULT GetAccessStatusForApplication([in] HSTRING applicationId, [out] [retval] Windows.ApplicationModel.Background.BackgroundAccessStatus* status);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BackgroundExecutionManager)]
            [uuid(469B24EF-9BBB-4E18-999A-FD6512931BE9)]
            interface IBackgroundExecutionManagerStatics2 : IInspectable
            {
                [overload("RequestAccessKindAsync")] HRESULT RequestAccessKindAsync([in] Windows.ApplicationModel.Background.BackgroundAccessRequestKind requestedAccess, [in] HSTRING reason, [out] [retval] Windows.Foundation.IAsyncOperation<boolean>** operation);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [uuid(7D13D534-FD12-43CE-8C22-EA1FF13C06DF)]
            interface IBackgroundTask : IInspectable
            {
                HRESULT Run([in] Windows.ApplicationModel.Background.IBackgroundTaskInstance* taskInstance);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BackgroundTaskBuilder)]
            [uuid(0351550E-3E64-4572-A93A-84075A37C917)]
            interface IBackgroundTaskBuilder : IInspectable
            {
                [propput] HRESULT TaskEntryPoint([in] HSTRING value);
                [propget] HRESULT TaskEntryPoint([out] [retval] HSTRING* value);
                HRESULT SetTrigger([in] Windows.ApplicationModel.Background.IBackgroundTrigger* trigger);
                HRESULT AddCondition([in] Windows.ApplicationModel.Background.IBackgroundCondition* condition);
                [propput] HRESULT Name([in] HSTRING value);
                [propget] HRESULT Name([out] [retval] HSTRING* value);
                HRESULT Register([out] [retval] Windows.ApplicationModel.Background.BackgroundTaskRegistration** task);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BackgroundTaskBuilder)]
            [uuid(6AE7CFB1-104F-406D-8DB6-844A570F42BB)]
            interface IBackgroundTaskBuilder2 : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTaskBuilder
            {
                [propput] HRESULT CancelOnConditionLoss([in] boolean value);
                [propget] HRESULT CancelOnConditionLoss([out] [retval] boolean* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BackgroundTaskBuilder)]
            [uuid(28C74F4A-8BA9-4C09-A24F-19683E2C924C)]
            interface IBackgroundTaskBuilder3 : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTaskBuilder
            {
                [propput] HRESULT IsNetworkRequested([in] boolean value);
                [propget] HRESULT IsNetworkRequested([out] [retval] boolean* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BackgroundTaskBuilder)]
            [uuid(4755E522-CBA2-4E35-BD16-A6DA7F1C19AA)]
            interface IBackgroundTaskBuilder4 : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTaskBuilder
            {
                [propget] HRESULT TaskGroup([out] [retval] Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup** value);
                [propput] HRESULT TaskGroup([in] Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 10.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BackgroundTaskBuilder)]
            [uuid(077103F6-99F5-4AF4-BCAD-4731D0330D43)]
            interface IBackgroundTaskBuilder5 : IInspectable
            {
                HRESULT SetTaskEntryPointClsid([in] GUID TaskEntryPoint);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BackgroundTaskCompletedEventArgs)]
            [uuid(565D25CF-F209-48F4-9967-2B184F7BFBF0)]
            interface IBackgroundTaskCompletedEventArgs : IInspectable
            {
                [propget] HRESULT InstanceId([out] [retval] GUID* value);
                HRESULT CheckResult();
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BackgroundTaskDeferral)]
            [uuid(93CC156D-AF27-4DD3-846E-24EE40CADD25)]
            interface IBackgroundTaskDeferral : IInspectable
            {
                HRESULT Complete();
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [uuid(865BDA7A-21D8-4573-8F32-928A1B0641F6)]
            interface IBackgroundTaskInstance : IInspectable
            {
                [propget] HRESULT InstanceId([out] [retval] GUID* value);
                [propget] HRESULT Task([out] [retval] Windows.ApplicationModel.Background.BackgroundTaskRegistration** task);
                [propget] HRESULT Progress([out] [retval] UINT32* value);
                [propput] HRESULT Progress([in] UINT32 value);
                [propget] HRESULT TriggerDetails([out] [retval] IInspectable** triggerDetails);
                [eventadd] HRESULT Canceled([in] Windows.ApplicationModel.Background.BackgroundTaskCanceledEventHandler* cancelHandler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT Canceled([in] EventRegistrationToken cookie);
                [propget] HRESULT SuspendedCount([out] [retval] UINT32* value);
                HRESULT GetDeferral([out] [retval] Windows.ApplicationModel.Background.BackgroundTaskDeferral** deferral);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [uuid(4F7D0176-0C76-4FB4-896D-5DE1864122F6)]
            interface IBackgroundTaskInstance2 : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTaskInstance
            {
                HRESULT GetThrottleCount([in] Windows.ApplicationModel.Background.BackgroundTaskThrottleCounter counter, [out] [retval] UINT32* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [uuid(7F29F23C-AA04-4B08-97B0-06D874CDABF5)]
            interface IBackgroundTaskInstance4 : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTaskInstance
            {
                [propget] HRESULT User([out] [retval] Windows.System.User** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BackgroundTaskProgressEventArgs)]
            [uuid(FB1468AC-8332-4D0A-9532-03EAE684DA31)]
            interface IBackgroundTaskProgressEventArgs : IInspectable
            {
                [propget] HRESULT InstanceId([out] [retval] GUID* value);
                [propget] HRESULT Progress([out] [retval] UINT32* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [uuid(10654CC2-A26E-43BF-8C12-1FB40DBFBFA0)]
            interface IBackgroundTaskRegistration : IInspectable
            {
                [propget] HRESULT TaskId([out] [retval] GUID* value);
                [propget] HRESULT Name([out] [retval] HSTRING* value);
                [eventadd] HRESULT Progress([in] Windows.ApplicationModel.Background.BackgroundTaskProgressEventHandler* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT Progress([in] EventRegistrationToken cookie);
                [eventadd] HRESULT Completed([in] Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT Completed([in] EventRegistrationToken cookie);
                HRESULT Unregister([in] boolean cancelTask);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [uuid(6138C703-BB86-4112-AFC3-7F939B166E3B)]
            interface IBackgroundTaskRegistration2 : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTaskRegistration
            {
                [propget] HRESULT Trigger([out] [retval] Windows.ApplicationModel.Background.IBackgroundTrigger** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [uuid(FE338195-9423-4D8B-830D-B1DD2C7BADD5)]
            interface IBackgroundTaskRegistration3 : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTaskRegistration
            {
                [propget] HRESULT TaskGroup([out] [retval] Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup)]
            [uuid(2AB1919A-871B-4167-8A76-055CD67B5B23)]
            interface IBackgroundTaskRegistrationGroup : IInspectable
            {
                [propget] HRESULT Id([out] [retval] HSTRING* value);
                [propget] HRESULT Name([out] [retval] HSTRING* value);
                [eventadd] HRESULT BackgroundActivated([in] Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup*, Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT BackgroundActivated([in] EventRegistrationToken token);
                [propget] HRESULT AllTasks([out] [retval] Windows.Foundation.Collections.IMapView<GUID, Windows.ApplicationModel.Background.BackgroundTaskRegistration*>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup)]
            [uuid(83D92B69-44CF-4631-9740-03C7D8741BC5)]
            interface IBackgroundTaskRegistrationGroupFactory : IInspectable
            {
                HRESULT Create([in] HSTRING id, [out] [retval] Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup** group);
                HRESULT CreateWithName([in] HSTRING id, [in] HSTRING name, [out] [retval] Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup** group);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BackgroundTaskRegistration)]
            [uuid(4C542F69-B000-42BA-A093-6A563C65E3F8)]
            interface IBackgroundTaskRegistrationStatics : IInspectable
            {
                [propget] HRESULT AllTasks([out] [retval] Windows.Foundation.Collections.IMapView<GUID, Windows.ApplicationModel.Background.IBackgroundTaskRegistration*>** tasks);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BackgroundTaskRegistration)]
            [uuid(174B671E-B20D-4FA9-AD9A-E93AD6C71E01)]
            interface IBackgroundTaskRegistrationStatics2 : IInspectable
            {
                [propget] HRESULT AllTaskGroups([out] [retval] Windows.Foundation.Collections.IMapView<HSTRING, Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup*>** value);
                HRESULT GetTaskGroup([in] HSTRING groupId, [out] [retval] Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [uuid(84B3A058-6027-4B87-9790-BDF3F757DBD7)]
            interface IBackgroundTrigger : IInspectable
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BackgroundWorkCost)]
            [uuid(C740A662-C310-4B82-B3E3-3BCFB9E4C77D)]
            interface IBackgroundWorkCostStatics : IInspectable
            {
                [propget] HRESULT CurrentBackgroundWorkCost([out] [retval] Windows.ApplicationModel.Background.BackgroundWorkCostValue* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BluetoothLEAdvertisementPublisherTrigger)]
            [uuid(AB3E2612-25D3-48AE-8724-D81877AE6129)]
            interface IBluetoothLEAdvertisementPublisherTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [propget] HRESULT Advertisement([out] [retval] Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisement** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 10.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BluetoothLEAdvertisementPublisherTrigger)]
            [uuid(AA28D064-38F4-597D-B597-4E55588C6503)]
            interface IBluetoothLEAdvertisementPublisherTrigger2 : IInspectable
            {
                [propget] HRESULT PreferredTransmitPowerLevelInDBm([out] [retval] Windows.Foundation.IReference<INT16>** value);
                [propput] HRESULT PreferredTransmitPowerLevelInDBm([in] Windows.Foundation.IReference<INT16>* value);
                [propget] HRESULT UseExtendedFormat([out] [retval] boolean* value);
                [propput] HRESULT UseExtendedFormat([in] boolean value);
                [propget] HRESULT IsAnonymous([out] [retval] boolean* value);
                [propput] HRESULT IsAnonymous([in] boolean value);
                [propget] HRESULT IncludeTransmitPowerLevel([out] [retval] boolean* value);
                [propput] HRESULT IncludeTransmitPowerLevel([in] boolean value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BluetoothLEAdvertisementWatcherTrigger)]
            [uuid(1AAB1819-BCE1-48EB-A827-59FB7CEE52A6)]
            interface IBluetoothLEAdvertisementWatcherTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [propget] HRESULT MinSamplingInterval([out] [retval] Windows.Foundation.TimeSpan* value);
                [propget] HRESULT MaxSamplingInterval([out] [retval] Windows.Foundation.TimeSpan* value);
                [propget] HRESULT MinOutOfRangeTimeout([out] [retval] Windows.Foundation.TimeSpan* value);
                [propget] HRESULT MaxOutOfRangeTimeout([out] [retval] Windows.Foundation.TimeSpan* value);
                [propget] HRESULT SignalStrengthFilter([out] [retval] Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter** value);
                [propput] HRESULT SignalStrengthFilter([in] Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter* value);
                [propget] HRESULT AdvertisementFilter([out] [retval] Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementFilter** value);
                [propput] HRESULT AdvertisementFilter([in] Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementFilter* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 10.0)]
            [exclusiveto(Windows.ApplicationModel.Background.BluetoothLEAdvertisementWatcherTrigger)]
            [uuid(39B56799-EB39-5AB6-9932-AA9E4549604D)]
            interface IBluetoothLEAdvertisementWatcherTrigger2 : IInspectable
            {
                [propget] HRESULT AllowExtendedAdvertisements([out] [retval] boolean* value);
                [propput] HRESULT AllowExtendedAdvertisements([in] boolean value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.CachedFileUpdaterTrigger)]
            [uuid(E21CAEEB-32F2-4D31-B553-B9E01BDE37E0)]
            interface ICachedFileUpdaterTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.CachedFileUpdaterTriggerDetails)]
            [uuid(71838C13-1314-47B4-9597-DC7E248C17CC)]
            interface ICachedFileUpdaterTriggerDetails : IInspectable
            {
                [propget] HRESULT UpdateTarget([out] [retval] Windows.Storage.Provider.CachedFileTarget* value);
                [propget] HRESULT UpdateRequest([out] [retval] Windows.Storage.Provider.FileUpdateRequest** value);
                [propget] HRESULT CanRequestUserInput([out] [retval] boolean* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.ChatMessageNotificationTrigger)]
            [uuid(513B43BF-1D40-5C5D-78F5-C923FEE3739E)]
            interface IChatMessageNotificationTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.ChatMessageReceivedNotificationTrigger)]
            [uuid(3EA3760E-BAF5-4077-88E9-060CF6F0C6D5)]
            interface IChatMessageReceivedNotificationTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
            }

            [contract(Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.CommunicationBlockingAppSetAsActiveTrigger)]
            [uuid(FB91F28A-16A5-486D-974C-7835A8477BE2)]
            interface ICommunicationBlockingAppSetAsActiveTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.ContactStoreNotificationTrigger)]
            [uuid(C833419B-4705-4571-9A16-06B997BF9C96)]
            interface IContactStoreNotificationTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.ContentPrefetchTrigger)]
            [uuid(710627EE-04FA-440B-80C0-173202199E5D)]
            interface IContentPrefetchTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [propget] HRESULT WaitInterval([out] [retval] Windows.Foundation.TimeSpan* waitInterval);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.ContentPrefetchTrigger)]
            [uuid(C2643EDA-8A03-409E-B8C4-88814C28CCB6)]
            interface IContentPrefetchTriggerFactory : IInspectable
            {
                HRESULT Create([in] Windows.Foundation.TimeSpan waitInterval, [out] [retval] Windows.ApplicationModel.Background.ContentPrefetchTrigger** trigger);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.ApplicationModel.Background.CustomSystemEventTrigger)]
            [uuid(F3596798-CF6B-4EF4-A0CA-29CF4A278C87)]
            interface ICustomSystemEventTrigger : IInspectable
            {
                [propget] HRESULT TriggerId([out] [retval] HSTRING* value);
                [propget] HRESULT Recurrence([out] [retval] Windows.ApplicationModel.Background.CustomSystemEventTriggerRecurrence* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.ApplicationModel.Background.CustomSystemEventTrigger)]
            [uuid(6BCB16C5-F2DC-41B2-9EFD-B96BDCD13CED)]
            interface ICustomSystemEventTriggerFactory : IInspectable
            {
                HRESULT Create([in] HSTRING triggerId, [in] Windows.ApplicationModel.Background.CustomSystemEventTriggerRecurrence recurrence, [out] [retval] Windows.ApplicationModel.Background.CustomSystemEventTrigger** trigger);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.DeviceConnectionChangeTrigger)]
            [uuid(90875E64-3CDD-4EFB-AB1C-5B3B6A60CE34)]
            interface IDeviceConnectionChangeTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [propget] HRESULT DeviceId([out] [retval] HSTRING* value);
                [propget] HRESULT CanMaintainConnection([out] [retval] boolean* value);
                [propget] HRESULT MaintainConnection([out] [retval] boolean* value);
                [propput] HRESULT MaintainConnection([in] boolean value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.DeviceConnectionChangeTrigger)]
            [uuid(C3EA246A-4EFD-4498-AA60-A4E4E3B17AB9)]
            interface IDeviceConnectionChangeTriggerStatics : IInspectable
            {
                HRESULT FromIdAsync([in] HSTRING deviceId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.DeviceConnectionChangeTrigger*>** deviceChangeTrigger);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [deprecated("DeviceManufacturerNotificationTrigger is deprecated and might not work on all platforms", deprecate, Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.ApplicationModel.Background.DeviceManufacturerNotificationTrigger)]
            [uuid(81278AB5-41AB-16DA-86C2-7F7BF0912F5B)]
            interface IDeviceManufacturerNotificationTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [deprecated("DeviceManufacturerNotificationTrigger is deprecated and might not work on all platforms", deprecate, Windows.Foundation.UniversalApiContract, 6.0)] [propget] HRESULT TriggerQualifier([out] [retval] HSTRING* value);
                [deprecated("DeviceManufacturerNotificationTrigger is deprecated and might not work on all platforms", deprecate, Windows.Foundation.UniversalApiContract, 6.0)] [propget] HRESULT OneShot([out] [retval] boolean* oneShot);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [deprecated("DeviceManufacturerNotificationTrigger is deprecated and might not work on all platforms", deprecate, Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.ApplicationModel.Background.DeviceManufacturerNotificationTrigger)]
            [uuid(7955DE75-25BB-4153-A1A2-3029FCABB652)]
            interface IDeviceManufacturerNotificationTriggerFactory : IInspectable
            {
                [deprecated("DeviceManufacturerNotificationTrigger is deprecated and might not work on all platforms", deprecate, Windows.Foundation.UniversalApiContract, 6.0)] HRESULT Create([in] HSTRING triggerQualifier, [in] boolean oneShot, [out] [retval] Windows.ApplicationModel.Background.DeviceManufacturerNotificationTrigger** trigger);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.DeviceServicingTrigger)]
            [uuid(1AB217AD-6E34-49D3-9E6F-17F1B6DFA881)]
            interface IDeviceServicingTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [default_overload] [overload("RequestAsync")] HRESULT RequestAsyncSimple([in] HSTRING deviceId, [in] Windows.Foundation.TimeSpan expectedDuration, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.DeviceTriggerResult>** result);
                [default_overload] [overload("RequestAsync")] HRESULT RequestAsyncWithArguments([in] HSTRING deviceId, [in] Windows.Foundation.TimeSpan expectedDuration, [in] HSTRING arguments, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.DeviceTriggerResult>** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.DeviceUseTrigger)]
            [uuid(0DA68011-334F-4D57-B6EC-6DCA64B412E4)]
            interface IDeviceUseTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [default_overload] [overload("RequestAsync")] HRESULT RequestAsyncSimple([in] HSTRING deviceId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.DeviceTriggerResult>** result);
                [default_overload] [overload("RequestAsync")] HRESULT RequestAsyncWithArguments([in] HSTRING deviceId, [in] HSTRING arguments, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.DeviceTriggerResult>** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.DeviceWatcherTrigger)]
            [uuid(A4617FDD-8573-4260-BEFC-5BEC89CB693D)]
            interface IDeviceWatcherTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.EmailStoreNotificationTrigger)]
            [uuid(986D06DA-47EB-4268-A4F2-F3F77188388A)]
            interface IEmailStoreNotificationTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.GattCharacteristicNotificationTrigger)]
            [uuid(E25F8FC8-0696-474F-A732-F292B0CEBC5D)]
            interface IGattCharacteristicNotificationTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [propget] HRESULT Characteristic([out] [retval] Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.ApplicationModel.Background.GattCharacteristicNotificationTrigger)]
            [uuid(9322A2C4-AE0E-42F2-B28C-F51372E69245)]
            interface IGattCharacteristicNotificationTrigger2 : IInspectable
            {
                [propget] HRESULT EventTriggeringMode([out] [retval] Windows.Devices.Bluetooth.Background.BluetoothEventTriggeringMode* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.GattCharacteristicNotificationTrigger)]
            [uuid(57BA1995-B143-4575-9F6B-FD59D93ACE1A)]
            interface IGattCharacteristicNotificationTriggerFactory : IInspectable
            {
                [overload("Create")] HRESULT Create([in] Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic* characteristic, [out] [retval] Windows.ApplicationModel.Background.GattCharacteristicNotificationTrigger** gattCharacteristicNotificationTrigger);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.ApplicationModel.Background.GattCharacteristicNotificationTrigger)]
            [uuid(5998E91F-8A53-4E9F-A32C-23CD33664CEE)]
            interface IGattCharacteristicNotificationTriggerFactory2 : IInspectable
            {
                [overload("Create")] HRESULT CreateWithEventTriggeringMode([in] Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic* characteristic, [in] Windows.Devices.Bluetooth.Background.BluetoothEventTriggeringMode eventTriggeringMode, [out] [retval] Windows.ApplicationModel.Background.GattCharacteristicNotificationTrigger** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.ApplicationModel.Background.GattServiceProviderTrigger)]
            [uuid(DDC6A3E9-1557-4BD8-8542-468AA0C696F6)]
            interface IGattServiceProviderTrigger : IInspectable
            {
                [propget] HRESULT TriggerId([out] [retval] HSTRING* value);
                [propget] HRESULT Service([out] [retval] Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService** value);
                [propput] HRESULT AdvertisingParameters([in] Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters* value);
                [propget] HRESULT AdvertisingParameters([out] [retval] Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.ApplicationModel.Background.GattServiceProviderTriggerResult)]
            [uuid(3C4691B1-B198-4E84-BAD4-CF4AD299ED3A)]
            interface IGattServiceProviderTriggerResult : IInspectable
            {
                [propget] HRESULT Trigger([out] [retval] Windows.ApplicationModel.Background.GattServiceProviderTrigger** value);
                [propget] HRESULT Error([out] [retval] Windows.Devices.Bluetooth.BluetoothError* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.ApplicationModel.Background.GattServiceProviderTrigger)]
            [uuid(B413A36A-E294-4591-A5A6-64891A828153)]
            interface IGattServiceProviderTriggerStatics : IInspectable
            {
                [overload("CreateAsync")] HRESULT CreateAsync([in] HSTRING triggerId, [in] GUID serviceUuid, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.GattServiceProviderTriggerResult*>** operation);
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [exclusiveto(Windows.ApplicationModel.Background.GeovisitTrigger)]
            [uuid(4818EDAA-04E1-4127-9A4C-19351B8A80A4)]
            interface IGeovisitTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [propget] HRESULT MonitoringScope([out] [retval] Windows.Devices.Geolocation.VisitMonitoringScope* value);
                [propput] HRESULT MonitoringScope([in] Windows.Devices.Geolocation.VisitMonitoringScope value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.LocationTrigger)]
            [uuid(47666A1C-6877-481E-8026-FF7E14A811A0)]
            interface ILocationTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [propget] HRESULT TriggerType([out] [retval] Windows.ApplicationModel.Background.LocationTriggerType* triggerType);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.LocationTrigger)]
            [uuid(1106BB07-FF69-4E09-AA8B-1384EA475E98)]
            interface ILocationTriggerFactory : IInspectable
            {
                HRESULT Create([in] Windows.ApplicationModel.Background.LocationTriggerType triggerType, [out] [retval] Windows.ApplicationModel.Background.LocationTrigger** locationTrigger);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.MaintenanceTrigger)]
            [uuid(68184C83-FC22-4CE5-841A-7239A9810047)]
            interface IMaintenanceTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [propget] HRESULT FreshnessTime([out] [retval] UINT32* freshnessTime);
                [propget] HRESULT OneShot([out] [retval] boolean* oneShot);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.MaintenanceTrigger)]
            [uuid(4B3DDB2E-97DD-4629-88B0-B06CF9482AE5)]
            interface IMaintenanceTriggerFactory : IInspectable
            {
                HRESULT Create([in] UINT32 freshnessTime, [in] boolean oneShot, [out] [retval] Windows.ApplicationModel.Background.MaintenanceTrigger** trigger);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.MediaProcessingTrigger)]
            [uuid(9A95BE65-8A52-4B30-9011-CF38040EA8B0)]
            interface IMediaProcessingTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [overload("RequestAsync")] HRESULT RequestAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.MediaProcessingTriggerResult>** result);
                [overload("RequestAsync")] HRESULT RequestAsyncWithArguments([in] Windows.Foundation.Collections.ValueSet* arguments, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.MediaProcessingTriggerResult>** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.NetworkOperatorHotspotAuthenticationTrigger)]
            [uuid(E756C791-3001-4DE5-83C7-DE61D88831D0)]
            interface INetworkOperatorHotspotAuthenticationTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.NetworkOperatorNotificationTrigger)]
            [uuid(90089CC6-63CD-480C-95D1-6E6AEF801E4A)]
            interface INetworkOperatorNotificationTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [propget] HRESULT NetworkAccountId([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.NetworkOperatorNotificationTrigger)]
            [uuid(0A223E00-27D7-4353-ADB9-9265AAEA579D)]
            interface INetworkOperatorNotificationTriggerFactory : IInspectable
            {
                HRESULT Create([in] HSTRING networkAccountId, [out] [retval] Windows.ApplicationModel.Background.NetworkOperatorNotificationTrigger** trigger);
            }

            [contract(Windows.ApplicationModel.Calls.Background.CallsBackgroundContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.PhoneTrigger)]
            [from_contract(Windows.ApplicationModel.Calls.CallsPhoneContract, range(1.0, 2.0))]
            [uuid(8DCFE99B-D4C5-49F1-B7D3-82E87A0E9DDE)]
            interface IPhoneTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [propget] HRESULT OneShot([out] [retval] boolean* value);
                [propget] HRESULT TriggerType([out] [retval] Windows.ApplicationModel.Calls.Background.PhoneTriggerType* result);
            }

            [contract(Windows.ApplicationModel.Calls.Background.CallsBackgroundContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.PhoneTrigger)]
            [from_contract(Windows.ApplicationModel.Calls.CallsPhoneContract, range(1.0, 2.0))]
            [uuid(A0D93CDA-5FC1-48FB-A546-32262040157B)]
            interface IPhoneTriggerFactory : IInspectable
            {
                HRESULT Create([in] Windows.ApplicationModel.Calls.Background.PhoneTriggerType type, [in] boolean oneShot, [out] [retval] Windows.ApplicationModel.Background.PhoneTrigger** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.PushNotificationTrigger)]
            [uuid(6DD8ED1B-458E-4FC2-BC2E-D5664F77ED19)]
            interface IPushNotificationTriggerFactory : IInspectable
            {
                HRESULT Create([in] HSTRING applicationId, [out] [retval] Windows.ApplicationModel.Background.PushNotificationTrigger** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.RcsEndUserMessageAvailableTrigger)]
            [uuid(986D0D6A-B2F6-467F-A978-A44091C11A66)]
            interface IRcsEndUserMessageAvailableTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.RfcommConnectionTrigger)]
            [uuid(E8C4CAE2-0B53-4464-9394-FD875654DE64)]
            interface IRfcommConnectionTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [propget] HRESULT InboundConnection([out] [retval] Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation** value);
                [propget] HRESULT OutboundConnection([out] [retval] Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation** value);
                [propget] HRESULT AllowMultipleConnections([out] [retval] boolean* value);
                [propput] HRESULT AllowMultipleConnections([in] boolean value);
                [propget] HRESULT ProtectionLevel([out] [retval] Windows.Networking.Sockets.SocketProtectionLevel* value);
                [propput] HRESULT ProtectionLevel([in] Windows.Networking.Sockets.SocketProtectionLevel value);
                [propget] HRESULT RemoteHostName([out] [retval] Windows.Networking.HostName** value);
                [propput] HRESULT RemoteHostName([in] Windows.Networking.HostName* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [deprecated("SecondaryAuthenticationFactorAuthenticationTrigger is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 10.0)]
            [exclusiveto(Windows.ApplicationModel.Background.SecondaryAuthenticationFactorAuthenticationTrigger)]
            [uuid(F237F327-5181-4F24-96A7-700A4E5FAC62)]
            interface ISecondaryAuthenticationFactorAuthenticationTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 2.0)]
            [exclusiveto(Windows.ApplicationModel.Background.SensorDataThresholdTrigger)]
            [uuid(5BC0F372-D48B-4B7F-ABEC-15F9BACC12E2)]
            interface ISensorDataThresholdTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 2.0)]
            [exclusiveto(Windows.ApplicationModel.Background.SensorDataThresholdTrigger)]
            [uuid(921FE675-7DF0-4DA3-97B3-E544EE857FE6)]
            interface ISensorDataThresholdTriggerFactory : IInspectable
            {
                HRESULT Create([in] Windows.Devices.Sensors.ISensorDataThreshold* threshold, [out] [retval] Windows.ApplicationModel.Background.SensorDataThresholdTrigger** trigger);
            }

            [contract(Windows.Devices.SmartCards.SmartCardBackgroundTriggerContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.SmartCardTrigger)]
            [uuid(F53BC5AC-84CA-4972-8CE9-E58F97B37A50)]
            interface ISmartCardTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [propget] HRESULT TriggerType([out] [retval] Windows.Devices.SmartCards.SmartCardTriggerType* triggerType);
            }

            [contract(Windows.Devices.SmartCards.SmartCardBackgroundTriggerContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.SmartCardTrigger)]
            [uuid(63BF54C3-89C1-4E00-A9D3-97C629269DAD)]
            interface ISmartCardTriggerFactory : IInspectable
            {
                HRESULT Create([in] Windows.Devices.SmartCards.SmartCardTriggerType triggerType, [out] [retval] Windows.ApplicationModel.Background.SmartCardTrigger** trigger);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.SmsMessageReceivedTrigger)]
            [uuid(EA3AD8C8-6BA4-4AB2-8D21-BC6B09C77564)]
            interface ISmsMessageReceivedTriggerFactory : IInspectable
            {
                HRESULT Create([in] Windows.Devices.Sms.SmsFilterRules* filterRules, [out] [retval] Windows.ApplicationModel.Background.SmsMessageReceivedTrigger** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.ApplicationModel.Background.SocketActivityTrigger)]
            [uuid(A9BBF810-9DDE-4F8A-83E3-B0E0E7A50D70)]
            interface ISocketActivityTrigger : IInspectable
            {
                [propget] HRESULT IsWakeFromLowPowerSupported([out] [retval] boolean* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.ApplicationModel.Background.StorageLibraryChangeTrackerTrigger)]
            [uuid(1EB0FFD0-5A85-499E-A888-824607124F50)]
            interface IStorageLibraryChangeTrackerTriggerFactory : IInspectable
            {
                HRESULT Create([in] Windows.Storage.StorageLibraryChangeTracker* tracker, [out] [retval] Windows.ApplicationModel.Background.StorageLibraryChangeTrackerTrigger** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.StorageLibraryContentChangedTrigger)]
            [uuid(1637E0A7-829C-45BC-929B-A1E7EA78D89B)]
            interface IStorageLibraryContentChangedTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.StorageLibraryContentChangedTrigger)]
            [uuid(7F9F1B39-5F90-4E12-914E-A7D8E0BBFB18)]
            interface IStorageLibraryContentChangedTriggerStatics : IInspectable
            {
                HRESULT Create([in] Windows.Storage.StorageLibrary* storageLibrary, [out] [retval] Windows.ApplicationModel.Background.StorageLibraryContentChangedTrigger** result);
                HRESULT CreateFromLibraries([in] Windows.Foundation.Collections.IIterable<Windows.Storage.StorageLibrary*>* storageLibraries, [out] [retval] Windows.ApplicationModel.Background.StorageLibraryContentChangedTrigger** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.SystemCondition)]
            [uuid(C15FB476-89C5-420B-ABD3-FB3030472128)]
            interface ISystemCondition : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundCondition
            {
                [propget] HRESULT ConditionType([out] [retval] Windows.ApplicationModel.Background.SystemConditionType* conditionType);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.SystemCondition)]
            [uuid(D269D1F1-05A7-49AE-87D7-16B2B8B9A553)]
            interface ISystemConditionFactory : IInspectable
            {
                HRESULT Create([in] Windows.ApplicationModel.Background.SystemConditionType conditionType, [out] [retval] Windows.ApplicationModel.Background.SystemCondition** condition);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.SystemTrigger)]
            [uuid(1D80C776-3748-4463-8D7E-276DC139AC1C)]
            interface ISystemTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [propget] HRESULT OneShot([out] [retval] boolean* oneShot);
                [propget] HRESULT TriggerType([out] [retval] Windows.ApplicationModel.Background.SystemTriggerType* triggerType);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.SystemTrigger)]
            [uuid(E80423D4-8791-4579-8126-87EC8AAA407A)]
            interface ISystemTriggerFactory : IInspectable
            {
                HRESULT Create([in] Windows.ApplicationModel.Background.SystemTriggerType triggerType, [in] boolean oneShot, [out] [retval] Windows.ApplicationModel.Background.SystemTrigger** trigger);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.TimeTrigger)]
            [uuid(656E5556-0B2A-4377-BA70-3B45A935547F)]
            interface ITimeTrigger : IInspectable
                requires
                    Windows.ApplicationModel.Background.IBackgroundTrigger
            {
                [propget] HRESULT FreshnessTime([out] [retval] UINT32* freshnessTime);
                [propget] HRESULT OneShot([out] [retval] boolean* oneShot);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.TimeTrigger)]
            [uuid(38C682FE-9B54-45E6-B2F3-269B87A6F734)]
            interface ITimeTriggerFactory : IInspectable
            {
                HRESULT Create([in] UINT32 freshnessTime, [in] boolean oneShot, [out] [retval] Windows.ApplicationModel.Background.TimeTrigger** trigger);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.ToastNotificationActionTrigger)]
            [uuid(B09DFC27-6480-4349-8125-97B3EFAA0A3A)]
            interface IToastNotificationActionTriggerFactory : IInspectable
            {
                HRESULT Create([in] HSTRING applicationId, [out] [retval] Windows.ApplicationModel.Background.ToastNotificationActionTrigger** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.Background.ToastNotificationHistoryChangedTrigger)]
            [uuid(81C6FAAD-8797-4785-81B4-B0CCCB73D1D9)]
            interface IToastNotificationHistoryChangedTriggerFactory : IInspectable
            {
                HRESULT Create([in] HSTRING applicationId, [out] [retval] Windows.ApplicationModel.Background.ToastNotificationHistoryChangedTrigger** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.ApplicationModel.Background.UserNotificationChangedTrigger)]
            [uuid(CAD4436C-69AB-4E18-A48A-5ED2AC435957)]
            interface IUserNotificationChangedTriggerFactory : IInspectable
            {
                HRESULT Create([in] Windows.UI.Notifications.NotificationKinds notificationKinds, [out] [retval] Windows.ApplicationModel.Background.UserNotificationChangedTrigger** value);
            }

            [activatable(Windows.ApplicationModel.Background.IActivitySensorTriggerFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ActivitySensorTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IActivitySensorTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [contract(Windows.ApplicationModel.Background.BackgroundAlarmApplicationContract, 1.0)]
            [static(Windows.ApplicationModel.Background.IAlarmApplicationManagerStatics, Windows.ApplicationModel.Background.BackgroundAlarmApplicationContract, 1.0)]
            runtimeclass AlarmApplicationManager
            {
            }

            [activatable(Windows.ApplicationModel.Background.IAppBroadcastTriggerFactory, Windows.Media.Capture.AppBroadcastContract, 1.0)]
            [contract(Windows.Media.Capture.AppBroadcastContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass AppBroadcastTrigger
            {
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
                [default] interface Windows.ApplicationModel.Background.IAppBroadcastTrigger;
            }

            [contract(Windows.Media.Capture.AppBroadcastContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass AppBroadcastTriggerProviderInfo
            {
                [default] interface Windows.ApplicationModel.Background.IAppBroadcastTriggerProviderInfo;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ApplicationTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IApplicationTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ApplicationTriggerDetails
            {
                [default] interface Windows.ApplicationModel.Background.IApplicationTriggerDetails;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass AppointmentStoreNotificationTrigger
            {
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
                [default] interface Windows.ApplicationModel.Background.IAppointmentStoreNotificationTrigger;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.ApplicationModel.Background.IBackgroundExecutionManagerStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.ApplicationModel.Background.IBackgroundExecutionManagerStatics2, Windows.Foundation.UniversalApiContract, 6.0)]
            runtimeclass BackgroundExecutionManager
            {
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(standard)]
            [threading(mta)]
            runtimeclass BackgroundTaskBuilder
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTaskBuilder;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.ApplicationModel.Background.IBackgroundTaskBuilder2;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.ApplicationModel.Background.IBackgroundTaskBuilder3;
                [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.ApplicationModel.Background.IBackgroundTaskBuilder4;
                [contract(Windows.Foundation.UniversalApiContract, 10.0)] interface Windows.ApplicationModel.Background.IBackgroundTaskBuilder5;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass BackgroundTaskCompletedEventArgs
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTaskCompletedEventArgs;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(standard)]
            [threading(mta)]
            runtimeclass BackgroundTaskDeferral
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTaskDeferral;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass BackgroundTaskProgressEventArgs
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTaskProgressEventArgs;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Windows.ApplicationModel.Background.IBackgroundTaskRegistrationStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.ApplicationModel.Background.IBackgroundTaskRegistrationStatics2, Windows.Foundation.UniversalApiContract, 4.0)]
            [threading(both)]
            runtimeclass BackgroundTaskRegistration
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTaskRegistration;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.ApplicationModel.Background.IBackgroundTaskRegistration2;
                [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.ApplicationModel.Background.IBackgroundTaskRegistration3;
            }

            [activatable(Windows.ApplicationModel.Background.IBackgroundTaskRegistrationGroupFactory, Windows.Foundation.UniversalApiContract, 4.0)]
            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass BackgroundTaskRegistrationGroup
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTaskRegistrationGroup;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Windows.ApplicationModel.Background.IBackgroundWorkCostStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            [threading(both)]
            runtimeclass BackgroundWorkCost
            {
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass BluetoothLEAdvertisementPublisherTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IBluetoothLEAdvertisementPublisherTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
                [contract(Windows.Foundation.UniversalApiContract, 10.0)] interface Windows.ApplicationModel.Background.IBluetoothLEAdvertisementPublisherTrigger2;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass BluetoothLEAdvertisementWatcherTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IBluetoothLEAdvertisementWatcherTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
                [contract(Windows.Foundation.UniversalApiContract, 10.0)] interface Windows.ApplicationModel.Background.IBluetoothLEAdvertisementWatcherTrigger2;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass CachedFileUpdaterTrigger
            {
                [default] interface Windows.ApplicationModel.Background.ICachedFileUpdaterTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass CachedFileUpdaterTriggerDetails
            {
                [default] interface Windows.ApplicationModel.Background.ICachedFileUpdaterTriggerDetails;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ChatMessageNotificationTrigger
            {
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
                [default] interface Windows.ApplicationModel.Background.IChatMessageNotificationTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ChatMessageReceivedNotificationTrigger
            {
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
                [default] interface Windows.ApplicationModel.Background.IChatMessageReceivedNotificationTrigger;
            }

            [activatable(Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingContract, 1.0)]
            [contract(Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CommunicationBlockingAppSetAsActiveTrigger
            {
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
                [default] interface Windows.ApplicationModel.Background.ICommunicationBlockingAppSetAsActiveTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ContactStoreNotificationTrigger
            {
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
                [default] interface Windows.ApplicationModel.Background.IContactStoreNotificationTrigger;
            }

            [activatable(Windows.ApplicationModel.Background.IContentPrefetchTriggerFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(standard)]
            [threading(mta)]
            runtimeclass ContentPrefetchTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IContentPrefetchTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 8.0)]
            [contract(Windows.Foundation.UniversalApiContract, 8.0)]
            runtimeclass ConversationalAgentTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.ApplicationModel.Background.ICustomSystemEventTriggerFactory, Windows.Foundation.UniversalApiContract, 6.0)]
            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(standard)]
            [threading(mta)]
            runtimeclass CustomSystemEventTrigger
            {
                [default] interface Windows.ApplicationModel.Background.ICustomSystemEventTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Windows.ApplicationModel.Background.IDeviceConnectionChangeTriggerStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            [threading(both)]
            runtimeclass DeviceConnectionChangeTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IDeviceConnectionChangeTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.ApplicationModel.Background.IDeviceManufacturerNotificationTriggerFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [deprecated("DeviceManufacturerNotificationTrigger is deprecated and might not work on all platforms", deprecate, Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(standard)]
            [threading(mta)]
            runtimeclass DeviceManufacturerNotificationTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IDeviceManufacturerNotificationTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass DeviceServicingTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IDeviceServicingTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass DeviceUseTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IDeviceUseTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(standard)]
            [threading(mta)]
            runtimeclass DeviceWatcherTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IDeviceWatcherTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass EmailStoreNotificationTrigger
            {
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
                [default] interface Windows.ApplicationModel.Background.IEmailStoreNotificationTrigger;
            }

            [activatable(Windows.ApplicationModel.Background.IGattCharacteristicNotificationTriggerFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [activatable(Windows.ApplicationModel.Background.IGattCharacteristicNotificationTriggerFactory2, Windows.Foundation.UniversalApiContract, 4.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass GattCharacteristicNotificationTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IGattCharacteristicNotificationTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
                [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.ApplicationModel.Background.IGattCharacteristicNotificationTrigger2;
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [marshaling_behavior(agile)]
            [static(Windows.ApplicationModel.Background.IGattServiceProviderTriggerStatics, Windows.Foundation.UniversalApiContract, 4.0)]
            [threading(both)]
            runtimeclass GattServiceProviderTrigger
            {
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
                [default] interface Windows.ApplicationModel.Background.IGattServiceProviderTrigger;
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass GattServiceProviderTriggerResult
            {
                [default] interface Windows.ApplicationModel.Background.IGattServiceProviderTriggerResult;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 5.0)]
            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass GeovisitTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IGeovisitTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.ApplicationModel.Background.ILocationTriggerFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass LocationTrigger
            {
                [default] interface Windows.ApplicationModel.Background.ILocationTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.ApplicationModel.Background.IMaintenanceTriggerFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(standard)]
            [threading(mta)]
            runtimeclass MaintenanceTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IMaintenanceTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(standard)]
            [threading(both)]
            runtimeclass MediaProcessingTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IMediaProcessingTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass MobileBroadbandDeviceServiceNotificationTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 6.0)]
            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass MobileBroadbandPcoDataChangeTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass MobileBroadbandPinLockStateChangeTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass MobileBroadbandRadioStateChangeTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass MobileBroadbandRegistrationStateChangeTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 6.0)]
            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass NetworkOperatorDataUsageTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(standard)]
            [threading(mta)]
            runtimeclass NetworkOperatorHotspotAuthenticationTrigger
            {
                [default] interface Windows.ApplicationModel.Background.INetworkOperatorHotspotAuthenticationTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.ApplicationModel.Background.INetworkOperatorNotificationTriggerFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(standard)]
            [threading(mta)]
            runtimeclass NetworkOperatorNotificationTrigger
            {
                [default] interface Windows.ApplicationModel.Background.INetworkOperatorNotificationTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 5.0)]
            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass PaymentAppCanMakePaymentTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.ApplicationModel.Background.IPhoneTriggerFactory, Windows.ApplicationModel.Calls.CallsPhoneContract, 1.0)]
            [contract(Windows.ApplicationModel.Calls.Background.CallsBackgroundContract, 1.0)]
            [from_contract(Windows.ApplicationModel.Calls.CallsPhoneContract, range(1.0, 2.0))]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass PhoneTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IPhoneTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.ApplicationModel.Background.IPushNotificationTriggerFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(mta)]
            runtimeclass PushNotificationTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass RcsEndUserMessageAvailableTrigger
            {
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
                [default] interface Windows.ApplicationModel.Background.IRcsEndUserMessageAvailableTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass RfcommConnectionTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IRfcommConnectionTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 3.0)]
            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [deprecated("SecondaryAuthenticationFactorAuthenticationTrigger is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 10.0)]
            [marshaling_behavior(standard)]
            [threading(mta)]
            runtimeclass SecondaryAuthenticationFactorAuthenticationTrigger
            {
                [default] interface Windows.ApplicationModel.Background.ISecondaryAuthenticationFactorAuthenticationTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.ApplicationModel.Background.ISensorDataThresholdTriggerFactory, Windows.Foundation.UniversalApiContract, 2.0)]
            [contract(Windows.Foundation.UniversalApiContract, 2.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass SensorDataThresholdTrigger
            {
                [default] interface Windows.ApplicationModel.Background.ISensorDataThresholdTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.ApplicationModel.Background.ISmartCardTriggerFactory, Windows.Devices.SmartCards.SmartCardBackgroundTriggerContract, 1.0)]
            [contract(Windows.Devices.SmartCards.SmartCardBackgroundTriggerContract, 1.0)]
            [marshaling_behavior(standard)]
            [threading(mta)]
            runtimeclass SmartCardTrigger
            {
                [default] interface Windows.ApplicationModel.Background.ISmartCardTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.ApplicationModel.Background.ISmsMessageReceivedTriggerFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass SmsMessageReceivedTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass SocketActivityTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTrigger;
                [contract(Windows.Foundation.UniversalApiContract, 3.0)] interface Windows.ApplicationModel.Background.ISocketActivityTrigger;
            }

            [activatable(Windows.ApplicationModel.Background.IStorageLibraryChangeTrackerTriggerFactory, Windows.Foundation.UniversalApiContract, 6.0)]
            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass StorageLibraryChangeTrackerTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.ApplicationModel.Background.IStorageLibraryContentChangedTriggerStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass StorageLibraryContentChangedTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IStorageLibraryContentChangedTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.ApplicationModel.Background.ISystemConditionFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(standard)]
            [threading(mta)]
            runtimeclass SystemCondition
            {
                [default] interface Windows.ApplicationModel.Background.ISystemCondition;
                interface Windows.ApplicationModel.Background.IBackgroundCondition;
            }

            [activatable(Windows.ApplicationModel.Background.ISystemTriggerFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(standard)]
            [threading(mta)]
            runtimeclass SystemTrigger
            {
                [default] interface Windows.ApplicationModel.Background.ISystemTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 6.0)]
            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass TetheringEntitlementCheckTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.ApplicationModel.Background.ITimeTriggerFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(standard)]
            [threading(mta)]
            runtimeclass TimeTrigger
            {
                [default] interface Windows.ApplicationModel.Background.ITimeTrigger;
                interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.ApplicationModel.Background.IToastNotificationActionTriggerFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(mta)]
            runtimeclass ToastNotificationActionTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.ApplicationModel.Background.IToastNotificationHistoryChangedTriggerFactory, Windows.Foundation.UniversalApiContract, 1.0)]
            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(mta)]
            runtimeclass ToastNotificationHistoryChangedTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }

            [activatable(Windows.ApplicationModel.Background.IUserNotificationChangedTriggerFactory, Windows.Foundation.UniversalApiContract, 3.0)]
            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [marshaling_behavior(agile)]
            [threading(mta)]
            runtimeclass UserNotificationChangedTrigger
            {
                [default] interface Windows.ApplicationModel.Background.IBackgroundTrigger;
            }
        }
    }
}
