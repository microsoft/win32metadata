/********************************************************
*                                                       *
*   Copyright (C) Microsoft. All rights reserved.       *
*                                                       *
********************************************************/

//-----------------------------------------------------------------------------
// File:			rstlkr.idl
//
// Contents: 		OLE DB interface definition
//
// Comments: 		
//
//-----------------------------------------------------------------------------

cpp_quote("#include <winapifamily.h>")

#pragma region Desktop Family
cpp_quote("#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)")

#include "idlmulti.h"
//  
    
    REMOTED_INTERFACE(0c733a0a-2a1c-11ce-ade5-00aa0044773d)

    
interface IRowsetLockRows : IUnknown {

typedef DWORD DBLOCKMODE;

enum DBLOCKMODEENUM {
	DBLOCKMODE_NONE,
	DBLOCKMODE_READ,
	DBLOCKMODE_INTENT,
	DBLOCKMODE_WRITE
};

#ifdef _WIN64  //Use casting by ULONG in attribute size_is under 64-bit environment.

	HRESULT LockRowsByBookmark(
		[in] DBLOCKMODE eLockMode,
		[in] HCHAPTER hReserved,
		[in] DBCOUNTITEM cRows,
		[in, size_is((ULONG)cRows)] const DBBKMARK rgcbBookmarks[],
		[in, size_is((ULONG)cRows)] const BYTE * rgBookmarks[],
		[out, size_is((ULONG)cRows)] DBROWSTATUS rgRowStatus[]
	);
	
#else  //No casting by ULONG for 32-bit.

	HRESULT LockRowsByBookmark(
		[in] DBLOCKMODE eLockMode,
		[in] HCHAPTER hReserved,
		[in] DBCOUNTITEM cRows,
		[in, size_is(cRows)] const DBBKMARK rgcbBookmarks[],
		[in, size_is(cRows)] const BYTE * rgBookmarks[],
		[out, size_is(cRows)] DBROWSTATUS rgRowStatus[]
	);

#endif

}

cpp_quote("#endif /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) */")
#pragma endregion

