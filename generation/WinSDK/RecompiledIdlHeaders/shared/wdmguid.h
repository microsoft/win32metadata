/*++

Copyright (c) Microsoft Corporation.  All rights reserved.

Module Name:

    wdmguid.h

Abstract:

    Defines GUIDs for function device classes and device events used in
    Plug & Play.

Revision History:

--*/
#include <winapifamily.h>

#pragma region Desktop Family
#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)


#ifndef FAR
#define FAR
#endif

//
// Device events that can be broadcasted to drivers and user-mode apps.
//

#if (NTDDI_VERSION >= NTDDI_WIN2K)
// {cb3a4001-46f0-11d0-b08f-00609713053f}
DEFINE_GUID( GUID_HWPROFILE_QUERY_CHANGE,          0xcb3a4001L, 0x46f0, 0x11d0, 0xb0, 0x8f, 0x00, 0x60, 0x97, 0x13, 0x05, 0x3f );
// {cb3a4002-46f0-11d0-b08f-00609713053f}
DEFINE_GUID( GUID_HWPROFILE_CHANGE_CANCELLED,      0xcb3a4002L, 0x46f0, 0x11d0, 0xb0, 0x8f, 0x00, 0x60, 0x97, 0x13, 0x05, 0x3f );
// {cb3a4003-46f0-11d0-b08f-00609713053f}
DEFINE_GUID( GUID_HWPROFILE_CHANGE_COMPLETE,       0xcb3a4003L, 0x46f0, 0x11d0, 0xb0, 0x8f, 0x00, 0x60, 0x97, 0x13, 0x05, 0x3f );
// {cb3a4004-46f0-11d0-b08f-00609713053f}
DEFINE_GUID( GUID_DEVICE_INTERFACE_ARRIVAL,        0xcb3a4004L, 0x46f0, 0x11d0, 0xb0, 0x8f, 0x00, 0x60, 0x97, 0x13, 0x05, 0x3f );
// {cb3a4005-46f0-11d0-b08f-00609713053f}
DEFINE_GUID( GUID_DEVICE_INTERFACE_REMOVAL,        0xcb3a4005L, 0x46f0, 0x11d0, 0xb0, 0x8f, 0x00, 0x60, 0x97, 0x13, 0x05, 0x3f );
// {cb3a4006-46f0-11d0-b08f-00609713053f}
DEFINE_GUID( GUID_TARGET_DEVICE_QUERY_REMOVE,      0xcb3a4006L, 0x46f0, 0x11d0, 0xb0, 0x8f, 0x00, 0x60, 0x97, 0x13, 0x05, 0x3f );
// {cb3a4007-46f0-11d0-b08f-00609713053f}
DEFINE_GUID( GUID_TARGET_DEVICE_REMOVE_CANCELLED,  0xcb3a4007L, 0x46f0, 0x11d0, 0xb0, 0x8f, 0x00, 0x60, 0x97, 0x13, 0x05, 0x3f );
// {cb3a4008-46f0-11d0-b08f-00609713053f}
DEFINE_GUID( GUID_TARGET_DEVICE_REMOVE_COMPLETE,   0xcb3a4008L, 0x46f0, 0x11d0, 0xb0, 0x8f, 0x00, 0x60, 0x97, 0x13, 0x05, 0x3f );
// {aca73f8e-8d23-11d1-ac7d-0000f87571d0}
DEFINE_GUID( GUID_PNP_CUSTOM_NOTIFICATION,         0xACA73F8EL, 0x8D23, 0x11D1, 0xAC, 0x7D, 0x00, 0x00, 0xF8, 0x75, 0x71, 0xD0 );
// {c2cf0660-eb7a-11d1-bd7f-0000f87571d0}
DEFINE_GUID( GUID_PNP_POWER_NOTIFICATION,          0xC2CF0660L, 0xEB7A, 0x11D1, 0xBD, 0x7F, 0x00, 0x00, 0xF8, 0x75, 0x71, 0xD0 );
#endif

#if (NTDDI_VERSION >= NTDDI_VISTA)
// {29c69b3e-c79a-43bf-bbde-a932fa1bea7e}
DEFINE_GUID( GUID_PNP_POWER_SETTING_CHANGE,        0x29C69B3EL, 0xC79A, 0x43BF, 0xBB, 0xDE, 0xA9, 0x32, 0xFA, 0x1B, 0xEA, 0x7E );
#endif

#if (NTDDI_VERSION >= NTDDI_WIN7)
// {fcf528f6-a82f-47b1-ad3a-8050594cad28}
DEFINE_GUID( GUID_TARGET_DEVICE_TRANSPORT_RELATIONS_CHANGED, 0xfcf528f6, 0xa82f, 0x47b1, 0xad, 0x3a, 0x80, 0x50, 0x59, 0x4c, 0xad, 0x28 );
#endif

#if (NTDDI_VERSION >= NTDDI_WIN10_19H1)
// {de373def-a85c-4f76-8cbf-f96bea8bd10f}
DEFINE_GUID( GUID_KERNEL_SOFT_RESTART_PREPARE,     0xde373def, 0xa85c, 0x4f76, 0x8c, 0xbf, 0xf9, 0x6b, 0xea, 0x8b, 0xd1, 0x0f );
// {31d737e7-8c0b-468a-956e-9f433ec358fb}
DEFINE_GUID( GUID_KERNEL_SOFT_RESTART_CANCEL,      0x31d737e7, 0x8c0b, 0x468a, 0x95, 0x6e, 0x9f, 0x43, 0x3e, 0xc3, 0x58, 0xfb );
// {90d889de-8704-44cf-8115-ed8528d2b2da}
DEFINE_GUID( GUID_RECOVERY_PCI_PREPARE_SHUTDOWN,   0x90d889de, 0x8704, 0x44cf, 0x81, 0x15, 0xed, 0x85, 0x28, 0xd2, 0xb2, 0xda );
// {4b9770ea-bde7-400b-a9b9-4f684f54cc2a}
DEFINE_GUID( GUID_RECOVERY_NVMED_PREPARE_SHUTDOWN, 0x4b9770ea, 0xbde7, 0x400b, 0xa9, 0xb9, 0x4f, 0x68, 0x4f, 0x54, 0xcc, 0x2a );
#endif

#if (NTDDI_VERSION >= NTDDI_WIN10_MN)
// {20e91abd-350a-4d4f-8577-99c81507473a}
DEFINE_GUID( GUID_KERNEL_SOFT_RESTART_FINALIZE,    0x20e91abd, 0x350a, 0x4d4f, 0x85, 0x77, 0x99, 0xc8, 0x15, 0x07, 0x47, 0x3a );
#endif

#if (NTDDI_VERSION >= NTDDI_WIN11_GE)
// {af855082-530b-4a85-b5a6-120b63089451}
DEFINE_GUID( GUID_KERNEL_SOFT_RESTART_PRE_COMPLETE, 0xaf855082, 0x530b, 0x4a85, 0xb5, 0xa6, 0x12, 0x0b, 0x63, 0x08, 0x94, 0x51 );
#endif

//
// Interface GUIDs used for IRP_MN_QUERY_INTERFACE
//

#if (NTDDI_VERSION >= NTDDI_WIN2K)
// {496b8280-6f25-11d0-beaf-08002be2092f}
DEFINE_GUID( GUID_BUS_INTERFACE_STANDARD,               0x496B8280L, 0x6F25, 0x11D0, 0xBE, 0xAF, 0x08, 0x00, 0x2B, 0xE2, 0x09, 0x2F );
// {496b8281-6f25-11d0-beaf-08002be2092f}
DEFINE_GUID( GUID_PCI_BUS_INTERFACE_STANDARD,           0x496B8281L, 0x6F25, 0x11D0, 0xBE, 0xAF, 0x08, 0x00, 0x2B, 0xE2, 0x09, 0x2F );
// {de94e966-fdff-4c9c-9998-6747b150e74c}
DEFINE_GUID( GUID_PCI_BUS_INTERFACE_STANDARD2,          0xde94e966L, 0xfdff, 0x4c9c, 0x99, 0x98, 0x67, 0x47, 0xb1, 0x50, 0xe7, 0x4c );
// {e644f185-8c0e-11d0-becf-08002be2092f}
DEFINE_GUID( GUID_ARBITER_INTERFACE_STANDARD,           0xe644f185L, 0x8c0e, 0x11d0, 0xbe, 0xcf, 0x08, 0x00, 0x2b, 0xe2, 0x09, 0x2f );
// {6c154a92-aacf-11d0-8d2a-00a0c906b244}
DEFINE_GUID( GUID_TRANSLATOR_INTERFACE_STANDARD,        0x6c154a92L, 0xaacf, 0x11d0, 0x8d, 0x2a, 0x00, 0xa0, 0xc9, 0x06, 0xb2, 0x44 );
// {b091a08a-ba97-11d0-bd14-00aa00b7b32a}
DEFINE_GUID( GUID_ACPI_INTERFACE_STANDARD,              0xb091a08aL, 0xba97, 0x11d0, 0xbd, 0x14, 0x00, 0xaa, 0x00, 0xb7, 0xb3, 0x2a );
// {70941bf4-0073-11d1-a09e-00c04fc340b1}
DEFINE_GUID( GUID_INT_ROUTE_INTERFACE_STANDARD,         0x70941bf4L, 0x0073, 0x11d1, 0xa0, 0x9e, 0x00, 0xc0, 0x4f, 0xc3, 0x40, 0xb1 );
// {76173af0-c504-11d1-947f-00c04fb960ee}
DEFINE_GUID( GUID_PCMCIA_BUS_INTERFACE_STANDARD,        0x76173af0L, 0xc504, 0x11d1, 0x94, 0x7f, 0x00, 0xc0, 0x4f, 0xb9, 0x60, 0xee );
// {06141966-7245-6369-462e-4e656c736f6e}
DEFINE_GUID( GUID_ACPI_REGS_INTERFACE_STANDARD,         0x06141966L, 0x7245, 0x6369, 0x46, 0x2e, 0x4e, 0x65, 0x6c, 0x73, 0x6f, 0x6e );
// {50feb0de-596a-11d2-a5b8-0000f81a4619}
DEFINE_GUID( GUID_LEGACY_DEVICE_DETECTION_STANDARD,     0x50feb0deL, 0x596a, 0x11d2, 0xa5, 0xb8, 0x00, 0x00, 0xf8, 0x1a, 0x46, 0x19 );
// {d1b82c26-bf49-45ef-b216-71cbd7889b57}
DEFINE_GUID( GUID_PCI_DEVICE_PRESENT_INTERFACE,         0xd1b82c26L, 0xbf49, 0x45ef, 0xb2, 0x16, 0x71, 0xcb, 0xd7, 0x88, 0x9b, 0x57 );
// {aeb895f0-5586-11d1-8d84-00a0c906b244}
DEFINE_GUID( GUID_MF_ENUMERATION_INTERFACE,             0xaeb895f0L, 0x5586, 0x11d1, 0x8d, 0x84, 0x00, 0xa0, 0xc9, 0x06, 0xb2, 0x44 );
// {2aeb0243-6a6e-486b-82fc-d815f6b97006}
DEFINE_GUID( GUID_REENUMERATE_SELF_INTERFACE_STANDARD,  0x2aeb0243,  0x6a6e, 0x486b, 0x82, 0xfc, 0xd8, 0x15, 0xf6, 0xb9, 0x70, 0x06 );
#endif

#if (NTDDI_VERSION >= NTDDI_WINXP)
// {b15cfce8-06d1-4d37-9d4c-bedde0c2a6ff}
DEFINE_GUID( GUID_AGP_TARGET_BUS_INTERFACE_STANDARD, 0xB15CFCE8L, 0x06D1, 0x4D37, 0x9D, 0x4C, 0xBE, 0xDD, 0xE0, 0xC2, 0xA6, 0xFF );
// {3a8d0384-6505-40ca-bc39-56c15f8c5fed}
DEFINE_GUID( GUID_ACPI_CMOS_INTERFACE_STANDARD,    0x3a8d0384L, 0x6505, 0x40ca, 0xbc, 0x39, 0x56, 0xc1, 0x5f, 0x8c, 0x5f, 0xed );
// {f14f609b-cbbd-4957-a674-bc00213f1c97}
DEFINE_GUID( GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD, 0xf14f609bL, 0xcbbd, 0x4957, 0xa6, 0x74, 0xbc, 0x0, 0x21, 0x3f, 0x1c, 0x97 );
#endif

#if (NTDDI_VERSION >= NTDDI_VISTA)
// {e8695f63-1831-4870-a8cf-9c2f03f9dcb5}
DEFINE_GUID( GUID_ACPI_INTERFACE_STANDARD2,             0xe8695f63L, 0x1831, 0x4870, 0xa8, 0xcf, 0x9c, 0x2f, 0x03, 0xf9, 0xdc, 0xb5 );
// {70211b0e-0afb-47db-afc1-410bf842497a}
DEFINE_GUID( GUID_PNP_LOCATION_INTERFACE,               0x70211b0e,  0x0afb, 0x47db, 0xaf, 0xc1, 0x41, 0x0b, 0xf8, 0x42, 0x49, 0x7a );
// {146cd41c-dae3-4437-8aff-2af3f038099b}
DEFINE_GUID( GUID_PCI_EXPRESS_LINK_QUIESCENT_INTERFACE, 0x146cd41cL, 0xdae3, 0x4437, 0x8a, 0xff, 0x2a, 0xf3, 0xf0, 0x38, 0x09, 0x9b );
// {83a7734a-84c7-4161-9a98-6000ed0c4a33}
DEFINE_GUID( GUID_PCI_EXPRESS_ROOT_PORT_INTERFACE,      0x83a7734aL, 0x84c7, 0x4161, 0x9a, 0x98, 0x60, 0x00, 0xed, 0x0c, 0x4a, 0x33 );
// {1a6a460b-194f-455d-b34b-b84c5b05712b}
DEFINE_GUID( GUID_MSIX_TABLE_CONFIG_INTERFACE,          0x1a6a460b, 0x194f, 0x455d, 0xb3, 0x4b, 0xb8, 0x4c, 0x5b, 0x05, 0x71, 0x2b );
// {b38290e5-3cd0-4f9d-9937-f5fe2b44d47a}
DEFINE_GUID( GUID_D3COLD_SUPPORT_INTERFACE,             0xb38290e5, 0x3cd0, 0x4f9d, 0x99, 0x37, 0xf5, 0xfe, 0x2b, 0x44, 0xd4, 0x7a );
#endif

#if (NTDDI_VERSION >= NTDDI_WIN7)
// {37b17e9a-c21c-4296-972d-11c4b32b28f0}
DEFINE_GUID( GUID_PROCESSOR_PCC_INTERFACE_STANDARD, 0x37b17e9a, 0xc21c, 0x4296, 0x97, 0x2d, 0x11, 0xc4, 0xb3, 0x2b, 0x28, 0xf0);
// {64897b47-3a4a-4d75-bc74-89dd6c078293}
DEFINE_GUID( GUID_PCI_VIRTUALIZATION_INTERFACE, 0x64897b47, 0x3a4a, 0x4d75, 0xbc, 0x74, 0x89, 0xdd, 0x6c, 0x7, 0x82, 0x93);
#endif

#if (NTDDI_VERSION >= NTDDI_WIN8)
// {3ee8ba63-0f59-4a24-8a45-35808bdd1249}
DEFINE_GUID( GUID_PCC_INTERFACE_STANDARD, 0x3ee8ba63, 0x0f59, 0x4a24, 0x8a, 0x45, 0x35, 0x80, 0x8b, 0xdd, 0x12, 0x49);
// {7cce62ce-c189-4814-a6a7-12112089e938}
DEFINE_GUID( GUID_PCC_INTERFACE_INTERNAL, 0x7cce62ce, 0xc189, 0x4814, 0xa6, 0xa7, 0x12, 0x11, 0x20, 0x89, 0xe9, 0x38);
// {ecbe47a8-c498-4bb9-bd70-e867e0940d22}
DEFINE_GUID( GUID_THERMAL_COOLING_INTERFACE, 0xecbe47a8L, 0xc498, 0x4bb9, 0xbd, 0x70, 0xe8, 0x67, 0xe0, 0x94, 0x0d, 0x22 );
// {67593984-7cc0-4760-8d01-cbffd2d080f7}
DEFINE_GUID( GUID_PCI_LINK_CONFIG_INTERFACE, 0x67593984, 0x7cc0, 0x4760, 0x8d, 0x01, 0xcb, 0xff, 0xd2, 0xd0, 0x80, 0xf7 );
#endif

#if (NTDDI_VERSION >= NTDDI_WIN11_GA)
DEFINE_GUID( GUID_POWER_LIMIT_INTERFACE, 0x3b96f4f2, 0xce49, 0x44d1, 0x91, 0xf8, 0x65, 0x2b, 0x81, 0x21, 0xe9, 0x3a);
#endif

#if (NTDDI_VERSION >= NTDDI_WINTHRESHOLD)
// {b520f7fa-8a5a-4e40-a3f6-6be1e162d935}
DEFINE_GUID( GUID_DMA_CACHE_COHERENCY_INTERFACE, 0xb520f7fa, 0x8a5a, 0x4e40, 0xa3, 0xf6, 0x6b, 0xe1, 0xe1, 0x62, 0xd9, 0x35 );
// {649fdf26-3bc0-4813-ad24-7e0c1eda3fa3}
DEFINE_GUID( GUID_DEVICE_RESET_INTERFACE_STANDARD, 0x649fdf26, 0x3bc0, 0x4813, 0xad, 0x24, 0x7e, 0xc, 0x1e, 0xda, 0x3f, 0xa3 );
// {1efee0b2-d278-4ae4-bddc-1b34dd648043}
DEFINE_GUID( GUID_IOMMU_BUS_INTERFACE, 0x1efee0b2, 0xd278, 0x4ae4, 0xbd, 0xdc, 0x1b, 0x34, 0xdd, 0x64, 0x80, 0x43 );
// {6e7f1451-199e-4acc-ba2d-762b4edf4674}
DEFINE_GUID( GUID_PCI_SECURITY_INTERFACE, 0x6e7f1451, 0x199e, 0x4acc, 0xba, 0x2d, 0x76, 0x2b, 0x4e, 0xdf, 0x46, 0x74);
#endif

#if (NTDDI_VERSION >= NTDDI_WIN10_TH2)
// {25944783-ce79-4232-815e-4a30014e8eb4}
DEFINE_GUID( GUID_SCM_BUS_INTERFACE, 0x25944783, 0xce79, 0x4232, 0x81, 0x5e, 0x4a, 0x30, 0x1, 0x4e, 0x8e, 0xb4);
#endif

#if (NTDDI_VERSION >= NTDDI_WIN10_RS2)
// {370f67e1-4ff5-4a94-9a35-06c5d9cc30e2}
DEFINE_GUID( GUID_SECURE_DRIVER_INTERFACE, 0x370f67e1, 0x4ff5, 0x4a94, 0x9a, 0x35, 0x6, 0xc5, 0xd9, 0xcc, 0x30, 0xe2 );
// {49d67af8-916c-4ee8-9df1-889f17d21e91}
DEFINE_GUID( GUID_SDEV_IDENTIFIER_INTERFACE, 0x49d67af8, 0x916c, 0x4ee8, 0x9d, 0xf1, 0x88, 0x9f, 0x17, 0xd2, 0x1e, 0x91 );
// {8de064ff-b630-42e4-88ea-6f24c8641175}
DEFINE_GUID( GUID_SCM_BUS_NVD_INTERFACE, 0x8de064ff, 0xb630, 0x42e4, 0x88, 0xea, 0x6f, 0x24, 0xc8, 0x64, 0x11, 0x75 );
// {9b89307d-d76b-4f48-b186-54041ae92e8d}
DEFINE_GUID( GUID_SCM_BUS_LD_INTERFACE, 0x9b89307d, 0xd76b, 0x4f48, 0xb1, 0x86, 0x54, 0x4, 0x1a, 0xe9, 0x2e, 0x8d );
// {0079c21b-917e-405e-a9ce-0732b5bbcebd}
DEFINE_GUID( GUID_SCM_PHYSICAL_NVDIMM_INTERFACE, 0x79c21b, 0x917e, 0x405e, 0xa9, 0xce, 0x7, 0x32, 0xb5, 0xbb, 0xce, 0xbd );
// {b8e992ec-a797-4dc4-8846-84d041707446}
DEFINE_GUID( GUID_PNP_EXTENDED_ADDRESS_INTERFACE, 0xb8e992ec, 0xa797, 0x4dc4, 0x88, 0x46, 0x84, 0xd0, 0x41, 0x70, 0x74, 0x46);
#endif

// TODO_NTDDI_WIN10_RS4
#if (NTDDI_VERSION >= NTDDI_WIN10_RS3)
// {0044d8aa-f664-4588-9ffc-2afeaf5950b9}
DEFINE_GUID( GUID_D3COLD_AUX_POWER_AND_TIMING_INTERFACE, 0x44d8aa, 0xf664, 0x4588, 0x9f, 0xfc, 0x2a, 0xfe, 0xaf, 0x59, 0x50, 0xb9 );
// {2df3f7a8-b9b3-4063-9215-b5d14a0b266e}
DEFINE_GUID( GUID_PCI_FPGA_CONTROL_INTERFACE, 0x2df3f7a8, 0xb9b3, 0x4063, 0x92, 0x15, 0xb5, 0xd1, 0x4a, 0x0b, 0x26, 0x6e );
// {348a5ebb-ba24-44b7-9916-285687735117}
DEFINE_GUID( GUID_PCI_PTM_CONTROL_INTERFACE, 0x348a5ebb, 0xba24, 0x44b7, 0x99, 0x16, 0x28, 0x56, 0x87, 0x73, 0x51, 0x17 );
#endif

#if (NTDDI_VERSION >= NTDDI_WIN10_RS5)
// {27d0102d-bfb2-4164-81dd-dbb82f968b48}
DEFINE_GUID( GUID_BUS_RESOURCE_UPDATE_INTERFACE, 0x27d0102d, 0xbfb2, 0x4164, 0x81, 0xdd, 0xdb, 0xb8, 0x2f, 0x96, 0x8b, 0x48);
#endif

#if (NTDDI_VERSION >= NTDDI_WIN10_19H1)
// {4d95573d-b774-488a-b120-4f284a9eff51}
DEFINE_GUID( GUID_NPEM_CONTROL_INTERFACE, 0x4d95573d, 0xb774, 0x488a, 0xb1, 0x20, 0x4f, 0x28, 0x4a, 0x9e, 0xff, 0x51);
#endif

#if (NTDDI_VERSION >= NTDDI_WIN10_VB)
// {010a7fe8-96f5-4943-bedf-95e651b93412}
DEFINE_GUID( GUID_PCI_ATS_INTERFACE, 0x10a7fe8, 0x96f5, 0x4943, 0xbe, 0xdf, 0x95, 0xe6, 0x51, 0xb9, 0x34, 0x12);
#endif

//
// Bus type GUIDs
//

#if (NTDDI_VERSION >= NTDDI_WIN2K)
// {1530ea73-086b-11d1-a09f-00c04fc340b1}
DEFINE_GUID( GUID_BUS_TYPE_INTERNAL,               0x1530ea73L, 0x086b, 0x11d1, 0xa0, 0x9f, 0x00, 0xc0, 0x4f, 0xc3, 0x40, 0xb1 );
// {09343630-af9f-11d0-92e9-0000f81e1b30}
DEFINE_GUID( GUID_BUS_TYPE_PCMCIA,                 0x09343630L, 0xaf9f, 0x11d0, 0x92, 0xE9, 0x00, 0x00, 0xf8, 0x1e, 0x1b, 0x30 );
// {c8ebdfb0-b510-11d0-80e5-00a0c92542e3}
DEFINE_GUID( GUID_BUS_TYPE_PCI,                    0xc8ebdfb0L, 0xb510, 0x11d0, 0x80, 0xe5, 0x00, 0xa0, 0xc9, 0x25, 0x42, 0xe3 );
// {e676f854-d87d-11d0-92b2-00a0c9055fc5}
DEFINE_GUID( GUID_BUS_TYPE_ISAPNP,                 0xe676f854L, 0xd87d, 0x11d0, 0x92, 0xb2, 0x00, 0xa0, 0xc9, 0x05, 0x5f, 0xc5 );
// {ddc35509-f3fc-11d0-a537-0000f8753ed1}
DEFINE_GUID( GUID_BUS_TYPE_EISA,                   0xddc35509L, 0xf3fc, 0x11d0, 0xa5, 0x37, 0x00, 0x00, 0xf8, 0x75, 0x3e, 0xd1 );
// {1c75997a-dc33-11d0-92b2-00a0c9055fc5}
DEFINE_GUID( GUID_BUS_TYPE_MCA,                    0x1c75997aL, 0xdc33, 0x11d0, 0x92, 0xb2, 0x00, 0xa0, 0xc9, 0x05, 0x5f, 0xc5 );
// {77114a87-8944-11d1-bd90-00a0c906be2d}
DEFINE_GUID( GUID_BUS_TYPE_SERENUM,                0x77114a87L, 0x8944, 0x11d1, 0xbd, 0x90, 0x00, 0xa0, 0xc9, 0x06, 0xbe, 0x2d );
// {9d7debbc-c85d-11d1-9eb4-006008c3a19a}
DEFINE_GUID( GUID_BUS_TYPE_USB,                    0x9d7debbcL, 0xc85d, 0x11d1, 0x9e, 0xb4, 0x00, 0x60, 0x08, 0xc3, 0xa1, 0x9a );
#endif

#if (NTDDI_VERSION >= NTDDI_WINXP)
// {c4ca1000-2ddc-11d5-a17a-00c04f60524d}
DEFINE_GUID( GUID_BUS_TYPE_LPTENUM,                0xc4ca1000L, 0x2ddc, 0x11d5, 0xa1, 0x7a, 0x00, 0xc0, 0x4f, 0x60, 0x52, 0x4d );
// {441ee000-4342-11d5-a184-00c04f60524d}
DEFINE_GUID( GUID_BUS_TYPE_USBPRINT,               0x441ee000L, 0x4342, 0x11d5, 0xa1, 0x84, 0x00, 0xc0, 0x4f, 0x60, 0x52, 0x4d );
// {441ee001-4342-11d5-a184-00c04f60524d}
DEFINE_GUID( GUID_BUS_TYPE_DOT4PRT,                0x441ee001L, 0x4342, 0x11d5, 0xa1, 0x84, 0x00, 0xc0, 0x4f, 0x60, 0x52, 0x4d );
// {f74e73eb-9ac5-45eb-be4d-772cc71ddfb3}
DEFINE_GUID( GUID_BUS_TYPE_1394,                   0xf74e73ebL, 0x9ac5, 0x45eb, 0xbe, 0x4d, 0x77, 0x2c, 0xc7, 0x1d, 0xdf, 0xb3 );
// {eeaf37d0-1963-47c4-aa48-72476db7cf49}
DEFINE_GUID( GUID_BUS_TYPE_HID,                    0xeeaf37d0L, 0x1963, 0x47c4, 0xaa, 0x48, 0x72, 0x47, 0x6d, 0xb7, 0xcf, 0x49 );
// {c06ff265-ae09-48f0-812c-16753d7cba83}
DEFINE_GUID( GUID_BUS_TYPE_AVC,                    0xc06ff265L, 0xae09, 0x48f0, 0x81, 0x2c, 0x16, 0x75, 0x3d, 0x7c, 0xba, 0x83 );
// {7ae17dc1-c944-44d6-881f-4c2e61053bc1}
DEFINE_GUID( GUID_BUS_TYPE_IRDA,                   0x7ae17dc1L, 0xc944, 0x44d6, 0x88, 0x1f, 0x4c, 0x2e, 0x61, 0x05, 0x3b, 0xc1 );
// {e700cc04-4036-4e89-9579-89ebf45f00cd}
DEFINE_GUID( GUID_BUS_TYPE_SD,                     0xe700cc04L, 0x4036, 0x4e89, 0x95, 0x79, 0x89, 0xeb, 0xf4, 0x5f, 0x00, 0xcd );
#endif

#if (NTDDI_VERSION >= NTDDI_WIN8)
// {d7b46895-001a-4942-891f-a7d46610a843}
DEFINE_GUID( GUID_BUS_TYPE_ACPI,                   0xd7b46895L, 0x001a, 0x4942, 0x89, 0x1f, 0xa7, 0xd4, 0x66, 0x10, 0xa8, 0x43 );
// {06d10322-7de0-4cef-8e25-197d0e7442e2}
DEFINE_GUID( GUID_BUS_TYPE_SW_DEVICE,              0x06d10322L, 0x7de0, 0x4cef, 0x8e, 0x25, 0x19, 0x7d, 0x0e, 0x74, 0x42, 0xe2 );
#endif

#if (NTDDI_VERSION >= NTDDI_WIN10_TH2)
// {375a5912-804c-45aa-bdc2-fdd25a1d9512}
DEFINE_GUID( GUID_BUS_TYPE_SCM,                    0x375a5912L, 0x804c, 0x45aa, 0xbd, 0xc2, 0xfd, 0xd2, 0x5a, 0x1d, 0x95, 0x12 );
#endif

//
// Power management WMI guids for device control
//

#if (NTDDI_VERSION >= NTDDI_WIN2K)
// {827c0a6f-feb0-11d0-bd26-00aa00b7b32a}
DEFINE_GUID( GUID_POWER_DEVICE_ENABLE,             0x827c0a6fL, 0xfeb0, 0x11d0, 0xbd, 0x26, 0x00, 0xaa, 0x00, 0xb7, 0xb3, 0x2a );
// {a45da735-feb0-11d0-bd26-00aa00b7b32a}
DEFINE_GUID( GUID_POWER_DEVICE_TIMEOUTS,           0xa45da735L, 0xfeb0, 0x11d0, 0xbd, 0x26, 0x00, 0xaa, 0x00, 0xb7, 0xb3, 0x2a );
// {a9546a82-feb0-11d0-bd26-00aa00b7b32a}
DEFINE_GUID( GUID_POWER_DEVICE_WAKE_ENABLE,        0xa9546a82L, 0xfeb0, 0x11d0, 0xbd, 0x26, 0x00, 0xaa, 0x00, 0xb7, 0xb3, 0x2a );
#endif

//
// User-Mode Driver Framework device events for detecting driver host crashes.
//

#if (NTDDI_VERSION >= NTDDI_WINXP)
// {c43d25bd-9346-40ee-a2d2-d70c15f8b75b}
DEFINE_GUID( GUID_WUDF_DEVICE_HOST_PROBLEM,        0xc43d25bdL, 0x9346, 0x40ee, 0xa2, 0xd2, 0xd7, 0x0c, 0x15, 0xf8, 0xb7, 0x5b );
#endif

//
// Dynamic partitioning replace interface.
//

#if (NTDDI_VERSION >= NTDDI_VISTA)
// {52363f5b-d891-429b-8195-aec5fef6853c}
DEFINE_GUID(GUID_PARTITION_UNIT_INTERFACE_STANDARD, 0x52363f5bL, 0xd891, 0x429b, 0x81, 0x95, 0xae, 0xc5, 0xfe, 0xf6, 0x85, 0x3c);
#endif

#if (NTDDI_VERSION >= NTDDI_WINBLUE)
// {9cc6b8ff-32e2-4834-b1de-b32ef8880a4b}
DEFINE_GUID(GUID_QUERY_CRASHDUMP_FUNCTIONS, 0x9cc6b8ff, 0x32e2, 0x4834, 0xb1, 0xde, 0xb3, 0x2e, 0xf8, 0x88, 0x0a, 0x4b);
#endif

#endif /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) */
#pragma endregion

