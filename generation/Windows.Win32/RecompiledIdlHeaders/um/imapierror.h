/* Copyright (c) Microsoft Corporation. All rights reserved. */

#ifndef __IMAPIERROR_H_
#define __IMAPIERROR_H_
#include <winapifamily.h>

#pragma region Desktop Family
#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)


#include <winerror.h>

const HRESULT IMAPI_S_PROPERTIESIGNORED     = MAKE_HRESULT( SEVERITY_SUCCESS, FACILITY_ITF, 0x200 + 0 );
const HRESULT IMAPI_S_BUFFER_TO_SMALL       = MAKE_HRESULT( SEVERITY_SUCCESS, FACILITY_ITF, 0x200 + 1 );
const HRESULT IMAPI_E_NOTOPENED             = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 11 );
const HRESULT IMAPI_E_NOTINITIALIZED        = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 12 );
const HRESULT IMAPI_E_USERABORT             = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 13 );
const HRESULT IMAPI_E_GENERIC               = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 14 );
const HRESULT IMAPI_E_MEDIUM_NOTPRESENT     = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 15 );
const HRESULT IMAPI_E_MEDIUM_INVALIDTYPE    = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 16 );
const HRESULT IMAPI_E_DEVICE_NOPROPERTIES   = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 17 );
const HRESULT IMAPI_E_DEVICE_NOTACCESSIBLE  = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 18 );
const HRESULT IMAPI_E_DEVICE_NOTPRESENT     = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 19 );
const HRESULT IMAPI_E_DEVICE_INVALIDTYPE    = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 20 );
const HRESULT IMAPI_E_INITIALIZE_WRITE      = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 21 );
const HRESULT IMAPI_E_INITIALIZE_ENDWRITE   = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 22 );
const HRESULT IMAPI_E_FILESYSTEM            = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 23 );
const HRESULT IMAPI_E_FILEACCESS            = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 24 );
const HRESULT IMAPI_E_DISCINFO              = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 25 );
const HRESULT IMAPI_E_TRACKNOTOPEN          = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 26 );
const HRESULT IMAPI_E_TRACKOPEN             = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 27 );
const HRESULT IMAPI_E_DISCFULL              = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 28 );
const HRESULT IMAPI_E_BADJOLIETNAME         = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 29 );
const HRESULT IMAPI_E_INVALIDIMAGE          = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 30 );
const HRESULT IMAPI_E_NOACTIVEFORMAT        = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 31 );
const HRESULT IMAPI_E_NOACTIVERECORDER      = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 32 );
const HRESULT IMAPI_E_WRONGFORMAT           = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 33 );
const HRESULT IMAPI_E_ALREADYOPEN           = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 34 );
const HRESULT IMAPI_E_WRONGDISC             = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 35 );
const HRESULT IMAPI_E_FILEEXISTS            = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 36 );
const HRESULT IMAPI_E_STASHINUSE            = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 37 );
const HRESULT IMAPI_E_DEVICE_STILL_IN_USE   = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 38 );
const HRESULT IMAPI_E_LOSS_OF_STREAMING     = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 39 );
const HRESULT IMAPI_E_COMPRESSEDSTASH       = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 40 );
const HRESULT IMAPI_E_ENCRYPTEDSTASH        = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 41 );
const HRESULT IMAPI_E_NOTENOUGHDISKFORSTASH = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 42 );
const HRESULT IMAPI_E_REMOVABLESTASH        = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 43 );
const HRESULT IMAPI_E_CANNOT_WRITE_TO_MEDIA = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 44 );
const HRESULT IMAPI_E_TRACK_NOT_BIG_ENOUGH  = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 45 );
const HRESULT IMAPI_E_BOOTIMAGE_AND_NONBLANK_DISC = MAKE_HRESULT( SEVERITY_ERROR, FACILITY_ITF, 0x200 + 46 );


#endif /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) */
#pragma endregion

#endif
