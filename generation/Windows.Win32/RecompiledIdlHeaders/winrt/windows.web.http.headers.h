
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif /*COM_NO_WINDOWS_H*/
#ifndef __windows2Eweb2Ehttp2Eheaders_h__
#define __windows2Eweb2Ehttp2Eheaders_h__
#ifndef __windows2Eweb2Ehttp2Eheaders_p_h__
#define __windows2Eweb2Ehttp2Eheaders_p_h__


#pragma once

//
// Deprecated attribute support
//

#pragma push_macro("DEPRECATED")
#undef DEPRECATED

#if !defined(DISABLE_WINRT_DEPRECATION)
#if defined(__cplusplus)
#if __cplusplus >= 201402
#define DEPRECATED(x) [[deprecated(x)]]
#define DEPRECATEDENUMERATOR(x) [[deprecated(x)]]
#elif defined(_MSC_VER)
#if _MSC_VER >= 1900
#define DEPRECATED(x) [[deprecated(x)]]
#define DEPRECATEDENUMERATOR(x) [[deprecated(x)]]
#else
#define DEPRECATED(x) __declspec(deprecated(x))
#define DEPRECATEDENUMERATOR(x)
#endif // _MSC_VER >= 1900
#else // Not Standard C++ or MSVC, ignore the construct.
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif  // C++ deprecation
#else // C - disable deprecation
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif
#else // Deprecation is disabled
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif  /* DEPRECATED */

// Disable Deprecation for this header, MIDL verifies that cross-type access is acceptable
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#else
#pragma warning(push)
#pragma warning(disable: 4996)
#endif

// Ensure that the setting of the /ns_prefix command line switch is consistent for all headers.
// If you get an error from the compiler indicating "warning C4005: 'CHECK_NS_PREFIX_STATE': macro redefinition", this
// indicates that you have included two different headers with different settings for the /ns_prefix MIDL command line switch
#if !defined(DISABLE_NS_PREFIX_CHECKS)
#define CHECK_NS_PREFIX_STATE "always"
#endif // !defined(DISABLE_NS_PREFIX_CHECKS)


#pragma push_macro("MIDL_CONST_ID")
#undef MIDL_CONST_ID
#define MIDL_CONST_ID const __declspec(selectany)


//  API Contract Inclusion Definitions
#if !defined(SPECIFIC_API_CONTRACT_DEFINITIONS)
#if !defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)
#define WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION 0x40000
#endif // defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)

#if !defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)
#define WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION 0xa0000
#endif // defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)

#if !defined(WINDOWS_GLOBALIZATION_GLOBALIZATIONJAPANESEPHONETICANALYZERCONTRACT_VERSION)
#define WINDOWS_GLOBALIZATION_GLOBALIZATIONJAPANESEPHONETICANALYZERCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_GLOBALIZATION_GLOBALIZATIONJAPANESEPHONETICANALYZERCONTRACT_VERSION)

#endif // defined(SPECIFIC_API_CONTRACT_DEFINITIONS)


// Header files for imported files
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "windowscontracts.h"
#include "Windows.Foundation.h"
#include "Windows.Globalization.h"
#include "Windows.Networking.h"
#include "Windows.Storage.Streams.h"
#include "Windows.Web.Http.h"
// Importing Collections header
#include <windows.foundation.collections.h>

#if defined(__cplusplus) && !defined(CINTERFACE)
/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpCacheDirectiveHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection ABI::Windows::Web::Http::Headers::IHttpCacheDirectiveHeaderValueCollection

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpChallengeHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpChallengeHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValueCollection

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpChallengeHeaderValueFactory;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValueFactory

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpChallengeHeaderValueStatics;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValueStatics

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpConnectionOptionHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpConnectionOptionHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValueCollection

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpConnectionOptionHeaderValueFactory;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValueFactory

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpConnectionOptionHeaderValueStatics;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValueStatics

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentCodingHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentCodingHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValueCollection

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentCodingHeaderValueFactory;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValueFactory

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentCodingHeaderValueStatics;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValueStatics

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentCodingWithQualityHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentCodingWithQualityHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValueCollection

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentCodingWithQualityHeaderValueFactory;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValueFactory

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentCodingWithQualityHeaderValueStatics;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValueStatics

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentDispositionHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue ABI::Windows::Web::Http::Headers::IHttpContentDispositionHeaderValue

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentDispositionHeaderValueFactory;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory ABI::Windows::Web::Http::Headers::IHttpContentDispositionHeaderValueFactory

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentDispositionHeaderValueStatics;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics ABI::Windows::Web::Http::Headers::IHttpContentDispositionHeaderValueStatics

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentHeaderCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection ABI::Windows::Web::Http::Headers::IHttpContentHeaderCollection

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentRangeHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValue

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentRangeHeaderValueFactory;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValueFactory

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentRangeHeaderValueStatics;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValueStatics

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpCookiePairHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpCookiePairHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValueCollection

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpCookiePairHeaderValueFactory;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValueFactory

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpCookiePairHeaderValueStatics;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValueStatics

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpCredentialsHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValue

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpCredentialsHeaderValueFactory;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValueFactory

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpCredentialsHeaderValueStatics;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValueStatics

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpDateOrDeltaHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue ABI::Windows::Web::Http::Headers::IHttpDateOrDeltaHeaderValue

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpDateOrDeltaHeaderValueStatics;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics ABI::Windows::Web::Http::Headers::IHttpDateOrDeltaHeaderValueStatics

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpExpectationHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpExpectationHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValueCollection

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpExpectationHeaderValueFactory;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValueFactory

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpExpectationHeaderValueStatics;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValueStatics

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpLanguageHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection ABI::Windows::Web::Http::Headers::IHttpLanguageHeaderValueCollection

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpLanguageRangeWithQualityHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpLanguageRangeWithQualityHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValueCollection

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpLanguageRangeWithQualityHeaderValueFactory;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValueFactory

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpLanguageRangeWithQualityHeaderValueStatics;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValueStatics

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpMediaTypeHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue ABI::Windows::Web::Http::Headers::IHttpMediaTypeHeaderValue

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpMediaTypeHeaderValueFactory;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory ABI::Windows::Web::Http::Headers::IHttpMediaTypeHeaderValueFactory

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpMediaTypeHeaderValueStatics;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics ABI::Windows::Web::Http::Headers::IHttpMediaTypeHeaderValueStatics

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpMediaTypeWithQualityHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpMediaTypeWithQualityHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValueCollection

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpMediaTypeWithQualityHeaderValueFactory;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValueFactory

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpMediaTypeWithQualityHeaderValueStatics;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValueStatics

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpMethodHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection ABI::Windows::Web::Http::Headers::IHttpMethodHeaderValueCollection

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpNameValueHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpNameValueHeaderValueFactory;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValueFactory

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpNameValueHeaderValueStatics;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValueStatics

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpProductHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue ABI::Windows::Web::Http::Headers::IHttpProductHeaderValue

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpProductHeaderValueFactory;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory ABI::Windows::Web::Http::Headers::IHttpProductHeaderValueFactory

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpProductHeaderValueStatics;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics ABI::Windows::Web::Http::Headers::IHttpProductHeaderValueStatics

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpProductInfoHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpProductInfoHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValueCollection

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpProductInfoHeaderValueFactory;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValueFactory

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpProductInfoHeaderValueStatics;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValueStatics

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpRequestHeaderCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection ABI::Windows::Web::Http::Headers::IHttpRequestHeaderCollection

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpResponseHeaderCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection ABI::Windows::Web::Http::Headers::IHttpResponseHeaderCollection

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpTransferCodingHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpTransferCodingHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValueCollection

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpTransferCodingHeaderValueFactory;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValueFactory

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpTransferCodingHeaderValueStatics;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValueStatics

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C++)

// Collection interface definitions

#ifndef DEF___FIKeyValuePair_2_HSTRING_HSTRING_USE
#define DEF___FIKeyValuePair_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("60310303-49c5-52e6-abc6-a9b36eccc716"))
IKeyValuePair<HSTRING, HSTRING> : IKeyValuePair_impl<HSTRING, HSTRING>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IKeyValuePair`2<String, String>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IKeyValuePair<HSTRING, HSTRING> __FIKeyValuePair_2_HSTRING_HSTRING_t;
#define __FIKeyValuePair_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIKeyValuePair_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIKeyValuePair_2_HSTRING_HSTRING_USE */



#ifndef DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#define DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("05eb86f1-7140-5517-b88d-cbaebe57e6b1"))
IIterator<__FIKeyValuePair_2_HSTRING_HSTRING*> : IIterator_impl<__FIKeyValuePair_2_HSTRING_HSTRING*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<__FIKeyValuePair_2_HSTRING_HSTRING*> __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_t;
#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_USE */



#ifndef DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#define DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e9bdaaf0-cbf6-5c72-be90-29cbf3a1319b"))
IIterable<__FIKeyValuePair_2_HSTRING_HSTRING*> : IIterable_impl<__FIKeyValuePair_2_HSTRING_HSTRING*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<__FIKeyValuePair_2_HSTRING_HSTRING*> __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_t;
#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_USE */


namespace ABI {
    namespace Windows {
        namespace Globalization {
            class Language;
        } /* Globalization */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CGlobalization_CILanguage_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CILanguage_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Globalization {
            interface ILanguage;
        } /* Globalization */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CGlobalization_CILanguage ABI::Windows::Globalization::ILanguage

#endif // ____x_ABI_CWindows_CGlobalization_CILanguage_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CGlobalization__CLanguage_USE
#define DEF___FIIterator_1_Windows__CGlobalization__CLanguage_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("30e99ae6-f414-5243-8db2-aab38ea3f1f1"))
IIterator<ABI::Windows::Globalization::Language*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Globalization::Language*, ABI::Windows::Globalization::ILanguage*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Globalization.Language>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Globalization::Language*> __FIIterator_1_Windows__CGlobalization__CLanguage_t;
#define __FIIterator_1_Windows__CGlobalization__CLanguage ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CGlobalization__CLanguage_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CGlobalization__CLanguage_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CGlobalization__CLanguage_USE
#define DEF___FIIterable_1_Windows__CGlobalization__CLanguage_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("48409a10-61b6-5db1-a69d-8abc46ac608a"))
IIterable<ABI::Windows::Globalization::Language*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Globalization::Language*, ABI::Windows::Globalization::ILanguage*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Globalization.Language>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Globalization::Language*> __FIIterable_1_Windows__CGlobalization__CLanguage_t;
#define __FIIterable_1_Windows__CGlobalization__CLanguage ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CGlobalization__CLanguage_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CGlobalization__CLanguage_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpChallengeHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6bc05705-2c6f-57e8-bf96-56a761e90e8f"))
IIterator<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpChallengeHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_t;
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("17847e58-f0cf-52e7-81c0-9d06a081569f"))
IIterable<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpChallengeHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_t;
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpConnectionOptionHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e95057be-e8bd-53df-a2f6-865a66a07c6b"))
IIterator<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_t;
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1afc512f-dfa2-5528-8aef-6e6a37789b3c"))
IIterable<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_t;
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpContentCodingHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e21ad0b2-c893-5360-a4fe-f083b308a9cd"))
IIterator<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpContentCodingHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_t;
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0e8960c2-76e5-56c1-9fe6-8cd9018a6786"))
IIterable<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpContentCodingHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_t;
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpContentCodingWithQualityHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3780c808-8b98-5327-84c7-055363fe32ad"))
IIterator<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_t;
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("916e6271-cef6-53b8-b93f-dc8dca559e50"))
IIterable<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_t;
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpCookiePairHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ed3b6323-b1c3-558b-9917-0826c4a9e8c0"))
IIterator<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpCookiePairHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_t;
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("16773244-5011-5244-bb00-14db4cf71005"))
IIterable<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpCookiePairHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_t;
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpExpectationHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6b72326a-46b1-5d80-a162-c5f45be02e2b"))
IIterator<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpExpectationHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_t;
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0a391c2b-13c3-59b8-8662-13affb9d1754"))
IIterable<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpExpectationHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_t;
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpLanguageRangeWithQualityHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a25503de-4aef-5ef4-9f06-5df4094051be"))
IIterator<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_t;
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0c5a4a0d-dbb7-5abf-a5fd-c3b98d9c1487"))
IIterable<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_t;
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpMediaTypeWithQualityHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6a2084a3-941a-5528-a2ec-28cf1ff9b1a9"))
IIterator<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_t;
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ffc7dfde-58b8-51e9-b33b-65a5d6a4e24c"))
IIterable<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_t;
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpNameValueHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3bb0c8fa-5f1f-5c70-9950-5d1d1a703dd4"))
IIterator<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_t;
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5838a126-b617-5417-b32e-ded2d27d40a3"))
IIterable<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_t;
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpProductInfoHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4f785951-b59c-5108-b0cd-1437578af49c"))
IIterator<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpProductInfoHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_t;
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bf97cf99-e614-5765-bad7-161ae3a93ae9"))
IIterable<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpProductInfoHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_t;
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpTransferCodingHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("49e58dec-b5cd-5ba4-a603-365d1588ad4c"))
IIterator<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpTransferCodingHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_t;
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("57402048-38bf-5055-acb6-5c4da765e388"))
IIterable<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpTransferCodingHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_t;
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                class HttpMethod;
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CIHttpMethod_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CIHttpMethod_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                interface IHttpMethod;
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CWeb_CHttp_CIHttpMethod ABI::Windows::Web::Http::IHttpMethod

#endif // ____x_ABI_CWindows_CWeb_CHttp_CIHttpMethod_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d13a880f-d612-50cf-a6f9-dd96f916f491"))
IIterator<ABI::Windows::Web::Http::HttpMethod*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::HttpMethod*, ABI::Windows::Web::Http::IHttpMethod*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.HttpMethod>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Web::Http::HttpMethod*> __FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_t;
#define __FIIterator_1_Windows__CWeb__CHttp__CHttpMethod ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c088bb1a-dc61-57e1-b967-78dab3541da5"))
IIterable<ABI::Windows::Web::Http::HttpMethod*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::HttpMethod*, ABI::Windows::Web::Http::IHttpMethod*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.HttpMethod>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Web::Http::HttpMethod*> __FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_t;
#define __FIIterable_1_Windows__CWeb__CHttp__CHttpMethod ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#ifndef DEF___FIMapView_2_HSTRING_HSTRING_USE
#define DEF___FIMapView_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ac7f26f2-feb7-5b2a-8ac4-345bc62caede"))
IMapView<HSTRING, HSTRING> : IMapView_impl<HSTRING, HSTRING>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IMapView`2<String, String>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMapView<HSTRING, HSTRING> __FIMapView_2_HSTRING_HSTRING_t;
#define __FIMapView_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIMapView_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMapView_2_HSTRING_HSTRING_USE */



#ifndef DEF___FIMap_2_HSTRING_HSTRING_USE
#define DEF___FIMap_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f6d1f700-49c2-52ae-8154-826f9908773c"))
IMap<HSTRING, HSTRING> : IMap_impl<HSTRING, HSTRING>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IMap`2<String, String>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMap<HSTRING, HSTRING> __FIMap_2_HSTRING_HSTRING_t;
#define __FIMap_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIMap_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMap_2_HSTRING_HSTRING_USE */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CGlobalization__CLanguage_USE
#define DEF___FIVectorView_1_Windows__CGlobalization__CLanguage_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("144b0f3d-2d59-5dd2-b012-908ec3e06435"))
IVectorView<ABI::Windows::Globalization::Language*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Globalization::Language*, ABI::Windows::Globalization::ILanguage*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Globalization.Language>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Globalization::Language*> __FIVectorView_1_Windows__CGlobalization__CLanguage_t;
#define __FIVectorView_1_Windows__CGlobalization__CLanguage ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CGlobalization__CLanguage_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CGlobalization__CLanguage_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8b79423f-b4a3-501d-bac2-b88e78e13a21"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpChallengeHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_t;
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1beae481-9d30-5ac8-942c-49a5f8737adf"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_t;
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("dcdf2620-b6d0-5835-8bec-d3b946a50f55"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpContentCodingHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_t;
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("eb18569b-a7ab-58bb-8880-dd022f755b51"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_t;
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ad89192d-6ef8-56b5-a4dc-e48d0e85d569"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpCookiePairHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_t;
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("71a22f32-a3c0-574b-87b4-127199cc7d5e"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpExpectationHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_t;
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("551fb7fb-ce42-5ffd-a2e0-2a6ce1698070"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_t;
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f1c1e9bd-01a6-5bd3-af7b-c14220a645c0"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_t;
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1ef903c8-8eef-5e9e-b938-b9e428a77672"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_t;
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("82fef9f0-e283-5279-aa50-f0b3e5726a86"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpProductInfoHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_t;
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("25c1a8d6-229b-5421-b3b3-b7ef078fad7f"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpTransferCodingHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_t;
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ef132fb7-d286-5327-b38a-be7d008328fe"))
IVectorView<ABI::Windows::Web::Http::HttpMethod*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::HttpMethod*, ABI::Windows::Web::Http::IHttpMethod*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.HttpMethod>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Web::Http::HttpMethod*> __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_t;
#define __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CGlobalization__CLanguage_USE
#define DEF___FIVector_1_Windows__CGlobalization__CLanguage_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("dcf2525a-42c0-501d-9fcb-471fae060396"))
IVector<ABI::Windows::Globalization::Language*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Globalization::Language*, ABI::Windows::Globalization::ILanguage*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.Globalization.Language>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::Globalization::Language*> __FIVector_1_Windows__CGlobalization__CLanguage_t;
#define __FIVector_1_Windows__CGlobalization__CLanguage ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CGlobalization__CLanguage_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CGlobalization__CLanguage_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3737fc5e-0b27-52a3-9e40-cbb9844e6ab7"))
IVector<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpChallengeHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_t;
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c312da8d-c82f-51c9-b705-5a26d52fbee6"))
IVector<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_t;
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b94e539f-44b6-54c6-9ad4-e2844b3e0be1"))
IVector<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpContentCodingHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_t;
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("33f9653d-0eed-5368-a51e-98385191f86f"))
IVector<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_t;
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bc196ace-8a56-5fd0-9878-c807edd8645a"))
IVector<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpCookiePairHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_t;
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("18e138ee-fec7-527d-8693-deebca4f3dcd"))
IVector<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpExpectationHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_t;
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b6df6da2-8d92-5270-9584-d6a9a931586d"))
IVector<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_t;
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c18538f7-c256-5666-8868-2225af3574b6"))
IVector<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_t;
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("2cf800d4-35d0-545c-ab82-f6793be74cba"))
IVector<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_t;
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("69392060-6c0f-5de6-8ced-f14fc1b83376"))
IVector<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpProductInfoHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_t;
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("38e72562-e17c-5d68-aad1-8e8a860b8969"))
IVector<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpTransferCodingHeaderValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_t;
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHttpMethod_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHttpMethod_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("228a73a2-a509-5a78-bd7f-db94ba0bef21"))
IVector<ABI::Windows::Web::Http::HttpMethod*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::HttpMethod*, ABI::Windows::Web::Http::IHttpMethod*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.HttpMethod>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::Web::Http::HttpMethod*> __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_t;
#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHttpMethod_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHttpMethod_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#ifndef DEF___FIReference_1_double_USE
#define DEF___FIReference_1_double_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("2f2d6c29-5473-5f3e-92e7-96572bb990e2"))
IReference<double> : IReference_impl<double>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Double>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<double> __FIReference_1_double_t;
#define __FIReference_1_double ABI::Windows::Foundation::__FIReference_1_double_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_double_USE */



#ifndef DEF___FIReference_1_UINT32_USE
#define DEF___FIReference_1_UINT32_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("513ef3af-e784-5325-a91e-97c2b8111cf3"))
IReference<UINT32> : IReference_impl<UINT32>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<UInt32>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<UINT32> __FIReference_1_UINT32_t;
#define __FIReference_1_UINT32 ABI::Windows::Foundation::__FIReference_1_UINT32_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_UINT32_USE */



#ifndef DEF___FIReference_1_UINT64_USE
#define DEF___FIReference_1_UINT64_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("6755e376-53bb-568b-a11d-17239868309e"))
IReference<UINT64> : IReference_impl<UINT64>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<UInt64>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<UINT64> __FIReference_1_UINT64_t;
#define __FIReference_1_UINT64 ABI::Windows::Foundation::__FIReference_1_UINT64_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_UINT64_USE */


namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct DateTime DateTime;
        } /* Foundation */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIReference_1_Windows__CFoundation__CDateTime_USE
#define DEF___FIReference_1_Windows__CFoundation__CDateTime_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("5541d8a7-497c-5aa4-86fc-7713adbf2a2c"))
IReference<struct ABI::Windows::Foundation::DateTime> : IReference_impl<struct ABI::Windows::Foundation::DateTime>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Windows.Foundation.DateTime>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<struct ABI::Windows::Foundation::DateTime> __FIReference_1_Windows__CFoundation__CDateTime_t;
#define __FIReference_1_Windows__CFoundation__CDateTime ABI::Windows::Foundation::__FIReference_1_Windows__CFoundation__CDateTime_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Windows__CFoundation__CDateTime_USE */

#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct TimeSpan TimeSpan;
        } /* Foundation */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIReference_1_Windows__CFoundation__CTimeSpan_USE
#define DEF___FIReference_1_Windows__CFoundation__CTimeSpan_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("604d0c4c-91de-5c2a-935f-362f13eaf800"))
IReference<struct ABI::Windows::Foundation::TimeSpan> : IReference_impl<struct ABI::Windows::Foundation::TimeSpan>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<struct ABI::Windows::Foundation::TimeSpan> __FIReference_1_Windows__CFoundation__CTimeSpan_t;
#define __FIReference_1_Windows__CFoundation__CTimeSpan ABI::Windows::Foundation::__FIReference_1_Windows__CFoundation__CTimeSpan_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Windows__CFoundation__CTimeSpan_USE */

#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IPropertyValue;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIPropertyValue ABI::Windows::Foundation::IPropertyValue

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIStringable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIStringable_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IStringable;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIStringable ABI::Windows::Foundation::IStringable

#endif // ____x_ABI_CWindows_CFoundation_CIStringable_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Foundation {
            class Uri;
        } /* Foundation */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IUriRuntimeClass;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIUriRuntimeClass ABI::Windows::Foundation::IUriRuntimeClass

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Networking {
            class HostName;
        } /* Networking */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CNetworking_CIHostName_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CIHostName_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Networking {
            interface IHostName;
        } /* Networking */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CNetworking_CIHostName ABI::Windows::Networking::IHostName

#endif // ____x_ABI_CWindows_CNetworking_CIHostName_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace Streams {
                interface IBuffer;
            } /* Streams */
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CStreams_CIBuffer ABI::Windows::Storage::Streams::IBuffer

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpCacheDirectiveHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpChallengeHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpConnectionOptionHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpContentCodingHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpContentCodingWithQualityHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpContentDispositionHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpContentRangeHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpCookiePairHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpCredentialsHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpDateOrDeltaHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpExpectationHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpLanguageHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpLanguageRangeWithQualityHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpMediaTypeHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpMediaTypeWithQualityHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpMethodHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpProductHeaderValue;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpProductInfoHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    class HttpTransferCodingHeaderValueCollection;
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpCacheDirectiveHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCacheDirectiveHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpCacheDirectiveHeaderValueCollection";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("9a586b89-d5d0-4fbe-bd9d-b5b3636811b4")
                    IHttpCacheDirectiveHeaderValueCollection : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_MaxAge(
                            __FIReference_1_Windows__CFoundation__CTimeSpan** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_MaxAge(
                            __FIReference_1_Windows__CFoundation__CTimeSpan* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_MaxStale(
                            __FIReference_1_Windows__CFoundation__CTimeSpan** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_MaxStale(
                            __FIReference_1_Windows__CFoundation__CTimeSpan* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_MinFresh(
                            __FIReference_1_Windows__CFoundation__CTimeSpan** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_MinFresh(
                            __FIReference_1_Windows__CFoundation__CTimeSpan* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SharedMaxAge(
                            __FIReference_1_Windows__CFoundation__CTimeSpan** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SharedMaxAge(
                            __FIReference_1_Windows__CFoundation__CTimeSpan* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE ParseAdd(
                            HSTRING input
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParseAdd(
                            HSTRING input,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpCacheDirectiveHeaderValueCollection = _uuidof(IHttpCacheDirectiveHeaderValueCollection);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpChallengeHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpChallengeHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpChallengeHeaderValue[] = L"Windows.Web.Http.Headers.IHttpChallengeHeaderValue";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("393361af-0f7d-4820-9fdd-a2b956eeaeab")
                    IHttpChallengeHeaderValue : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Parameters(
                            __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Scheme(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Token(
                            HSTRING* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpChallengeHeaderValue = _uuidof(IHttpChallengeHeaderValue);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpChallengeHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpChallengeHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpChallengeHeaderValueCollection";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("ca9e5f81-aee0-4353-a10b-e625babd64c2")
                    IHttpChallengeHeaderValueCollection : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE ParseAdd(
                            HSTRING input
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParseAdd(
                            HSTRING input,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpChallengeHeaderValueCollection = _uuidof(IHttpChallengeHeaderValueCollection);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpChallengeHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpChallengeHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpChallengeHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpChallengeHeaderValueFactory";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("c452c451-d99c-40aa-9399-90eeb98fc613")
                    IHttpChallengeHeaderValueFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateFromScheme(
                            HSTRING scheme,
                            ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE CreateFromSchemeWithToken(
                            HSTRING scheme,
                            HSTRING token,
                            ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpChallengeHeaderValueFactory = _uuidof(IHttpChallengeHeaderValueFactory);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpChallengeHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpChallengeHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpChallengeHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpChallengeHeaderValueStatics";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("f3d38a72-fc01-4d01-a008-fcb7c459d635")
                    IHttpChallengeHeaderValueStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Parse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue** challengeHeaderValue,
                            boolean* succeeded
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpChallengeHeaderValueStatics = _uuidof(IHttpChallengeHeaderValueStatics);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpConnectionOptionHeaderValue[] = L"Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValue";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("cb4af27a-4e90-45eb-8dcd-fd1408f4c44f")
                    IHttpConnectionOptionHeaderValue : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Token(
                            HSTRING* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpConnectionOptionHeaderValue = _uuidof(IHttpConnectionOptionHeaderValue);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpConnectionOptionHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueCollection";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("e4f56c1d-5142-4e00-8e0f-019509337629")
                    IHttpConnectionOptionHeaderValueCollection : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE ParseAdd(
                            HSTRING input
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParseAdd(
                            HSTRING input,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpConnectionOptionHeaderValueCollection = _uuidof(IHttpConnectionOptionHeaderValueCollection);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpConnectionOptionHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueFactory";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("d93ccc1e-0b7d-4c3f-a58d-a2a1bdeabc0a")
                    IHttpConnectionOptionHeaderValueFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Create(
                            HSTRING token,
                            ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpConnectionOptionHeaderValueFactory = _uuidof(IHttpConnectionOptionHeaderValueFactory);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpConnectionOptionHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueStatics";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("aaa75d37-a946-4b1f-85af-48b68b3c50bd")
                    IHttpConnectionOptionHeaderValueStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Parse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue** connectionOptionHeaderValue,
                            boolean* succeeded
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpConnectionOptionHeaderValueStatics = _uuidof(IHttpConnectionOptionHeaderValueStatics);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentCodingHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentCodingHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingHeaderValue[] = L"Windows.Web.Http.Headers.IHttpContentCodingHeaderValue";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("bcf7f92a-9376-4d85-bccc-9f4f9acab434")
                    IHttpContentCodingHeaderValue : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_ContentCoding(
                            HSTRING* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpContentCodingHeaderValue = _uuidof(IHttpContentCodingHeaderValue);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentCodingHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpContentCodingHeaderValueCollection";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("7d221721-a6db-436e-8e83-91596192819c")
                    IHttpContentCodingHeaderValueCollection : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE ParseAdd(
                            HSTRING input
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParseAdd(
                            HSTRING input,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpContentCodingHeaderValueCollection = _uuidof(IHttpContentCodingHeaderValueCollection);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentCodingHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentCodingHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpContentCodingHeaderValueFactory";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("c53d2bd7-332b-4350-8510-2e67a2289a5a")
                    IHttpContentCodingHeaderValueFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Create(
                            HSTRING contentCoding,
                            ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpContentCodingHeaderValueFactory = _uuidof(IHttpContentCodingHeaderValueFactory);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentCodingHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentCodingHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpContentCodingHeaderValueStatics";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("94d8602e-f9bf-42f7-aa46-ed272a41e212")
                    IHttpContentCodingHeaderValueStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Parse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue** contentCodingHeaderValue,
                            boolean* succeeded
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpContentCodingHeaderValueStatics = _uuidof(IHttpContentCodingHeaderValueStatics);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingWithQualityHeaderValue[] = L"Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValue";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("94531cd5-8b13-4d73-8651-f76b38f88495")
                    IHttpContentCodingWithQualityHeaderValue : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_ContentCoding(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Quality(
                            __FIReference_1_double** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpContentCodingWithQualityHeaderValue = _uuidof(IHttpContentCodingWithQualityHeaderValue);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingWithQualityHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueCollection";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("7c0d753e-e899-4378-b5c8-412d820711cc")
                    IHttpContentCodingWithQualityHeaderValueCollection : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE ParseAdd(
                            HSTRING input
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParseAdd(
                            HSTRING input,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpContentCodingWithQualityHeaderValueCollection = _uuidof(IHttpContentCodingWithQualityHeaderValueCollection);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingWithQualityHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueFactory";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("c45eee1a-c553-46fc-ade2-d75c1d53df7b")
                    IHttpContentCodingWithQualityHeaderValueFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateFromValue(
                            HSTRING contentCoding,
                            ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE CreateFromValueWithQuality(
                            HSTRING contentCoding,
                            DOUBLE quality,
                            ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpContentCodingWithQualityHeaderValueFactory = _uuidof(IHttpContentCodingWithQualityHeaderValueFactory);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingWithQualityHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueStatics";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("e8c9357c-8f89-4801-8e75-4c9abfc3de71")
                    IHttpContentCodingWithQualityHeaderValueStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Parse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue** contentCodingWithQualityHeaderValue,
                            boolean* succeeded
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpContentCodingWithQualityHeaderValueStatics = _uuidof(IHttpContentCodingWithQualityHeaderValueStatics);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentDispositionHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentDispositionHeaderValue[] = L"Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("f2a2eedc-2629-4b49-9908-96a168e9365e")
                    IHttpContentDispositionHeaderValue : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_DispositionType(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_DispositionType(
                            HSTRING value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_FileName(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_FileName(
                            HSTRING value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_FileNameStar(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_FileNameStar(
                            HSTRING value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Name(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Name(
                            HSTRING value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Parameters(
                            __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Size(
                            __FIReference_1_UINT64** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Size(
                            __FIReference_1_UINT64* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpContentDispositionHeaderValue = _uuidof(IHttpContentDispositionHeaderValue);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentDispositionHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentDispositionHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueFactory";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("9915bbc4-456c-4e81-8295-b2ab3cbcf545")
                    IHttpContentDispositionHeaderValueFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Create(
                            HSTRING dispositionType,
                            ABI::Windows::Web::Http::Headers::IHttpContentDispositionHeaderValue** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpContentDispositionHeaderValueFactory = _uuidof(IHttpContentDispositionHeaderValueFactory);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentDispositionHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentDispositionHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueStatics";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("29c56067-5a37-46e4-b074-c5177d69ca66")
                    IHttpContentDispositionHeaderValueStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Parse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpContentDispositionHeaderValue** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpContentDispositionHeaderValue** contentDispositionHeaderValue,
                            boolean* succeeded
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpContentDispositionHeaderValueStatics = _uuidof(IHttpContentDispositionHeaderValueStatics);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentHeaderCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentHeaderCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentHeaderCollection[] = L"Windows.Web.Http.Headers.IHttpContentHeaderCollection";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("40612a44-47ae-4b7e-9124-69628b64aa18")
                    IHttpContentHeaderCollection : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_ContentDisposition(
                            ABI::Windows::Web::Http::Headers::IHttpContentDispositionHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ContentDisposition(
                            ABI::Windows::Web::Http::Headers::IHttpContentDispositionHeaderValue* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ContentEncoding(
                            ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValueCollection** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ContentLanguage(
                            ABI::Windows::Web::Http::Headers::IHttpLanguageHeaderValueCollection** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ContentLength(
                            __FIReference_1_UINT64** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ContentLength(
                            __FIReference_1_UINT64* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ContentLocation(
                            ABI::Windows::Foundation::IUriRuntimeClass** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ContentLocation(
                            ABI::Windows::Foundation::IUriRuntimeClass* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ContentMD5(
                            ABI::Windows::Storage::Streams::IBuffer** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ContentMD5(
                            ABI::Windows::Storage::Streams::IBuffer* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ContentRange(
                            ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ContentRange(
                            ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValue* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ContentType(
                            ABI::Windows::Web::Http::Headers::IHttpMediaTypeHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ContentType(
                            ABI::Windows::Web::Http::Headers::IHttpMediaTypeHeaderValue* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Expires(
                            __FIReference_1_Windows__CFoundation__CDateTime** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Expires(
                            __FIReference_1_Windows__CFoundation__CDateTime* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LastModified(
                            __FIReference_1_Windows__CFoundation__CDateTime** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LastModified(
                            __FIReference_1_Windows__CFoundation__CDateTime* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE Append(
                            HSTRING name,
                            HSTRING value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryAppendWithoutValidation(
                            HSTRING name,
                            HSTRING value,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpContentHeaderCollection = _uuidof(IHttpContentHeaderCollection);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentRangeHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentRangeHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentRangeHeaderValue[] = L"Windows.Web.Http.Headers.IHttpContentRangeHeaderValue";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("04d967d3-a4f6-495c-9530-8579fcba8aa9")
                    IHttpContentRangeHeaderValue : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_FirstBytePosition(
                            __FIReference_1_UINT64** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LastBytePosition(
                            __FIReference_1_UINT64** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Length(
                            __FIReference_1_UINT64** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Unit(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Unit(
                            HSTRING value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpContentRangeHeaderValue = _uuidof(IHttpContentRangeHeaderValue);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentRangeHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentRangeHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentRangeHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpContentRangeHeaderValueFactory";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("3f5bd691-a03c-4456-9a6f-ef27ecd03cae")
                    IHttpContentRangeHeaderValueFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateFromLength(
                            UINT64 length,
                            ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE CreateFromRange(
                            UINT64 from,
                            UINT64 to,
                            ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE CreateFromRangeWithLength(
                            UINT64 from,
                            UINT64 to,
                            UINT64 length,
                            ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValue** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpContentRangeHeaderValueFactory = _uuidof(IHttpContentRangeHeaderValueFactory);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentRangeHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentRangeHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentRangeHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpContentRangeHeaderValueStatics";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("80a346ca-174c-4fae-821c-134cd294aa38")
                    IHttpContentRangeHeaderValueStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Parse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValue** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValue** contentRangeHeaderValue,
                            boolean* succeeded
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpContentRangeHeaderValueStatics = _uuidof(IHttpContentRangeHeaderValueStatics);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpCookiePairHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpCookiePairHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCookiePairHeaderValue[] = L"Windows.Web.Http.Headers.IHttpCookiePairHeaderValue";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("cbd46217-4b29-412b-bd90-b3d814ab8e1b")
                    IHttpCookiePairHeaderValue : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Name(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Value(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Value(
                            HSTRING value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpCookiePairHeaderValue = _uuidof(IHttpCookiePairHeaderValue);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpCookiePairHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCookiePairHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpCookiePairHeaderValueCollection";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("f3f44350-581e-4ecc-9f59-e507d04f06e6")
                    IHttpCookiePairHeaderValueCollection : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE ParseAdd(
                            HSTRING input
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParseAdd(
                            HSTRING input,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpCookiePairHeaderValueCollection = _uuidof(IHttpCookiePairHeaderValueCollection);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpCookiePairHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpCookiePairHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCookiePairHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpCookiePairHeaderValueFactory";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("635e326f-146f-4f56-aa21-2cb7d6d58b1e")
                    IHttpCookiePairHeaderValueFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateFromName(
                            HSTRING name,
                            ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE CreateFromNameWithValue(
                            HSTRING name,
                            HSTRING value,
                            ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue** cookiePairHeaderValue
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpCookiePairHeaderValueFactory = _uuidof(IHttpCookiePairHeaderValueFactory);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpCookiePairHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpCookiePairHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCookiePairHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpCookiePairHeaderValueStatics";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("6e866d48-06af-4462-8158-99388d5dca81")
                    IHttpCookiePairHeaderValueStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Parse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue** cookiePairHeaderValue,
                            boolean* succeeded
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpCookiePairHeaderValueStatics = _uuidof(IHttpCookiePairHeaderValueStatics);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpCredentialsHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpCredentialsHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCredentialsHeaderValue[] = L"Windows.Web.Http.Headers.IHttpCredentialsHeaderValue";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("c34cc3cb-542e-4177-a6c7-b674ce193fbf")
                    IHttpCredentialsHeaderValue : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Parameters(
                            __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Scheme(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Token(
                            HSTRING* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpCredentialsHeaderValue = _uuidof(IHttpCredentialsHeaderValue);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpCredentialsHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpCredentialsHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCredentialsHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpCredentialsHeaderValueFactory";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("f21d9e91-4d1c-4182-bfd1-34470a62f950")
                    IHttpCredentialsHeaderValueFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateFromScheme(
                            HSTRING scheme,
                            ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE CreateFromSchemeWithToken(
                            HSTRING scheme,
                            HSTRING token,
                            ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValue** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpCredentialsHeaderValueFactory = _uuidof(IHttpCredentialsHeaderValueFactory);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpCredentialsHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpCredentialsHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCredentialsHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpCredentialsHeaderValueStatics";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("a69b2be6-ce8c-4443-a35a-1b727b131036")
                    IHttpCredentialsHeaderValueStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Parse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValue** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValue** credentialsHeaderValue,
                            boolean* succeeded
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpCredentialsHeaderValueStatics = _uuidof(IHttpCredentialsHeaderValueStatics);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpDateOrDeltaHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpDateOrDeltaHeaderValue[] = L"Windows.Web.Http.Headers.IHttpDateOrDeltaHeaderValue";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("eafcaa6a-c4dc-49e2-a27d-043adf5867a3")
                    IHttpDateOrDeltaHeaderValue : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Date(
                            __FIReference_1_Windows__CFoundation__CDateTime** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Delta(
                            __FIReference_1_Windows__CFoundation__CTimeSpan** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpDateOrDeltaHeaderValue = _uuidof(IHttpDateOrDeltaHeaderValue);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpDateOrDeltaHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpDateOrDeltaHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpDateOrDeltaHeaderValueStatics";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("7c2659a8-6672-4e90-9a9a-f39766f7f576")
                    IHttpDateOrDeltaHeaderValueStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Parse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpDateOrDeltaHeaderValue** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpDateOrDeltaHeaderValue** dateOrDeltaHeaderValue,
                            boolean* succeeded
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpDateOrDeltaHeaderValueStatics = _uuidof(IHttpDateOrDeltaHeaderValueStatics);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpExpectationHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpExpectationHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpExpectationHeaderValue[] = L"Windows.Web.Http.Headers.IHttpExpectationHeaderValue";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("4ce585cd-3a99-43af-a2e6-ec232fea9658")
                    IHttpExpectationHeaderValue : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Name(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Value(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Value(
                            HSTRING value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Parameters(
                            __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpExpectationHeaderValue = _uuidof(IHttpExpectationHeaderValue);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpExpectationHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpExpectationHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpExpectationHeaderValueCollection";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("e78521b3-a0e2-4ac4-9e66-79706cb9fd58")
                    IHttpExpectationHeaderValueCollection : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE ParseAdd(
                            HSTRING input
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParseAdd(
                            HSTRING input,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpExpectationHeaderValueCollection = _uuidof(IHttpExpectationHeaderValueCollection);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpExpectationHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpExpectationHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpExpectationHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpExpectationHeaderValueFactory";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("4ea275cb-d53e-4868-8856-1e21a5030dc0")
                    IHttpExpectationHeaderValueFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateFromName(
                            HSTRING name,
                            ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE CreateFromNameWithValue(
                            HSTRING name,
                            HSTRING value,
                            ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue** expectationHeaderValue
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpExpectationHeaderValueFactory = _uuidof(IHttpExpectationHeaderValueFactory);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpExpectationHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpExpectationHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpExpectationHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpExpectationHeaderValueStatics";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("3019abe2-cfe5-473b-a57f-fba5b14eb257")
                    IHttpExpectationHeaderValueStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Parse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue** expectationHeaderValue,
                            boolean* succeeded
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpExpectationHeaderValueStatics = _uuidof(IHttpExpectationHeaderValueStatics);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpLanguageHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpLanguageHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpLanguageHeaderValueCollection";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("9ebd7ca3-8219-44f6-9902-8c56dfd3340c")
                    IHttpLanguageHeaderValueCollection : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE ParseAdd(
                            HSTRING input
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParseAdd(
                            HSTRING input,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpLanguageHeaderValueCollection = _uuidof(IHttpLanguageHeaderValueCollection);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpLanguageRangeWithQualityHeaderValue[] = L"Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValue";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("7256e102-0080-4db4-a083-7de7b2e5ba4c")
                    IHttpLanguageRangeWithQualityHeaderValue : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_LanguageRange(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Quality(
                            __FIReference_1_double** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpLanguageRangeWithQualityHeaderValue = _uuidof(IHttpLanguageRangeWithQualityHeaderValue);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpLanguageRangeWithQualityHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueCollection";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("885d5abd-4b4f-480a-89ce-8aedcee6e3a0")
                    IHttpLanguageRangeWithQualityHeaderValueCollection : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE ParseAdd(
                            HSTRING input
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParseAdd(
                            HSTRING input,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpLanguageRangeWithQualityHeaderValueCollection = _uuidof(IHttpLanguageRangeWithQualityHeaderValueCollection);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpLanguageRangeWithQualityHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueFactory";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("7bb83970-780f-4c83-9fe4-dc3087f6bd55")
                    IHttpLanguageRangeWithQualityHeaderValueFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateFromLanguageRange(
                            HSTRING languageRange,
                            ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE CreateFromLanguageRangeWithQuality(
                            HSTRING languageRange,
                            DOUBLE quality,
                            ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpLanguageRangeWithQualityHeaderValueFactory = _uuidof(IHttpLanguageRangeWithQualityHeaderValueFactory);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpLanguageRangeWithQualityHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueStatics";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("2541e146-f308-46f5-b695-42f54024ec68")
                    IHttpLanguageRangeWithQualityHeaderValueStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Parse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue** languageRangeWithQualityHeaderValue,
                            boolean* succeeded
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpLanguageRangeWithQualityHeaderValueStatics = _uuidof(IHttpLanguageRangeWithQualityHeaderValueStatics);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpMediaTypeHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpMediaTypeHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeHeaderValue[] = L"Windows.Web.Http.Headers.IHttpMediaTypeHeaderValue";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("16b28533-e728-4fcb-bdb0-08a431a14844")
                    IHttpMediaTypeHeaderValue : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_CharSet(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_CharSet(
                            HSTRING value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_MediaType(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_MediaType(
                            HSTRING value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Parameters(
                            __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpMediaTypeHeaderValue = _uuidof(IHttpMediaTypeHeaderValue);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpMediaTypeHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpMediaTypeHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpMediaTypeHeaderValueFactory";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("bed747a8-cd17-42dd-9367-ab9c5b56dd7d")
                    IHttpMediaTypeHeaderValueFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Create(
                            HSTRING mediaType,
                            ABI::Windows::Web::Http::Headers::IHttpMediaTypeHeaderValue** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpMediaTypeHeaderValueFactory = _uuidof(IHttpMediaTypeHeaderValueFactory);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpMediaTypeHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpMediaTypeHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpMediaTypeHeaderValueStatics";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("e04d83df-1d41-4d8c-a2de-6fd2ed87399b")
                    IHttpMediaTypeHeaderValueStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Parse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpMediaTypeHeaderValue** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpMediaTypeHeaderValue** mediaTypeHeaderValue,
                            boolean* succeeded
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpMediaTypeHeaderValueStatics = _uuidof(IHttpMediaTypeHeaderValueStatics);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeWithQualityHeaderValue[] = L"Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValue";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("188d5e32-76be-44a0-b1cd-2074bded2dde")
                    IHttpMediaTypeWithQualityHeaderValue : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_CharSet(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_CharSet(
                            HSTRING value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_MediaType(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_MediaType(
                            HSTRING value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Parameters(
                            __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Quality(
                            __FIReference_1_double** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Quality(
                            __FIReference_1_double* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpMediaTypeWithQualityHeaderValue = _uuidof(IHttpMediaTypeWithQualityHeaderValue);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeWithQualityHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueCollection";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("3c0c6b73-1342-4587-a056-18d02ff67165")
                    IHttpMediaTypeWithQualityHeaderValueCollection : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE ParseAdd(
                            HSTRING input
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParseAdd(
                            HSTRING input,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpMediaTypeWithQualityHeaderValueCollection = _uuidof(IHttpMediaTypeWithQualityHeaderValueCollection);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeWithQualityHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueFactory";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("4c6d20f4-9457-44e6-a323-d122b958780b")
                    IHttpMediaTypeWithQualityHeaderValueFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateFromMediaType(
                            HSTRING mediaType,
                            ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE CreateFromMediaTypeWithQuality(
                            HSTRING mediaType,
                            DOUBLE quality,
                            ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpMediaTypeWithQualityHeaderValueFactory = _uuidof(IHttpMediaTypeWithQualityHeaderValueFactory);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeWithQualityHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueStatics";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("5b070cd9-b560-4fc8-9835-7e6c0a657b24")
                    IHttpMediaTypeWithQualityHeaderValueStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Parse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue** mediaTypeWithQualityHeaderValue,
                            boolean* succeeded
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpMediaTypeWithQualityHeaderValueStatics = _uuidof(IHttpMediaTypeWithQualityHeaderValueStatics);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpMethodHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpMethodHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMethodHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpMethodHeaderValueCollection";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("43bc3ff4-6119-4adf-938c-34bfffcf92ed")
                    IHttpMethodHeaderValueCollection : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE ParseAdd(
                            HSTRING input
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParseAdd(
                            HSTRING input,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpMethodHeaderValueCollection = _uuidof(IHttpMethodHeaderValueCollection);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpNameValueHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpNameValueHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpNameValueHeaderValue[] = L"Windows.Web.Http.Headers.IHttpNameValueHeaderValue";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("d8ba7463-5b9a-4d1b-93f9-aa5b44ecfddf")
                    IHttpNameValueHeaderValue : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Name(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Value(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Value(
                            HSTRING value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpNameValueHeaderValue = _uuidof(IHttpNameValueHeaderValue);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpNameValueHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpNameValueHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpNameValueHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpNameValueHeaderValueFactory";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("770e2267-cbf8-4736-a925-93fbe10c7ca8")
                    IHttpNameValueHeaderValueFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateFromName(
                            HSTRING name,
                            ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE CreateFromNameWithValue(
                            HSTRING name,
                            HSTRING value,
                            ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue** nameValueHeaderValue
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpNameValueHeaderValueFactory = _uuidof(IHttpNameValueHeaderValueFactory);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpNameValueHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpNameValueHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpNameValueHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpNameValueHeaderValueStatics";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("ffd4030f-1130-4152-8659-256909a9d115")
                    IHttpNameValueHeaderValueStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Parse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue** nameValueHeaderValue,
                            boolean* succeeded
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpNameValueHeaderValueStatics = _uuidof(IHttpNameValueHeaderValueStatics);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpProductHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpProductHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductHeaderValue[] = L"Windows.Web.Http.Headers.IHttpProductHeaderValue";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("f4feee03-ebd4-4160-b9ff-807c5183b6e6")
                    IHttpProductHeaderValue : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Name(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Version(
                            HSTRING* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpProductHeaderValue = _uuidof(IHttpProductHeaderValue);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpProductHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpProductHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpProductHeaderValueFactory";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("611aa4f5-82bc-42fb-977b-dc00536e5e86")
                    IHttpProductHeaderValueFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateFromName(
                            HSTRING productName,
                            ABI::Windows::Web::Http::Headers::IHttpProductHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE CreateFromNameWithVersion(
                            HSTRING productName,
                            HSTRING productVersion,
                            ABI::Windows::Web::Http::Headers::IHttpProductHeaderValue** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpProductHeaderValueFactory = _uuidof(IHttpProductHeaderValueFactory);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpProductHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpProductHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpProductHeaderValueStatics";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("90c33e29-befc-4337-be62-49f097975f53")
                    IHttpProductHeaderValueStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Parse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpProductHeaderValue** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpProductHeaderValue** productHeaderValue,
                            boolean* succeeded
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpProductHeaderValueStatics = _uuidof(IHttpProductHeaderValueStatics);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpProductInfoHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpProductInfoHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductInfoHeaderValue[] = L"Windows.Web.Http.Headers.IHttpProductInfoHeaderValue";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("1b1a8732-4c35-486a-966f-646489198e4d")
                    IHttpProductInfoHeaderValue : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Product(
                            ABI::Windows::Web::Http::Headers::IHttpProductHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Comment(
                            HSTRING* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpProductInfoHeaderValue = _uuidof(IHttpProductInfoHeaderValue);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpProductInfoHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductInfoHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpProductInfoHeaderValueCollection";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("877df74a-d69b-44f8-ad4f-453af9c42ed0")
                    IHttpProductInfoHeaderValueCollection : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE ParseAdd(
                            HSTRING input
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParseAdd(
                            HSTRING input,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpProductInfoHeaderValueCollection = _uuidof(IHttpProductInfoHeaderValueCollection);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpProductInfoHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpProductInfoHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductInfoHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpProductInfoHeaderValueFactory";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("24220fbe-eabe-4464-b460-ec010b7c41e2")
                    IHttpProductInfoHeaderValueFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateFromComment(
                            HSTRING productComment,
                            ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE CreateFromNameWithVersion(
                            HSTRING productName,
                            HSTRING productVersion,
                            ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpProductInfoHeaderValueFactory = _uuidof(IHttpProductInfoHeaderValueFactory);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpProductInfoHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpProductInfoHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductInfoHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpProductInfoHeaderValueStatics";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("db7fd857-327a-4e73-81e5-7059a302b042")
                    IHttpProductInfoHeaderValueStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Parse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue** productInfoHeaderValue,
                            boolean* succeeded
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpProductInfoHeaderValueStatics = _uuidof(IHttpProductInfoHeaderValueStatics);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpRequestHeaderCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpRequestHeaderCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpRequestHeaderCollection[] = L"Windows.Web.Http.Headers.IHttpRequestHeaderCollection";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("af40329b-b544-469b-86b9-ac3d466fea36")
                    IHttpRequestHeaderCollection : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Accept(
                            ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValueCollection** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AcceptEncoding(
                            ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValueCollection** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AcceptLanguage(
                            ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValueCollection** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Authorization(
                            ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Authorization(
                            ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValue* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_CacheControl(
                            ABI::Windows::Web::Http::Headers::IHttpCacheDirectiveHeaderValueCollection** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Connection(
                            ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValueCollection** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Cookie(
                            ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValueCollection** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Date(
                            __FIReference_1_Windows__CFoundation__CDateTime** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Date(
                            __FIReference_1_Windows__CFoundation__CDateTime* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Expect(
                            ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValueCollection** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_From(
                            HSTRING* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_From(
                            HSTRING value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Host(
                            ABI::Windows::Networking::IHostName** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Host(
                            ABI::Windows::Networking::IHostName* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_IfModifiedSince(
                            __FIReference_1_Windows__CFoundation__CDateTime** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_IfModifiedSince(
                            __FIReference_1_Windows__CFoundation__CDateTime* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_IfUnmodifiedSince(
                            __FIReference_1_Windows__CFoundation__CDateTime** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_IfUnmodifiedSince(
                            __FIReference_1_Windows__CFoundation__CDateTime* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_MaxForwards(
                            __FIReference_1_UINT32** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_MaxForwards(
                            __FIReference_1_UINT32* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ProxyAuthorization(
                            ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ProxyAuthorization(
                            ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValue* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Referer(
                            ABI::Windows::Foundation::IUriRuntimeClass** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Referer(
                            ABI::Windows::Foundation::IUriRuntimeClass* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_TransferEncoding(
                            ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValueCollection** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_UserAgent(
                            ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValueCollection** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE Append(
                            HSTRING name,
                            HSTRING value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryAppendWithoutValidation(
                            HSTRING name,
                            HSTRING value,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpRequestHeaderCollection = _uuidof(IHttpRequestHeaderCollection);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpResponseHeaderCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpResponseHeaderCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpResponseHeaderCollection[] = L"Windows.Web.Http.Headers.IHttpResponseHeaderCollection";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("7a990969-fa3f-41ed-aac6-bf957975c16b")
                    IHttpResponseHeaderCollection : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Age(
                            __FIReference_1_Windows__CFoundation__CTimeSpan** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Age(
                            __FIReference_1_Windows__CFoundation__CTimeSpan* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Allow(
                            ABI::Windows::Web::Http::Headers::IHttpMethodHeaderValueCollection** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_CacheControl(
                            ABI::Windows::Web::Http::Headers::IHttpCacheDirectiveHeaderValueCollection** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Connection(
                            ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValueCollection** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Date(
                            __FIReference_1_Windows__CFoundation__CDateTime** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Date(
                            __FIReference_1_Windows__CFoundation__CDateTime* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Location(
                            ABI::Windows::Foundation::IUriRuntimeClass** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Location(
                            ABI::Windows::Foundation::IUriRuntimeClass* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ProxyAuthenticate(
                            ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValueCollection** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RetryAfter(
                            ABI::Windows::Web::Http::Headers::IHttpDateOrDeltaHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RetryAfter(
                            ABI::Windows::Web::Http::Headers::IHttpDateOrDeltaHeaderValue* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_TransferEncoding(
                            ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValueCollection** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_WwwAuthenticate(
                            ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValueCollection** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE Append(
                            HSTRING name,
                            HSTRING value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryAppendWithoutValidation(
                            HSTRING name,
                            HSTRING value,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpResponseHeaderCollection = _uuidof(IHttpResponseHeaderCollection);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpTransferCodingHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpTransferCodingHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpTransferCodingHeaderValue[] = L"Windows.Web.Http.Headers.IHttpTransferCodingHeaderValue";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("436f32f9-3ded-42bd-b38a-5496a2511ce6")
                    IHttpTransferCodingHeaderValue : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Parameters(
                            __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Value(
                            HSTRING* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpTransferCodingHeaderValue = _uuidof(IHttpTransferCodingHeaderValue);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpTransferCodingHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueCollection";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("202c8c34-2c03-49b8-9665-73e27cb2fc79")
                    IHttpTransferCodingHeaderValueCollection : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE ParseAdd(
                            HSTRING input
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParseAdd(
                            HSTRING input,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpTransferCodingHeaderValueCollection = _uuidof(IHttpTransferCodingHeaderValueCollection);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpTransferCodingHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpTransferCodingHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueFactory";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("bb62dffc-e361-4f08-8e4f-c9e723de703b")
                    IHttpTransferCodingHeaderValueFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Create(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpTransferCodingHeaderValueFactory = _uuidof(IHttpTransferCodingHeaderValueFactory);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpTransferCodingHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpTransferCodingHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueStatics";
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    MIDL_INTERFACE("6ab8892a-1a98-4d32-a906-7470a9875ce5")
                    IHttpTransferCodingHeaderValueStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Parse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryParse(
                            HSTRING input,
                            ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue** transferCodingHeaderValue,
                            boolean* succeeded
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHttpTransferCodingHeaderValueStatics = _uuidof(IHttpTransferCodingHeaderValueStatics);
                } /* Headers */
            } /* Http */
        } /* Web */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpCacheDirectiveHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpCacheDirectiveHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpCacheDirectiveHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpCacheDirectiveHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpChallengeHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpChallengeHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpChallengeHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpChallengeHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpChallengeHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpChallengeHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpChallengeHeaderValue[] = L"Windows.Web.Http.Headers.HttpChallengeHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpChallengeHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpChallengeHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpChallengeHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpChallengeHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpChallengeHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpChallengeHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpConnectionOptionHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpConnectionOptionHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpConnectionOptionHeaderValue[] = L"Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpConnectionOptionHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpConnectionOptionHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpConnectionOptionHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpContentCodingHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpContentCodingHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpContentCodingHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpContentCodingHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentCodingHeaderValue[] = L"Windows.Web.Http.Headers.HttpContentCodingHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpContentCodingHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpContentCodingHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpContentCodingHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentCodingHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingWithQualityHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingWithQualityHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentCodingWithQualityHeaderValue[] = L"Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingWithQualityHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingWithQualityHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentCodingWithQualityHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpContentDispositionHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentDispositionHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentDispositionHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentDispositionHeaderValue[] = L"Windows.Web.Http.Headers.HttpContentDispositionHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpContentHeaderCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpContentHeaderCollection ** Default Interface **
 *    Windows.Foundation.Collections.IMap`2<String, String>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentHeaderCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentHeaderCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentHeaderCollection[] = L"Windows.Web.Http.Headers.HttpContentHeaderCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpContentRangeHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpContentRangeHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpContentRangeHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpContentRangeHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentRangeHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentRangeHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentRangeHeaderValue[] = L"Windows.Web.Http.Headers.HttpContentRangeHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpCookiePairHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpCookiePairHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpCookiePairHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpCookiePairHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpCookiePairHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpCookiePairHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpCookiePairHeaderValue[] = L"Windows.Web.Http.Headers.HttpCookiePairHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpCookiePairHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpCookiePairHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpCookiePairHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpCookiePairHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpCookiePairHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpCookiePairHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpCredentialsHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpCredentialsHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpCredentialsHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpCredentialsHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpCredentialsHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpCredentialsHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpCredentialsHeaderValue[] = L"Windows.Web.Http.Headers.HttpCredentialsHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpDateOrDeltaHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpDateOrDeltaHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpDateOrDeltaHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpDateOrDeltaHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpDateOrDeltaHeaderValue[] = L"Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpExpectationHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpExpectationHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpExpectationHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpExpectationHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpExpectationHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpExpectationHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpExpectationHeaderValue[] = L"Windows.Web.Http.Headers.HttpExpectationHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpExpectationHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpExpectationHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpExpectationHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpExpectationHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpExpectationHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpExpectationHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpLanguageHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Globalization.Language>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Globalization.Language>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpLanguageHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpLanguageHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpLanguageHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpLanguageRangeWithQualityHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpLanguageRangeWithQualityHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpLanguageRangeWithQualityHeaderValue[] = L"Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpLanguageRangeWithQualityHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpLanguageRangeWithQualityHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpLanguageRangeWithQualityHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpMediaTypeHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpMediaTypeHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpMediaTypeHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpMediaTypeHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpMediaTypeHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpMediaTypeHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpMediaTypeHeaderValue[] = L"Windows.Web.Http.Headers.HttpMediaTypeHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpMediaTypeWithQualityHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpMediaTypeWithQualityHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpMediaTypeWithQualityHeaderValue[] = L"Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpMediaTypeWithQualityHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpMediaTypeWithQualityHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpMediaTypeWithQualityHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpMethodHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpMethodHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.HttpMethod>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.HttpMethod>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpMethodHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpMethodHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpMethodHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpMethodHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpNameValueHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpNameValueHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpNameValueHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpNameValueHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpNameValueHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpNameValueHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpNameValueHeaderValue[] = L"Windows.Web.Http.Headers.HttpNameValueHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpProductHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpProductHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpProductHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpProductHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpProductHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpProductHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpProductHeaderValue[] = L"Windows.Web.Http.Headers.HttpProductHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpProductInfoHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpProductInfoHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpProductInfoHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpProductInfoHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpProductInfoHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpProductInfoHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpProductInfoHeaderValue[] = L"Windows.Web.Http.Headers.HttpProductInfoHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpProductInfoHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpProductInfoHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpProductInfoHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpProductInfoHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpProductInfoHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpProductInfoHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpRequestHeaderCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpRequestHeaderCollection ** Default Interface **
 *    Windows.Foundation.Collections.IMap`2<String, String>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpRequestHeaderCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpRequestHeaderCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpRequestHeaderCollection[] = L"Windows.Web.Http.Headers.HttpRequestHeaderCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpResponseHeaderCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpResponseHeaderCollection ** Default Interface **
 *    Windows.Foundation.Collections.IMap`2<String, String>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpResponseHeaderCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpResponseHeaderCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpResponseHeaderCollection[] = L"Windows.Web.Http.Headers.HttpResponseHeaderCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpTransferCodingHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpTransferCodingHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpTransferCodingHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpTransferCodingHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpTransferCodingHeaderValue[] = L"Windows.Web.Http.Headers.HttpTransferCodingHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpTransferCodingHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpTransferCodingHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpTransferCodingHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpTransferCodingHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpTransferCodingHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#else // !defined(__cplusplus)
/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIKeyValuePair_2_HSTRING_HSTRING __FIKeyValuePair_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIKeyValuePair_2_HSTRING_HSTRING;

typedef struct __FIKeyValuePair_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIKeyValuePair_2_HSTRING_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIKeyValuePair_2_HSTRING_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIKeyValuePair_2_HSTRING_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIKeyValuePair_2_HSTRING_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIKeyValuePair_2_HSTRING_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Key)(__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);

    END_INTERFACE
} __FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

interface __FIKeyValuePair_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIKeyValuePair_2_HSTRING_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIKeyValuePair_2_HSTRING_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIKeyValuePair_2_HSTRING_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIKeyValuePair_2_HSTRING_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIKeyValuePair_2_HSTRING_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIKeyValuePair_2_HSTRING_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIKeyValuePair_2_HSTRING_HSTRING_get_Key(This, result) \
    ((This)->lpVtbl->get_Key(This, result))

#define __FIKeyValuePair_2_HSTRING_HSTRING_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

#if !defined(____FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING;

typedef struct __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        __FIKeyValuePair_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        UINT32 itemsLength,
        __FIKeyValuePair_2_HSTRING_HSTRING** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

interface __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

#if !defined(____FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING;

typedef struct __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING* This,
        __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING** result);

    END_INTERFACE
} __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

interface __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CILanguage_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CILanguage_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CGlobalization_CILanguage __x_ABI_CWindows_CGlobalization_CILanguage;

#endif // ____x_ABI_CWindows_CGlobalization_CILanguage_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CGlobalization__CLanguage_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CGlobalization__CLanguage_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CGlobalization__CLanguage __FIIterator_1_Windows__CGlobalization__CLanguage;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CGlobalization__CLanguage;

typedef struct __FIIterator_1_Windows__CGlobalization__CLanguageVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CGlobalization__CLanguage* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CGlobalization__CLanguage* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CGlobalization__CLanguage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CGlobalization__CLanguage* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CGlobalization__CLanguage* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CGlobalization__CLanguage* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CGlobalization__CLanguage* This,
        __x_ABI_CWindows_CGlobalization_CILanguage** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CGlobalization__CLanguage* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CGlobalization__CLanguage* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CGlobalization__CLanguage* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGlobalization_CILanguage** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CGlobalization__CLanguageVtbl;

interface __FIIterator_1_Windows__CGlobalization__CLanguage
{
    CONST_VTBL struct __FIIterator_1_Windows__CGlobalization__CLanguageVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CGlobalization__CLanguage_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CGlobalization__CLanguage_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CGlobalization__CLanguage_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CGlobalization__CLanguage_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CGlobalization__CLanguage_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CGlobalization__CLanguage_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CGlobalization__CLanguage_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CGlobalization__CLanguage_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CGlobalization__CLanguage_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CGlobalization__CLanguage_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CGlobalization__CLanguage_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CGlobalization__CLanguage_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CGlobalization__CLanguage_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CGlobalization__CLanguage __FIIterable_1_Windows__CGlobalization__CLanguage;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CGlobalization__CLanguage;

typedef struct __FIIterable_1_Windows__CGlobalization__CLanguageVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CGlobalization__CLanguage* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CGlobalization__CLanguage* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CGlobalization__CLanguage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CGlobalization__CLanguage* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CGlobalization__CLanguage* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CGlobalization__CLanguage* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CGlobalization__CLanguage* This,
        __FIIterator_1_Windows__CGlobalization__CLanguage** result);

    END_INTERFACE
} __FIIterable_1_Windows__CGlobalization__CLanguageVtbl;

interface __FIIterable_1_Windows__CGlobalization__CLanguage
{
    CONST_VTBL struct __FIIterable_1_Windows__CGlobalization__CLanguageVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CGlobalization__CLanguage_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CGlobalization__CLanguage_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CGlobalization__CLanguage_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CGlobalization__CLanguage_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CGlobalization__CLanguage_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CGlobalization__CLanguage_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CGlobalization__CLanguage_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CGlobalization__CLanguage_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue;

typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl;

interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue
{
    CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue;

typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue** result);

    END_INTERFACE
} __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl;

interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue
{
    CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue;

typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl;

interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue
{
    CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue;

typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue** result);

    END_INTERFACE
} __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl;

interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue
{
    CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue;

typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl;

interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue
{
    CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue;

typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue** result);

    END_INTERFACE
} __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl;

interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue
{
    CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue;

typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl;

interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue
{
    CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue;

typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue** result);

    END_INTERFACE
} __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl;

interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue
{
    CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue;

typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl;

interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue
{
    CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue;

typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue** result);

    END_INTERFACE
} __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl;

interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue
{
    CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue;

typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl;

interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue
{
    CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue;

typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue** result);

    END_INTERFACE
} __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl;

interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue
{
    CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue;

typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl;

interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue
{
    CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue;

typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue** result);

    END_INTERFACE
} __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl;

interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue
{
    CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue;

typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl;

interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue
{
    CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue;

typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue** result);

    END_INTERFACE
} __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl;

interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue
{
    CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue;

typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl;

interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue
{
    CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue;

typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue** result);

    END_INTERFACE
} __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl;

interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue
{
    CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue;

typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl;

interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue
{
    CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue;

typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue** result);

    END_INTERFACE
} __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl;

interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue
{
    CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue;

typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl;

interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue
{
    CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue;

typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue** result);

    END_INTERFACE
} __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl;

interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue
{
    CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CIHttpMethod_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CIHttpMethod_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CIHttpMethod __x_ABI_CWindows_CWeb_CHttp_CIHttpMethod;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CIHttpMethod_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHttpMethod __FIIterator_1_Windows__CWeb__CHttp__CHttpMethod;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHttpMethod;

typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHttpMethodVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CWeb__CHttp__CHttpMethod* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CWeb__CHttp__CHttpMethod* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CWeb__CHttp__CHttpMethod* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CWeb__CHttp__CHttpMethod* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CWeb__CHttp__CHttpMethod* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CWeb__CHttp__CHttpMethod* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CWeb__CHttp__CHttpMethod* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpMethod** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CWeb__CHttp__CHttpMethod* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CWeb__CHttp__CHttpMethod* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CWeb__CHttp__CHttpMethod* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpMethod** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CWeb__CHttp__CHttpMethodVtbl;

interface __FIIterator_1_Windows__CWeb__CHttp__CHttpMethod
{
    CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHttpMethodVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHttpMethod __FIIterable_1_Windows__CWeb__CHttp__CHttpMethod;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHttpMethod;

typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHttpMethodVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CWeb__CHttp__CHttpMethod* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CWeb__CHttp__CHttpMethod* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CWeb__CHttp__CHttpMethod* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CWeb__CHttp__CHttpMethod* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CWeb__CHttp__CHttpMethod* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CWeb__CHttp__CHttpMethod* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CWeb__CHttp__CHttpMethod* This,
        __FIIterator_1_Windows__CWeb__CHttp__CHttpMethod** result);

    END_INTERFACE
} __FIIterable_1_Windows__CWeb__CHttp__CHttpMethodVtbl;

interface __FIIterable_1_Windows__CWeb__CHttp__CHttpMethod
{
    CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHttpMethodVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef interface __FIMapView_2_HSTRING_HSTRING __FIMapView_2_HSTRING_HSTRING;

#if !defined(____FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIMapView_2_HSTRING_HSTRING __FIMapView_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMapView_2_HSTRING_HSTRING;

typedef struct __FIMapView_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIMapView_2_HSTRING_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIMapView_2_HSTRING_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIMapView_2_HSTRING_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIMapView_2_HSTRING_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIMapView_2_HSTRING_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Lookup)(__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIMapView_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__FIMapView_2_HSTRING_HSTRING* This,
        __FIMapView_2_HSTRING_HSTRING** first,
        __FIMapView_2_HSTRING_HSTRING** second);

    END_INTERFACE
} __FIMapView_2_HSTRING_HSTRINGVtbl;

interface __FIMapView_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIMapView_2_HSTRING_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIMapView_2_HSTRING_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIMapView_2_HSTRING_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIMapView_2_HSTRING_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIMapView_2_HSTRING_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIMapView_2_HSTRING_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIMapView_2_HSTRING_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIMapView_2_HSTRING_HSTRING_Lookup(This, key, result) \
    ((This)->lpVtbl->Lookup(This, key, result))

#define __FIMapView_2_HSTRING_HSTRING_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIMapView_2_HSTRING_HSTRING_HasKey(This, key, result) \
    ((This)->lpVtbl->HasKey(This, key, result))

#define __FIMapView_2_HSTRING_HSTRING_Split(This, first, second) \
    ((This)->lpVtbl->Split(This, first, second))

#endif /* COBJMACROS */

#endif // ____FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__

#if !defined(____FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIMap_2_HSTRING_HSTRING __FIMap_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMap_2_HSTRING_HSTRING;

typedef struct __FIMap_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIMap_2_HSTRING_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIMap_2_HSTRING_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIMap_2_HSTRING_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIMap_2_HSTRING_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIMap_2_HSTRING_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIMap_2_HSTRING_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Lookup)(__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIMap_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIMap_2_HSTRING_HSTRING* This,
        __FIMapView_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIMap_2_HSTRING_HSTRING* This);

    END_INTERFACE
} __FIMap_2_HSTRING_HSTRINGVtbl;

interface __FIMap_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIMap_2_HSTRING_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIMap_2_HSTRING_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIMap_2_HSTRING_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIMap_2_HSTRING_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIMap_2_HSTRING_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIMap_2_HSTRING_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIMap_2_HSTRING_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIMap_2_HSTRING_HSTRING_Lookup(This, key, result) \
    ((This)->lpVtbl->Lookup(This, key, result))

#define __FIMap_2_HSTRING_HSTRING_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIMap_2_HSTRING_HSTRING_HasKey(This, key, result) \
    ((This)->lpVtbl->HasKey(This, key, result))

#define __FIMap_2_HSTRING_HSTRING_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIMap_2_HSTRING_HSTRING_Insert(This, key, value, result) \
    ((This)->lpVtbl->Insert(This, key, value, result))

#define __FIMap_2_HSTRING_HSTRING_Remove(This, key) \
    ((This)->lpVtbl->Remove(This, key))

#define __FIMap_2_HSTRING_HSTRING_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#endif /* COBJMACROS */

#endif // ____FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CGlobalization__CLanguage_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CGlobalization__CLanguage_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CGlobalization__CLanguage __FIVectorView_1_Windows__CGlobalization__CLanguage;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CGlobalization__CLanguage;

typedef struct __FIVectorView_1_Windows__CGlobalization__CLanguageVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CGlobalization__CLanguage* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CGlobalization__CLanguage* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CGlobalization__CLanguage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CGlobalization__CLanguage* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CGlobalization__CLanguage* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CGlobalization__CLanguage* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CGlobalization__CLanguage* This,
        UINT32 index,
        __x_ABI_CWindows_CGlobalization_CILanguage** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CGlobalization__CLanguage* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CGlobalization__CLanguage* This,
        __x_ABI_CWindows_CGlobalization_CILanguage* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CGlobalization__CLanguage* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGlobalization_CILanguage** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CGlobalization__CLanguageVtbl;

interface __FIVectorView_1_Windows__CGlobalization__CLanguage
{
    CONST_VTBL struct __FIVectorView_1_Windows__CGlobalization__CLanguageVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CGlobalization__CLanguage_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CGlobalization__CLanguage_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CGlobalization__CLanguage_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CGlobalization__CLanguage_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CGlobalization__CLanguage_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CGlobalization__CLanguage_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CGlobalization__CLanguage_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CGlobalization__CLanguage_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CGlobalization__CLanguage_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CGlobalization__CLanguage_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CGlobalization__CLanguage_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue;

typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl;

interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue
{
    CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue;

typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl;

interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue
{
    CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue;

typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl;

interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue
{
    CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue;

typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl;

interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue
{
    CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue;

typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl;

interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue
{
    CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue;

typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl;

interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue
{
    CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue;

typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl;

interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue
{
    CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue;

typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl;

interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue
{
    CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue;

typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl;

interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue
{
    CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue;

typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl;

interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue
{
    CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue;

typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl;

interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue
{
    CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod;

typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethodVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpMethod** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpMethod* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpMethod** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethodVtbl;

interface __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod
{
    CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethodVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CGlobalization__CLanguage_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CGlobalization__CLanguage_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CGlobalization__CLanguage __FIVector_1_Windows__CGlobalization__CLanguage;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CGlobalization__CLanguage;

typedef struct __FIVector_1_Windows__CGlobalization__CLanguageVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CGlobalization__CLanguage* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CGlobalization__CLanguage* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CGlobalization__CLanguage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CGlobalization__CLanguage* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CGlobalization__CLanguage* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CGlobalization__CLanguage* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CGlobalization__CLanguage* This,
        UINT32 index,
        __x_ABI_CWindows_CGlobalization_CILanguage** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CGlobalization__CLanguage* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CGlobalization__CLanguage* This,
        __FIVectorView_1_Windows__CGlobalization__CLanguage** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CGlobalization__CLanguage* This,
        __x_ABI_CWindows_CGlobalization_CILanguage* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CGlobalization__CLanguage* This,
        UINT32 index,
        __x_ABI_CWindows_CGlobalization_CILanguage* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CGlobalization__CLanguage* This,
        UINT32 index,
        __x_ABI_CWindows_CGlobalization_CILanguage* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CGlobalization__CLanguage* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CGlobalization__CLanguage* This,
        __x_ABI_CWindows_CGlobalization_CILanguage* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CGlobalization__CLanguage* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CGlobalization__CLanguage* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CGlobalization__CLanguage* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGlobalization_CILanguage** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CGlobalization__CLanguage* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGlobalization_CILanguage** items);

    END_INTERFACE
} __FIVector_1_Windows__CGlobalization__CLanguageVtbl;

interface __FIVector_1_Windows__CGlobalization__CLanguage
{
    CONST_VTBL struct __FIVector_1_Windows__CGlobalization__CLanguageVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CGlobalization__CLanguage_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CGlobalization__CLanguage_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CGlobalization__CLanguage_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CGlobalization__CLanguage_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CGlobalization__CLanguage_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CGlobalization__CLanguage_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CGlobalization__CLanguage_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CGlobalization__CLanguage_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CGlobalization__CLanguage_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CGlobalization__CLanguage_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CGlobalization__CLanguage_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CGlobalization__CLanguage_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CGlobalization__CLanguage_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CGlobalization__CLanguage_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CGlobalization__CLanguage_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CGlobalization__CLanguage_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CGlobalization__CLanguage_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CGlobalization__CLanguage_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CGlobalization__CLanguage_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue;

typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue** items);

    END_INTERFACE
} __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl;

interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue
{
    CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue;

typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue** items);

    END_INTERFACE
} __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl;

interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue
{
    CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue;

typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue** items);

    END_INTERFACE
} __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl;

interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue
{
    CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue;

typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue** items);

    END_INTERFACE
} __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl;

interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue
{
    CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue;

typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue** items);

    END_INTERFACE
} __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl;

interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue
{
    CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue;

typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue** items);

    END_INTERFACE
} __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl;

interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue
{
    CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue;

typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue** items);

    END_INTERFACE
} __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl;

interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue
{
    CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue;

typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue** items);

    END_INTERFACE
} __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl;

interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue
{
    CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue;

typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue** items);

    END_INTERFACE
} __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl;

interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue
{
    CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue;

typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue** items);

    END_INTERFACE
} __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl;

interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue
{
    CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue;

typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue** items);

    END_INTERFACE
} __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl;

interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue
{
    CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CWeb__CHttp__CHttpMethod_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CWeb__CHttp__CHttpMethod_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CWeb__CHttp__CHttpMethod __FIVector_1_Windows__CWeb__CHttp__CHttpMethod;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHttpMethod;

typedef struct __FIVector_1_Windows__CWeb__CHttp__CHttpMethodVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CWeb__CHttp__CHttpMethod* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CWeb__CHttp__CHttpMethod* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CWeb__CHttp__CHttpMethod* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CWeb__CHttp__CHttpMethod* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CWeb__CHttp__CHttpMethod* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CWeb__CHttp__CHttpMethod* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CWeb__CHttp__CHttpMethod* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpMethod** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CWeb__CHttp__CHttpMethod* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CWeb__CHttp__CHttpMethod* This,
        __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CWeb__CHttp__CHttpMethod* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpMethod* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CWeb__CHttp__CHttpMethod* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpMethod* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CWeb__CHttp__CHttpMethod* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpMethod* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CWeb__CHttp__CHttpMethod* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CWeb__CHttp__CHttpMethod* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpMethod* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CWeb__CHttp__CHttpMethod* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CWeb__CHttp__CHttpMethod* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CWeb__CHttp__CHttpMethod* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpMethod** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CWeb__CHttp__CHttpMethod* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpMethod** items);

    END_INTERFACE
} __FIVector_1_Windows__CWeb__CHttp__CHttpMethodVtbl;

interface __FIVector_1_Windows__CWeb__CHttp__CHttpMethod
{
    CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHttpMethodVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CWeb__CHttp__CHttpMethod_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if !defined(____FIReference_1_double_INTERFACE_DEFINED__)
#define ____FIReference_1_double_INTERFACE_DEFINED__

typedef interface __FIReference_1_double __FIReference_1_double;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_double;

typedef struct __FIReference_1_doubleVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_double* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_double* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_double* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_double* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_double* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_double* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_double* This,
        DOUBLE* result);

    END_INTERFACE
} __FIReference_1_doubleVtbl;

interface __FIReference_1_double
{
    CONST_VTBL struct __FIReference_1_doubleVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_double_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_double_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_double_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_double_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_double_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_double_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_double_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_double_INTERFACE_DEFINED__

#if !defined(____FIReference_1_UINT32_INTERFACE_DEFINED__)
#define ____FIReference_1_UINT32_INTERFACE_DEFINED__

typedef interface __FIReference_1_UINT32 __FIReference_1_UINT32;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_UINT32;

typedef struct __FIReference_1_UINT32Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_UINT32* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_UINT32* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_UINT32* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_UINT32* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_UINT32* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_UINT32* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_UINT32* This,
        UINT32* result);

    END_INTERFACE
} __FIReference_1_UINT32Vtbl;

interface __FIReference_1_UINT32
{
    CONST_VTBL struct __FIReference_1_UINT32Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_UINT32_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_UINT32_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_UINT32_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_UINT32_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_UINT32_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_UINT32_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_UINT32_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_UINT32_INTERFACE_DEFINED__

#if !defined(____FIReference_1_UINT64_INTERFACE_DEFINED__)
#define ____FIReference_1_UINT64_INTERFACE_DEFINED__

typedef interface __FIReference_1_UINT64 __FIReference_1_UINT64;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_UINT64;

typedef struct __FIReference_1_UINT64Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_UINT64* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_UINT64* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_UINT64* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_UINT64* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_UINT64* This,
        UINT64* result);

    END_INTERFACE
} __FIReference_1_UINT64Vtbl;

interface __FIReference_1_UINT64
{
    CONST_VTBL struct __FIReference_1_UINT64Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_UINT64_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_UINT64_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_UINT64_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_UINT64_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_UINT64_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_UINT64_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_UINT64_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_UINT64_INTERFACE_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000
#if !defined(____FIReference_1_Windows__CFoundation__CDateTime_INTERFACE_DEFINED__)
#define ____FIReference_1_Windows__CFoundation__CDateTime_INTERFACE_DEFINED__

typedef interface __FIReference_1_Windows__CFoundation__CDateTime __FIReference_1_Windows__CFoundation__CDateTime;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Windows__CFoundation__CDateTime;

typedef struct __FIReference_1_Windows__CFoundation__CDateTimeVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_Windows__CFoundation__CDateTime* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_Windows__CFoundation__CDateTime* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_Windows__CFoundation__CDateTime* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_Windows__CFoundation__CDateTime* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_Windows__CFoundation__CDateTime* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_Windows__CFoundation__CDateTime* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_Windows__CFoundation__CDateTime* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* result);

    END_INTERFACE
} __FIReference_1_Windows__CFoundation__CDateTimeVtbl;

interface __FIReference_1_Windows__CFoundation__CDateTime
{
    CONST_VTBL struct __FIReference_1_Windows__CFoundation__CDateTimeVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_Windows__CFoundation__CDateTime_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_Windows__CFoundation__CDateTime_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_Windows__CFoundation__CDateTime_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_Windows__CFoundation__CDateTime_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_Windows__CFoundation__CDateTime_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_Windows__CFoundation__CDateTime_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_Windows__CFoundation__CDateTime_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_Windows__CFoundation__CDateTime_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000
#if !defined(____FIReference_1_Windows__CFoundation__CTimeSpan_INTERFACE_DEFINED__)
#define ____FIReference_1_Windows__CFoundation__CTimeSpan_INTERFACE_DEFINED__

typedef interface __FIReference_1_Windows__CFoundation__CTimeSpan __FIReference_1_Windows__CFoundation__CTimeSpan;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Windows__CFoundation__CTimeSpan;

typedef struct __FIReference_1_Windows__CFoundation__CTimeSpanVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_Windows__CFoundation__CTimeSpan* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_Windows__CFoundation__CTimeSpan* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_Windows__CFoundation__CTimeSpan* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_Windows__CFoundation__CTimeSpan* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_Windows__CFoundation__CTimeSpan* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_Windows__CFoundation__CTimeSpan* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_Windows__CFoundation__CTimeSpan* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* result);

    END_INTERFACE
} __FIReference_1_Windows__CFoundation__CTimeSpanVtbl;

interface __FIReference_1_Windows__CFoundation__CTimeSpan
{
    CONST_VTBL struct __FIReference_1_Windows__CFoundation__CTimeSpanVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_Windows__CFoundation__CTimeSpan_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_Windows__CFoundation__CTimeSpan_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_Windows__CFoundation__CTimeSpan_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_Windows__CFoundation__CTimeSpan_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_Windows__CFoundation__CTimeSpan_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_Windows__CFoundation__CTimeSpan_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_Windows__CFoundation__CTimeSpan_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_Windows__CFoundation__CTimeSpan_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIStringable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIStringable_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIStringable __x_ABI_CWindows_CFoundation_CIStringable;

#endif // ____x_ABI_CWindows_CFoundation_CIStringable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CIHostName_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CIHostName_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CNetworking_CIHostName __x_ABI_CWindows_CNetworking_CIHostName;

#endif // ____x_ABI_CWindows_CNetworking_CIHostName_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CStreams_CIBuffer __x_ABI_CWindows_CStorage_CStreams_CIBuffer;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpCacheDirectiveHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCacheDirectiveHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpCacheDirectiveHeaderValueCollection";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MaxAge)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This,
        __FIReference_1_Windows__CFoundation__CTimeSpan** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxAge)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This,
        __FIReference_1_Windows__CFoundation__CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxStale)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This,
        __FIReference_1_Windows__CFoundation__CTimeSpan** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxStale)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This,
        __FIReference_1_Windows__CFoundation__CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_MinFresh)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This,
        __FIReference_1_Windows__CFoundation__CTimeSpan** value);
    HRESULT (STDMETHODCALLTYPE* put_MinFresh)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This,
        __FIReference_1_Windows__CFoundation__CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_SharedMaxAge)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This,
        __FIReference_1_Windows__CFoundation__CTimeSpan** value);
    HRESULT (STDMETHODCALLTYPE* put_SharedMaxAge)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This,
        __FIReference_1_Windows__CFoundation__CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This,
        HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This,
        HSTRING input,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollectionVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_get_MaxAge(This, value) \
    ((This)->lpVtbl->get_MaxAge(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_put_MaxAge(This, value) \
    ((This)->lpVtbl->put_MaxAge(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_get_MaxStale(This, value) \
    ((This)->lpVtbl->get_MaxStale(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_put_MaxStale(This, value) \
    ((This)->lpVtbl->put_MaxStale(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_get_MinFresh(This, value) \
    ((This)->lpVtbl->get_MinFresh(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_put_MinFresh(This, value) \
    ((This)->lpVtbl->put_MinFresh(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_get_SharedMaxAge(This, value) \
    ((This)->lpVtbl->get_SharedMaxAge(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_put_SharedMaxAge(This, value) \
    ((This)->lpVtbl->put_SharedMaxAge(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_ParseAdd(This, input) \
    ((This)->lpVtbl->ParseAdd(This, input))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_TryParseAdd(This, input, result) \
    ((This)->lpVtbl->TryParseAdd(This, input, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpChallengeHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpChallengeHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpChallengeHeaderValue[] = L"Windows.Web.Http.Headers.IHttpChallengeHeaderValue";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Parameters)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* This,
        __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* get_Scheme)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Token)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* This,
        HSTRING* value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_get_Parameters(This, value) \
    ((This)->lpVtbl->get_Parameters(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_get_Scheme(This, value) \
    ((This)->lpVtbl->get_Scheme(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_get_Token(This, value) \
    ((This)->lpVtbl->get_Token(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpChallengeHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpChallengeHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpChallengeHeaderValueCollection";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection* This,
        HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection* This,
        HSTRING input,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollectionVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_ParseAdd(This, input) \
    ((This)->lpVtbl->ParseAdd(This, input))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_TryParseAdd(This, input, result) \
    ((This)->lpVtbl->TryParseAdd(This, input, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpChallengeHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpChallengeHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpChallengeHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpChallengeHeaderValueFactory";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromScheme)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory* This,
        HSTRING scheme,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* CreateFromSchemeWithToken)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory* This,
        HSTRING scheme,
        HSTRING token,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue** value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactoryVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_CreateFromScheme(This, scheme, value) \
    ((This)->lpVtbl->CreateFromScheme(This, scheme, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_CreateFromSchemeWithToken(This, scheme, token, value) \
    ((This)->lpVtbl->CreateFromSchemeWithToken(This, scheme, token, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpChallengeHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpChallengeHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpChallengeHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpChallengeHeaderValueStatics";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* TryParse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue** challengeHeaderValue,
        boolean* succeeded);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStaticsVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_Parse(This, input, result) \
    ((This)->lpVtbl->Parse(This, input, result))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_TryParse(This, input, challengeHeaderValue, succeeded) \
    ((This)->lpVtbl->TryParse(This, input, challengeHeaderValue, succeeded))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpConnectionOptionHeaderValue[] = L"Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValue";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Token)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* This,
        HSTRING* value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_get_Token(This, value) \
    ((This)->lpVtbl->get_Token(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpConnectionOptionHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueCollection";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection* This,
        HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection* This,
        HSTRING input,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollectionVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_ParseAdd(This, input) \
    ((This)->lpVtbl->ParseAdd(This, input))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_TryParseAdd(This, input, result) \
    ((This)->lpVtbl->TryParseAdd(This, input, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpConnectionOptionHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueFactory";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory* This,
        HSTRING token,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue** value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactoryVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_Create(This, token, value) \
    ((This)->lpVtbl->Create(This, token, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpConnectionOptionHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueStatics";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* TryParse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue** connectionOptionHeaderValue,
        boolean* succeeded);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStaticsVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_Parse(This, input, result) \
    ((This)->lpVtbl->Parse(This, input, result))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_TryParse(This, input, connectionOptionHeaderValue, succeeded) \
    ((This)->lpVtbl->TryParse(This, input, connectionOptionHeaderValue, succeeded))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentCodingHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentCodingHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingHeaderValue[] = L"Windows.Web.Http.Headers.IHttpContentCodingHeaderValue";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ContentCoding)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* This,
        HSTRING* value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_get_ContentCoding(This, value) \
    ((This)->lpVtbl->get_ContentCoding(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentCodingHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpContentCodingHeaderValueCollection";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection* This,
        HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection* This,
        HSTRING input,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollectionVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_ParseAdd(This, input) \
    ((This)->lpVtbl->ParseAdd(This, input))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_TryParseAdd(This, input, result) \
    ((This)->lpVtbl->TryParseAdd(This, input, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentCodingHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentCodingHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpContentCodingHeaderValueFactory";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory* This,
        HSTRING contentCoding,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue** value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactoryVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_Create(This, contentCoding, value) \
    ((This)->lpVtbl->Create(This, contentCoding, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentCodingHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentCodingHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpContentCodingHeaderValueStatics";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* TryParse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue** contentCodingHeaderValue,
        boolean* succeeded);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStaticsVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_Parse(This, input, result) \
    ((This)->lpVtbl->Parse(This, input, result))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_TryParse(This, input, contentCodingHeaderValue, succeeded) \
    ((This)->lpVtbl->TryParse(This, input, contentCodingHeaderValue, succeeded))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingWithQualityHeaderValue[] = L"Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValue";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ContentCoding)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Quality)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* This,
        __FIReference_1_double** value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_get_ContentCoding(This, value) \
    ((This)->lpVtbl->get_ContentCoding(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_get_Quality(This, value) \
    ((This)->lpVtbl->get_Quality(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingWithQualityHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueCollection";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection* This,
        HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection* This,
        HSTRING input,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollectionVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_ParseAdd(This, input) \
    ((This)->lpVtbl->ParseAdd(This, input))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_TryParseAdd(This, input, result) \
    ((This)->lpVtbl->TryParseAdd(This, input, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingWithQualityHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueFactory";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromValue)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory* This,
        HSTRING contentCoding,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* CreateFromValueWithQuality)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory* This,
        HSTRING contentCoding,
        DOUBLE quality,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue** value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactoryVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_CreateFromValue(This, contentCoding, value) \
    ((This)->lpVtbl->CreateFromValue(This, contentCoding, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_CreateFromValueWithQuality(This, contentCoding, quality, value) \
    ((This)->lpVtbl->CreateFromValueWithQuality(This, contentCoding, quality, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingWithQualityHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueStatics";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* TryParse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue** contentCodingWithQualityHeaderValue,
        boolean* succeeded);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStaticsVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_Parse(This, input, result) \
    ((This)->lpVtbl->Parse(This, input, result))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_TryParse(This, input, contentCodingWithQualityHeaderValue, succeeded) \
    ((This)->lpVtbl->TryParse(This, input, contentCodingWithQualityHeaderValue, succeeded))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentDispositionHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentDispositionHeaderValue[] = L"Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DispositionType)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DispositionType)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FileName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_FileName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FileNameStar)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_FileNameStar)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Name)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Parameters)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This,
        __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This,
        __FIReference_1_UINT64** value);
    HRESULT (STDMETHODCALLTYPE* put_Size)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This,
        __FIReference_1_UINT64* value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_get_DispositionType(This, value) \
    ((This)->lpVtbl->get_DispositionType(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_put_DispositionType(This, value) \
    ((This)->lpVtbl->put_DispositionType(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_get_FileName(This, value) \
    ((This)->lpVtbl->get_FileName(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_put_FileName(This, value) \
    ((This)->lpVtbl->put_FileName(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_get_FileNameStar(This, value) \
    ((This)->lpVtbl->get_FileNameStar(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_put_FileNameStar(This, value) \
    ((This)->lpVtbl->put_FileNameStar(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_get_Name(This, value) \
    ((This)->lpVtbl->get_Name(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_put_Name(This, value) \
    ((This)->lpVtbl->put_Name(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_get_Parameters(This, value) \
    ((This)->lpVtbl->get_Parameters(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_get_Size(This, value) \
    ((This)->lpVtbl->get_Size(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_put_Size(This, value) \
    ((This)->lpVtbl->put_Size(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentDispositionHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentDispositionHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueFactory";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory* This,
        HSTRING dispositionType,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue** value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactoryVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_Create(This, dispositionType, value) \
    ((This)->lpVtbl->Create(This, dispositionType, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentDispositionHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentDispositionHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueStatics";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* TryParse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue** contentDispositionHeaderValue,
        boolean* succeeded);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStaticsVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_Parse(This, input, result) \
    ((This)->lpVtbl->Parse(This, input, result))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_TryParse(This, input, contentDispositionHeaderValue, succeeded) \
    ((This)->lpVtbl->TryParse(This, input, contentDispositionHeaderValue, succeeded))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentHeaderCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentHeaderCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentHeaderCollection[] = L"Windows.Web.Http.Headers.IHttpContentHeaderCollection";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ContentDisposition)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentDisposition)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentEncoding)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentLanguage)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentLength)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        __FIReference_1_UINT64** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentLength)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        __FIReference_1_UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentLocation)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentLocation)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentMD5)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentMD5)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentRange)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentRange)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentType)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentType)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* get_Expires)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        __FIReference_1_Windows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_Expires)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        __FIReference_1_Windows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_LastModified)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        __FIReference_1_Windows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_LastModified)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        __FIReference_1_Windows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        HSTRING name,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* TryAppendWithoutValidation)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This,
        HSTRING name,
        HSTRING value,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollectionVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_ContentDisposition(This, value) \
    ((This)->lpVtbl->get_ContentDisposition(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_put_ContentDisposition(This, value) \
    ((This)->lpVtbl->put_ContentDisposition(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_ContentEncoding(This, value) \
    ((This)->lpVtbl->get_ContentEncoding(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_ContentLanguage(This, value) \
    ((This)->lpVtbl->get_ContentLanguage(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_ContentLength(This, value) \
    ((This)->lpVtbl->get_ContentLength(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_put_ContentLength(This, value) \
    ((This)->lpVtbl->put_ContentLength(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_ContentLocation(This, value) \
    ((This)->lpVtbl->get_ContentLocation(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_put_ContentLocation(This, value) \
    ((This)->lpVtbl->put_ContentLocation(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_ContentMD5(This, value) \
    ((This)->lpVtbl->get_ContentMD5(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_put_ContentMD5(This, value) \
    ((This)->lpVtbl->put_ContentMD5(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_ContentRange(This, value) \
    ((This)->lpVtbl->get_ContentRange(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_put_ContentRange(This, value) \
    ((This)->lpVtbl->put_ContentRange(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_ContentType(This, value) \
    ((This)->lpVtbl->get_ContentType(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_put_ContentType(This, value) \
    ((This)->lpVtbl->put_ContentType(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_Expires(This, value) \
    ((This)->lpVtbl->get_Expires(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_put_Expires(This, value) \
    ((This)->lpVtbl->put_Expires(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_LastModified(This, value) \
    ((This)->lpVtbl->get_LastModified(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_put_LastModified(This, value) \
    ((This)->lpVtbl->put_LastModified(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_Append(This, name, value) \
    ((This)->lpVtbl->Append(This, name, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_TryAppendWithoutValidation(This, name, value, result) \
    ((This)->lpVtbl->TryAppendWithoutValidation(This, name, value, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentRangeHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentRangeHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentRangeHeaderValue[] = L"Windows.Web.Http.Headers.IHttpContentRangeHeaderValue";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FirstBytePosition)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* This,
        __FIReference_1_UINT64** value);
    HRESULT (STDMETHODCALLTYPE* get_LastBytePosition)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* This,
        __FIReference_1_UINT64** value);
    HRESULT (STDMETHODCALLTYPE* get_Length)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* This,
        __FIReference_1_UINT64** value);
    HRESULT (STDMETHODCALLTYPE* get_Unit)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Unit)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* This,
        HSTRING value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_get_FirstBytePosition(This, value) \
    ((This)->lpVtbl->get_FirstBytePosition(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_get_LastBytePosition(This, value) \
    ((This)->lpVtbl->get_LastBytePosition(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_get_Length(This, value) \
    ((This)->lpVtbl->get_Length(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_get_Unit(This, value) \
    ((This)->lpVtbl->get_Unit(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_put_Unit(This, value) \
    ((This)->lpVtbl->put_Unit(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentRangeHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentRangeHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentRangeHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpContentRangeHeaderValueFactory";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromLength)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory* This,
        UINT64 length,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* CreateFromRange)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory* This,
        UINT64 from,
        UINT64 to,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* CreateFromRangeWithLength)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory* This,
        UINT64 from,
        UINT64 to,
        UINT64 length,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue** value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactoryVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_CreateFromLength(This, length, value) \
    ((This)->lpVtbl->CreateFromLength(This, length, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_CreateFromRange(This, from, to, value) \
    ((This)->lpVtbl->CreateFromRange(This, from, to, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_CreateFromRangeWithLength(This, from, to, length, value) \
    ((This)->lpVtbl->CreateFromRangeWithLength(This, from, to, length, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpContentRangeHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpContentRangeHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentRangeHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpContentRangeHeaderValueStatics";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* TryParse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue** contentRangeHeaderValue,
        boolean* succeeded);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStaticsVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_Parse(This, input, result) \
    ((This)->lpVtbl->Parse(This, input, result))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_TryParse(This, input, contentRangeHeaderValue, succeeded) \
    ((This)->lpVtbl->TryParse(This, input, contentRangeHeaderValue, succeeded))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpCookiePairHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpCookiePairHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCookiePairHeaderValue[] = L"Windows.Web.Http.Headers.IHttpCookiePairHeaderValue";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Value)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* This,
        HSTRING value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_get_Name(This, value) \
    ((This)->lpVtbl->get_Name(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_get_Value(This, value) \
    ((This)->lpVtbl->get_Value(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_put_Value(This, value) \
    ((This)->lpVtbl->put_Value(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpCookiePairHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCookiePairHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpCookiePairHeaderValueCollection";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection* This,
        HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection* This,
        HSTRING input,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollectionVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_ParseAdd(This, input) \
    ((This)->lpVtbl->ParseAdd(This, input))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_TryParseAdd(This, input, result) \
    ((This)->lpVtbl->TryParseAdd(This, input, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpCookiePairHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpCookiePairHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCookiePairHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpCookiePairHeaderValueFactory";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory* This,
        HSTRING name,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* CreateFromNameWithValue)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory* This,
        HSTRING name,
        HSTRING value,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue** cookiePairHeaderValue);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactoryVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_CreateFromName(This, name, value) \
    ((This)->lpVtbl->CreateFromName(This, name, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_CreateFromNameWithValue(This, name, value, cookiePairHeaderValue) \
    ((This)->lpVtbl->CreateFromNameWithValue(This, name, value, cookiePairHeaderValue))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpCookiePairHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpCookiePairHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCookiePairHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpCookiePairHeaderValueStatics";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* TryParse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue** cookiePairHeaderValue,
        boolean* succeeded);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStaticsVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_Parse(This, input, result) \
    ((This)->lpVtbl->Parse(This, input, result))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_TryParse(This, input, cookiePairHeaderValue, succeeded) \
    ((This)->lpVtbl->TryParse(This, input, cookiePairHeaderValue, succeeded))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpCredentialsHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpCredentialsHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCredentialsHeaderValue[] = L"Windows.Web.Http.Headers.IHttpCredentialsHeaderValue";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Parameters)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* This,
        __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* get_Scheme)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Token)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* This,
        HSTRING* value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_get_Parameters(This, value) \
    ((This)->lpVtbl->get_Parameters(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_get_Scheme(This, value) \
    ((This)->lpVtbl->get_Scheme(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_get_Token(This, value) \
    ((This)->lpVtbl->get_Token(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpCredentialsHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpCredentialsHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCredentialsHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpCredentialsHeaderValueFactory";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromScheme)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory* This,
        HSTRING scheme,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* CreateFromSchemeWithToken)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory* This,
        HSTRING scheme,
        HSTRING token,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue** value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactoryVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_CreateFromScheme(This, scheme, value) \
    ((This)->lpVtbl->CreateFromScheme(This, scheme, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_CreateFromSchemeWithToken(This, scheme, token, value) \
    ((This)->lpVtbl->CreateFromSchemeWithToken(This, scheme, token, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpCredentialsHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpCredentialsHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCredentialsHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpCredentialsHeaderValueStatics";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* TryParse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue** credentialsHeaderValue,
        boolean* succeeded);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStaticsVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_Parse(This, input, result) \
    ((This)->lpVtbl->Parse(This, input, result))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_TryParse(This, input, credentialsHeaderValue, succeeded) \
    ((This)->lpVtbl->TryParse(This, input, credentialsHeaderValue, succeeded))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpDateOrDeltaHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpDateOrDeltaHeaderValue[] = L"Windows.Web.Http.Headers.IHttpDateOrDeltaHeaderValue";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Date)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue* This,
        __FIReference_1_Windows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* get_Delta)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue* This,
        __FIReference_1_Windows__CFoundation__CTimeSpan** value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_get_Date(This, value) \
    ((This)->lpVtbl->get_Date(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_get_Delta(This, value) \
    ((This)->lpVtbl->get_Delta(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpDateOrDeltaHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpDateOrDeltaHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpDateOrDeltaHeaderValueStatics";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* TryParse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue** dateOrDeltaHeaderValue,
        boolean* succeeded);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStaticsVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_Parse(This, input, result) \
    ((This)->lpVtbl->Parse(This, input, result))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_TryParse(This, input, dateOrDeltaHeaderValue, succeeded) \
    ((This)->lpVtbl->TryParse(This, input, dateOrDeltaHeaderValue, succeeded))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpExpectationHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpExpectationHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpExpectationHeaderValue[] = L"Windows.Web.Http.Headers.IHttpExpectationHeaderValue";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Value)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Parameters)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* This,
        __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue** value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_get_Name(This, value) \
    ((This)->lpVtbl->get_Name(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_get_Value(This, value) \
    ((This)->lpVtbl->get_Value(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_put_Value(This, value) \
    ((This)->lpVtbl->put_Value(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_get_Parameters(This, value) \
    ((This)->lpVtbl->get_Parameters(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpExpectationHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpExpectationHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpExpectationHeaderValueCollection";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection* This,
        HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection* This,
        HSTRING input,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollectionVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_ParseAdd(This, input) \
    ((This)->lpVtbl->ParseAdd(This, input))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_TryParseAdd(This, input, result) \
    ((This)->lpVtbl->TryParseAdd(This, input, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpExpectationHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpExpectationHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpExpectationHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpExpectationHeaderValueFactory";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory* This,
        HSTRING name,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* CreateFromNameWithValue)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory* This,
        HSTRING name,
        HSTRING value,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue** expectationHeaderValue);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactoryVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_CreateFromName(This, name, value) \
    ((This)->lpVtbl->CreateFromName(This, name, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_CreateFromNameWithValue(This, name, value, expectationHeaderValue) \
    ((This)->lpVtbl->CreateFromNameWithValue(This, name, value, expectationHeaderValue))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpExpectationHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpExpectationHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpExpectationHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpExpectationHeaderValueStatics";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* TryParse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue** expectationHeaderValue,
        boolean* succeeded);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStaticsVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_Parse(This, input, result) \
    ((This)->lpVtbl->Parse(This, input, result))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_TryParse(This, input, expectationHeaderValue, succeeded) \
    ((This)->lpVtbl->TryParse(This, input, expectationHeaderValue, succeeded))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpLanguageHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpLanguageHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpLanguageHeaderValueCollection";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection* This,
        HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection* This,
        HSTRING input,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollectionVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_ParseAdd(This, input) \
    ((This)->lpVtbl->ParseAdd(This, input))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_TryParseAdd(This, input, result) \
    ((This)->lpVtbl->TryParseAdd(This, input, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpLanguageRangeWithQualityHeaderValue[] = L"Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValue";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LanguageRange)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Quality)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* This,
        __FIReference_1_double** value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_get_LanguageRange(This, value) \
    ((This)->lpVtbl->get_LanguageRange(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_get_Quality(This, value) \
    ((This)->lpVtbl->get_Quality(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpLanguageRangeWithQualityHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueCollection";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection* This,
        HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection* This,
        HSTRING input,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollectionVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_ParseAdd(This, input) \
    ((This)->lpVtbl->ParseAdd(This, input))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_TryParseAdd(This, input, result) \
    ((This)->lpVtbl->TryParseAdd(This, input, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpLanguageRangeWithQualityHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueFactory";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromLanguageRange)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory* This,
        HSTRING languageRange,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* CreateFromLanguageRangeWithQuality)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory* This,
        HSTRING languageRange,
        DOUBLE quality,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue** value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactoryVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_CreateFromLanguageRange(This, languageRange, value) \
    ((This)->lpVtbl->CreateFromLanguageRange(This, languageRange, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_CreateFromLanguageRangeWithQuality(This, languageRange, quality, value) \
    ((This)->lpVtbl->CreateFromLanguageRangeWithQuality(This, languageRange, quality, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpLanguageRangeWithQualityHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueStatics";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* TryParse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue** languageRangeWithQualityHeaderValue,
        boolean* succeeded);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStaticsVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_Parse(This, input, result) \
    ((This)->lpVtbl->Parse(This, input, result))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_TryParse(This, input, languageRangeWithQualityHeaderValue, succeeded) \
    ((This)->lpVtbl->TryParse(This, input, languageRangeWithQualityHeaderValue, succeeded))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpMediaTypeHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpMediaTypeHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeHeaderValue[] = L"Windows.Web.Http.Headers.IHttpMediaTypeHeaderValue";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CharSet)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_CharSet)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_MediaType)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_MediaType)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Parameters)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* This,
        __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue** value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_get_CharSet(This, value) \
    ((This)->lpVtbl->get_CharSet(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_put_CharSet(This, value) \
    ((This)->lpVtbl->put_CharSet(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_get_MediaType(This, value) \
    ((This)->lpVtbl->get_MediaType(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_put_MediaType(This, value) \
    ((This)->lpVtbl->put_MediaType(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_get_Parameters(This, value) \
    ((This)->lpVtbl->get_Parameters(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpMediaTypeHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpMediaTypeHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpMediaTypeHeaderValueFactory";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory* This,
        HSTRING mediaType,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue** value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactoryVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_Create(This, mediaType, value) \
    ((This)->lpVtbl->Create(This, mediaType, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpMediaTypeHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpMediaTypeHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpMediaTypeHeaderValueStatics";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* TryParse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue** mediaTypeHeaderValue,
        boolean* succeeded);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStaticsVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_Parse(This, input, result) \
    ((This)->lpVtbl->Parse(This, input, result))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_TryParse(This, input, mediaTypeHeaderValue, succeeded) \
    ((This)->lpVtbl->TryParse(This, input, mediaTypeHeaderValue, succeeded))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeWithQualityHeaderValue[] = L"Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValue";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CharSet)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_CharSet)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_MediaType)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_MediaType)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Parameters)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This,
        __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* get_Quality)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This,
        __FIReference_1_double** value);
    HRESULT (STDMETHODCALLTYPE* put_Quality)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This,
        __FIReference_1_double* value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_get_CharSet(This, value) \
    ((This)->lpVtbl->get_CharSet(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_put_CharSet(This, value) \
    ((This)->lpVtbl->put_CharSet(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_get_MediaType(This, value) \
    ((This)->lpVtbl->get_MediaType(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_put_MediaType(This, value) \
    ((This)->lpVtbl->put_MediaType(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_get_Parameters(This, value) \
    ((This)->lpVtbl->get_Parameters(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_get_Quality(This, value) \
    ((This)->lpVtbl->get_Quality(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_put_Quality(This, value) \
    ((This)->lpVtbl->put_Quality(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeWithQualityHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueCollection";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection* This,
        HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection* This,
        HSTRING input,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollectionVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_ParseAdd(This, input) \
    ((This)->lpVtbl->ParseAdd(This, input))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_TryParseAdd(This, input, result) \
    ((This)->lpVtbl->TryParseAdd(This, input, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeWithQualityHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueFactory";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromMediaType)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory* This,
        HSTRING mediaType,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* CreateFromMediaTypeWithQuality)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory* This,
        HSTRING mediaType,
        DOUBLE quality,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue** value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactoryVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_CreateFromMediaType(This, mediaType, value) \
    ((This)->lpVtbl->CreateFromMediaType(This, mediaType, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_CreateFromMediaTypeWithQuality(This, mediaType, quality, value) \
    ((This)->lpVtbl->CreateFromMediaTypeWithQuality(This, mediaType, quality, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeWithQualityHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueStatics";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* TryParse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue** mediaTypeWithQualityHeaderValue,
        boolean* succeeded);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStaticsVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_Parse(This, input, result) \
    ((This)->lpVtbl->Parse(This, input, result))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_TryParse(This, input, mediaTypeWithQualityHeaderValue, succeeded) \
    ((This)->lpVtbl->TryParse(This, input, mediaTypeWithQualityHeaderValue, succeeded))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpMethodHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpMethodHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMethodHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpMethodHeaderValueCollection";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection* This,
        HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection* This,
        HSTRING input,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollectionVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_ParseAdd(This, input) \
    ((This)->lpVtbl->ParseAdd(This, input))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_TryParseAdd(This, input, result) \
    ((This)->lpVtbl->TryParseAdd(This, input, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpNameValueHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpNameValueHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpNameValueHeaderValue[] = L"Windows.Web.Http.Headers.IHttpNameValueHeaderValue";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Value)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* This,
        HSTRING value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_get_Name(This, value) \
    ((This)->lpVtbl->get_Name(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_get_Value(This, value) \
    ((This)->lpVtbl->get_Value(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_put_Value(This, value) \
    ((This)->lpVtbl->put_Value(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpNameValueHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpNameValueHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpNameValueHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpNameValueHeaderValueFactory";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory* This,
        HSTRING name,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* CreateFromNameWithValue)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory* This,
        HSTRING name,
        HSTRING value,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue** nameValueHeaderValue);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactoryVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_CreateFromName(This, name, value) \
    ((This)->lpVtbl->CreateFromName(This, name, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_CreateFromNameWithValue(This, name, value, nameValueHeaderValue) \
    ((This)->lpVtbl->CreateFromNameWithValue(This, name, value, nameValueHeaderValue))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpNameValueHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpNameValueHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpNameValueHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpNameValueHeaderValueStatics";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* TryParse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue** nameValueHeaderValue,
        boolean* succeeded);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStaticsVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_Parse(This, input, result) \
    ((This)->lpVtbl->Parse(This, input, result))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_TryParse(This, input, nameValueHeaderValue, succeeded) \
    ((This)->lpVtbl->TryParse(This, input, nameValueHeaderValue, succeeded))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpProductHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpProductHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductHeaderValue[] = L"Windows.Web.Http.Headers.IHttpProductHeaderValue";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Version)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue* This,
        HSTRING* value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_get_Name(This, value) \
    ((This)->lpVtbl->get_Name(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_get_Version(This, value) \
    ((This)->lpVtbl->get_Version(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpProductHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpProductHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpProductHeaderValueFactory";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory* This,
        HSTRING productName,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* CreateFromNameWithVersion)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory* This,
        HSTRING productName,
        HSTRING productVersion,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue** value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactoryVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_CreateFromName(This, productName, value) \
    ((This)->lpVtbl->CreateFromName(This, productName, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_CreateFromNameWithVersion(This, productName, productVersion, value) \
    ((This)->lpVtbl->CreateFromNameWithVersion(This, productName, productVersion, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpProductHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpProductHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpProductHeaderValueStatics";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* TryParse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue** productHeaderValue,
        boolean* succeeded);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStaticsVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_Parse(This, input, result) \
    ((This)->lpVtbl->Parse(This, input, result))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_TryParse(This, input, productHeaderValue, succeeded) \
    ((This)->lpVtbl->TryParse(This, input, productHeaderValue, succeeded))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpProductInfoHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpProductInfoHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductInfoHeaderValue[] = L"Windows.Web.Http.Headers.IHttpProductInfoHeaderValue";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Product)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* get_Comment)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* This,
        HSTRING* value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_get_Product(This, value) \
    ((This)->lpVtbl->get_Product(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_get_Comment(This, value) \
    ((This)->lpVtbl->get_Comment(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpProductInfoHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductInfoHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpProductInfoHeaderValueCollection";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection* This,
        HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection* This,
        HSTRING input,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollectionVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_ParseAdd(This, input) \
    ((This)->lpVtbl->ParseAdd(This, input))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_TryParseAdd(This, input, result) \
    ((This)->lpVtbl->TryParseAdd(This, input, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpProductInfoHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpProductInfoHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductInfoHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpProductInfoHeaderValueFactory";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromComment)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory* This,
        HSTRING productComment,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* CreateFromNameWithVersion)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory* This,
        HSTRING productName,
        HSTRING productVersion,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue** value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactoryVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_CreateFromComment(This, productComment, value) \
    ((This)->lpVtbl->CreateFromComment(This, productComment, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_CreateFromNameWithVersion(This, productName, productVersion, value) \
    ((This)->lpVtbl->CreateFromNameWithVersion(This, productName, productVersion, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpProductInfoHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpProductInfoHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductInfoHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpProductInfoHeaderValueStatics";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* TryParse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue** productInfoHeaderValue,
        boolean* succeeded);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStaticsVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_Parse(This, input, result) \
    ((This)->lpVtbl->Parse(This, input, result))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_TryParse(This, input, productInfoHeaderValue, succeeded) \
    ((This)->lpVtbl->TryParse(This, input, productInfoHeaderValue, succeeded))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpRequestHeaderCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpRequestHeaderCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpRequestHeaderCollection[] = L"Windows.Web.Http.Headers.IHttpRequestHeaderCollection";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Accept)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_AcceptEncoding)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_AcceptLanguage)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_Authorization)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* put_Authorization)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* get_CacheControl)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_Connection)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_Cookie)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_Date)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __FIReference_1_Windows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_Date)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __FIReference_1_Windows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_Expect)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_From)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_From)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Host)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __x_ABI_CWindows_CNetworking_CIHostName** value);
    HRESULT (STDMETHODCALLTYPE* put_Host)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __x_ABI_CWindows_CNetworking_CIHostName* value);
    HRESULT (STDMETHODCALLTYPE* get_IfModifiedSince)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __FIReference_1_Windows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_IfModifiedSince)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __FIReference_1_Windows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_IfUnmodifiedSince)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __FIReference_1_Windows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_IfUnmodifiedSince)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __FIReference_1_Windows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxForwards)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* put_MaxForwards)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __FIReference_1_UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ProxyAuthorization)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* put_ProxyAuthorization)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* get_Referer)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Referer)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_TransferEncoding)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_UserAgent)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection** value);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        HSTRING name,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* TryAppendWithoutValidation)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This,
        HSTRING name,
        HSTRING value,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollectionVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_Accept(This, value) \
    ((This)->lpVtbl->get_Accept(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_AcceptEncoding(This, value) \
    ((This)->lpVtbl->get_AcceptEncoding(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_AcceptLanguage(This, value) \
    ((This)->lpVtbl->get_AcceptLanguage(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_Authorization(This, value) \
    ((This)->lpVtbl->get_Authorization(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_put_Authorization(This, value) \
    ((This)->lpVtbl->put_Authorization(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_CacheControl(This, value) \
    ((This)->lpVtbl->get_CacheControl(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_Connection(This, value) \
    ((This)->lpVtbl->get_Connection(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_Cookie(This, value) \
    ((This)->lpVtbl->get_Cookie(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_Date(This, value) \
    ((This)->lpVtbl->get_Date(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_put_Date(This, value) \
    ((This)->lpVtbl->put_Date(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_Expect(This, value) \
    ((This)->lpVtbl->get_Expect(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_From(This, value) \
    ((This)->lpVtbl->get_From(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_put_From(This, value) \
    ((This)->lpVtbl->put_From(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_Host(This, value) \
    ((This)->lpVtbl->get_Host(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_put_Host(This, value) \
    ((This)->lpVtbl->put_Host(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_IfModifiedSince(This, value) \
    ((This)->lpVtbl->get_IfModifiedSince(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_put_IfModifiedSince(This, value) \
    ((This)->lpVtbl->put_IfModifiedSince(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_IfUnmodifiedSince(This, value) \
    ((This)->lpVtbl->get_IfUnmodifiedSince(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_put_IfUnmodifiedSince(This, value) \
    ((This)->lpVtbl->put_IfUnmodifiedSince(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_MaxForwards(This, value) \
    ((This)->lpVtbl->get_MaxForwards(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_put_MaxForwards(This, value) \
    ((This)->lpVtbl->put_MaxForwards(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_ProxyAuthorization(This, value) \
    ((This)->lpVtbl->get_ProxyAuthorization(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_put_ProxyAuthorization(This, value) \
    ((This)->lpVtbl->put_ProxyAuthorization(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_Referer(This, value) \
    ((This)->lpVtbl->get_Referer(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_put_Referer(This, value) \
    ((This)->lpVtbl->put_Referer(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_TransferEncoding(This, value) \
    ((This)->lpVtbl->get_TransferEncoding(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_UserAgent(This, value) \
    ((This)->lpVtbl->get_UserAgent(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_Append(This, name, value) \
    ((This)->lpVtbl->Append(This, name, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_TryAppendWithoutValidation(This, name, value, result) \
    ((This)->lpVtbl->TryAppendWithoutValidation(This, name, value, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpResponseHeaderCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpResponseHeaderCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpResponseHeaderCollection[] = L"Windows.Web.Http.Headers.IHttpResponseHeaderCollection";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Age)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        __FIReference_1_Windows__CFoundation__CTimeSpan** value);
    HRESULT (STDMETHODCALLTYPE* put_Age)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        __FIReference_1_Windows__CFoundation__CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_Allow)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_CacheControl)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_Connection)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_Date)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        __FIReference_1_Windows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_Date)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        __FIReference_1_Windows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_Location)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Location)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_ProxyAuthenticate)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_RetryAfter)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* put_RetryAfter)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* get_TransferEncoding)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_WwwAuthenticate)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection** value);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        HSTRING name,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* TryAppendWithoutValidation)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This,
        HSTRING name,
        HSTRING value,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollectionVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_Age(This, value) \
    ((This)->lpVtbl->get_Age(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_put_Age(This, value) \
    ((This)->lpVtbl->put_Age(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_Allow(This, value) \
    ((This)->lpVtbl->get_Allow(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_CacheControl(This, value) \
    ((This)->lpVtbl->get_CacheControl(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_Connection(This, value) \
    ((This)->lpVtbl->get_Connection(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_Date(This, value) \
    ((This)->lpVtbl->get_Date(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_put_Date(This, value) \
    ((This)->lpVtbl->put_Date(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_Location(This, value) \
    ((This)->lpVtbl->get_Location(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_put_Location(This, value) \
    ((This)->lpVtbl->put_Location(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_ProxyAuthenticate(This, value) \
    ((This)->lpVtbl->get_ProxyAuthenticate(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_RetryAfter(This, value) \
    ((This)->lpVtbl->get_RetryAfter(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_put_RetryAfter(This, value) \
    ((This)->lpVtbl->put_RetryAfter(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_TransferEncoding(This, value) \
    ((This)->lpVtbl->get_TransferEncoding(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_WwwAuthenticate(This, value) \
    ((This)->lpVtbl->get_WwwAuthenticate(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_Append(This, name, value) \
    ((This)->lpVtbl->Append(This, name, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_TryAppendWithoutValidation(This, name, value, result) \
    ((This)->lpVtbl->TryAppendWithoutValidation(This, name, value, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpTransferCodingHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpTransferCodingHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpTransferCodingHeaderValue[] = L"Windows.Web.Http.Headers.IHttpTransferCodingHeaderValue";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Parameters)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* This,
        __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue** value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* This,
        HSTRING* value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_get_Parameters(This, value) \
    ((This)->lpVtbl->get_Parameters(This, value))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_get_Value(This, value) \
    ((This)->lpVtbl->get_Value(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpTransferCodingHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueCollection";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection* This,
        HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection* This,
        HSTRING input,
        boolean* result);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollectionVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_ParseAdd(This, input) \
    ((This)->lpVtbl->ParseAdd(This, input))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_TryParseAdd(This, input, result) \
    ((This)->lpVtbl->TryParseAdd(This, input, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpTransferCodingHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpTransferCodingHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueFactory";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue** value);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactoryVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_Create(This, input, value) \
    ((This)->lpVtbl->Create(This, input, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Web.Http.Headers.HttpTransferCodingHeaderValue
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpTransferCodingHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueStatics";
typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue** result);
    HRESULT (STDMETHODCALLTYPE* TryParse)(__x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics* This,
        HSTRING input,
        __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue** transferCodingHeaderValue,
        boolean* succeeded);

    END_INTERFACE
} __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStaticsVtbl;

interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_Parse(This, input, result) \
    ((This)->lpVtbl->Parse(This, input, result))

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_TryParse(This, input, transferCodingHeaderValue, succeeded) \
    ((This)->lpVtbl->TryParse(This, input, transferCodingHeaderValue, succeeded))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpCacheDirectiveHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpCacheDirectiveHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpCacheDirectiveHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpCacheDirectiveHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpChallengeHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpChallengeHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpChallengeHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpChallengeHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpChallengeHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpChallengeHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpChallengeHeaderValue[] = L"Windows.Web.Http.Headers.HttpChallengeHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpChallengeHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpChallengeHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpChallengeHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpChallengeHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpChallengeHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpChallengeHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpConnectionOptionHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpConnectionOptionHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpConnectionOptionHeaderValue[] = L"Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpConnectionOptionHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpConnectionOptionHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpConnectionOptionHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpContentCodingHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpContentCodingHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpContentCodingHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpContentCodingHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentCodingHeaderValue[] = L"Windows.Web.Http.Headers.HttpContentCodingHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpContentCodingHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpContentCodingHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpContentCodingHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentCodingHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingWithQualityHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingWithQualityHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentCodingWithQualityHeaderValue[] = L"Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingWithQualityHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingWithQualityHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentCodingWithQualityHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpContentDispositionHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentDispositionHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentDispositionHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentDispositionHeaderValue[] = L"Windows.Web.Http.Headers.HttpContentDispositionHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpContentHeaderCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpContentHeaderCollection ** Default Interface **
 *    Windows.Foundation.Collections.IMap`2<String, String>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentHeaderCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentHeaderCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentHeaderCollection[] = L"Windows.Web.Http.Headers.HttpContentHeaderCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpContentRangeHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpContentRangeHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpContentRangeHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpContentRangeHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentRangeHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentRangeHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentRangeHeaderValue[] = L"Windows.Web.Http.Headers.HttpContentRangeHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpCookiePairHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpCookiePairHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpCookiePairHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpCookiePairHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpCookiePairHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpCookiePairHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpCookiePairHeaderValue[] = L"Windows.Web.Http.Headers.HttpCookiePairHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpCookiePairHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpCookiePairHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpCookiePairHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpCookiePairHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpCookiePairHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpCookiePairHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpCredentialsHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpCredentialsHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpCredentialsHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpCredentialsHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpCredentialsHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpCredentialsHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpCredentialsHeaderValue[] = L"Windows.Web.Http.Headers.HttpCredentialsHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpDateOrDeltaHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpDateOrDeltaHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpDateOrDeltaHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpDateOrDeltaHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpDateOrDeltaHeaderValue[] = L"Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpExpectationHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpExpectationHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpExpectationHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpExpectationHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpExpectationHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpExpectationHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpExpectationHeaderValue[] = L"Windows.Web.Http.Headers.HttpExpectationHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpExpectationHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpExpectationHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpExpectationHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpExpectationHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpExpectationHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpExpectationHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpLanguageHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Globalization.Language>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Globalization.Language>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpLanguageHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpLanguageHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpLanguageHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpLanguageRangeWithQualityHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpLanguageRangeWithQualityHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpLanguageRangeWithQualityHeaderValue[] = L"Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpLanguageRangeWithQualityHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpLanguageRangeWithQualityHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpLanguageRangeWithQualityHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpMediaTypeHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpMediaTypeHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpMediaTypeHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpMediaTypeHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpMediaTypeHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpMediaTypeHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpMediaTypeHeaderValue[] = L"Windows.Web.Http.Headers.HttpMediaTypeHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpMediaTypeWithQualityHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpMediaTypeWithQualityHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpMediaTypeWithQualityHeaderValue[] = L"Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpMediaTypeWithQualityHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpMediaTypeWithQualityHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpMediaTypeWithQualityHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpMethodHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpMethodHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.HttpMethod>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.HttpMethod>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpMethodHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpMethodHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpMethodHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpMethodHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpNameValueHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpNameValueHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpNameValueHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpNameValueHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpNameValueHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpNameValueHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpNameValueHeaderValue[] = L"Windows.Web.Http.Headers.HttpNameValueHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpProductHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpProductHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpProductHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpProductHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpProductHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpProductHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpProductHeaderValue[] = L"Windows.Web.Http.Headers.HttpProductHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpProductInfoHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpProductInfoHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpProductInfoHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpProductInfoHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpProductInfoHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpProductInfoHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpProductInfoHeaderValue[] = L"Windows.Web.Http.Headers.HttpProductInfoHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpProductInfoHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpProductInfoHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpProductInfoHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpProductInfoHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpProductInfoHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpProductInfoHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpRequestHeaderCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpRequestHeaderCollection ** Default Interface **
 *    Windows.Foundation.Collections.IMap`2<String, String>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpRequestHeaderCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpRequestHeaderCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpRequestHeaderCollection[] = L"Windows.Web.Http.Headers.HttpRequestHeaderCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpResponseHeaderCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpResponseHeaderCollection ** Default Interface **
 *    Windows.Foundation.Collections.IMap`2<String, String>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpResponseHeaderCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpResponseHeaderCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpResponseHeaderCollection[] = L"Windows.Web.Http.Headers.HttpResponseHeaderCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpTransferCodingHeaderValue
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpTransferCodingHeaderValue ** Default Interface **
 *    Windows.Foundation.IStringable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpTransferCodingHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpTransferCodingHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpTransferCodingHeaderValue[] = L"Windows.Web.Http.Headers.HttpTransferCodingHeaderValue";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpTransferCodingHeaderValue>
 *    Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpTransferCodingHeaderValue>
 *    Windows.Foundation.IStringable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpTransferCodingHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpTransferCodingHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpTransferCodingHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#endif // defined(__cplusplus)
#pragma pop_macro("MIDL_CONST_ID")
// Restore the original value of the 'DEPRECATED' macro
#pragma pop_macro("DEPRECATED")

#ifdef __clang__
#pragma clang diagnostic pop // deprecated-declarations
#else
#pragma warning(pop)
#endif
#endif // __windows2Eweb2Ehttp2Eheaders_p_h__

#endif // __windows2Eweb2Ehttp2Eheaders_h__
