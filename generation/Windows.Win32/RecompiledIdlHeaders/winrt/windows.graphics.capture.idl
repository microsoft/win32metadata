//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Windows.Graphics.idl";
import "Windows.Graphics.DirectX.idl";
import "Windows.Graphics.DirectX.Direct3D11.idl";
import "Windows.System.idl";
import "Windows.UI.Composition.idl";

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        interface IClosable;

        typedef struct TimeSpan TimeSpan;

        apicontract UniversalApiContract;
    }
}
namespace Windows
{
    namespace Graphics
    {
        namespace DirectX
        {
            namespace Direct3D11
            {
                interface IDirect3DDevice;

                interface IDirect3DSurface;
            }
        }
    }
}
namespace Windows
{
    namespace Graphics
    {
        namespace DirectX
        {
            typedef enum DirectXPixelFormat DirectXPixelFormat;
        }
    }
}
namespace Windows
{
    namespace Graphics
    {
        typedef struct SizeInt32 SizeInt32;
    }
}
namespace Windows
{
    namespace System
    {
        runtimeclass DispatcherQueue;
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Composition
        {
            runtimeclass Visual;
        }
    }
}
namespace Windows
{
    namespace Graphics
    {
        namespace Capture
        {
            interface IDirect3D11CaptureFrame;

            interface IDirect3D11CaptureFramePool;

            interface IDirect3D11CaptureFramePoolStatics;

            interface IDirect3D11CaptureFramePoolStatics2;

            interface IGraphicsCaptureItem;

            interface IGraphicsCaptureItemStatics;

            interface IGraphicsCapturePicker;

            interface IGraphicsCaptureSession;

            interface IGraphicsCaptureSession2;

            interface IGraphicsCaptureSessionStatics;

            runtimeclass Direct3D11CaptureFrame;

            runtimeclass Direct3D11CaptureFramePool;

            runtimeclass GraphicsCaptureItem;

            runtimeclass GraphicsCapturePicker;

            runtimeclass GraphicsCaptureSession;
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace Graphics
    {
        namespace Capture
        {
            declare
            {
                interface Windows.Foundation.IAsyncOperation<Windows.Graphics.Capture.GraphicsCaptureItem*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Graphics.Capture.Direct3D11CaptureFramePool*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Graphics.Capture.GraphicsCaptureItem*, IInspectable*>;
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace Graphics
    {
        namespace Capture
        {
            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Graphics.Capture.Direct3D11CaptureFrame)]
            [uuid(FA50C623-38DA-4B32-ACF3-FA9734AD800E)]
            interface IDirect3D11CaptureFrame : IInspectable
            {
                [propget] HRESULT Surface([out] [retval] Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface** value);
                [propget] HRESULT SystemRelativeTime([out] [retval] Windows.Foundation.TimeSpan* value);
                [propget] HRESULT ContentSize([out] [retval] Windows.Graphics.SizeInt32* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Graphics.Capture.Direct3D11CaptureFramePool)]
            [uuid(24EB6D22-1975-422E-82E7-780DBD8DDF24)]
            interface IDirect3D11CaptureFramePool : IInspectable
            {
                HRESULT Recreate([in] Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice* device, [in] Windows.Graphics.DirectX.DirectXPixelFormat pixelFormat, [in] INT32 numberOfBuffers, [in] Windows.Graphics.SizeInt32 size);
                HRESULT TryGetNextFrame([out] [retval] Windows.Graphics.Capture.Direct3D11CaptureFrame** result);
                [eventadd] HRESULT FrameArrived([in] Windows.Foundation.TypedEventHandler<Windows.Graphics.Capture.Direct3D11CaptureFramePool*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT FrameArrived([in] EventRegistrationToken token);
                HRESULT CreateCaptureSession([in] Windows.Graphics.Capture.GraphicsCaptureItem* item, [out] [retval] Windows.Graphics.Capture.GraphicsCaptureSession** result);
                [propget] HRESULT DispatcherQueue([out] [retval] Windows.System.DispatcherQueue** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Graphics.Capture.Direct3D11CaptureFramePool)]
            [uuid(7784056A-67AA-4D53-AE54-1088D5A8CA21)]
            interface IDirect3D11CaptureFramePoolStatics : IInspectable
            {
                HRESULT Create([in] Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice* device, [in] Windows.Graphics.DirectX.DirectXPixelFormat pixelFormat, [in] INT32 numberOfBuffers, [in] Windows.Graphics.SizeInt32 size, [out] [retval] Windows.Graphics.Capture.Direct3D11CaptureFramePool** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 7.0)]
            [exclusiveto(Windows.Graphics.Capture.Direct3D11CaptureFramePool)]
            [uuid(589B103F-6BBC-5DF5-A991-02E28B3B66D5)]
            interface IDirect3D11CaptureFramePoolStatics2 : IInspectable
            {
                HRESULT CreateFreeThreaded([in] Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice* device, [in] Windows.Graphics.DirectX.DirectXPixelFormat pixelFormat, [in] INT32 numberOfBuffers, [in] Windows.Graphics.SizeInt32 size, [out] [retval] Windows.Graphics.Capture.Direct3D11CaptureFramePool** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Graphics.Capture.GraphicsCaptureItem)]
            [uuid(79C3F95B-31F7-4EC2-A464-632EF5D30760)]
            interface IGraphicsCaptureItem : IInspectable
            {
                [propget] HRESULT DisplayName([out] [retval] HSTRING* value);
                [propget] HRESULT Size([out] [retval] Windows.Graphics.SizeInt32* value);
                [eventadd] HRESULT Closed([in] Windows.Foundation.TypedEventHandler<Windows.Graphics.Capture.GraphicsCaptureItem*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Closed([in] EventRegistrationToken token);
            }

            [contract(Windows.Foundation.UniversalApiContract, 7.0)]
            [exclusiveto(Windows.Graphics.Capture.GraphicsCaptureItem)]
            [uuid(A87EBEA5-457C-5788-AB47-0CF1D3637E74)]
            interface IGraphicsCaptureItemStatics : IInspectable
            {
                HRESULT CreateFromVisual([in] Windows.UI.Composition.Visual* visual, [out] [retval] Windows.Graphics.Capture.GraphicsCaptureItem** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Graphics.Capture.GraphicsCapturePicker)]
            [uuid(5A1711B3-AD79-4B4A-9336-1318FDDE3539)]
            interface IGraphicsCapturePicker : IInspectable
            {
                HRESULT PickSingleItemAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Graphics.Capture.GraphicsCaptureItem*>** operation);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Graphics.Capture.GraphicsCaptureSession)]
            [uuid(814E42A9-F70F-4AD7-939B-FDDCC6EB880D)]
            interface IGraphicsCaptureSession : IInspectable
            {
                HRESULT StartCapture();
            }

            [contract(Windows.Foundation.UniversalApiContract, 10.0)]
            [exclusiveto(Windows.Graphics.Capture.GraphicsCaptureSession)]
            [uuid(2C39AE40-7D2E-5044-804E-8B6799D4CF9E)]
            interface IGraphicsCaptureSession2 : IInspectable
            {
                [propget] HRESULT IsCursorCaptureEnabled([out] [retval] boolean* value);
                [propput] HRESULT IsCursorCaptureEnabled([in] boolean value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.Graphics.Capture.GraphicsCaptureSession)]
            [uuid(2224A540-5974-49AA-B232-0882536F4CB5)]
            interface IGraphicsCaptureSessionStatics : IInspectable
            {
                HRESULT IsSupported([out] [retval] boolean* result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            runtimeclass Direct3D11CaptureFrame
            {
                [default] interface Windows.Graphics.Capture.IDirect3D11CaptureFrame;
                interface Windows.Foundation.IClosable;
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            [static(Windows.Graphics.Capture.IDirect3D11CaptureFramePoolStatics, Windows.Foundation.UniversalApiContract, 6.0)]
            [static(Windows.Graphics.Capture.IDirect3D11CaptureFramePoolStatics2, Windows.Foundation.UniversalApiContract, 7.0)]
            [threading(both)]
            runtimeclass Direct3D11CaptureFramePool
            {
                [default] interface Windows.Graphics.Capture.IDirect3D11CaptureFramePool;
                interface Windows.Foundation.IClosable;
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            [static(Windows.Graphics.Capture.IGraphicsCaptureItemStatics, Windows.Foundation.UniversalApiContract, 7.0)]
            [threading(both)]
            runtimeclass GraphicsCaptureItem
            {
                [default] interface Windows.Graphics.Capture.IGraphicsCaptureItem;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 6.0)]
            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass GraphicsCapturePicker
            {
                [default] interface Windows.Graphics.Capture.IGraphicsCapturePicker;
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [marshaling_behavior(agile)]
            [static(Windows.Graphics.Capture.IGraphicsCaptureSessionStatics, Windows.Foundation.UniversalApiContract, 6.0)]
            [threading(both)]
            runtimeclass GraphicsCaptureSession
            {
                [default] interface Windows.Graphics.Capture.IGraphicsCaptureSession;
                [contract(Windows.Foundation.UniversalApiContract, 10.0)] interface Windows.Graphics.Capture.IGraphicsCaptureSession2;
                interface Windows.Foundation.IClosable;
            }
        }
    }
}
