//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Windows.Security.EnterpriseData.idl";
import "Windows.Storage.idl";
import "Windows.Storage.Streams.idl";
import "Windows.UI.idl";

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        typedef struct DateTime DateTime;

        runtimeclass Deferral;

        typedef struct Rect Rect;

        apicontract UniversalApiContract;

        runtimeclass Uri;
    }
}
namespace Windows
{
    namespace Security
    {
        namespace EnterpriseData
        {
            typedef enum ProtectionPolicyEvaluationResult ProtectionPolicyEvaluationResult;
        }
    }
}
namespace Windows
{
    namespace Storage
    {
        interface IStorageFile;

        interface IStorageItem;

        runtimeclass StorageFile;
    }
}
namespace Windows
{
    namespace Storage
    {
        namespace Streams
        {
            interface IRandomAccessStreamReference;

            runtimeclass RandomAccessStreamReference;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        typedef struct Color Color;
    }
}
namespace Windows
{
    namespace ApplicationModel
    {
        namespace DataTransfer
        {
            typedef enum ClipboardHistoryItemsResultStatus ClipboardHistoryItemsResultStatus;

            typedef enum DataPackageOperation DataPackageOperation;

            typedef enum SetHistoryItemAsContentStatus SetHistoryItemAsContentStatus;

            typedef enum ShareUITheme ShareUITheme;

            delegate DataProviderHandler;

            delegate ShareProviderHandler;

            interface IClipboardContentOptions;

            interface IClipboardHistoryChangedEventArgs;

            interface IClipboardHistoryItem;

            interface IClipboardHistoryItemsResult;

            interface IClipboardStatics;

            interface IClipboardStatics2;

            interface IDataPackage;

            interface IDataPackage2;

            interface IDataPackage3;

            interface IDataPackage4;

            interface IDataPackagePropertySet;

            interface IDataPackagePropertySet2;

            interface IDataPackagePropertySet3;

            interface IDataPackagePropertySet4;

            interface IDataPackagePropertySetView;

            interface IDataPackagePropertySetView2;

            interface IDataPackagePropertySetView3;

            interface IDataPackagePropertySetView4;

            interface IDataPackagePropertySetView5;

            interface IDataPackageView;

            interface IDataPackageView2;

            interface IDataPackageView3;

            interface IDataPackageView4;

            interface IDataProviderDeferral;

            interface IDataProviderRequest;

            interface IDataRequest;

            interface IDataRequestDeferral;

            interface IDataRequestedEventArgs;

            interface IDataTransferManager;

            interface IDataTransferManager2;

            interface IDataTransferManagerStatics;

            interface IDataTransferManagerStatics2;

            interface IDataTransferManagerStatics3;

            interface IHtmlFormatHelperStatics;

            interface IOperationCompletedEventArgs;

            interface IOperationCompletedEventArgs2;

            interface IShareCompletedEventArgs;

            interface IShareProvider;

            interface IShareProviderFactory;

            interface IShareProviderOperation;

            interface IShareProvidersRequestedEventArgs;

            interface IShareTargetInfo;

            interface IShareUIOptions;

            interface ISharedStorageAccessManagerStatics;

            interface IStandardDataFormatsStatics;

            interface IStandardDataFormatsStatics2;

            interface IStandardDataFormatsStatics3;

            interface ITargetApplicationChosenEventArgs;

            runtimeclass Clipboard;

            runtimeclass ClipboardContentOptions;

            runtimeclass ClipboardHistoryChangedEventArgs;

            runtimeclass ClipboardHistoryItem;

            runtimeclass ClipboardHistoryItemsResult;

            runtimeclass DataPackage;

            runtimeclass DataPackagePropertySet;

            runtimeclass DataPackagePropertySetView;

            runtimeclass DataPackageView;

            runtimeclass DataProviderDeferral;

            runtimeclass DataProviderRequest;

            runtimeclass DataRequest;

            runtimeclass DataRequestDeferral;

            runtimeclass DataRequestedEventArgs;

            runtimeclass DataTransferManager;

            runtimeclass HtmlFormatHelper;

            runtimeclass OperationCompletedEventArgs;

            runtimeclass ShareCompletedEventArgs;

            runtimeclass ShareProvider;

            runtimeclass ShareProviderOperation;

            runtimeclass ShareProvidersRequestedEventArgs;

            runtimeclass ShareTargetInfo;

            runtimeclass ShareUIOptions;

            runtimeclass SharedStorageAccessManager;

            runtimeclass StandardDataFormats;

            runtimeclass TargetApplicationChosenEventArgs;
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace ApplicationModel
    {
        namespace DataTransfer
        {
            declare
            {
                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.DataTransfer.ShareProvider*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.DataTransfer.ShareProvider*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.DataTransfer.ShareProvider*>;

                interface Windows.Foundation.Collections.IVector<Windows.ApplicationModel.DataTransfer.ShareProvider*>;

                interface Windows.Foundation.EventHandler<Windows.ApplicationModel.DataTransfer.ClipboardHistoryChangedEventArgs*>;

                interface Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.DataTransfer.ClipboardHistoryItemsResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.DataTransfer.DataPackage*>;

                interface Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.DataTransfer.DataPackageOperation>;

                interface Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.DataTransfer.DataPackage*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.DataTransfer.DataPackage*, Windows.ApplicationModel.DataTransfer.OperationCompletedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.DataTransfer.DataPackage*, Windows.ApplicationModel.DataTransfer.ShareCompletedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.DataTransfer.DataTransferManager*, Windows.ApplicationModel.DataTransfer.DataRequestedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.DataTransfer.DataTransferManager*, Windows.ApplicationModel.DataTransfer.ShareProvidersRequestedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.DataTransfer.DataTransferManager*, Windows.ApplicationModel.DataTransfer.TargetApplicationChosenEventArgs*>;
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace ApplicationModel
    {
        namespace DataTransfer
        {
            [contract(Windows.Foundation.UniversalApiContract, 7.0)]
            enum ClipboardHistoryItemsResultStatus
            {
                Success                  = 0,
                AccessDenied             = 1,
                ClipboardHistoryDisabled = 2
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [flags]
            enum DataPackageOperation
            {
                None = 0x0,
                Copy = 0x1,
                Move = 0x2,
                Link = 0x4
            };

            [contract(Windows.Foundation.UniversalApiContract, 7.0)]
            enum SetHistoryItemAsContentStatus
            {
                Success      = 0,
                AccessDenied = 1,
                ItemDeleted  = 2
            };

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            enum ShareUITheme
            {
                Default = 0,
                Light   = 1,
                Dark    = 2
            };

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [uuid(E7ECD720-F2F4-4A2D-920E-170A2F482A27)]
            delegate
                HRESULT DataProviderHandler([in] Windows.ApplicationModel.DataTransfer.DataProviderRequest* request);

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [uuid(E7F9D9BA-E1BA-4E4D-BD65-D43845D3212F)]
            delegate
                HRESULT ShareProviderHandler([in] Windows.ApplicationModel.DataTransfer.ShareProviderOperation* operation);

            [contract(Windows.Foundation.UniversalApiContract, 7.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.ClipboardContentOptions)]
            [uuid(E888A98C-AD4B-5447-A056-AB3556276D2B)]
            interface IClipboardContentOptions : IInspectable
            {
                [propget] HRESULT IsRoamable([out] [retval] boolean* value);
                [propput] HRESULT IsRoamable([in] boolean value);
                [propget] HRESULT IsAllowedInHistory([out] [retval] boolean* value);
                [propput] HRESULT IsAllowedInHistory([in] boolean value);
                [propget] HRESULT RoamingFormats([out] [retval] Windows.Foundation.Collections.IVector<HSTRING>** value);
                [propget] HRESULT HistoryFormats([out] [retval] Windows.Foundation.Collections.IVector<HSTRING>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 7.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.ClipboardHistoryChangedEventArgs)]
            [uuid(C0BE453F-8EA2-53CE-9ABA-8D2212573452)]
            interface IClipboardHistoryChangedEventArgs : IInspectable
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 7.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem)]
            [uuid(0173BD8A-AFFF-5C50-AB92-3D19F481EC58)]
            interface IClipboardHistoryItem : IInspectable
            {
                [propget] HRESULT Id([out] [retval] HSTRING* value);
                [propget] HRESULT Timestamp([out] [retval] Windows.Foundation.DateTime* value);
                [propget] HRESULT Content([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageView** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 7.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.ClipboardHistoryItemsResult)]
            [uuid(E6DFDEE6-0EE2-52E3-852B-F295DB65939A)]
            interface IClipboardHistoryItemsResult : IInspectable
            {
                [propget] HRESULT Status([out] [retval] Windows.ApplicationModel.DataTransfer.ClipboardHistoryItemsResultStatus* value);
                [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem*>** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.Clipboard)]
            [uuid(C627E291-34E2-4963-8EED-93CBB0EA3D70)]
            interface IClipboardStatics : IInspectable
            {
                HRESULT GetContent([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageView** result);
                HRESULT SetContent([in] Windows.ApplicationModel.DataTransfer.DataPackage* content);
                HRESULT Flush();
                HRESULT Clear();
                [eventadd] HRESULT ContentChanged([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ContentChanged([in] EventRegistrationToken token);
            }

            [contract(Windows.Foundation.UniversalApiContract, 7.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.Clipboard)]
            [uuid(D2AC1B6A-D29F-554B-B303-F0452345FE02)]
            interface IClipboardStatics2 : IInspectable
            {
                HRESULT GetHistoryItemsAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.DataTransfer.ClipboardHistoryItemsResult*>** operation);
                HRESULT ClearHistory([out] [retval] boolean* result);
                HRESULT DeleteItemFromHistory([in] Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem* item, [out] [retval] boolean* result);
                HRESULT SetHistoryItemAsContent([in] Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem* item, [out] [retval] Windows.ApplicationModel.DataTransfer.SetHistoryItemAsContentStatus* result);
                HRESULT IsHistoryEnabled([out] [retval] boolean* result);
                HRESULT IsRoamingEnabled([out] [retval] boolean* result);
                HRESULT SetContentWithOptions([in] Windows.ApplicationModel.DataTransfer.DataPackage* content, [in] Windows.ApplicationModel.DataTransfer.ClipboardContentOptions* options, [out] [retval] boolean* result);
                [eventadd] HRESULT HistoryChanged([in] Windows.Foundation.EventHandler<Windows.ApplicationModel.DataTransfer.ClipboardHistoryChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT HistoryChanged([in] EventRegistrationToken token);
                [eventadd] HRESULT RoamingEnabledChanged([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT RoamingEnabledChanged([in] EventRegistrationToken token);
                [eventadd] HRESULT HistoryEnabledChanged([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT HistoryEnabledChanged([in] EventRegistrationToken token);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataPackage)]
            [uuid(61EBF5C7-EFEA-4346-9554-981D7E198FFE)]
            interface IDataPackage : IInspectable
            {
                HRESULT GetView([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageView** result);
                [propget] HRESULT Properties([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackagePropertySet** value);
                [propget] HRESULT RequestedOperation([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageOperation* value);
                [propput] HRESULT RequestedOperation([in] Windows.ApplicationModel.DataTransfer.DataPackageOperation value);
                [eventadd] HRESULT OperationCompleted([in] Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.DataTransfer.DataPackage*, Windows.ApplicationModel.DataTransfer.OperationCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT OperationCompleted([in] EventRegistrationToken token);
                [eventadd] HRESULT Destroyed([in] Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.DataTransfer.DataPackage*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Destroyed([in] EventRegistrationToken token);
                HRESULT SetData([in] HSTRING formatId, [in] IInspectable* value);
                HRESULT SetDataProvider([in] HSTRING formatId, [in] Windows.ApplicationModel.DataTransfer.DataProviderHandler* delayRenderer);
                HRESULT SetText([in] HSTRING value);
                [deprecated("SetUri may be altered or unavailable for releases after Windows Phone 'OSVersion' (TBD).Instead, use SetWebLink or SetApplicationLink.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] HRESULT SetUri([in] Windows.Foundation.Uri* value);
                HRESULT SetHtmlFormat([in] HSTRING value);
                [propget] HRESULT ResourceMap([out] [retval] Windows.Foundation.Collections.IMap<HSTRING, Windows.Storage.Streams.RandomAccessStreamReference*>** value);
                HRESULT SetRtf([in] HSTRING value);
                HRESULT SetBitmap([in] Windows.Storage.Streams.RandomAccessStreamReference* value);
                [overload("SetStorageItems")] HRESULT SetStorageItemsReadOnly([in] Windows.Foundation.Collections.IIterable<Windows.Storage.IStorageItem*>* value);
                [overload("SetStorageItems")] HRESULT SetStorageItems([in] Windows.Foundation.Collections.IIterable<Windows.Storage.IStorageItem*>* value, [in] boolean readOnly);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataPackage)]
            [uuid(041C1FE9-2409-45E1-A538-4C53EEEE04A7)]
            interface IDataPackage2 : IInspectable
            {
                HRESULT SetApplicationLink([in] Windows.Foundation.Uri* value);
                HRESULT SetWebLink([in] Windows.Foundation.Uri* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataPackage)]
            [uuid(88F31F5D-787B-4D32-965A-A9838105A056)]
            interface IDataPackage3 : IInspectable
            {
                [eventadd] HRESULT ShareCompleted([in] Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.DataTransfer.DataPackage*, Windows.ApplicationModel.DataTransfer.ShareCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ShareCompleted([in] EventRegistrationToken token);
            }

            [contract(Windows.Foundation.UniversalApiContract, 10.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataPackage)]
            [uuid(13A24EC8-9382-536F-852A-3045E1B29A3B)]
            interface IDataPackage4 : IInspectable
            {
                [eventadd] HRESULT ShareCanceled([in] Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.DataTransfer.DataPackage*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ShareCanceled([in] EventRegistrationToken token);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataPackagePropertySet)]
            [uuid(CD1C93EB-4C4C-443A-A8D3-F5C241E91689)]
            interface IDataPackagePropertySet : IInspectable
                requires
                    Windows.Foundation.Collections.IMap<HSTRING, IInspectable*>,
                    Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<HSTRING, IInspectable*>*>
            {
                [propget] HRESULT Title([out] [retval] HSTRING* value);
                [propput] HRESULT Title([in] HSTRING value);
                [propget] HRESULT Description([out] [retval] HSTRING* value);
                [propput] HRESULT Description([in] HSTRING value);
                [propget] HRESULT Thumbnail([out] [retval] Windows.Storage.Streams.IRandomAccessStreamReference** value);
                [propput] HRESULT Thumbnail([in] Windows.Storage.Streams.IRandomAccessStreamReference* value);
                [propget] HRESULT FileTypes([out] [retval] Windows.Foundation.Collections.IVector<HSTRING>** value);
                [propget] HRESULT ApplicationName([out] [retval] HSTRING* value);
                [propput] HRESULT ApplicationName([in] HSTRING value);
                [propget] HRESULT ApplicationListingUri([out] [retval] Windows.Foundation.Uri** value);
                [propput] HRESULT ApplicationListingUri([in] Windows.Foundation.Uri* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataPackagePropertySet)]
            [uuid(EB505D4A-9800-46AA-B181-7B6F0F2B919A)]
            interface IDataPackagePropertySet2 : IInspectable
            {
                [propget] HRESULT ContentSourceWebLink([out] [retval] Windows.Foundation.Uri** value);
                [propput] HRESULT ContentSourceWebLink([in] Windows.Foundation.Uri* value);
                [propget] HRESULT ContentSourceApplicationLink([out] [retval] Windows.Foundation.Uri** value);
                [propput] HRESULT ContentSourceApplicationLink([in] Windows.Foundation.Uri* value);
                [propget] HRESULT PackageFamilyName([out] [retval] HSTRING* value);
                [propput] HRESULT PackageFamilyName([in] HSTRING value);
                [propget] HRESULT Square30x30Logo([out] [retval] Windows.Storage.Streams.IRandomAccessStreamReference** value);
                [propput] HRESULT Square30x30Logo([in] Windows.Storage.Streams.IRandomAccessStreamReference* value);
                [propget] HRESULT LogoBackgroundColor([out] [retval] Windows.UI.Color* value);
                [propput] HRESULT LogoBackgroundColor([in] Windows.UI.Color value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataPackagePropertySet)]
            [uuid(9E87FD9B-5205-401B-874A-455653BD39E8)]
            interface IDataPackagePropertySet3 : IInspectable
            {
                [propget] HRESULT EnterpriseId([out] [retval] HSTRING* value);
                [propput] HRESULT EnterpriseId([in] HSTRING value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataPackagePropertySet)]
            [uuid(6390EBF5-1739-4C74-B22F-865FAB5E8545)]
            interface IDataPackagePropertySet4 : IInspectable
            {
                [propget] HRESULT ContentSourceUserActivityJson([out] [retval] HSTRING* value);
                [propput] HRESULT ContentSourceUserActivityJson([in] HSTRING value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataPackagePropertySetView)]
            [uuid(B94CEC01-0C1A-4C57-BE55-75D01289735D)]
            interface IDataPackagePropertySetView : IInspectable
            {
                [propget] HRESULT Title([out] [retval] HSTRING* value);
                [propget] HRESULT Description([out] [retval] HSTRING* value);
                [propget] HRESULT Thumbnail([out] [retval] Windows.Storage.Streams.RandomAccessStreamReference** value);
                [propget] HRESULT FileTypes([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** value);
                [propget] HRESULT ApplicationName([out] [retval] HSTRING* value);
                [propget] HRESULT ApplicationListingUri([out] [retval] Windows.Foundation.Uri** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataPackagePropertySetView)]
            [uuid(6054509B-8EBE-4FEB-9C1E-75E69DE54B84)]
            interface IDataPackagePropertySetView2 : IInspectable
            {
                [propget] HRESULT PackageFamilyName([out] [retval] HSTRING* value);
                [propget] HRESULT ContentSourceWebLink([out] [retval] Windows.Foundation.Uri** value);
                [propget] HRESULT ContentSourceApplicationLink([out] [retval] Windows.Foundation.Uri** value);
                [propget] HRESULT Square30x30Logo([out] [retval] Windows.Storage.Streams.IRandomAccessStreamReference** value);
                [propget] HRESULT LogoBackgroundColor([out] [retval] Windows.UI.Color* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataPackagePropertySetView)]
            [uuid(DB764CE5-D174-495C-84FC-1A51F6AB45D7)]
            interface IDataPackagePropertySetView3 : IInspectable
            {
                [propget] HRESULT EnterpriseId([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataPackagePropertySetView)]
            [uuid(4474C80D-D16F-40AE-9580-6F8562B94235)]
            interface IDataPackagePropertySetView4 : IInspectable
            {
                [propget] HRESULT ContentSourceUserActivityJson([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 7.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataPackagePropertySetView)]
            [uuid(6F0A9445-3760-50BB-8523-C4202DED7D78)]
            interface IDataPackagePropertySetView5 : IInspectable
            {
                [propget] HRESULT IsFromRoamingClipboard([out] [retval] boolean* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataPackageView)]
            [uuid(7B840471-5900-4D85-A90B-10CB85FE3552)]
            interface IDataPackageView : IInspectable
            {
                [propget] HRESULT Properties([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackagePropertySetView** value);
                [propget] HRESULT RequestedOperation([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageOperation* value);
                HRESULT ReportOperationCompleted([in] Windows.ApplicationModel.DataTransfer.DataPackageOperation value);
                [propget] HRESULT AvailableFormats([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** formatIds);
                HRESULT Contains([in] HSTRING formatId, [out] [retval] boolean* value);
                HRESULT GetDataAsync([in] HSTRING formatId, [out] [retval] Windows.Foundation.IAsyncOperation<IInspectable*>** operation);
                [overload("GetTextAsync")] HRESULT GetTextAsync([out] [retval] Windows.Foundation.IAsyncOperation<HSTRING>** operation);
                [overload("GetTextAsync")] HRESULT GetCustomTextAsync([in] HSTRING formatId, [out] [retval] Windows.Foundation.IAsyncOperation<HSTRING>** operation);
                [deprecated("GetUriAsync may be altered or unavailable for releases after Windows 8.1. Instead, use GetWebLinkAsync or GetApplicationLinkAsync.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] HRESULT GetUriAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Uri*>** operation);
                HRESULT GetHtmlFormatAsync([out] [retval] Windows.Foundation.IAsyncOperation<HSTRING>** operation);
                HRESULT GetResourceMapAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IMapView<HSTRING, Windows.Storage.Streams.RandomAccessStreamReference*>*>** operation);
                HRESULT GetRtfAsync([out] [retval] Windows.Foundation.IAsyncOperation<HSTRING>** operation);
                HRESULT GetBitmapAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.RandomAccessStreamReference*>** operation);
                HRESULT GetStorageItemsAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.Storage.IStorageItem*>*>** operation);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataPackageView)]
            [uuid(40ECBA95-2450-4C1D-B6B4-ED45463DEE9C)]
            interface IDataPackageView2 : IInspectable
            {
                HRESULT GetApplicationLinkAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Uri*>** operation);
                HRESULT GetWebLinkAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Uri*>** operation);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataPackageView)]
            [uuid(D37771A8-DDAD-4288-8428-D1CAE394128B)]
            interface IDataPackageView3 : IInspectable
            {
                [overload("RequestAccessAsync")] HRESULT RequestAccessAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Security.EnterpriseData.ProtectionPolicyEvaluationResult>** operation);
                [overload("RequestAccessAsync")] HRESULT RequestAccessWithEnterpriseIdAsync([in] HSTRING enterpriseId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Security.EnterpriseData.ProtectionPolicyEvaluationResult>** operation);
                HRESULT UnlockAndAssumeEnterpriseIdentity([out] [retval] Windows.Security.EnterpriseData.ProtectionPolicyEvaluationResult* result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 2.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataPackageView)]
            [uuid(DFE96F1F-E042-4433-A09F-26D6FFDA8B85)]
            interface IDataPackageView4 : IInspectable
            {
                HRESULT SetAcceptedFormatId([in] HSTRING formatId);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataProviderDeferral)]
            [uuid(C2CF2373-2D26-43D9-B69D-DCB86D03F6DA)]
            interface IDataProviderDeferral : IInspectable
            {
                HRESULT Complete();
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataProviderRequest)]
            [uuid(EBBC7157-D3C8-47DA-ACDE-F82388D5F716)]
            interface IDataProviderRequest : IInspectable
            {
                [propget] HRESULT FormatId([out] [retval] HSTRING* value);
                [propget] HRESULT Deadline([out] [retval] Windows.Foundation.DateTime* value);
                HRESULT GetDeferral([out] [retval] Windows.ApplicationModel.DataTransfer.DataProviderDeferral** value);
                HRESULT SetData([in] IInspectable* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataRequest)]
            [uuid(4341AE3B-FC12-4E53-8C02-AC714C415A27)]
            interface IDataRequest : IInspectable
            {
                [propget] HRESULT Data([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackage** value);
                [propput] HRESULT Data([in] Windows.ApplicationModel.DataTransfer.DataPackage* value);
                [propget] HRESULT Deadline([out] [retval] Windows.Foundation.DateTime* value);
                HRESULT FailWithDisplayText([in] HSTRING value);
                HRESULT GetDeferral([out] [retval] Windows.ApplicationModel.DataTransfer.DataRequestDeferral** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataRequestDeferral)]
            [uuid(6DC4B89F-0386-4263-87C1-ED7DCE30890E)]
            interface IDataRequestDeferral : IInspectable
            {
                HRESULT Complete();
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataRequestedEventArgs)]
            [uuid(CB8BA807-6AC5-43C9-8AC5-9BA232163182)]
            interface IDataRequestedEventArgs : IInspectable
            {
                [propget] HRESULT Request([out] [retval] Windows.ApplicationModel.DataTransfer.DataRequest** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataTransferManager)]
            [uuid(A5CAEE9B-8708-49D1-8D36-67D25A8DA00C)]
            interface IDataTransferManager : IInspectable
            {
                [eventadd] HRESULT DataRequested([in] Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.DataTransfer.DataTransferManager*, Windows.ApplicationModel.DataTransfer.DataRequestedEventArgs*>* eventHandler, [out] [retval] EventRegistrationToken* eventCookie);
                [eventremove] HRESULT DataRequested([in] EventRegistrationToken eventCookie);
                [eventadd] HRESULT TargetApplicationChosen([in] Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.DataTransfer.DataTransferManager*, Windows.ApplicationModel.DataTransfer.TargetApplicationChosenEventArgs*>* eventHandler, [out] [retval] EventRegistrationToken* eventCookie);
                [eventremove] HRESULT TargetApplicationChosen([in] EventRegistrationToken eventCookie);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataTransferManager)]
            [uuid(30AE7D71-8BA8-4C02-8E3F-DDB23B388715)]
            interface IDataTransferManager2 : IInspectable
            {
                [eventadd] HRESULT ShareProvidersRequested([in] Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.DataTransfer.DataTransferManager*, Windows.ApplicationModel.DataTransfer.ShareProvidersRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ShareProvidersRequested([in] EventRegistrationToken token);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataTransferManager)]
            [uuid(A9DA01AA-E00E-4CFE-AA44-2DD932DCA3D8)]
            interface IDataTransferManagerStatics : IInspectable
            {
                HRESULT ShowShareUI();
                HRESULT GetForCurrentView([out] [retval] Windows.ApplicationModel.DataTransfer.DataTransferManager** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 3.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataTransferManager)]
            [uuid(C54EC2EC-9F97-4D63-9868-395E271AD8F5)]
            interface IDataTransferManagerStatics2 : IInspectable
            {
                HRESULT IsSupported([out] [retval] boolean* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.DataTransferManager)]
            [uuid(05845473-6C82-4F5C-AC23-62E458361FAC)]
            interface IDataTransferManagerStatics3 : IInspectable
            {
                [overload("ShowShareUI")] HRESULT ShowShareUIWithOptions([in] Windows.ApplicationModel.DataTransfer.ShareUIOptions* options);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.HtmlFormatHelper)]
            [uuid(E22E7749-DD70-446F-AEFC-61CEE59F655E)]
            interface IHtmlFormatHelperStatics : IInspectable
            {
                HRESULT GetStaticFragment([in] HSTRING htmlFormat, [out] [retval] HSTRING* htmlFragment);
                HRESULT CreateHtmlFormat([in] HSTRING htmlFragment, [out] [retval] HSTRING* htmlFormat);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.OperationCompletedEventArgs)]
            [uuid(E7AF329D-051D-4FAB-B1A9-47FD77F70A41)]
            interface IOperationCompletedEventArgs : IInspectable
            {
                [propget] HRESULT Operation([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageOperation* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 2.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.OperationCompletedEventArgs)]
            [uuid(858FA073-1E19-4105-B2F7-C8478808D562)]
            interface IOperationCompletedEventArgs2 : IInspectable
            {
                [propget] HRESULT AcceptedFormatId([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.ShareCompletedEventArgs)]
            [uuid(4574C442-F913-4F60-9DF7-CC4060AB1916)]
            interface IShareCompletedEventArgs : IInspectable
            {
                [propget] HRESULT ShareTarget([out] [retval] Windows.ApplicationModel.DataTransfer.ShareTargetInfo** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.ShareProvider)]
            [uuid(2FABE026-443E-4CDA-AF25-8D81070EFD80)]
            interface IShareProvider : IInspectable
            {
                [propget] HRESULT Title([out] [retval] HSTRING* value);
                [propget] HRESULT DisplayIcon([out] [retval] Windows.Storage.Streams.RandomAccessStreamReference** value);
                [propget] HRESULT BackgroundColor([out] [retval] Windows.UI.Color* value);
                [propget] HRESULT Tag([out] [retval] IInspectable** value);
                [propput] HRESULT Tag([in] IInspectable* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.ShareProvider)]
            [uuid(172A174C-E79E-4F6D-B07D-128F469E0296)]
            interface IShareProviderFactory : IInspectable
            {
                HRESULT Create([in] HSTRING title, [in] Windows.Storage.Streams.RandomAccessStreamReference* displayIcon, [in] Windows.UI.Color backgroundColor, [in] Windows.ApplicationModel.DataTransfer.ShareProviderHandler* handler, [out] [retval] Windows.ApplicationModel.DataTransfer.ShareProvider** result);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.ShareProviderOperation)]
            [uuid(19CEF937-D435-4179-B6AF-14E0492B69F6)]
            interface IShareProviderOperation : IInspectable
            {
                [propget] HRESULT Data([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageView** value);
                [propget] HRESULT Provider([out] [retval] Windows.ApplicationModel.DataTransfer.ShareProvider** value);
                HRESULT ReportCompleted();
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.ShareProvidersRequestedEventArgs)]
            [uuid(F888F356-A3F8-4FCE-85E4-8826E63BE799)]
            interface IShareProvidersRequestedEventArgs : IInspectable
            {
                [propget] HRESULT Providers([out] [retval] Windows.Foundation.Collections.IVector<Windows.ApplicationModel.DataTransfer.ShareProvider*>** value);
                [propget] HRESULT Data([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageView** value);
                HRESULT GetDeferral([out] [retval] Windows.Foundation.Deferral** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.ShareTargetInfo)]
            [uuid(385BE607-C6E8-4114-B294-28F3BB6F9904)]
            interface IShareTargetInfo : IInspectable
            {
                [propget] HRESULT AppUserModelId([out] [retval] HSTRING* value);
                [propget] HRESULT ShareProvider([out] [retval] Windows.ApplicationModel.DataTransfer.ShareProvider** value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.ShareUIOptions)]
            [uuid(72FA8A80-342F-4D90-9551-2AE04E37680C)]
            interface IShareUIOptions : IInspectable
            {
                [propget] HRESULT Theme([out] [retval] Windows.ApplicationModel.DataTransfer.ShareUITheme* value);
                [propput] HRESULT Theme([in] Windows.ApplicationModel.DataTransfer.ShareUITheme value);
                [propget] HRESULT SelectionRect([out] [retval] Windows.Foundation.IReference<Windows.Foundation.Rect>** value);
                [propput] HRESULT SelectionRect([in] Windows.Foundation.IReference<Windows.Foundation.Rect>* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.SharedStorageAccessManager)]
            [uuid(C6132ADA-34B1-4849-BD5F-D09FEE3158C5)]
            interface ISharedStorageAccessManagerStatics : IInspectable
            {
                HRESULT AddFile([in] Windows.Storage.IStorageFile* file, [out] [retval] HSTRING* outToken);
                HRESULT RedeemTokenForFileAsync([in] HSTRING token, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Storage.StorageFile*>** operation);
                HRESULT RemoveFile([in] HSTRING token);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.StandardDataFormats)]
            [uuid(7ED681A1-A880-40C9-B4ED-0BEE1E15F549)]
            interface IStandardDataFormatsStatics : IInspectable
            {
                [propget] HRESULT Text([out] [retval] HSTRING* value);
                [deprecated("Uri may be altered or unavailable for releases after Windows Phone 'OSVersion' (TBD). Instead, use WebLink or ApplicationLink.", deprecate, Windows.Foundation.UniversalApiContract, 1.0)] [propget] HRESULT Uri([out] [retval] HSTRING* value);
                [propget] HRESULT Html([out] [retval] HSTRING* value);
                [propget] HRESULT Rtf([out] [retval] HSTRING* value);
                [propget] HRESULT Bitmap([out] [retval] HSTRING* value);
                [propget] HRESULT StorageItems([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.StandardDataFormats)]
            [uuid(42A254F4-9D76-42E8-861B-47C25DD0CF71)]
            interface IStandardDataFormatsStatics2 : IInspectable
            {
                [propget] HRESULT WebLink([out] [retval] HSTRING* value);
                [propget] HRESULT ApplicationLink([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 6.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.StandardDataFormats)]
            [uuid(3B57B069-01D4-474C-8B5F-BC8E27F38B21)]
            interface IStandardDataFormatsStatics3 : IInspectable
            {
                [propget] HRESULT UserActivityJsonArray([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [exclusiveto(Windows.ApplicationModel.DataTransfer.TargetApplicationChosenEventArgs)]
            [uuid(CA6FB8AC-2987-4EE3-9C54-D8AFBCB86C1D)]
            interface ITargetApplicationChosenEventArgs : IInspectable
            {
                [propget] HRESULT ApplicationName([out] [retval] HSTRING* value);
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(standard)]
            [static(Windows.ApplicationModel.DataTransfer.IClipboardStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.ApplicationModel.DataTransfer.IClipboardStatics2, Windows.Foundation.UniversalApiContract, 7.0)]
            [threading(both)]
            runtimeclass Clipboard
            {
            }

            [activatable(Windows.Foundation.UniversalApiContract, 7.0)]
            [contract(Windows.Foundation.UniversalApiContract, 7.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ClipboardContentOptions
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IClipboardContentOptions;
            }

            [contract(Windows.Foundation.UniversalApiContract, 7.0)]
            [marshaling_behavior(agile)]
            runtimeclass ClipboardHistoryChangedEventArgs
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IClipboardHistoryChangedEventArgs;
            }

            [contract(Windows.Foundation.UniversalApiContract, 7.0)]
            [marshaling_behavior(agile)]
            runtimeclass ClipboardHistoryItem
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IClipboardHistoryItem;
            }

            [contract(Windows.Foundation.UniversalApiContract, 7.0)]
            [marshaling_behavior(agile)]
            runtimeclass ClipboardHistoryItemsResult
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IClipboardHistoryItemsResult;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 1.0)]
            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass DataPackage
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IDataPackage;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.ApplicationModel.DataTransfer.IDataPackage2;
                [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.ApplicationModel.DataTransfer.IDataPackage3;
                [contract(Windows.Foundation.UniversalApiContract, 10.0)] interface Windows.ApplicationModel.DataTransfer.IDataPackage4;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass DataPackagePropertySet
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IDataPackagePropertySet;
                interface Windows.Foundation.Collections.IMap<HSTRING, IInspectable*>;
                interface Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<HSTRING, IInspectable*>*>;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.ApplicationModel.DataTransfer.IDataPackagePropertySet2;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.ApplicationModel.DataTransfer.IDataPackagePropertySet3;
                [contract(Windows.Foundation.UniversalApiContract, 6.0)] interface Windows.ApplicationModel.DataTransfer.IDataPackagePropertySet4;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass DataPackagePropertySetView
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IDataPackagePropertySetView;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.ApplicationModel.DataTransfer.IDataPackagePropertySetView2;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.ApplicationModel.DataTransfer.IDataPackagePropertySetView3;
                [contract(Windows.Foundation.UniversalApiContract, 6.0)] interface Windows.ApplicationModel.DataTransfer.IDataPackagePropertySetView4;
                [contract(Windows.Foundation.UniversalApiContract, 7.0)] interface Windows.ApplicationModel.DataTransfer.IDataPackagePropertySetView5;
                interface Windows.Foundation.Collections.IMapView<HSTRING, IInspectable*>;
                interface Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<HSTRING, IInspectable*>*>;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass DataPackageView
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IDataPackageView;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.ApplicationModel.DataTransfer.IDataPackageView2;
                [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.ApplicationModel.DataTransfer.IDataPackageView3;
                [contract(Windows.Foundation.UniversalApiContract, 2.0)] interface Windows.ApplicationModel.DataTransfer.IDataPackageView4;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass DataProviderDeferral
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IDataProviderDeferral;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass DataProviderRequest
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IDataProviderRequest;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass DataRequest
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IDataRequest;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass DataRequestDeferral
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IDataRequestDeferral;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass DataRequestedEventArgs
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IDataRequestedEventArgs;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(standard)]
            [static(Windows.ApplicationModel.DataTransfer.IDataTransferManagerStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.ApplicationModel.DataTransfer.IDataTransferManagerStatics2, Windows.Foundation.UniversalApiContract, 3.0)]
            [static(Windows.ApplicationModel.DataTransfer.IDataTransferManagerStatics3, Windows.Foundation.UniversalApiContract, 5.0)]
            runtimeclass DataTransferManager
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IDataTransferManager;
                [contract(Windows.Foundation.UniversalApiContract, 4.0)] interface Windows.ApplicationModel.DataTransfer.IDataTransferManager2;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Windows.ApplicationModel.DataTransfer.IHtmlFormatHelperStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass HtmlFormatHelper
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass OperationCompletedEventArgs
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IOperationCompletedEventArgs;
                [contract(Windows.Foundation.UniversalApiContract, 2.0)] interface Windows.ApplicationModel.DataTransfer.IOperationCompletedEventArgs2;
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [marshaling_behavior(agile)]
            runtimeclass ShareCompletedEventArgs
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IShareCompletedEventArgs;
            }

            [activatable(Windows.ApplicationModel.DataTransfer.IShareProviderFactory, Windows.Foundation.UniversalApiContract, 4.0)]
            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [marshaling_behavior(agile)]
            runtimeclass ShareProvider
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IShareProvider;
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [marshaling_behavior(agile)]
            runtimeclass ShareProviderOperation
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IShareProviderOperation;
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [marshaling_behavior(agile)]
            runtimeclass ShareProvidersRequestedEventArgs
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IShareProvidersRequestedEventArgs;
            }

            [contract(Windows.Foundation.UniversalApiContract, 4.0)]
            [marshaling_behavior(agile)]
            runtimeclass ShareTargetInfo
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IShareTargetInfo;
            }

            [activatable(Windows.Foundation.UniversalApiContract, 5.0)]
            [contract(Windows.Foundation.UniversalApiContract, 5.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ShareUIOptions
            {
                [default] interface Windows.ApplicationModel.DataTransfer.IShareUIOptions;
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.ApplicationModel.DataTransfer.ISharedStorageAccessManagerStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            runtimeclass SharedStorageAccessManager
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Windows.ApplicationModel.DataTransfer.IStandardDataFormatsStatics, Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.ApplicationModel.DataTransfer.IStandardDataFormatsStatics2, Windows.Foundation.UniversalApiContract, 1.0)]
            [static(Windows.ApplicationModel.DataTransfer.IStandardDataFormatsStatics3, Windows.Foundation.UniversalApiContract, 6.0)]
            runtimeclass StandardDataFormats
            {
            }

            [contract(Windows.Foundation.UniversalApiContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass TargetApplicationChosenEventArgs
            {
                [default] interface Windows.ApplicationModel.DataTransfer.ITargetApplicationChosenEventArgs;
            }
        }
    }
}
