//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        interface IGetActivationFactory;
    }
}
namespace Windows
{
    namespace Perception
    {
        namespace Automation
        {
            namespace Core
            {
                apicontract PerceptionAutomationCoreContract;

                interface ICorePerceptionAutomationStatics;

                runtimeclass CorePerceptionAutomation;
            }
        }
    }
}

// Generic instantiations

// Type definition
namespace Windows
{
    namespace Perception
    {
        namespace Automation
        {
            namespace Core
            {
                [contractversion(1.0)]
                apicontract PerceptionAutomationCoreContract
                {
                }

                [contract(Windows.Perception.Automation.Core.PerceptionAutomationCoreContract, 1.0)]
                [exclusiveto(Windows.Perception.Automation.Core.CorePerceptionAutomation)]
                [uuid(0BB04541-4CE2-4923-9A76-8187ECC59112)]
                interface ICorePerceptionAutomationStatics : IInspectable
                {
                    HRESULT SetActivationFactoryProvider([in] Windows.Foundation.IGetActivationFactory* provider);
                }

                [contract(Windows.Perception.Automation.Core.PerceptionAutomationCoreContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.Perception.Automation.Core.ICorePerceptionAutomationStatics, Windows.Perception.Automation.Core.PerceptionAutomationCoreContract, 1.0)]
                [threading(both)]
                runtimeclass CorePerceptionAutomation
                {
                }
            }
        }
    }
}
