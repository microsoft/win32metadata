
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif /*COM_NO_WINDOWS_H*/
#ifndef __windows2Emedia2Ecapture_h__
#define __windows2Emedia2Ecapture_h__
#ifndef __windows2Emedia2Ecapture_p_h__
#define __windows2Emedia2Ecapture_p_h__


#pragma once

//
// Deprecated attribute support
//

#pragma push_macro("DEPRECATED")
#undef DEPRECATED

#if !defined(DISABLE_WINRT_DEPRECATION)
#if defined(__cplusplus)
#if __cplusplus >= 201402
#define DEPRECATED(x) [[deprecated(x)]]
#define DEPRECATEDENUMERATOR(x) [[deprecated(x)]]
#elif defined(_MSC_VER)
#if _MSC_VER >= 1900
#define DEPRECATED(x) [[deprecated(x)]]
#define DEPRECATEDENUMERATOR(x) [[deprecated(x)]]
#else
#define DEPRECATED(x) __declspec(deprecated(x))
#define DEPRECATEDENUMERATOR(x)
#endif // _MSC_VER >= 1900
#else // Not Standard C++ or MSVC, ignore the construct.
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif  // C++ deprecation
#else // C - disable deprecation
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif
#else // Deprecation is disabled
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif  /* DEPRECATED */

// Disable Deprecation for this header, MIDL verifies that cross-type access is acceptable
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#else
#pragma warning(push)
#pragma warning(disable: 4996)
#endif

// Ensure that the setting of the /ns_prefix command line switch is consistent for all headers.
// If you get an error from the compiler indicating "warning C4005: 'CHECK_NS_PREFIX_STATE': macro redefinition", this
// indicates that you have included two different headers with different settings for the /ns_prefix MIDL command line switch
#if !defined(DISABLE_NS_PREFIX_CHECKS)
#define CHECK_NS_PREFIX_STATE "always"
#endif // !defined(DISABLE_NS_PREFIX_CHECKS)


#pragma push_macro("MIDL_CONST_ID")
#undef MIDL_CONST_ID
#define MIDL_CONST_ID const __declspec(selectany)


//  API Contract Inclusion Definitions
#if !defined(SPECIFIC_API_CONTRACT_DEFINITIONS)
#if !defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)
#define WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION 0x40000
#endif // defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)

#if !defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)
#define WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION 0xa0000
#endif // defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_MEDIACONTROLCONTRACT_VERSION)
#define WINDOWS_MEDIA_MEDIACONTROLCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_MEDIA_MEDIACONTROLCONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION)
#define WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION 0x20000
#endif // defined(WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION)
#define WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION 0x40000
#endif // defined(WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION)
#define WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_CAPTURE_CAMERACAPTUREUICONTRACT_VERSION)
#define WINDOWS_MEDIA_CAPTURE_CAMERACAPTUREUICONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_MEDIA_CAPTURE_CAMERACAPTUREUICONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION)
#define WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_DEVICES_CALLCONTROLCONTRACT_VERSION)
#define WINDOWS_MEDIA_DEVICES_CALLCONTROLCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_MEDIA_DEVICES_CALLCONTROLCONTRACT_VERSION)

#if !defined(WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION)
#define WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION 0x70000
#endif // defined(WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION)

#endif // defined(SPECIFIC_API_CONTRACT_DEFINITIONS)


// Header files for imported files
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "windowscontracts.h"
#include "Windows.Foundation.h"
#include "Windows.Devices.Enumeration.h"
#include "Windows.Graphics.DirectX.Direct3D11.h"
#include "Windows.Graphics.Imaging.h"
#include "Windows.Media.h"
#include "Windows.Media.Capture.Core.h"
#include "Windows.Media.Capture.Frames.h"
#include "Windows.Media.Core.h"
#include "Windows.Media.Devices.h"
#include "Windows.Media.Effects.h"
#include "Windows.Media.MediaProperties.h"
#include "Windows.Security.Authentication.Web.h"
#include "Windows.Security.Credentials.h"
#include "Windows.Storage.h"
#include "Windows.Storage.Streams.h"
#include "Windows.System.h"
#include "Windows.UI.WindowManagement.h"
// Importing Collections header
#include <windows.foundation.collections.h>

#if defined(__cplusplus) && !defined(CINTERFACE)
/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureFailedEventHandler;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler ABI::Windows::Media::Capture::IMediaCaptureFailedEventHandler

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IRecordLimitationExceededEventHandler;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler ABI::Windows::Media::Capture::IRecordLimitationExceededEventHandler

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAdvancedCapturedPhoto;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto ABI::Windows::Media::Capture::IAdvancedCapturedPhoto

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAdvancedCapturedPhoto2;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2 ABI::Windows::Media::Capture::IAdvancedCapturedPhoto2

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAdvancedPhotoCapture;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture ABI::Windows::Media::Capture::IAdvancedPhotoCapture

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastBackgroundService;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService ABI::Windows::Media::Capture::IAppBroadcastBackgroundService

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastBackgroundService2;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2 ABI::Windows::Media::Capture::IAppBroadcastBackgroundService2

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastBackgroundServiceSignInInfo;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo ABI::Windows::Media::Capture::IAppBroadcastBackgroundServiceSignInInfo

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastBackgroundServiceSignInInfo2;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2 ABI::Windows::Media::Capture::IAppBroadcastBackgroundServiceSignInInfo2

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastBackgroundServiceStreamInfo;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo ABI::Windows::Media::Capture::IAppBroadcastBackgroundServiceStreamInfo

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastBackgroundServiceStreamInfo2;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2 ABI::Windows::Media::Capture::IAppBroadcastBackgroundServiceStreamInfo2

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastCameraCaptureStateChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs ABI::Windows::Media::Capture::IAppBroadcastCameraCaptureStateChangedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastGlobalSettings;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings ABI::Windows::Media::Capture::IAppBroadcastGlobalSettings

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastHeartbeatRequestedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs ABI::Windows::Media::Capture::IAppBroadcastHeartbeatRequestedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastManagerStatics;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics ABI::Windows::Media::Capture::IAppBroadcastManagerStatics

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastMicrophoneCaptureStateChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs ABI::Windows::Media::Capture::IAppBroadcastMicrophoneCaptureStateChangedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastPlugIn;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn ABI::Windows::Media::Capture::IAppBroadcastPlugIn

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastPlugInManager;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager ABI::Windows::Media::Capture::IAppBroadcastPlugInManager

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastPlugInManagerStatics;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics ABI::Windows::Media::Capture::IAppBroadcastPlugInManagerStatics

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastPlugInStateChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs ABI::Windows::Media::Capture::IAppBroadcastPlugInStateChangedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastPreview;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview ABI::Windows::Media::Capture::IAppBroadcastPreview

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastPreviewStateChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs ABI::Windows::Media::Capture::IAppBroadcastPreviewStateChangedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastPreviewStreamReader;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader ABI::Windows::Media::Capture::IAppBroadcastPreviewStreamReader

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastPreviewStreamVideoFrame;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame ABI::Windows::Media::Capture::IAppBroadcastPreviewStreamVideoFrame

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastPreviewStreamVideoHeader;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader ABI::Windows::Media::Capture::IAppBroadcastPreviewStreamVideoHeader

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastProviderSettings;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings ABI::Windows::Media::Capture::IAppBroadcastProviderSettings

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastServices;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices ABI::Windows::Media::Capture::IAppBroadcastServices

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastSignInStateChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs ABI::Windows::Media::Capture::IAppBroadcastSignInStateChangedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastState;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState ABI::Windows::Media::Capture::IAppBroadcastState

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastStreamAudioFrame;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame ABI::Windows::Media::Capture::IAppBroadcastStreamAudioFrame

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastStreamAudioHeader;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader ABI::Windows::Media::Capture::IAppBroadcastStreamAudioHeader

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastStreamReader;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader ABI::Windows::Media::Capture::IAppBroadcastStreamReader

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastStreamStateChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs ABI::Windows::Media::Capture::IAppBroadcastStreamStateChangedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastStreamVideoFrame;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame ABI::Windows::Media::Capture::IAppBroadcastStreamVideoFrame

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastStreamVideoHeader;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader ABI::Windows::Media::Capture::IAppBroadcastStreamVideoHeader

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastTriggerDetails;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails ABI::Windows::Media::Capture::IAppBroadcastTriggerDetails

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppBroadcastViewerCountChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs ABI::Windows::Media::Capture::IAppBroadcastViewerCountChangedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCapture;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCapture ABI::Windows::Media::Capture::IAppCapture

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureAlternateShortcutKeys;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys ABI::Windows::Media::Capture::IAppCaptureAlternateShortcutKeys

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureAlternateShortcutKeys2;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2 ABI::Windows::Media::Capture::IAppCaptureAlternateShortcutKeys2

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureAlternateShortcutKeys3;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3 ABI::Windows::Media::Capture::IAppCaptureAlternateShortcutKeys3

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureDurationGeneratedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs ABI::Windows::Media::Capture::IAppCaptureDurationGeneratedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureFileGeneratedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs ABI::Windows::Media::Capture::IAppCaptureFileGeneratedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureManagerStatics;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics ABI::Windows::Media::Capture::IAppCaptureManagerStatics

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureMetadataWriter;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter ABI::Windows::Media::Capture::IAppCaptureMetadataWriter

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureMicrophoneCaptureStateChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs ABI::Windows::Media::Capture::IAppCaptureMicrophoneCaptureStateChangedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureRecordOperation;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation ABI::Windows::Media::Capture::IAppCaptureRecordOperation

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureRecordingStateChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs ABI::Windows::Media::Capture::IAppCaptureRecordingStateChangedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureServices;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices ABI::Windows::Media::Capture::IAppCaptureServices

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureSettings;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings ABI::Windows::Media::Capture::IAppCaptureSettings

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureSettings2;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2 ABI::Windows::Media::Capture::IAppCaptureSettings2

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureSettings3;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3 ABI::Windows::Media::Capture::IAppCaptureSettings3

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureSettings4;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4 ABI::Windows::Media::Capture::IAppCaptureSettings4

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureSettings5;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5 ABI::Windows::Media::Capture::IAppCaptureSettings5

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureState;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState ABI::Windows::Media::Capture::IAppCaptureState

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureStatics;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics ABI::Windows::Media::Capture::IAppCaptureStatics

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IAppCaptureStatics2;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2 ABI::Windows::Media::Capture::IAppCaptureStatics2

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface ICameraCaptureUI;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI ABI::Windows::Media::Capture::ICameraCaptureUI

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface ICameraCaptureUIPhotoCaptureSettings;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings ABI::Windows::Media::Capture::ICameraCaptureUIPhotoCaptureSettings

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface ICameraCaptureUIVideoCaptureSettings;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings ABI::Windows::Media::Capture::ICameraCaptureUIVideoCaptureSettings

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface ICameraOptionsUIStatics;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics ABI::Windows::Media::Capture::ICameraOptionsUIStatics

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface ICapturedFrame;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame ABI::Windows::Media::Capture::ICapturedFrame

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface ICapturedFrame2;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2 ABI::Windows::Media::Capture::ICapturedFrame2

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface ICapturedFrameControlValues;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues ABI::Windows::Media::Capture::ICapturedFrameControlValues

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface ICapturedFrameControlValues2;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2 ABI::Windows::Media::Capture::ICapturedFrameControlValues2

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface ICapturedFrameWithSoftwareBitmap;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap ABI::Windows::Media::Capture::ICapturedFrameWithSoftwareBitmap

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface ICapturedPhoto;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto ABI::Windows::Media::Capture::ICapturedPhoto

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IGameBarServices;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices ABI::Windows::Media::Capture::IGameBarServices

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IGameBarServicesCommandEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs ABI::Windows::Media::Capture::IGameBarServicesCommandEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IGameBarServicesManager;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager ABI::Windows::Media::Capture::IGameBarServicesManager

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IGameBarServicesManagerGameBarServicesCreatedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs ABI::Windows::Media::Capture::IGameBarServicesManagerGameBarServicesCreatedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IGameBarServicesManagerStatics;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics ABI::Windows::Media::Capture::IGameBarServicesManagerStatics

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IGameBarServicesTargetInfo;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo ABI::Windows::Media::Capture::IGameBarServicesTargetInfo

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface ILowLagMediaRecording;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording ABI::Windows::Media::Capture::ILowLagMediaRecording

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface ILowLagMediaRecording2;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2 ABI::Windows::Media::Capture::ILowLagMediaRecording2

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface ILowLagMediaRecording3;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3 ABI::Windows::Media::Capture::ILowLagMediaRecording3

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface ILowLagPhotoCapture;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture ABI::Windows::Media::Capture::ILowLagPhotoCapture

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface ILowLagPhotoSequenceCapture;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture ABI::Windows::Media::Capture::ILowLagPhotoSequenceCapture

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCapture;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture ABI::Windows::Media::Capture::IMediaCapture

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCapture2;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2 ABI::Windows::Media::Capture::IMediaCapture2

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCapture3;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3 ABI::Windows::Media::Capture::IMediaCapture3

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCapture4;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4 ABI::Windows::Media::Capture::IMediaCapture4

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCapture5;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5 ABI::Windows::Media::Capture::IMediaCapture5

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCapture6;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6 ABI::Windows::Media::Capture::IMediaCapture6

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCapture7;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7 ABI::Windows::Media::Capture::IMediaCapture7

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureDeviceExclusiveControlStatusChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs ABI::Windows::Media::Capture::IMediaCaptureDeviceExclusiveControlStatusChangedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureFailedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs ABI::Windows::Media::Capture::IMediaCaptureFailedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureFocusChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs ABI::Windows::Media::Capture::IMediaCaptureFocusChangedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureInitializationSettings;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings ABI::Windows::Media::Capture::IMediaCaptureInitializationSettings

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureInitializationSettings2;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2 ABI::Windows::Media::Capture::IMediaCaptureInitializationSettings2

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureInitializationSettings3;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3 ABI::Windows::Media::Capture::IMediaCaptureInitializationSettings3

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureInitializationSettings4;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4 ABI::Windows::Media::Capture::IMediaCaptureInitializationSettings4

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureInitializationSettings5;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5 ABI::Windows::Media::Capture::IMediaCaptureInitializationSettings5

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureInitializationSettings6;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6 ABI::Windows::Media::Capture::IMediaCaptureInitializationSettings6

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureInitializationSettings7;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7 ABI::Windows::Media::Capture::IMediaCaptureInitializationSettings7

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCapturePauseResult;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult ABI::Windows::Media::Capture::IMediaCapturePauseResult

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureRelativePanelWatcher;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher ABI::Windows::Media::Capture::IMediaCaptureRelativePanelWatcher

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureSettings;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings ABI::Windows::Media::Capture::IMediaCaptureSettings

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureSettings2;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2 ABI::Windows::Media::Capture::IMediaCaptureSettings2

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureSettings3;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3 ABI::Windows::Media::Capture::IMediaCaptureSettings3

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureStatics;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics ABI::Windows::Media::Capture::IMediaCaptureStatics

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureStopResult;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult ABI::Windows::Media::Capture::IMediaCaptureStopResult

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureVideoPreview;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview ABI::Windows::Media::Capture::IMediaCaptureVideoPreview

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureVideoProfile;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile ABI::Windows::Media::Capture::IMediaCaptureVideoProfile

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureVideoProfile2;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2 ABI::Windows::Media::Capture::IMediaCaptureVideoProfile2

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureVideoProfileMediaDescription;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription ABI::Windows::Media::Capture::IMediaCaptureVideoProfileMediaDescription

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IMediaCaptureVideoProfileMediaDescription2;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2 ABI::Windows::Media::Capture::IMediaCaptureVideoProfileMediaDescription2

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IOptionalReferencePhotoCapturedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs ABI::Windows::Media::Capture::IOptionalReferencePhotoCapturedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IPhotoCapturedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs ABI::Windows::Media::Capture::IPhotoCapturedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IPhotoConfirmationCapturedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs ABI::Windows::Media::Capture::IPhotoConfirmationCapturedEventArgs

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                interface IVideoStreamConfiguration;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration ABI::Windows::Media::Capture::IVideoStreamConfiguration

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_FWD_DEFINED__

// Parameterized interface forward declarations (C++)

// Collection interface definitions

#ifndef DEF___FIAsyncOperation_1_UINT32_USE
#define DEF___FIAsyncOperation_1_UINT32_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("ef60385f-be78-584b-aaef-7829ada2b0de"))
IAsyncOperation<UINT32> : IAsyncOperation_impl<UINT32>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<UInt32>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<UINT32> __FIAsyncOperation_1_UINT32_t;
#define __FIAsyncOperation_1_UINT32 ABI::Windows::Foundation::__FIAsyncOperation_1_UINT32_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_UINT32_USE */



#ifndef DEF___FIAsyncOperationCompletedHandler_1_UINT32_USE
#define DEF___FIAsyncOperationCompletedHandler_1_UINT32_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("9343b6e7-e3d2-5e4a-ab2d-2bce4919a6a4"))
IAsyncOperationCompletedHandler<UINT32> : IAsyncOperationCompletedHandler_impl<UINT32>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<UInt32>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<UINT32> __FIAsyncOperationCompletedHandler_1_UINT32_t;
#define __FIAsyncOperationCompletedHandler_1_UINT32 ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_UINT32_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_UINT32_USE */


namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AdvancedCapturedPhoto;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_USE
#define DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("8f71b217-61ec-58ab-a646-eede0142d568"))
IAsyncOperation<ABI::Windows::Media::Capture::AdvancedCapturedPhoto*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AdvancedCapturedPhoto*, ABI::Windows::Media::Capture::IAdvancedCapturedPhoto*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Media.Capture.AdvancedCapturedPhoto>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::Media::Capture::AdvancedCapturedPhoto*> __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_t;
#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("edf3452c-d918-5c95-8e3a-245044dd70df"))
IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::AdvancedCapturedPhoto*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AdvancedCapturedPhoto*, ABI::Windows::Media::Capture::IAdvancedCapturedPhoto*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Media.Capture.AdvancedCapturedPhoto>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::AdvancedCapturedPhoto*> __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AdvancedPhotoCapture;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_USE
#define DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("8eb156d9-2ce4-5ecd-81f4-a08731fb74cf"))
IAsyncOperation<ABI::Windows::Media::Capture::AdvancedPhotoCapture*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AdvancedPhotoCapture*, ABI::Windows::Media::Capture::IAdvancedPhotoCapture*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Media.Capture.AdvancedPhotoCapture>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::Media::Capture::AdvancedPhotoCapture*> __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_t;
#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("d1dfaec8-eed3-5ce3-9832-18344c98fa71"))
IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::AdvancedPhotoCapture*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AdvancedPhotoCapture*, ABI::Windows::Media::Capture::IAdvancedPhotoCapture*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Media.Capture.AdvancedPhotoCapture>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::AdvancedPhotoCapture*> __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class CapturedPhoto;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto_USE
#define DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("af5235b1-4778-55e1-b49f-608048ea9bd9"))
IAsyncOperation<ABI::Windows::Media::Capture::CapturedPhoto*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::CapturedPhoto*, ABI::Windows::Media::Capture::ICapturedPhoto*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Media.Capture.CapturedPhoto>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::Media::Capture::CapturedPhoto*> __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto_t;
#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("fdb0aa78-04e1-56b3-b6fc-f4de79cd41a0"))
IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::CapturedPhoto*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::CapturedPhoto*, ABI::Windows::Media::Capture::ICapturedPhoto*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Media.Capture.CapturedPhoto>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::CapturedPhoto*> __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                namespace Core {
                    class VariablePhotoSequenceCapture;
                } /* Core */
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                namespace Core {
                    interface IVariablePhotoSequenceCapture;
                } /* Core */
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture ABI::Windows::Media::Capture::Core::IVariablePhotoSequenceCapture

#endif // ____x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_USE
#define DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("0327c8bc-3148-53f3-8a3d-cdb12e49e132"))
IAsyncOperation<ABI::Windows::Media::Capture::Core::VariablePhotoSequenceCapture*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::Core::VariablePhotoSequenceCapture*, ABI::Windows::Media::Capture::Core::IVariablePhotoSequenceCapture*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Media.Capture.Core.VariablePhotoSequenceCapture>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::Media::Capture::Core::VariablePhotoSequenceCapture*> __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_t;
#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("18a55dd3-01e3-5ae5-9b5e-c84ad40cf6b7"))
IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::Core::VariablePhotoSequenceCapture*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::Core::VariablePhotoSequenceCapture*, ABI::Windows::Media::Capture::Core::IVariablePhotoSequenceCapture*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Media.Capture.Core.VariablePhotoSequenceCapture>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::Core::VariablePhotoSequenceCapture*> __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                namespace Frames {
                    class MediaFrameReader;
                } /* Frames */
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                namespace Frames {
                    interface IMediaFrameReader;
                } /* Frames */
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader ABI::Windows::Media::Capture::Frames::IMediaFrameReader

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_USE
#define DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a10cb14d-7935-5c87-9026-8abe792a3be5"))
IAsyncOperation<ABI::Windows::Media::Capture::Frames::MediaFrameReader*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::Frames::MediaFrameReader*, ABI::Windows::Media::Capture::Frames::IMediaFrameReader*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Media.Capture.Frames.MediaFrameReader>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::Media::Capture::Frames::MediaFrameReader*> __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_t;
#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a6214dad-b917-5c89-a068-e32c9a7037d3"))
IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::Frames::MediaFrameReader*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::Frames::MediaFrameReader*, ABI::Windows::Media::Capture::Frames::IMediaFrameReader*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Media.Capture.Frames.MediaFrameReader>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::Frames::MediaFrameReader*> __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                namespace Frames {
                    class MultiSourceMediaFrameReader;
                } /* Frames */
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                namespace Frames {
                    interface IMultiSourceMediaFrameReader;
                } /* Frames */
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader ABI::Windows::Media::Capture::Frames::IMultiSourceMediaFrameReader

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_USE
#define DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("53d56be8-f110-5226-9ce1-a8c26a572576"))
IAsyncOperation<ABI::Windows::Media::Capture::Frames::MultiSourceMediaFrameReader*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::Frames::MultiSourceMediaFrameReader*, ABI::Windows::Media::Capture::Frames::IMultiSourceMediaFrameReader*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Media.Capture.Frames.MultiSourceMediaFrameReader>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::Media::Capture::Frames::MultiSourceMediaFrameReader*> __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_t;
#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("69993778-a48c-50cc-a6f0-5368f58a297a"))
IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::Frames::MultiSourceMediaFrameReader*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::Frames::MultiSourceMediaFrameReader*, ABI::Windows::Media::Capture::Frames::IMultiSourceMediaFrameReader*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Media.Capture.Frames.MultiSourceMediaFrameReader>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::Frames::MultiSourceMediaFrameReader*> __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class LowLagMediaRecording;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording_USE
#define DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("4febefcc-bec0-5433-a7ba-7603d1edc7b9"))
IAsyncOperation<ABI::Windows::Media::Capture::LowLagMediaRecording*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::LowLagMediaRecording*, ABI::Windows::Media::Capture::ILowLagMediaRecording*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Media.Capture.LowLagMediaRecording>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::Media::Capture::LowLagMediaRecording*> __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording_t;
#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("64a8f80c-e646-52bb-8f4b-2a1d6b0b8219"))
IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::LowLagMediaRecording*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::LowLagMediaRecording*, ABI::Windows::Media::Capture::ILowLagMediaRecording*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Media.Capture.LowLagMediaRecording>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::LowLagMediaRecording*> __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class LowLagPhotoCapture;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_USE
#define DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("af24404b-7e0d-5ffe-bbc8-aaf6ffe208fc"))
IAsyncOperation<ABI::Windows::Media::Capture::LowLagPhotoCapture*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::LowLagPhotoCapture*, ABI::Windows::Media::Capture::ILowLagPhotoCapture*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Media.Capture.LowLagPhotoCapture>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::Media::Capture::LowLagPhotoCapture*> __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_t;
#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("6cebb368-4e84-500a-9a5f-7b9a1ade1f44"))
IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::LowLagPhotoCapture*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::LowLagPhotoCapture*, ABI::Windows::Media::Capture::ILowLagPhotoCapture*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Media.Capture.LowLagPhotoCapture>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::LowLagPhotoCapture*> __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class LowLagPhotoSequenceCapture;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_USE
#define DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("ac9f0460-9d14-5af0-b17b-37ea2d76a80d"))
IAsyncOperation<ABI::Windows::Media::Capture::LowLagPhotoSequenceCapture*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::LowLagPhotoSequenceCapture*, ABI::Windows::Media::Capture::ILowLagPhotoSequenceCapture*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Media.Capture.LowLagPhotoSequenceCapture>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::Media::Capture::LowLagPhotoSequenceCapture*> __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_t;
#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("767e0fdc-9563-572d-84e1-9caab0deb63f"))
IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::LowLagPhotoSequenceCapture*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::LowLagPhotoSequenceCapture*, ABI::Windows::Media::Capture::ILowLagPhotoSequenceCapture*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Media.Capture.LowLagPhotoSequenceCapture>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::LowLagPhotoSequenceCapture*> __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class MediaCapturePauseResult;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_USE
#define DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("202a2618-5478-5eba-9bd3-9d83f462747e"))
IAsyncOperation<ABI::Windows::Media::Capture::MediaCapturePauseResult*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::MediaCapturePauseResult*, ABI::Windows::Media::Capture::IMediaCapturePauseResult*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Media.Capture.MediaCapturePauseResult>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::Media::Capture::MediaCapturePauseResult*> __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_t;
#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("fe726311-26bf-51cd-bdeb-f40f8f469d0a"))
IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::MediaCapturePauseResult*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::MediaCapturePauseResult*, ABI::Windows::Media::Capture::IMediaCapturePauseResult*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Media.Capture.MediaCapturePauseResult>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::MediaCapturePauseResult*> __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class MediaCaptureStopResult;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_USE
#define DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("eb798827-a4a9-533a-9e83-0fb085b2ad36"))
IAsyncOperation<ABI::Windows::Media::Capture::MediaCaptureStopResult*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::MediaCaptureStopResult*, ABI::Windows::Media::Capture::IMediaCaptureStopResult*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Media.Capture.MediaCaptureStopResult>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::Media::Capture::MediaCaptureStopResult*> __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_t;
#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("5d4e0674-1df4-5326-ba78-72f6655d2a76"))
IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::MediaCaptureStopResult*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::MediaCaptureStopResult*, ABI::Windows::Media::Capture::IMediaCaptureStopResult*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Media.Capture.MediaCaptureStopResult>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::Media::Capture::MediaCaptureStopResult*> __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef ____x_ABI_CWindows_CMedia_CIMediaExtension_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CIMediaExtension_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            interface IMediaExtension;
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CIMediaExtension ABI::Windows::Media::IMediaExtension

#endif // ____x_ABI_CWindows_CMedia_CIMediaExtension_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1_Windows__CMedia__CIMediaExtension_USE
#define DEF___FIAsyncOperation_1_Windows__CMedia__CIMediaExtension_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("f5cb3303-1c1f-5d30-b402-efa192e80c49"))
IAsyncOperation<ABI::Windows::Media::IMediaExtension*> : IAsyncOperation_impl<ABI::Windows::Media::IMediaExtension*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Media.IMediaExtension>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::Media::IMediaExtension*> __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension_t;
#define __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CMedia__CIMediaExtension_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CMedia__CIMediaExtension_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("9c1b578e-fb7d-5bab-ba39-86387fe533b6"))
IAsyncOperationCompletedHandler<ABI::Windows::Media::IMediaExtension*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Media::IMediaExtension*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Media.IMediaExtension>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::Media::IMediaExtension*> __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            class VideoFrame;
        } /* Media */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CMedia_CIVideoFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CIVideoFrame_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            interface IVideoFrame;
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CIVideoFrame ABI::Windows::Media::IVideoFrame

#endif // ____x_ABI_CWindows_CMedia_CIVideoFrame_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1_Windows__CMedia__CVideoFrame_USE
#define DEF___FIAsyncOperation_1_Windows__CMedia__CVideoFrame_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("f12e515d-ac45-5153-96b2-ce53ab594a57"))
IAsyncOperation<ABI::Windows::Media::VideoFrame*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::VideoFrame*, ABI::Windows::Media::IVideoFrame*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Media.VideoFrame>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::Media::VideoFrame*> __FIAsyncOperation_1_Windows__CMedia__CVideoFrame_t;
#define __FIAsyncOperation_1_Windows__CMedia__CVideoFrame ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CMedia__CVideoFrame_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CMedia__CVideoFrame_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("6086f2fb-4a29-54ca-b6a3-f2391a03bc3b"))
IAsyncOperationCompletedHandler<ABI::Windows::Media::VideoFrame*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::VideoFrame*, ABI::Windows::Media::IVideoFrame*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Media.VideoFrame>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::Media::VideoFrame*> __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Storage {
            class StorageFile;
        } /* Storage */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            interface IStorageFile;
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CIStorageFile ABI::Windows::Storage::IStorageFile

#endif // ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1_Windows__CStorage__CStorageFile_USE
#define DEF___FIAsyncOperation_1_Windows__CStorage__CStorageFile_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("5e52f8ce-aced-5a42-95b4-f674dd84885e"))
IAsyncOperation<ABI::Windows::Storage::StorageFile*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Storage::StorageFile*, ABI::Windows::Storage::IStorageFile*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFile>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::Storage::StorageFile*> __FIAsyncOperation_1_Windows__CStorage__CStorageFile_t;
#define __FIAsyncOperation_1_Windows__CStorage__CStorageFile ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CStorage__CStorageFile_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CStorage__CStorageFile_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("e521c894-2c26-5946-9e61-2b5e188d01ed"))
IAsyncOperationCompletedHandler<ABI::Windows::Storage::StorageFile*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Storage::StorageFile*, ABI::Windows::Storage::IStorageFile*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Storage.StorageFile>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::Storage::StorageFile*> __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#ifndef DEF___FIKeyValuePair_2_GUID_IInspectable_USE
#define DEF___FIKeyValuePair_2_GUID_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3bda1540-d089-5a1a-8f0d-94eba8068e58"))
IKeyValuePair<GUID, IInspectable*> : IKeyValuePair_impl<GUID, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IKeyValuePair`2<Guid, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IKeyValuePair<GUID, IInspectable*> __FIKeyValuePair_2_GUID_IInspectable_t;
#define __FIKeyValuePair_2_GUID_IInspectable ABI::Windows::Foundation::Collections::__FIKeyValuePair_2_GUID_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIKeyValuePair_2_GUID_IInspectable_USE */



#ifndef DEF___FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_USE
#define DEF___FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4f25059a-0b9a-5f25-9b9e-4b9f1d22ff65"))
IIterator<__FIKeyValuePair_2_GUID_IInspectable*> : IIterator_impl<__FIKeyValuePair_2_GUID_IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, Object>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<__FIKeyValuePair_2_GUID_IInspectable*> __FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_t;
#define __FIIterator_1___FIKeyValuePair_2_GUID_IInspectable ABI::Windows::Foundation::Collections::__FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_USE */



#ifndef DEF___FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_USE
#define DEF___FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f3b20528-e3b3-5331-b2d0-0c2623aee785"))
IIterable<__FIKeyValuePair_2_GUID_IInspectable*> : IIterable_impl<__FIKeyValuePair_2_GUID_IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, Object>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<__FIKeyValuePair_2_GUID_IInspectable*> __FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_t;
#define __FIIterable_1___FIKeyValuePair_2_GUID_IInspectable ABI::Windows::Foundation::Collections::__FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_USE */


namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                namespace Frames {
                    class MediaFrameSource;
                } /* Frames */
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                namespace Frames {
                    interface IMediaFrameSource;
                } /* Frames */
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource ABI::Windows::Media::Capture::Frames::IMediaFrameSource

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_USE
#define DEF___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("29f35a95-7eae-55a7-bc19-ed87baed4869"))
IKeyValuePair<HSTRING, ABI::Windows::Media::Capture::Frames::MediaFrameSource*> : IKeyValuePair_impl<HSTRING, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::Frames::MediaFrameSource*, ABI::Windows::Media::Capture::Frames::IMediaFrameSource*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Media.Capture.Frames.MediaFrameSource>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IKeyValuePair<HSTRING, ABI::Windows::Media::Capture::Frames::MediaFrameSource*> __FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_t;
#define __FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource ABI::Windows::Foundation::Collections::__FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_USE
#define DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d8ec36b7-64eb-5675-ad81-62233e483e17"))
IIterator<__FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource*> : IIterator_impl<__FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Media.Capture.Frames.MediaFrameSource>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<__FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource*> __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_t;
#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource ABI::Windows::Foundation::Collections::__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_USE
#define DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a038e80f-0b3d-5cd4-849d-13036e1f506e"))
IIterable<__FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource*> : IIterable_impl<__FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Media.Capture.Frames.MediaFrameSource>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<__FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource*> __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_t;
#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource ABI::Windows::Foundation::Collections::__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastPlugIn;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_USE
#define DEF___FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("cf667b1a-3bb9-57ce-a38b-1e81471f8cf8"))
IIterator<ABI::Windows::Media::Capture::AppBroadcastPlugIn*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastPlugIn*, ABI::Windows::Media::Capture::IAppBroadcastPlugIn*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Media.Capture.AppBroadcastPlugIn>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Media::Capture::AppBroadcastPlugIn*> __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_t;
#define __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_USE
#define DEF___FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c531c5b0-0223-5c9e-a8fb-20f52ea58d75"))
IIterable<ABI::Windows::Media::Capture::AppBroadcastPlugIn*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastPlugIn*, ABI::Windows::Media::Capture::IAppBroadcastPlugIn*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Media.Capture.AppBroadcastPlugIn>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Media::Capture::AppBroadcastPlugIn*> __FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_t;
#define __FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_USE
#define DEF___FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d05e53cd-bbec-5fb7-8e4e-de86115b5e88"))
IIterator<ABI::Windows::Media::Capture::Frames::MediaFrameSource*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::Frames::MediaFrameSource*, ABI::Windows::Media::Capture::Frames::IMediaFrameSource*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Media.Capture.Frames.MediaFrameSource>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Media::Capture::Frames::MediaFrameSource*> __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_t;
#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_USE
#define DEF___FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0d447be3-8c91-581d-8071-17984b8b5994"))
IIterable<ABI::Windows::Media::Capture::Frames::MediaFrameSource*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::Frames::MediaFrameSource*, ABI::Windows::Media::Capture::Frames::IMediaFrameSource*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Media.Capture.Frames.MediaFrameSource>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Media::Capture::Frames::MediaFrameSource*> __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_t;
#define __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                namespace Frames {
                    class MediaFrameSourceInfo;
                } /* Frames */
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                namespace Frames {
                    interface IMediaFrameSourceInfo;
                } /* Frames */
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo ABI::Windows::Media::Capture::Frames::IMediaFrameSourceInfo

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_USE
#define DEF___FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("443c60d8-208e-5399-bc44-edc6fef02293"))
IIterator<ABI::Windows::Media::Capture::Frames::MediaFrameSourceInfo*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::Frames::MediaFrameSourceInfo*, ABI::Windows::Media::Capture::Frames::IMediaFrameSourceInfo*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Media.Capture.Frames.MediaFrameSourceInfo>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Media::Capture::Frames::MediaFrameSourceInfo*> __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_t;
#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_USE
#define DEF___FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("2e29c5b0-6aa9-50f2-91a4-5b67a5598f2e"))
IIterable<ABI::Windows::Media::Capture::Frames::MediaFrameSourceInfo*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::Frames::MediaFrameSourceInfo*, ABI::Windows::Media::Capture::Frames::IMediaFrameSourceInfo*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Media.Capture.Frames.MediaFrameSourceInfo>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Media::Capture::Frames::MediaFrameSourceInfo*> __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_t;
#define __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class MediaCaptureVideoProfile;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_USE
#define DEF___FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a9bc95f8-b5c0-5108-b9ed-a902339366e9"))
IIterator<ABI::Windows::Media::Capture::MediaCaptureVideoProfile*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::MediaCaptureVideoProfile*, ABI::Windows::Media::Capture::IMediaCaptureVideoProfile*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Media.Capture.MediaCaptureVideoProfile>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Media::Capture::MediaCaptureVideoProfile*> __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_t;
#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_USE
#define DEF___FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("dbd49d71-e07b-5e11-824a-62ace8bdfc3e"))
IIterable<ABI::Windows::Media::Capture::MediaCaptureVideoProfile*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::MediaCaptureVideoProfile*, ABI::Windows::Media::Capture::IMediaCaptureVideoProfile*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Media.Capture.MediaCaptureVideoProfile>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Media::Capture::MediaCaptureVideoProfile*> __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_t;
#define __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class MediaCaptureVideoProfileMediaDescription;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_USE
#define DEF___FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b3e8378f-710c-5126-a6c9-8f489f63e15e"))
IIterator<ABI::Windows::Media::Capture::MediaCaptureVideoProfileMediaDescription*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::MediaCaptureVideoProfileMediaDescription*, ABI::Windows::Media::Capture::IMediaCaptureVideoProfileMediaDescription*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Media.Capture.MediaCaptureVideoProfileMediaDescription>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Media::Capture::MediaCaptureVideoProfileMediaDescription*> __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_t;
#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_USE
#define DEF___FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0895e56d-fe1f-5364-ab67-c597d8970b89"))
IIterable<ABI::Windows::Media::Capture::MediaCaptureVideoProfileMediaDescription*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::MediaCaptureVideoProfileMediaDescription*, ABI::Windows::Media::Capture::IMediaCaptureVideoProfileMediaDescription*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Media.Capture.MediaCaptureVideoProfileMediaDescription>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Media::Capture::MediaCaptureVideoProfileMediaDescription*> __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_t;
#define __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#ifndef DEF___FIMapView_2_GUID_IInspectable_USE
#define DEF___FIMapView_2_GUID_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e4d2c732-bbc1-5ef4-869f-5007ceb55f6e"))
IMapView<GUID, IInspectable*> : IMapView_impl<GUID, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IMapView`2<Guid, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMapView<GUID, IInspectable*> __FIMapView_2_GUID_IInspectable_t;
#define __FIMapView_2_GUID_IInspectable ABI::Windows::Foundation::Collections::__FIMapView_2_GUID_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMapView_2_GUID_IInspectable_USE */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_USE
#define DEF___FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("534ea61f-8be7-5e93-b01b-ae1f9dd242a4"))
IMapView<HSTRING, ABI::Windows::Media::Capture::Frames::MediaFrameSource*> : IMapView_impl<HSTRING, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::Frames::MediaFrameSource*, ABI::Windows::Media::Capture::Frames::IMediaFrameSource*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IMapView`2<String, Windows.Media.Capture.Frames.MediaFrameSource>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMapView<HSTRING, ABI::Windows::Media::Capture::Frames::MediaFrameSource*> __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_t;
#define __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource ABI::Windows::Foundation::Collections::__FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_USE
#define DEF___FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("05afee04-1168-5677-a05e-9854b46b319b"))
IVectorView<ABI::Windows::Media::Capture::AppBroadcastPlugIn*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastPlugIn*, ABI::Windows::Media::Capture::IAppBroadcastPlugIn*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Media.Capture.AppBroadcastPlugIn>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Media::Capture::AppBroadcastPlugIn*> __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_t;
#define __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_USE
#define DEF___FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("dbdb7946-9b30-51d0-9c8c-c7105af690e0"))
IVectorView<ABI::Windows::Media::Capture::Frames::MediaFrameSourceInfo*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::Frames::MediaFrameSourceInfo*, ABI::Windows::Media::Capture::Frames::IMediaFrameSourceInfo*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Media.Capture.Frames.MediaFrameSourceInfo>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Media::Capture::Frames::MediaFrameSourceInfo*> __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_t;
#define __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_USE
#define DEF___FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("75626cf9-1f99-5e10-bd03-f2961e85af1f"))
IVectorView<ABI::Windows::Media::Capture::MediaCaptureVideoProfile*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::MediaCaptureVideoProfile*, ABI::Windows::Media::Capture::IMediaCaptureVideoProfile*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Media.Capture.MediaCaptureVideoProfile>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Media::Capture::MediaCaptureVideoProfile*> __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_t;
#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_USE
#define DEF___FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("726c7c8c-789e-5fcb-b31f-f9d9d4a3ac42"))
IVectorView<ABI::Windows::Media::Capture::MediaCaptureVideoProfileMediaDescription*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::MediaCaptureVideoProfileMediaDescription*, ABI::Windows::Media::Capture::IMediaCaptureVideoProfileMediaDescription*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Media.Capture.MediaCaptureVideoProfileMediaDescription>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Media::Capture::MediaCaptureVideoProfileMediaDescription*> __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_t;
#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#ifndef DEF___FIReference_1_boolean_USE
#define DEF___FIReference_1_boolean_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("3c00fd60-2950-5939-a21a-2d12c5a01b8a"))
IReference<bool> : IReference_impl<ABI::Windows::Foundation::Internal::AggregateType<bool, boolean>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Boolean>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<bool> __FIReference_1_boolean_t;
#define __FIReference_1_boolean ABI::Windows::Foundation::__FIReference_1_boolean_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_boolean_USE */



#ifndef DEF___FIReference_1_double_USE
#define DEF___FIReference_1_double_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("2f2d6c29-5473-5f3e-92e7-96572bb990e2"))
IReference<double> : IReference_impl<double>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Double>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<double> __FIReference_1_double_t;
#define __FIReference_1_double ABI::Windows::Foundation::__FIReference_1_double_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_double_USE */



#ifndef DEF___FIReference_1_int_USE
#define DEF___FIReference_1_int_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("548cefbd-bc8a-5fa0-8df2-957440fc8bf4"))
IReference<int> : IReference_impl<int>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Int32>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<int> __FIReference_1_int_t;
#define __FIReference_1_int ABI::Windows::Foundation::__FIReference_1_int_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_int_USE */



#ifndef DEF___FIReference_1_float_USE
#define DEF___FIReference_1_float_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("719cc2ba-3e76-5def-9f1a-38d85a145ea8"))
IReference<float> : IReference_impl<float>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Single>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<float> __FIReference_1_float_t;
#define __FIReference_1_float ABI::Windows::Foundation::__FIReference_1_float_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_float_USE */



#ifndef DEF___FIReference_1_UINT32_USE
#define DEF___FIReference_1_UINT32_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("513ef3af-e784-5325-a91e-97c2b8111cf3"))
IReference<UINT32> : IReference_impl<UINT32>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<UInt32>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<UINT32> __FIReference_1_UINT32_t;
#define __FIReference_1_UINT32 ABI::Windows::Foundation::__FIReference_1_UINT32_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_UINT32_USE */


namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct Rect Rect;
        } /* Foundation */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIReference_1_Windows__CFoundation__CRect_USE
#define DEF___FIReference_1_Windows__CFoundation__CRect_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("80423f11-054f-5eac-afd3-63b6ce15e77b"))
IReference<struct ABI::Windows::Foundation::Rect> : IReference_impl<struct ABI::Windows::Foundation::Rect>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Windows.Foundation.Rect>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<struct ABI::Windows::Foundation::Rect> __FIReference_1_Windows__CFoundation__CRect_t;
#define __FIReference_1_Windows__CFoundation__CRect ABI::Windows::Foundation::__FIReference_1_Windows__CFoundation__CRect_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Windows__CFoundation__CRect_USE */

#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct TimeSpan TimeSpan;
        } /* Foundation */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIReference_1_Windows__CFoundation__CTimeSpan_USE
#define DEF___FIReference_1_Windows__CFoundation__CTimeSpan_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("604d0c4c-91de-5c2a-935f-362f13eaf800"))
IReference<struct ABI::Windows::Foundation::TimeSpan> : IReference_impl<struct ABI::Windows::Foundation::TimeSpan>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<struct ABI::Windows::Foundation::TimeSpan> __FIReference_1_Windows__CFoundation__CTimeSpan_t;
#define __FIReference_1_Windows__CFoundation__CTimeSpan ABI::Windows::Foundation::__FIReference_1_Windows__CFoundation__CTimeSpan_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Windows__CFoundation__CTimeSpan_USE */

#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef struct WhiteBalanceGain WhiteBalanceGain;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain_USE
#define DEF___FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("79c7838a-39e2-5287-ac3b-b118db251002"))
IReference<struct ABI::Windows::Media::Capture::WhiteBalanceGain> : IReference_impl<struct ABI::Windows::Media::Capture::WhiteBalanceGain>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Windows.Media.Capture.WhiteBalanceGain>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<struct ABI::Windows::Media::Capture::WhiteBalanceGain> __FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain_t;
#define __FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain ABI::Windows::Foundation::__FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Devices {
                typedef enum CaptureSceneMode : int CaptureSceneMode;
            } /* Devices */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode_USE
#define DEF___FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("e20596aa-0bbe-5203-be6b-6b71ff5b0843"))
IReference<enum ABI::Windows::Media::Devices::CaptureSceneMode> : IReference_impl<enum ABI::Windows::Media::Devices::CaptureSceneMode>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Windows.Media.Devices.CaptureSceneMode>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<enum ABI::Windows::Media::Devices::CaptureSceneMode> __FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode_t;
#define __FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode ABI::Windows::Foundation::__FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Devices {
                typedef enum MediaCaptureFocusState : int MediaCaptureFocusState;
            } /* Devices */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState_USE
#define DEF___FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("58820185-5da0-5faa-86da-9bd9f03974fa"))
IReference<enum ABI::Windows::Media::Devices::MediaCaptureFocusState> : IReference_impl<enum ABI::Windows::Media::Devices::MediaCaptureFocusState>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Windows.Media.Devices.MediaCaptureFocusState>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<enum ABI::Windows::Media::Devices::MediaCaptureFocusState> __FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState_t;
#define __FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState ABI::Windows::Foundation::__FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("5cb4a98f-abf1-5518-9094-26db326a5f4e"))
ITypedEventHandler<ABI::Windows::Media::Capture::AdvancedPhotoCapture*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AdvancedPhotoCapture*, ABI::Windows::Media::Capture::IAdvancedPhotoCapture*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AdvancedPhotoCapture, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AdvancedPhotoCapture*, IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class OptionalReferencePhotoCapturedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("843e69ba-5702-5d97-ab81-ef078de3f9b1"))
ITypedEventHandler<ABI::Windows::Media::Capture::AdvancedPhotoCapture*, ABI::Windows::Media::Capture::OptionalReferencePhotoCapturedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AdvancedPhotoCapture*, ABI::Windows::Media::Capture::IAdvancedPhotoCapture*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::OptionalReferencePhotoCapturedEventArgs*, ABI::Windows::Media::Capture::IOptionalReferencePhotoCapturedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AdvancedPhotoCapture, Windows.Media.Capture.OptionalReferencePhotoCapturedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AdvancedPhotoCapture*, ABI::Windows::Media::Capture::OptionalReferencePhotoCapturedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastBackgroundService;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("6e820f00-e1e0-5c73-afd8-a47b9b1c1bed"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastBackgroundService*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastBackgroundService*, ABI::Windows::Media::Capture::IAppBroadcastBackgroundService*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppBroadcastBackgroundService, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastBackgroundService*, IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastHeartbeatRequestedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("633c91ca-4fde-5160-9209-3fd3a403a917"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastBackgroundService*, ABI::Windows::Media::Capture::AppBroadcastHeartbeatRequestedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastBackgroundService*, ABI::Windows::Media::Capture::IAppBroadcastBackgroundService*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastHeartbeatRequestedEventArgs*, ABI::Windows::Media::Capture::IAppBroadcastHeartbeatRequestedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppBroadcastBackgroundService, Windows.Media.Capture.AppBroadcastHeartbeatRequestedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastBackgroundService*, ABI::Windows::Media::Capture::AppBroadcastHeartbeatRequestedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastBackgroundServiceSignInInfo;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("f8715188-efc7-575c-ad9d-695eb2044524"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastBackgroundServiceSignInInfo*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastBackgroundServiceSignInInfo*, ABI::Windows::Media::Capture::IAppBroadcastBackgroundServiceSignInInfo*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppBroadcastBackgroundServiceSignInInfo, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastBackgroundServiceSignInInfo*, IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastSignInStateChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("e2672c1a-a3d9-56f3-8a77-20d30873ce87"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastBackgroundServiceSignInInfo*, ABI::Windows::Media::Capture::AppBroadcastSignInStateChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastBackgroundServiceSignInInfo*, ABI::Windows::Media::Capture::IAppBroadcastBackgroundServiceSignInInfo*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastSignInStateChangedEventArgs*, ABI::Windows::Media::Capture::IAppBroadcastSignInStateChangedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppBroadcastBackgroundServiceSignInInfo, Windows.Media.Capture.AppBroadcastSignInStateChangedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastBackgroundServiceSignInInfo*, ABI::Windows::Media::Capture::AppBroadcastSignInStateChangedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastBackgroundServiceStreamInfo;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("73c8ec4b-f104-5536-b8b4-4d9aad61c9b4"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastBackgroundServiceStreamInfo*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastBackgroundServiceStreamInfo*, ABI::Windows::Media::Capture::IAppBroadcastBackgroundServiceStreamInfo*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppBroadcastBackgroundServiceStreamInfo, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastBackgroundServiceStreamInfo*, IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastStreamStateChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("0c110cb8-b08a-5c07-b295-229049a46c22"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastBackgroundServiceStreamInfo*, ABI::Windows::Media::Capture::AppBroadcastStreamStateChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastBackgroundServiceStreamInfo*, ABI::Windows::Media::Capture::IAppBroadcastBackgroundServiceStreamInfo*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastStreamStateChangedEventArgs*, ABI::Windows::Media::Capture::IAppBroadcastStreamStateChangedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppBroadcastBackgroundServiceStreamInfo, Windows.Media.Capture.AppBroadcastStreamStateChangedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastBackgroundServiceStreamInfo*, ABI::Windows::Media::Capture::AppBroadcastStreamStateChangedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastPreview;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastPreviewStateChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("41d8b8e1-dce7-5ebc-940f-de7dd2a62ab5"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastPreview*, ABI::Windows::Media::Capture::AppBroadcastPreviewStateChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastPreview*, ABI::Windows::Media::Capture::IAppBroadcastPreview*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastPreviewStateChangedEventArgs*, ABI::Windows::Media::Capture::IAppBroadcastPreviewStateChangedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppBroadcastPreview, Windows.Media.Capture.AppBroadcastPreviewStateChangedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastPreview*, ABI::Windows::Media::Capture::AppBroadcastPreviewStateChangedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastPreviewStreamReader;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("7918f32c-187f-5f0f-b80e-6fcaaa5e14b9"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastPreviewStreamReader*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastPreviewStreamReader*, ABI::Windows::Media::Capture::IAppBroadcastPreviewStreamReader*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppBroadcastPreviewStreamReader, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastPreviewStreamReader*, IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastState;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a9b0513c-d638-5c5f-8051-791d7aa2d566"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastState*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastState*, ABI::Windows::Media::Capture::IAppBroadcastState*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppBroadcastState, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastState*, IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastCameraCaptureStateChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("b59aa695-b324-5b43-815b-8ffda6013816"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastState*, ABI::Windows::Media::Capture::AppBroadcastCameraCaptureStateChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastState*, ABI::Windows::Media::Capture::IAppBroadcastState*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastCameraCaptureStateChangedEventArgs*, ABI::Windows::Media::Capture::IAppBroadcastCameraCaptureStateChangedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppBroadcastState, Windows.Media.Capture.AppBroadcastCameraCaptureStateChangedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastState*, ABI::Windows::Media::Capture::AppBroadcastCameraCaptureStateChangedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastMicrophoneCaptureStateChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("f64d996a-3859-5174-97b1-e33d56dfca3a"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastState*, ABI::Windows::Media::Capture::AppBroadcastMicrophoneCaptureStateChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastState*, ABI::Windows::Media::Capture::IAppBroadcastState*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastMicrophoneCaptureStateChangedEventArgs*, ABI::Windows::Media::Capture::IAppBroadcastMicrophoneCaptureStateChangedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppBroadcastState, Windows.Media.Capture.AppBroadcastMicrophoneCaptureStateChangedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastState*, ABI::Windows::Media::Capture::AppBroadcastMicrophoneCaptureStateChangedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastPlugInStateChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("373d850e-045b-52a5-92da-c22f924b79fb"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastState*, ABI::Windows::Media::Capture::AppBroadcastPlugInStateChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastState*, ABI::Windows::Media::Capture::IAppBroadcastState*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastPlugInStateChangedEventArgs*, ABI::Windows::Media::Capture::IAppBroadcastPlugInStateChangedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppBroadcastState, Windows.Media.Capture.AppBroadcastPlugInStateChangedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastState*, ABI::Windows::Media::Capture::AppBroadcastPlugInStateChangedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("2545fbd2-3fb6-5004-a475-56c059f3d75a"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastState*, ABI::Windows::Media::Capture::AppBroadcastStreamStateChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastState*, ABI::Windows::Media::Capture::IAppBroadcastState*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastStreamStateChangedEventArgs*, ABI::Windows::Media::Capture::IAppBroadcastStreamStateChangedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppBroadcastState, Windows.Media.Capture.AppBroadcastStreamStateChangedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastState*, ABI::Windows::Media::Capture::AppBroadcastStreamStateChangedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastViewerCountChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("16a22a27-61c2-56c2-93e5-18d6681ceeb4"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastState*, ABI::Windows::Media::Capture::AppBroadcastViewerCountChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastState*, ABI::Windows::Media::Capture::IAppBroadcastState*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastViewerCountChangedEventArgs*, ABI::Windows::Media::Capture::IAppBroadcastViewerCountChangedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppBroadcastState, Windows.Media.Capture.AppBroadcastViewerCountChangedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastState*, ABI::Windows::Media::Capture::AppBroadcastViewerCountChangedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastStreamReader;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("66d1378b-0e04-5801-8bdd-feb1081bbecb"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastStreamReader*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppBroadcastStreamReader*, ABI::Windows::Media::Capture::IAppBroadcastStreamReader*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppBroadcastStreamReader, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppBroadcastStreamReader*, IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppCapture;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("f5cb24b5-ff00-58df-b460-17bbf2cd64d3"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppCapture*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppCapture*, ABI::Windows::Media::Capture::IAppCapture*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppCapture, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppCapture*, IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppCaptureMetadataWriter;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("1aaed84c-ed87-5f38-a9d1-3553128d4a62"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppCaptureMetadataWriter*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppCaptureMetadataWriter*, ABI::Windows::Media::Capture::IAppCaptureMetadataWriter*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppCaptureMetadataWriter, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppCaptureMetadataWriter*, IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppCaptureRecordOperation;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppCaptureDurationGeneratedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("ab6419b5-9917-5275-9876-9e46b9abada7"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppCaptureRecordOperation*, ABI::Windows::Media::Capture::AppCaptureDurationGeneratedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppCaptureRecordOperation*, ABI::Windows::Media::Capture::IAppCaptureRecordOperation*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppCaptureDurationGeneratedEventArgs*, ABI::Windows::Media::Capture::IAppCaptureDurationGeneratedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppCaptureRecordOperation, Windows.Media.Capture.AppCaptureDurationGeneratedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppCaptureRecordOperation*, ABI::Windows::Media::Capture::AppCaptureDurationGeneratedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppCaptureFileGeneratedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("f00f69e5-9ee6-5119-9c39-f279f9ffd908"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppCaptureRecordOperation*, ABI::Windows::Media::Capture::AppCaptureFileGeneratedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppCaptureRecordOperation*, ABI::Windows::Media::Capture::IAppCaptureRecordOperation*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppCaptureFileGeneratedEventArgs*, ABI::Windows::Media::Capture::IAppCaptureFileGeneratedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppCaptureRecordOperation, Windows.Media.Capture.AppCaptureFileGeneratedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppCaptureRecordOperation*, ABI::Windows::Media::Capture::AppCaptureFileGeneratedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppCaptureRecordingStateChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("227cbf02-2dfb-5425-85b1-0d62ce5d1243"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppCaptureRecordOperation*, ABI::Windows::Media::Capture::AppCaptureRecordingStateChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppCaptureRecordOperation*, ABI::Windows::Media::Capture::IAppCaptureRecordOperation*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppCaptureRecordingStateChangedEventArgs*, ABI::Windows::Media::Capture::IAppCaptureRecordingStateChangedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppCaptureRecordOperation, Windows.Media.Capture.AppCaptureRecordingStateChangedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppCaptureRecordOperation*, ABI::Windows::Media::Capture::AppCaptureRecordingStateChangedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppCaptureState;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("b74ae481-777b-5bc9-83da-562d905a43f1"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppCaptureState*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppCaptureState*, ABI::Windows::Media::Capture::IAppCaptureState*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppCaptureState, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppCaptureState*, IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppCaptureMicrophoneCaptureStateChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("0b28a1a3-372e-50e9-a613-37b97cfd7a68"))
ITypedEventHandler<ABI::Windows::Media::Capture::AppCaptureState*, ABI::Windows::Media::Capture::AppCaptureMicrophoneCaptureStateChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppCaptureState*, ABI::Windows::Media::Capture::IAppCaptureState*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::AppCaptureMicrophoneCaptureStateChangedEventArgs*, ABI::Windows::Media::Capture::IAppCaptureMicrophoneCaptureStateChangedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.AppCaptureState, Windows.Media.Capture.AppCaptureMicrophoneCaptureStateChangedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::AppCaptureState*, ABI::Windows::Media::Capture::AppCaptureMicrophoneCaptureStateChangedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs_USE */

#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class GameBarServices;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class GameBarServicesCommandEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("0dab4f7e-bfec-59e1-82cf-ebf64b1db4f3"))
ITypedEventHandler<ABI::Windows::Media::Capture::GameBarServices*, ABI::Windows::Media::Capture::GameBarServicesCommandEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::GameBarServices*, ABI::Windows::Media::Capture::IGameBarServices*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::GameBarServicesCommandEventArgs*, ABI::Windows::Media::Capture::IGameBarServicesCommandEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.GameBarServices, Windows.Media.Capture.GameBarServicesCommandEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::GameBarServices*, ABI::Windows::Media::Capture::GameBarServicesCommandEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs_USE */

#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class GameBarServicesManager;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class GameBarServicesManagerGameBarServicesCreatedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("2f85b809-7d8b-5be4-9a69-81386d874c7f"))
ITypedEventHandler<ABI::Windows::Media::Capture::GameBarServicesManager*, ABI::Windows::Media::Capture::GameBarServicesManagerGameBarServicesCreatedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::GameBarServicesManager*, ABI::Windows::Media::Capture::IGameBarServicesManager*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::GameBarServicesManagerGameBarServicesCreatedEventArgs*, ABI::Windows::Media::Capture::IGameBarServicesManagerGameBarServicesCreatedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.GameBarServicesManager, Windows.Media.Capture.GameBarServicesManagerGameBarServicesCreatedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::GameBarServicesManager*, ABI::Windows::Media::Capture::GameBarServicesManagerGameBarServicesCreatedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs_USE */

#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class PhotoCapturedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("b98aab3a-fe80-5b27-88c3-e77ff585a96b"))
ITypedEventHandler<ABI::Windows::Media::Capture::LowLagPhotoSequenceCapture*, ABI::Windows::Media::Capture::PhotoCapturedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::LowLagPhotoSequenceCapture*, ABI::Windows::Media::Capture::ILowLagPhotoSequenceCapture*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::PhotoCapturedEventArgs*, ABI::Windows::Media::Capture::IPhotoCapturedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.LowLagPhotoSequenceCapture, Windows.Media.Capture.PhotoCapturedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::LowLagPhotoSequenceCapture*, ABI::Windows::Media::Capture::PhotoCapturedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class MediaCapture;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("44c588f1-1bb7-5e12-8413-3cf0373c0bc8"))
ITypedEventHandler<ABI::Windows::Media::Capture::MediaCapture*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::MediaCapture*, ABI::Windows::Media::Capture::IMediaCapture*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.MediaCapture, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::MediaCapture*, IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class MediaCaptureDeviceExclusiveControlStatusChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("5c91f8ba-b379-53ff-a288-24e7883bf592"))
ITypedEventHandler<ABI::Windows::Media::Capture::MediaCapture*, ABI::Windows::Media::Capture::MediaCaptureDeviceExclusiveControlStatusChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::MediaCapture*, ABI::Windows::Media::Capture::IMediaCapture*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::MediaCaptureDeviceExclusiveControlStatusChangedEventArgs*, ABI::Windows::Media::Capture::IMediaCaptureDeviceExclusiveControlStatusChangedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.MediaCapture, Windows.Media.Capture.MediaCaptureDeviceExclusiveControlStatusChangedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::MediaCapture*, ABI::Windows::Media::Capture::MediaCaptureDeviceExclusiveControlStatusChangedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class MediaCaptureFocusChangedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("0561d9e8-0290-5332-b15e-b0d51abe737c"))
ITypedEventHandler<ABI::Windows::Media::Capture::MediaCapture*, ABI::Windows::Media::Capture::MediaCaptureFocusChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::MediaCapture*, ABI::Windows::Media::Capture::IMediaCapture*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::MediaCaptureFocusChangedEventArgs*, ABI::Windows::Media::Capture::IMediaCaptureFocusChangedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.MediaCapture, Windows.Media.Capture.MediaCaptureFocusChangedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::MediaCapture*, ABI::Windows::Media::Capture::MediaCaptureFocusChangedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class PhotoConfirmationCapturedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("37dc3b13-b096-5f43-8104-f0dc4302e2b5"))
ITypedEventHandler<ABI::Windows::Media::Capture::MediaCapture*, ABI::Windows::Media::Capture::PhotoConfirmationCapturedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::MediaCapture*, ABI::Windows::Media::Capture::IMediaCapture*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::PhotoConfirmationCapturedEventArgs*, ABI::Windows::Media::Capture::IPhotoConfirmationCapturedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.MediaCapture, Windows.Media.Capture.PhotoConfirmationCapturedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::MediaCapture*, ABI::Windows::Media::Capture::PhotoConfirmationCapturedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class MediaCaptureRelativePanelWatcher;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("e4314ca0-8288-5965-a0d3-67d0b532bdc5"))
ITypedEventHandler<ABI::Windows::Media::Capture::MediaCaptureRelativePanelWatcher*, IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Capture::MediaCaptureRelativePanelWatcher*, ABI::Windows::Media::Capture::IMediaCaptureRelativePanelWatcher*>, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Capture.MediaCaptureRelativePanelWatcher, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::Media::Capture::MediaCaptureRelativePanelWatcher*, IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

namespace ABI {
    namespace Windows {
        namespace Devices {
            namespace Enumeration {
                typedef enum Panel : int Panel;
            } /* Enumeration */
        } /* Devices */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Collections {
                interface IPropertySet;
            } /* Collections */
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet ABI::Windows::Foundation::Collections::IPropertySet

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct DateTime DateTime;
        } /* Foundation */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IAsyncAction;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIAsyncAction ABI::Windows::Foundation::IAsyncAction

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IClosable;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIClosable ABI::Windows::Foundation::IClosable

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IPropertyValue;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIPropertyValue ABI::Windows::Foundation::IPropertyValue

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct Size Size;
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            class Uri;
        } /* Foundation */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IUriRuntimeClass;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIUriRuntimeClass ABI::Windows::Foundation::IUriRuntimeClass

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Graphics {
            namespace DirectX {
                namespace Direct3D11 {
                    interface IDirect3DDevice;
                } /* Direct3D11 */
            } /* DirectX */
        } /* Graphics */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice ABI::Windows::Graphics::DirectX::Direct3D11::IDirect3DDevice

#endif // ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Graphics {
            namespace Imaging {
                typedef enum BitmapAlphaMode : int BitmapAlphaMode;
            } /* Imaging */
        } /* Graphics */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Graphics {
            namespace Imaging {
                typedef enum BitmapPixelFormat : int BitmapPixelFormat;
            } /* Imaging */
        } /* Graphics */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Graphics {
            namespace Imaging {
                class BitmapPropertySet;
            } /* Imaging */
        } /* Graphics */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Graphics {
            namespace Imaging {
                class BitmapTypedValue;
            } /* Imaging */
        } /* Graphics */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Graphics {
            namespace Imaging {
                interface IBitmapTypedValue;
            } /* Imaging */
        } /* Graphics */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue ABI::Windows::Graphics::Imaging::IBitmapTypedValue

#endif // ____x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_USE
#define DEF___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("93621bf0-dae9-5f00-94ac-795aa943dca6"))
IKeyValuePair<HSTRING, ABI::Windows::Graphics::Imaging::BitmapTypedValue*> : IKeyValuePair_impl<HSTRING, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Graphics::Imaging::BitmapTypedValue*, ABI::Windows::Graphics::Imaging::IBitmapTypedValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Graphics.Imaging.BitmapTypedValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IKeyValuePair<HSTRING, ABI::Windows::Graphics::Imaging::BitmapTypedValue*> __FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_t;
#define __FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue ABI::Windows::Foundation::Collections::__FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_USE
#define DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("2ad3fb0c-0656-5302-b504-3153be845161"))
IIterator<__FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue*> : IIterator_impl<__FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Graphics.Imaging.BitmapTypedValue>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<__FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue*> __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_t;
#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue ABI::Windows::Foundation::Collections::__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_USE
#define DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("05f9430c-2f22-5638-aa89-8c9abcd54ff9"))
IIterable<__FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue*> : IIterable_impl<__FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Graphics.Imaging.BitmapTypedValue>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<__FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue*> __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_t;
#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue ABI::Windows::Foundation::Collections::__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_USE
#define DEF___FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("9cda5a9a-8924-5b3b-8b19-894d8da99dde"))
IMapView<HSTRING, ABI::Windows::Graphics::Imaging::BitmapTypedValue*> : IMapView_impl<HSTRING, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Graphics::Imaging::BitmapTypedValue*, ABI::Windows::Graphics::Imaging::IBitmapTypedValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IMapView`2<String, Windows.Graphics.Imaging.BitmapTypedValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMapView<HSTRING, ABI::Windows::Graphics::Imaging::BitmapTypedValue*> __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_t;
#define __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue ABI::Windows::Foundation::Collections::__FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_USE
#define DEF___FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("2c70ef8d-5d4c-5185-8db7-fed87728165d"))
IMap<HSTRING, ABI::Windows::Graphics::Imaging::BitmapTypedValue*> : IMap_impl<HSTRING, ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Graphics::Imaging::BitmapTypedValue*, ABI::Windows::Graphics::Imaging::IBitmapTypedValue*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IMap`2<String, Windows.Graphics.Imaging.BitmapTypedValue>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMap<HSTRING, ABI::Windows::Graphics::Imaging::BitmapTypedValue*> __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_t;
#define __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue ABI::Windows::Foundation::Collections::__FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Graphics {
            namespace Imaging {
                typedef struct BitmapSize BitmapSize;
            } /* Imaging */
        } /* Graphics */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Graphics {
            namespace Imaging {
                class SoftwareBitmap;
            } /* Imaging */
        } /* Graphics */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Graphics {
            namespace Imaging {
                interface ISoftwareBitmap;
            } /* Imaging */
        } /* Graphics */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap ABI::Windows::Graphics::Imaging::ISoftwareBitmap

#endif // ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Media {
            typedef enum AudioProcessing : int AudioProcessing;
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                namespace Frames {
                    class MediaFrameSourceGroup;
                } /* Frames */
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                namespace Frames {
                    interface IMediaFrameSourceGroup;
                } /* Frames */
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup ABI::Windows::Media::Capture::Frames::IMediaFrameSourceGroup

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaSource;
            } /* Core */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource ABI::Windows::Media::Core::IMediaSource

#endif // ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Devices {
                typedef enum AdvancedPhotoMode : int AdvancedPhotoMode;
            } /* Devices */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Devices {
                class AudioDeviceController;
            } /* Devices */
        } /* Media */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Devices {
                interface IAudioDeviceController;
            } /* Devices */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController ABI::Windows::Media::Devices::IAudioDeviceController

#endif // ____x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Devices {
                typedef enum CameraStreamState : int CameraStreamState;
            } /* Devices */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Devices {
                typedef enum MediaCapturePauseBehavior : int MediaCapturePauseBehavior;
            } /* Devices */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Devices {
                class VideoDeviceController;
            } /* Devices */
        } /* Media */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Devices {
                interface IVideoDeviceController;
            } /* Devices */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController ABI::Windows::Media::Devices::IVideoDeviceController

#endif // ____x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Effects {
                interface IAudioEffectDefinition;
            } /* Effects */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition ABI::Windows::Media::Effects::IAudioEffectDefinition

#endif // ____x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Effects {
                interface IVideoEffectDefinition;
            } /* Effects */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition ABI::Windows::Media::Effects::IVideoEffectDefinition

#endif // ____x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace MediaProperties {
                interface IMediaEncodingProperties;
            } /* MediaProperties */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties ABI::Windows::Media::MediaProperties::IMediaEncodingProperties

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace MediaProperties {
                class ImageEncodingProperties;
            } /* MediaProperties */
        } /* Media */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace MediaProperties {
                interface IImageEncodingProperties;
            } /* MediaProperties */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties ABI::Windows::Media::MediaProperties::IImageEncodingProperties

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace MediaProperties {
                class MediaEncodingProfile;
            } /* MediaProperties */
        } /* Media */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace MediaProperties {
                interface IMediaEncodingProfile;
            } /* MediaProperties */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile ABI::Windows::Media::MediaProperties::IMediaEncodingProfile

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace MediaProperties {
                class MediaPropertySet;
            } /* MediaProperties */
        } /* Media */
    } /* Windows */
} /* ABI */


#ifndef DEF___FIMap_2_GUID_IInspectable_USE
#define DEF___FIMap_2_GUID_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5ee3189c-7dbf-5998-ad07-5414fb82567c"))
IMap<GUID, IInspectable*> : IMap_impl<GUID, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IMap`2<Guid, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMap<GUID, IInspectable*> __FIMap_2_GUID_IInspectable_t;
#define __FIMap_2_GUID_IInspectable ABI::Windows::Foundation::Collections::__FIMap_2_GUID_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMap_2_GUID_IInspectable_USE */


namespace ABI {
    namespace Windows {
        namespace Media {
            namespace MediaProperties {
                class MediaRatio;
            } /* MediaProperties */
        } /* Media */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace MediaProperties {
                interface IMediaRatio;
            } /* MediaProperties */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio ABI::Windows::Media::MediaProperties::IMediaRatio

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace MediaProperties {
                class VideoEncodingProperties;
            } /* MediaProperties */
        } /* Media */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace MediaProperties {
                interface IVideoEncodingProperties;
            } /* MediaProperties */
        } /* Media */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties ABI::Windows::Media::MediaProperties::IVideoEncodingProperties

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Security {
            namespace Authentication {
                namespace Web {
                    class WebAuthenticationResult;
                } /* Web */
            } /* Authentication */
        } /* Security */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Security {
            namespace Authentication {
                namespace Web {
                    interface IWebAuthenticationResult;
                } /* Web */
            } /* Authentication */
        } /* Security */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult ABI::Windows::Security::Authentication::Web::IWebAuthenticationResult

#endif // ____x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Security {
            namespace Credentials {
                class PasswordCredential;
            } /* Credentials */
        } /* Security */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential_FWD_DEFINED__
#define ____x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Security {
            namespace Credentials {
                interface IPasswordCredential;
            } /* Credentials */
        } /* Security */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential ABI::Windows::Security::Credentials::IPasswordCredential

#endif // ____x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Storage {
            class StorageFolder;
        } /* Storage */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            interface IStorageFolder;
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CIStorageFolder ABI::Windows::Storage::IStorageFolder

#endif // ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace Streams {
                interface IBuffer;
            } /* Streams */
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CStreams_CIBuffer ABI::Windows::Storage::Streams::IBuffer

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace Streams {
                interface IContentTypeProvider;
            } /* Streams */
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider ABI::Windows::Storage::Streams::IContentTypeProvider

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace Streams {
                interface IInputStream;
            } /* Streams */
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CStreams_CIInputStream ABI::Windows::Storage::Streams::IInputStream

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace Streams {
                interface IOutputStream;
            } /* Streams */
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CStreams_CIOutputStream ABI::Windows::Storage::Streams::IOutputStream

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace Streams {
                interface IRandomAccessStream;
            } /* Streams */
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream ABI::Windows::Storage::Streams::IRandomAccessStream

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace Streams {
                interface IRandomAccessStreamReference;
            } /* Streams */
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference ABI::Windows::Storage::Streams::IRandomAccessStreamReference

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace Streams {
                interface IRandomAccessStreamWithContentType;
            } /* Streams */
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType ABI::Windows::Storage::Streams::IRandomAccessStreamWithContentType

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace System {
            class User;
        } /* System */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace System {
            interface IUser;
        } /* System */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CSystem_CIUser ABI::Windows::System::IUser

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum VirtualKey : int VirtualKey;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace System {
            typedef enum VirtualKeyModifiers : unsigned int VirtualKeyModifiers;
        } /* System */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace WindowManagement {
                class DisplayRegion;
            } /* WindowManagement */
        } /* UI */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace WindowManagement {
                interface IDisplayRegion;
            } /* WindowManagement */
        } /* UI */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion ABI::Windows::UI::WindowManagement::IDisplayRegion

#endif // ____x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppBroadcastCameraCaptureState : int AppBroadcastCameraCaptureState;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppBroadcastCameraOverlayLocation : int AppBroadcastCameraOverlayLocation;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppBroadcastCameraOverlaySize : int AppBroadcastCameraOverlaySize;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppBroadcastCaptureTargetType : int AppBroadcastCaptureTargetType;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppBroadcastExitBroadcastModeReason : int AppBroadcastExitBroadcastModeReason;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppBroadcastMicrophoneCaptureState : int AppBroadcastMicrophoneCaptureState;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppBroadcastPlugInState : int AppBroadcastPlugInState;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppBroadcastPreviewState : int AppBroadcastPreviewState;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppBroadcastSignInResult : int AppBroadcastSignInResult;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppBroadcastSignInState : int AppBroadcastSignInState;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppBroadcastStreamState : int AppBroadcastStreamState;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppBroadcastTerminationReason : int AppBroadcastTerminationReason;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppBroadcastVideoEncodingBitrateMode : int AppBroadcastVideoEncodingBitrateMode;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppBroadcastVideoEncodingResolutionMode : int AppBroadcastVideoEncodingResolutionMode;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppCaptureHistoricalBufferLengthUnit : int AppCaptureHistoricalBufferLengthUnit;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppCaptureMetadataPriority : int AppCaptureMetadataPriority;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppCaptureMicrophoneCaptureState : int AppCaptureMicrophoneCaptureState;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppCaptureRecordingState : int AppCaptureRecordingState;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppCaptureVideoEncodingBitrateMode : int AppCaptureVideoEncodingBitrateMode;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppCaptureVideoEncodingFrameRateMode : int AppCaptureVideoEncodingFrameRateMode;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum AppCaptureVideoEncodingResolutionMode : int AppCaptureVideoEncodingResolutionMode;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum CameraCaptureUIMaxPhotoResolution : int CameraCaptureUIMaxPhotoResolution;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum CameraCaptureUIMaxVideoResolution : int CameraCaptureUIMaxVideoResolution;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum CameraCaptureUIMode : int CameraCaptureUIMode;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum CameraCaptureUIPhotoFormat : int CameraCaptureUIPhotoFormat;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum CameraCaptureUIVideoFormat : int CameraCaptureUIVideoFormat;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum GameBarCommand : int GameBarCommand;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum GameBarCommandOrigin : int GameBarCommandOrigin;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum GameBarServicesDisplayMode : int GameBarServicesDisplayMode;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum GameBarTargetCapturePolicy : int GameBarTargetCapturePolicy;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum KnownVideoProfile : int KnownVideoProfile;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum MediaCaptureDeviceExclusiveControlStatus : int MediaCaptureDeviceExclusiveControlStatus;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum MediaCaptureMemoryPreference : int MediaCaptureMemoryPreference;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum MediaCaptureSharingMode : int MediaCaptureSharingMode;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum MediaCaptureThermalStatus : int MediaCaptureThermalStatus;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum MediaCategory : int MediaCategory;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum MediaStreamType : int MediaStreamType;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum PhotoCaptureSource : int PhotoCaptureSource;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum StreamingCaptureMode : int StreamingCaptureMode;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum VideoDeviceCharacteristic : int VideoDeviceCharacteristic;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                typedef enum VideoRotation : int VideoRotation;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastGlobalSettings;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastPlugInManager;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastPreviewStreamVideoFrame;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastPreviewStreamVideoHeader;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastProviderSettings;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastServices;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastStreamAudioFrame;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastStreamAudioHeader;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastStreamVideoFrame;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppBroadcastStreamVideoHeader;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppCaptureAlternateShortcutKeys;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppCaptureServices;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class AppCaptureSettings;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class CameraCaptureUIPhotoCaptureSettings;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class CameraCaptureUIVideoCaptureSettings;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class CapturedFrame;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class CapturedFrameControlValues;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class GameBarServicesTargetInfo;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class MediaCaptureFailedEventArgs;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class MediaCaptureInitializationSettings;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                class MediaCaptureSettings;
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastCameraCaptureState
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppBroadcastCameraCaptureState : int
                {
                    AppBroadcastCameraCaptureState_Stopped = 0,
                    AppBroadcastCameraCaptureState_Started = 1,
                    AppBroadcastCameraCaptureState_Failed = 2,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastCameraOverlayLocation
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppBroadcastCameraOverlayLocation : int
                {
                    AppBroadcastCameraOverlayLocation_TopLeft = 0,
                    AppBroadcastCameraOverlayLocation_TopCenter = 1,
                    AppBroadcastCameraOverlayLocation_TopRight = 2,
                    AppBroadcastCameraOverlayLocation_MiddleLeft = 3,
                    AppBroadcastCameraOverlayLocation_MiddleCenter = 4,
                    AppBroadcastCameraOverlayLocation_MiddleRight = 5,
                    AppBroadcastCameraOverlayLocation_BottomLeft = 6,
                    AppBroadcastCameraOverlayLocation_BottomCenter = 7,
                    AppBroadcastCameraOverlayLocation_BottomRight = 8,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastCameraOverlaySize
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppBroadcastCameraOverlaySize : int
                {
                    AppBroadcastCameraOverlaySize_Small = 0,
                    AppBroadcastCameraOverlaySize_Medium = 1,
                    AppBroadcastCameraOverlaySize_Large = 2,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastCaptureTargetType
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppBroadcastCaptureTargetType : int
                {
                    AppBroadcastCaptureTargetType_AppView = 0,
                    AppBroadcastCaptureTargetType_EntireDisplay = 1,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastExitBroadcastModeReason
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppBroadcastExitBroadcastModeReason : int
                {
                    AppBroadcastExitBroadcastModeReason_NormalExit = 0,
                    AppBroadcastExitBroadcastModeReason_UserCanceled = 1,
                    AppBroadcastExitBroadcastModeReason_AuthorizationFail = 2,
                    AppBroadcastExitBroadcastModeReason_ForegroundAppActivated = 3,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastMicrophoneCaptureState
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppBroadcastMicrophoneCaptureState : int
                {
                    AppBroadcastMicrophoneCaptureState_Stopped = 0,
                    AppBroadcastMicrophoneCaptureState_Started = 1,
                    AppBroadcastMicrophoneCaptureState_Failed = 2,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastPlugInState
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppBroadcastPlugInState : int
                {
                    AppBroadcastPlugInState_Unknown = 0,
                    AppBroadcastPlugInState_Initialized = 1,
                    AppBroadcastPlugInState_MicrosoftSignInRequired = 2,
                    AppBroadcastPlugInState_OAuthSignInRequired = 3,
                    AppBroadcastPlugInState_ProviderSignInRequired = 4,
                    AppBroadcastPlugInState_InBandwidthTest = 5,
                    AppBroadcastPlugInState_ReadyToBroadcast = 6,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastPreviewState
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppBroadcastPreviewState : int
                {
                    AppBroadcastPreviewState_Started = 0,
                    AppBroadcastPreviewState_Stopped = 1,
                    AppBroadcastPreviewState_Failed = 2,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastSignInResult
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppBroadcastSignInResult : int
                {
                    AppBroadcastSignInResult_Success = 0,
                    AppBroadcastSignInResult_AuthenticationFailed = 1,
                    AppBroadcastSignInResult_Unauthorized = 2,
                    AppBroadcastSignInResult_ServiceUnavailable = 3,
                    AppBroadcastSignInResult_Unknown = 4,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastSignInState
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppBroadcastSignInState : int
                {
                    AppBroadcastSignInState_NotSignedIn = 0,
                    AppBroadcastSignInState_MicrosoftSignInInProgress = 1,
                    AppBroadcastSignInState_MicrosoftSignInComplete = 2,
                    AppBroadcastSignInState_OAuthSignInInProgress = 3,
                    AppBroadcastSignInState_OAuthSignInComplete = 4,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastStreamState
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppBroadcastStreamState : int
                {
                    AppBroadcastStreamState_Initializing = 0,
                    AppBroadcastStreamState_StreamReady = 1,
                    AppBroadcastStreamState_Started = 2,
                    AppBroadcastStreamState_Paused = 3,
                    AppBroadcastStreamState_Terminated = 4,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastTerminationReason
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppBroadcastTerminationReason : int
                {
                    AppBroadcastTerminationReason_NormalTermination = 0,
                    AppBroadcastTerminationReason_LostConnectionToService = 1,
                    AppBroadcastTerminationReason_NoNetworkConnectivity = 2,
                    AppBroadcastTerminationReason_ServiceAbort = 3,
                    AppBroadcastTerminationReason_ServiceError = 4,
                    AppBroadcastTerminationReason_ServiceUnavailable = 5,
                    AppBroadcastTerminationReason_InternalError = 6,
                    AppBroadcastTerminationReason_UnsupportedFormat = 7,
                    AppBroadcastTerminationReason_BackgroundTaskTerminated = 8,
                    AppBroadcastTerminationReason_BackgroundTaskUnresponsive = 9,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastVideoEncodingBitrateMode
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppBroadcastVideoEncodingBitrateMode : int
                {
                    AppBroadcastVideoEncodingBitrateMode_Custom = 0,
                    AppBroadcastVideoEncodingBitrateMode_Auto = 1,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastVideoEncodingResolutionMode
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppBroadcastVideoEncodingResolutionMode : int
                {
                    AppBroadcastVideoEncodingResolutionMode_Custom = 0,
                    AppBroadcastVideoEncodingResolutionMode_Auto = 1,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppCaptureHistoricalBufferLengthUnit
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppCaptureHistoricalBufferLengthUnit : int
                {
                    AppCaptureHistoricalBufferLengthUnit_Megabytes = 0,
                    AppCaptureHistoricalBufferLengthUnit_Seconds = 1,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppCaptureMetadataPriority
 *
 * Introduced to Windows.Media.Capture.AppCaptureMetadataContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppCaptureMetadataPriority : int
                {
                    AppCaptureMetadataPriority_Informational = 0,
                    AppCaptureMetadataPriority_Important = 1,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppCaptureMicrophoneCaptureState
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppCaptureMicrophoneCaptureState : int
                {
                    AppCaptureMicrophoneCaptureState_Stopped = 0,
                    AppCaptureMicrophoneCaptureState_Started = 1,
                    AppCaptureMicrophoneCaptureState_Failed = 2,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Struct Windows.Media.Capture.AppCaptureRecordingState
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppCaptureRecordingState : int
                {
                    AppCaptureRecordingState_InProgress = 0,
                    AppCaptureRecordingState_Completed = 1,
                    AppCaptureRecordingState_Failed = 2,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Struct Windows.Media.Capture.AppCaptureVideoEncodingBitrateMode
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppCaptureVideoEncodingBitrateMode : int
                {
                    AppCaptureVideoEncodingBitrateMode_Custom = 0,
                    AppCaptureVideoEncodingBitrateMode_High = 1,
                    AppCaptureVideoEncodingBitrateMode_Standard = 2,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppCaptureVideoEncodingFrameRateMode
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 3.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x30000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppCaptureVideoEncodingFrameRateMode : int
                {
                    AppCaptureVideoEncodingFrameRateMode_Standard = 0,
                    AppCaptureVideoEncodingFrameRateMode_High = 1,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.Media.Capture.AppCaptureVideoEncodingResolutionMode
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum AppCaptureVideoEncodingResolutionMode : int
                {
                    AppCaptureVideoEncodingResolutionMode_Custom = 0,
                    AppCaptureVideoEncodingResolutionMode_High = 1,
                    AppCaptureVideoEncodingResolutionMode_Standard = 2,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.CameraCaptureUIMaxPhotoResolution
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum CameraCaptureUIMaxPhotoResolution : int
                {
                    CameraCaptureUIMaxPhotoResolution_HighestAvailable = 0,
                    CameraCaptureUIMaxPhotoResolution_VerySmallQvga = 1,
                    CameraCaptureUIMaxPhotoResolution_SmallVga = 2,
                    CameraCaptureUIMaxPhotoResolution_MediumXga = 3,
                    CameraCaptureUIMaxPhotoResolution_Large3M = 4,
                    CameraCaptureUIMaxPhotoResolution_VeryLarge5M = 5,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.CameraCaptureUIMaxVideoResolution
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum CameraCaptureUIMaxVideoResolution : int
                {
                    CameraCaptureUIMaxVideoResolution_HighestAvailable = 0,
                    CameraCaptureUIMaxVideoResolution_LowDefinition = 1,
                    CameraCaptureUIMaxVideoResolution_StandardDefinition = 2,
                    CameraCaptureUIMaxVideoResolution_HighDefinition = 3,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.CameraCaptureUIMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum CameraCaptureUIMode : int
                {
                    CameraCaptureUIMode_PhotoOrVideo = 0,
                    CameraCaptureUIMode_Photo = 1,
                    CameraCaptureUIMode_Video = 2,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.CameraCaptureUIPhotoFormat
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum CameraCaptureUIPhotoFormat : int
                {
                    CameraCaptureUIPhotoFormat_Jpeg = 0,
                    CameraCaptureUIPhotoFormat_Png = 1,
                    CameraCaptureUIPhotoFormat_JpegXR = 2,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.CameraCaptureUIVideoFormat
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum CameraCaptureUIVideoFormat : int
                {
                    CameraCaptureUIVideoFormat_Mp4 = 0,
                    CameraCaptureUIVideoFormat_Wmv = 1,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.ForegroundActivationArgument
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum ForegroundActivationArgument : int
                {
                    ForegroundActivationArgument_SignInRequired = 0,
                    ForegroundActivationArgument_MoreSettings = 1,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.GameBarCommand
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum GameBarCommand : int
                {
                    GameBarCommand_OpenGameBar = 0,
                    GameBarCommand_RecordHistoricalBuffer = 1,
                    GameBarCommand_ToggleStartStopRecord = 2,
                    GameBarCommand_StartRecord = 3,
                    GameBarCommand_StopRecord = 4,
                    GameBarCommand_TakeScreenshot = 5,
                    GameBarCommand_StartBroadcast = 6,
                    GameBarCommand_StopBroadcast = 7,
                    GameBarCommand_PauseBroadcast = 8,
                    GameBarCommand_ResumeBroadcast = 9,
                    GameBarCommand_ToggleStartStopBroadcast = 10,
                    GameBarCommand_ToggleMicrophoneCapture = 11,
                    GameBarCommand_ToggleCameraCapture = 12,
                    GameBarCommand_ToggleRecordingIndicator = 13,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.GameBarCommandOrigin
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum GameBarCommandOrigin : int
                {
                    GameBarCommandOrigin_ShortcutKey = 0,
                    GameBarCommandOrigin_Cortana = 1,
                    GameBarCommandOrigin_AppCommand = 2,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.GameBarServicesDisplayMode
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum GameBarServicesDisplayMode : int
                {
                    GameBarServicesDisplayMode_Windowed = 0,
                    GameBarServicesDisplayMode_FullScreenExclusive = 1,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.GameBarTargetCapturePolicy
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum GameBarTargetCapturePolicy : int
                {
                    GameBarTargetCapturePolicy_EnabledBySystem = 0,
                    GameBarTargetCapturePolicy_EnabledByUser = 1,
                    GameBarTargetCapturePolicy_NotEnabled = 2,
                    GameBarTargetCapturePolicy_ProhibitedBySystem = 3,
                    GameBarTargetCapturePolicy_ProhibitedByPublisher = 4,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.KnownVideoProfile
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum KnownVideoProfile : int
                {
                    KnownVideoProfile_VideoRecording = 0,
                    KnownVideoProfile_HighQualityPhoto = 1,
                    KnownVideoProfile_BalancedVideoAndPhoto = 2,
                    KnownVideoProfile_VideoConferencing = 3,
                    KnownVideoProfile_PhotoSequence = 4,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
                    KnownVideoProfile_HighFrameRate = 5,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
                    KnownVideoProfile_VariablePhotoSequence = 6,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
                    KnownVideoProfile_HdrWithWcgVideo = 7,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
                    KnownVideoProfile_HdrWithWcgPhoto = 8,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
                    KnownVideoProfile_VideoHdr8 = 9,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.MediaCaptureDeviceExclusiveControlStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum MediaCaptureDeviceExclusiveControlStatus : int
                {
                    MediaCaptureDeviceExclusiveControlStatus_ExclusiveControlAvailable = 0,
                    MediaCaptureDeviceExclusiveControlStatus_SharedReadOnlyAvailable = 1,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Struct Windows.Media.Capture.MediaCaptureMemoryPreference
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum MediaCaptureMemoryPreference : int
                {
                    MediaCaptureMemoryPreference_Auto = 0,
                    MediaCaptureMemoryPreference_Cpu = 1,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.Media.Capture.MediaCaptureSharingMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum MediaCaptureSharingMode : int
                {
                    MediaCaptureSharingMode_ExclusiveControl = 0,
                    MediaCaptureSharingMode_SharedReadOnly = 1,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.Media.Capture.MediaCaptureThermalStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum MediaCaptureThermalStatus : int
                {
                    MediaCaptureThermalStatus_Normal = 0,
                    MediaCaptureThermalStatus_Overheated = 1,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.MediaCategory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum MediaCategory : int
                {
                    MediaCategory_Other = 0,
                    MediaCategory_Communications = 1,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                    MediaCategory_Media = 2,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                    MediaCategory_GameChat = 3,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                    MediaCategory_Speech = 4,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.MediaStreamType
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum MediaStreamType : int
                {
                    MediaStreamType_VideoPreview = 0,
                    MediaStreamType_VideoRecord = 1,
                    MediaStreamType_Audio = 2,
                    MediaStreamType_Photo = 3,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.PhotoCaptureSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum PhotoCaptureSource : int
                {
                    PhotoCaptureSource_Auto = 0,
                    PhotoCaptureSource_VideoPreview = 1,
                    PhotoCaptureSource_Photo = 2,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.PowerlineFrequency
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum PowerlineFrequency : int
                {
                    PowerlineFrequency_Disabled = 0,
                    PowerlineFrequency_FiftyHertz = 1,
                    PowerlineFrequency_SixtyHertz = 2,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
                    PowerlineFrequency_Auto = 3,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.StreamingCaptureMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum StreamingCaptureMode : int
                {
                    StreamingCaptureMode_AudioAndVideo = 0,
                    StreamingCaptureMode_Audio = 1,
                    StreamingCaptureMode_Video = 2,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.VideoDeviceCharacteristic
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum VideoDeviceCharacteristic : int
                {
                    VideoDeviceCharacteristic_AllStreamsIndependent = 0,
                    VideoDeviceCharacteristic_PreviewRecordStreamsIdentical = 1,
                    VideoDeviceCharacteristic_PreviewPhotoStreamsIdentical = 2,
                    VideoDeviceCharacteristic_RecordPhotoStreamsIdentical = 3,
                    VideoDeviceCharacteristic_AllStreamsIdentical = 4,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.VideoRotation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                enum VideoRotation : int
                {
                    VideoRotation_None = 0,
                    VideoRotation_Clockwise90Degrees = 1,
                    VideoRotation_Clockwise180Degrees = 2,
                    VideoRotation_Clockwise270Degrees = 3,
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.WhiteBalanceGain
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                struct WhiteBalanceGain
                {
                    DOUBLE R;
                    DOUBLE G;
                    DOUBLE B;
                };
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.Media.Capture.MediaCaptureFailedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("2014effb-5cd8-4f08-a314-0d360da59f14")
                IMediaCaptureFailedEventHandler : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        ABI::Windows::Media::Capture::IMediaCapture* sender,
                        ABI::Windows::Media::Capture::IMediaCaptureFailedEventArgs* errorEventArgs
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureFailedEventHandler = _uuidof(IMediaCaptureFailedEventHandler);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.Media.Capture.RecordLimitationExceededEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_INTERFACE_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("3fae8f2e-4fe1-4ffd-aaba-e1f1337d4e53")
                IRecordLimitationExceededEventHandler : public IUnknown
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Invoke(
                        ABI::Windows::Media::Capture::IMediaCapture* sender
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IRecordLimitationExceededEventHandler = _uuidof(IRecordLimitationExceededEventHandler);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAdvancedCapturedPhoto
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AdvancedCapturedPhoto
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAdvancedCapturedPhoto[] = L"Windows.Media.Capture.IAdvancedCapturedPhoto";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("f072728b-b292-4491-9d41-99807a550bbf")
                IAdvancedCapturedPhoto : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Frame(
                        ABI::Windows::Media::Capture::ICapturedFrame** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Mode(
                        ABI::Windows::Media::Devices::AdvancedPhotoMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Context(
                        IInspectable** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAdvancedCapturedPhoto = _uuidof(IAdvancedCapturedPhoto);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAdvancedCapturedPhoto2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AdvancedCapturedPhoto
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAdvancedCapturedPhoto2[] = L"Windows.Media.Capture.IAdvancedCapturedPhoto2";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("18cf6cd8-cffe-42d8-8104-017bb318f4a1")
                IAdvancedCapturedPhoto2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_FrameBoundsRelativeToReferencePhoto(
                        __FIReference_1_Windows__CFoundation__CRect** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAdvancedCapturedPhoto2 = _uuidof(IAdvancedCapturedPhoto2);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.Media.Capture.IAdvancedPhotoCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AdvancedPhotoCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAdvancedPhotoCapture[] = L"Windows.Media.Capture.IAdvancedPhotoCapture";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("83ffaafa-6667-44dc-973c-a6bce596aa0f")
                IAdvancedPhotoCapture : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CaptureAsync(
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CaptureWithContextAsync(
                        IInspectable* context,
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_OptionalReferencePhotoCaptured(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_OptionalReferencePhotoCaptured(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_AllPhotosCaptured(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_AllPhotosCaptured(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE FinishAsync(
                        ABI::Windows::Foundation::IAsyncAction** operation
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAdvancedPhotoCapture = _uuidof(IAdvancedPhotoCapture);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastBackgroundService
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastBackgroundService
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastBackgroundService[] = L"Windows.Media.Capture.IAppBroadcastBackgroundService";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("bad1e72a-fa94-46f9-95fc-d71511cda70b")
                IAppBroadcastBackgroundService : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE put_PlugInState(
                        ABI::Windows::Media::Capture::AppBroadcastPlugInState value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PlugInState(
                        ABI::Windows::Media::Capture::AppBroadcastPlugInState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_SignInInfo(
                        ABI::Windows::Media::Capture::IAppBroadcastBackgroundServiceSignInInfo* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_SignInInfo(
                        ABI::Windows::Media::Capture::IAppBroadcastBackgroundServiceSignInInfo** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_StreamInfo(
                        ABI::Windows::Media::Capture::IAppBroadcastBackgroundServiceStreamInfo* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StreamInfo(
                        ABI::Windows::Media::Capture::IAppBroadcastBackgroundServiceStreamInfo** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AppId(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BroadcastTitle(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ViewerCount(
                        UINT32 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ViewerCount(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE TerminateBroadcast(
                        ABI::Windows::Media::Capture::AppBroadcastTerminationReason reason,
                        UINT32 providerSpecificReason
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_HeartbeatRequested(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_HeartbeatRequested(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TitleId(
                        HSTRING* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastBackgroundService = _uuidof(IAppBroadcastBackgroundService);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastBackgroundService2
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastBackgroundService
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastBackgroundService2[] = L"Windows.Media.Capture.IAppBroadcastBackgroundService2";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("fc8ccbbf-5549-4b87-959f-23ca401fd473")
                IAppBroadcastBackgroundService2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE put_BroadcastTitle(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BroadcastLanguage(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BroadcastLanguage(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BroadcastChannel(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BroadcastChannel(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_BroadcastTitleChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_BroadcastTitleChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_BroadcastLanguageChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_BroadcastLanguageChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_BroadcastChannelChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_BroadcastChannelChanged(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastBackgroundService2 = _uuidof(IAppBroadcastBackgroundService2);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastBackgroundServiceSignInInfo
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastBackgroundServiceSignInInfo
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastBackgroundServiceSignInInfo[] = L"Windows.Media.Capture.IAppBroadcastBackgroundServiceSignInInfo";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("5e735275-88c8-4eca-89ba-4825985db880")
                IAppBroadcastBackgroundServiceSignInInfo : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_SignInState(
                        ABI::Windows::Media::Capture::AppBroadcastSignInState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_OAuthRequestUri(
                        ABI::Windows::Foundation::IUriRuntimeClass* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_OAuthRequestUri(
                        ABI::Windows::Foundation::IUriRuntimeClass** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_OAuthCallbackUri(
                        ABI::Windows::Foundation::IUriRuntimeClass* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_OAuthCallbackUri(
                        ABI::Windows::Foundation::IUriRuntimeClass** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AuthenticationResult(
                        ABI::Windows::Security::Authentication::Web::IWebAuthenticationResult** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_UserName(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_UserName(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_SignInStateChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_SignInStateChanged(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastBackgroundServiceSignInInfo = _uuidof(IAppBroadcastBackgroundServiceSignInInfo);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastBackgroundServiceSignInInfo2
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastBackgroundServiceSignInInfo
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastBackgroundServiceSignInInfo2[] = L"Windows.Media.Capture.IAppBroadcastBackgroundServiceSignInInfo2";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("9104285c-62cf-4a3c-a7ee-aeb507404645")
                IAppBroadcastBackgroundServiceSignInInfo2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE add_UserNameChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_UserNameChanged(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastBackgroundServiceSignInInfo2 = _uuidof(IAppBroadcastBackgroundServiceSignInInfo2);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastBackgroundServiceStreamInfo
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastBackgroundServiceStreamInfo
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastBackgroundServiceStreamInfo[] = L"Windows.Media.Capture.IAppBroadcastBackgroundServiceStreamInfo";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("31dc02bc-990a-4904-aa96-fe364381f136")
                IAppBroadcastBackgroundServiceStreamInfo : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_StreamState(
                        ABI::Windows::Media::Capture::AppBroadcastStreamState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_DesiredVideoEncodingBitrate(
                        UINT64 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_DesiredVideoEncodingBitrate(
                        UINT64* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BandwidthTestBitrate(
                        UINT64 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BandwidthTestBitrate(
                        UINT64* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AudioCodec(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AudioCodec(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BroadcastStreamReader(
                        ABI::Windows::Media::Capture::IAppBroadcastStreamReader** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_StreamStateChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_StreamStateChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_VideoEncodingResolutionChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_VideoEncodingResolutionChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_VideoEncodingBitrateChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_VideoEncodingBitrateChanged(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastBackgroundServiceStreamInfo = _uuidof(IAppBroadcastBackgroundServiceStreamInfo);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastBackgroundServiceStreamInfo2
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastBackgroundServiceStreamInfo
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastBackgroundServiceStreamInfo2[] = L"Windows.Media.Capture.IAppBroadcastBackgroundServiceStreamInfo2";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("bd1e9f6d-94dc-4fce-9541-a9f129596334")
                IAppBroadcastBackgroundServiceStreamInfo2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE ReportProblemWithStream(void) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastBackgroundServiceStreamInfo2 = _uuidof(IAppBroadcastBackgroundServiceStreamInfo2);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastCameraCaptureStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastCameraCaptureStateChangedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastCameraCaptureStateChangedEventArgs[] = L"Windows.Media.Capture.IAppBroadcastCameraCaptureStateChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("1e334cd0-b882-4b88-8692-05999aceb70f")
                IAppBroadcastCameraCaptureStateChangedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_State(
                        ABI::Windows::Media::Capture::AppBroadcastCameraCaptureState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ErrorCode(
                        UINT32* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastCameraCaptureStateChangedEventArgs = _uuidof(IAppBroadcastCameraCaptureStateChangedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastGlobalSettings
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastGlobalSettings
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastGlobalSettings[] = L"Windows.Media.Capture.IAppBroadcastGlobalSettings";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("b2cb27a5-70fc-4e17-80bd-6ba0fd3ff3a0")
                IAppBroadcastGlobalSettings : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_IsBroadcastEnabled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsDisabledByPolicy(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsGpuConstrained(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_HasHardwareEncoder(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsAudioCaptureEnabled(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsAudioCaptureEnabled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsMicrophoneCaptureEnabledByDefault(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsMicrophoneCaptureEnabledByDefault(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsEchoCancellationEnabled(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsEchoCancellationEnabled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_SystemAudioGain(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_SystemAudioGain(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MicrophoneGain(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MicrophoneGain(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsCameraCaptureEnabledByDefault(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsCameraCaptureEnabledByDefault(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_SelectedCameraId(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_SelectedCameraId(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CameraOverlayLocation(
                        ABI::Windows::Media::Capture::AppBroadcastCameraOverlayLocation value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CameraOverlayLocation(
                        ABI::Windows::Media::Capture::AppBroadcastCameraOverlayLocation* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CameraOverlaySize(
                        ABI::Windows::Media::Capture::AppBroadcastCameraOverlaySize value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CameraOverlaySize(
                        ABI::Windows::Media::Capture::AppBroadcastCameraOverlaySize* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsCursorImageCaptureEnabled(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsCursorImageCaptureEnabled(
                        boolean* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastGlobalSettings = _uuidof(IAppBroadcastGlobalSettings);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastHeartbeatRequestedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastHeartbeatRequestedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastHeartbeatRequestedEventArgs[] = L"Windows.Media.Capture.IAppBroadcastHeartbeatRequestedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("cea54283-ee51-4dbf-9472-79a9ed4e2165")
                IAppBroadcastHeartbeatRequestedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE put_Handled(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Handled(
                        boolean* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastHeartbeatRequestedEventArgs = _uuidof(IAppBroadcastHeartbeatRequestedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastManagerStatics
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastManager
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastManagerStatics[] = L"Windows.Media.Capture.IAppBroadcastManagerStatics";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("364e018b-1e4e-411f-ab3e-92959844c156")
                IAppBroadcastManagerStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE GetGlobalSettings(
                        ABI::Windows::Media::Capture::IAppBroadcastGlobalSettings** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ApplyGlobalSettings(
                        ABI::Windows::Media::Capture::IAppBroadcastGlobalSettings* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetProviderSettings(
                        ABI::Windows::Media::Capture::IAppBroadcastProviderSettings** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ApplyProviderSettings(
                        ABI::Windows::Media::Capture::IAppBroadcastProviderSettings* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastManagerStatics = _uuidof(IAppBroadcastManagerStatics);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastMicrophoneCaptureStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastMicrophoneCaptureStateChangedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastMicrophoneCaptureStateChangedEventArgs[] = L"Windows.Media.Capture.IAppBroadcastMicrophoneCaptureStateChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("a86ad5e9-9440-4908-9d09-65b7e315d795")
                IAppBroadcastMicrophoneCaptureStateChangedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_State(
                        ABI::Windows::Media::Capture::AppBroadcastMicrophoneCaptureState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ErrorCode(
                        UINT32* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastMicrophoneCaptureStateChangedEventArgs = _uuidof(IAppBroadcastMicrophoneCaptureStateChangedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastPlugIn
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastPlugIn
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastPlugIn[] = L"Windows.Media.Capture.IAppBroadcastPlugIn";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("520c1e66-6513-4574-ac54-23b79729615b")
                IAppBroadcastPlugIn : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AppId(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ProviderSettings(
                        ABI::Windows::Media::Capture::IAppBroadcastProviderSettings** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Logo(
                        ABI::Windows::Storage::Streams::IRandomAccessStreamReference** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_DisplayName(
                        HSTRING* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastPlugIn = _uuidof(IAppBroadcastPlugIn);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastPlugInManager
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastPlugInManager
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastPlugInManager[] = L"Windows.Media.Capture.IAppBroadcastPlugInManager";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("e550d979-27a1-49a7-bbf4-d7a9e9d07668")
                IAppBroadcastPlugInManager : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_IsBroadcastProviderAvailable(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PlugInList(
                        __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_DefaultPlugIn(
                        ABI::Windows::Media::Capture::IAppBroadcastPlugIn** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_DefaultPlugIn(
                        ABI::Windows::Media::Capture::IAppBroadcastPlugIn* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastPlugInManager = _uuidof(IAppBroadcastPlugInManager);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastPlugInManagerStatics
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastPlugInManager
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastPlugInManagerStatics[] = L"Windows.Media.Capture.IAppBroadcastPlugInManagerStatics";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("f2645c20-5c76-4cdc-9364-82fe9eb6534d")
                IAppBroadcastPlugInManagerStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE GetDefault(
                        ABI::Windows::Media::Capture::IAppBroadcastPlugInManager** ppInstance
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetForUser(
                        ABI::Windows::System::IUser* user,
                        ABI::Windows::Media::Capture::IAppBroadcastPlugInManager** ppInstance
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastPlugInManagerStatics = _uuidof(IAppBroadcastPlugInManagerStatics);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastPlugInStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastPlugInStateChangedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastPlugInStateChangedEventArgs[] = L"Windows.Media.Capture.IAppBroadcastPlugInStateChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("4881d0f2-abc5-4fc6-84b0-89370bb47212")
                IAppBroadcastPlugInStateChangedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_PlugInState(
                        ABI::Windows::Media::Capture::AppBroadcastPlugInState* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastPlugInStateChangedEventArgs = _uuidof(IAppBroadcastPlugInStateChangedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastPreview
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastPreview
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastPreview[] = L"Windows.Media.Capture.IAppBroadcastPreview";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("14b60f5a-6e4a-4b80-a14f-67ee77d153e7")
                IAppBroadcastPreview : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE StopPreview(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PreviewState(
                        ABI::Windows::Media::Capture::AppBroadcastPreviewState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ErrorCode(
                        __FIReference_1_UINT32** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_PreviewStateChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs* value,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_PreviewStateChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PreviewStreamReader(
                        ABI::Windows::Media::Capture::IAppBroadcastPreviewStreamReader** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastPreview = _uuidof(IAppBroadcastPreview);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastPreviewStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastPreviewStateChangedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastPreviewStateChangedEventArgs[] = L"Windows.Media.Capture.IAppBroadcastPreviewStateChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("5a57f2de-8dea-4e86-90ad-03fc26b9653c")
                IAppBroadcastPreviewStateChangedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_PreviewState(
                        ABI::Windows::Media::Capture::AppBroadcastPreviewState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ErrorCode(
                        UINT32* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastPreviewStateChangedEventArgs = _uuidof(IAppBroadcastPreviewStateChangedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastPreviewStreamReader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastPreviewStreamReader
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastPreviewStreamReader[] = L"Windows.Media.Capture.IAppBroadcastPreviewStreamReader";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("92228d50-db3f-40a8-8cd4-f4e371ddab37")
                IAppBroadcastPreviewStreamReader : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_VideoWidth(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoHeight(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoStride(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoBitmapPixelFormat(
                        ABI::Windows::Graphics::Imaging::BitmapPixelFormat* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoBitmapAlphaMode(
                        ABI::Windows::Graphics::Imaging::BitmapAlphaMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE TryGetNextVideoFrame(
                        ABI::Windows::Media::Capture::IAppBroadcastPreviewStreamVideoFrame** frame
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_VideoFrameArrived(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable* value,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_VideoFrameArrived(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastPreviewStreamReader = _uuidof(IAppBroadcastPreviewStreamReader);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastPreviewStreamVideoFrame
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastPreviewStreamVideoFrame
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastPreviewStreamVideoFrame[] = L"Windows.Media.Capture.IAppBroadcastPreviewStreamVideoFrame";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("010fbea1-94fe-4499-b8c0-8d244279fb12")
                IAppBroadcastPreviewStreamVideoFrame : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_VideoHeader(
                        ABI::Windows::Media::Capture::IAppBroadcastPreviewStreamVideoHeader** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoBuffer(
                        ABI::Windows::Storage::Streams::IBuffer** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastPreviewStreamVideoFrame = _uuidof(IAppBroadcastPreviewStreamVideoFrame);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastPreviewStreamVideoHeader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastPreviewStreamVideoHeader
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastPreviewStreamVideoHeader[] = L"Windows.Media.Capture.IAppBroadcastPreviewStreamVideoHeader";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("8bef6113-da84-4499-a7ab-87118cb4a157")
                IAppBroadcastPreviewStreamVideoHeader : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AbsoluteTimestamp(
                        ABI::Windows::Foundation::DateTime* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RelativeTimestamp(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Duration(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_FrameId(
                        UINT64* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastPreviewStreamVideoHeader = _uuidof(IAppBroadcastPreviewStreamVideoHeader);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastProviderSettings
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastProviderSettings
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastProviderSettings[] = L"Windows.Media.Capture.IAppBroadcastProviderSettings";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("c30bdf62-9948-458f-ad50-aa06ec03da08")
                IAppBroadcastProviderSettings : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE put_DefaultBroadcastTitle(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_DefaultBroadcastTitle(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AudioEncodingBitrate(
                        UINT32 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AudioEncodingBitrate(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CustomVideoEncodingBitrate(
                        UINT32 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CustomVideoEncodingBitrate(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CustomVideoEncodingHeight(
                        UINT32 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CustomVideoEncodingHeight(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CustomVideoEncodingWidth(
                        UINT32 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CustomVideoEncodingWidth(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_VideoEncodingBitrateMode(
                        ABI::Windows::Media::Capture::AppBroadcastVideoEncodingBitrateMode value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoEncodingBitrateMode(
                        ABI::Windows::Media::Capture::AppBroadcastVideoEncodingBitrateMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_VideoEncodingResolutionMode(
                        ABI::Windows::Media::Capture::AppBroadcastVideoEncodingResolutionMode value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoEncodingResolutionMode(
                        ABI::Windows::Media::Capture::AppBroadcastVideoEncodingResolutionMode* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastProviderSettings = _uuidof(IAppBroadcastProviderSettings);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastServices
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastServices
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastServices[] = L"Windows.Media.Capture.IAppBroadcastServices";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("8660b4d6-969b-4e3c-ac3a-8b042ee4ee63")
                IAppBroadcastServices : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_CaptureTargetType(
                        ABI::Windows::Media::Capture::AppBroadcastCaptureTargetType* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CaptureTargetType(
                        ABI::Windows::Media::Capture::AppBroadcastCaptureTargetType value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BroadcastTitle(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BroadcastTitle(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BroadcastLanguage(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_BroadcastLanguage(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_UserName(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CanCapture(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE EnterBroadcastModeAsync(
                        ABI::Windows::Media::Capture::IAppBroadcastPlugIn* plugIn,
                        __FIAsyncOperation_1_UINT32** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ExitBroadcastMode(
                        ABI::Windows::Media::Capture::AppBroadcastExitBroadcastModeReason reason
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StartBroadcast(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE PauseBroadcast(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ResumeBroadcast(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StartPreview(
                        ABI::Windows::Foundation::Size desiredSize,
                        ABI::Windows::Media::Capture::IAppBroadcastPreview** preview
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_State(
                        ABI::Windows::Media::Capture::IAppBroadcastState** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastServices = _uuidof(IAppBroadcastServices);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastSignInStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastSignInStateChangedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastSignInStateChangedEventArgs[] = L"Windows.Media.Capture.IAppBroadcastSignInStateChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("02b692a4-5919-4a9e-8d5e-c9bb0dd3377a")
                IAppBroadcastSignInStateChangedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_SignInState(
                        ABI::Windows::Media::Capture::AppBroadcastSignInState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Result(
                        ABI::Windows::Media::Capture::AppBroadcastSignInResult* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastSignInStateChangedEventArgs = _uuidof(IAppBroadcastSignInStateChangedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastState
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastState
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastState[] = L"Windows.Media.Capture.IAppBroadcastState";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("ee08056d-8099-4ddd-922e-c56dac58abfb")
                IAppBroadcastState : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_IsCaptureTargetRunning(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ViewerCount(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ShouldCaptureMicrophone(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ShouldCaptureMicrophone(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE RestartMicrophoneCapture(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ShouldCaptureCamera(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ShouldCaptureCamera(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE RestartCameraCapture(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_EncodedVideoSize(
                        ABI::Windows::Foundation::Size* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MicrophoneCaptureState(
                        ABI::Windows::Media::Capture::AppBroadcastMicrophoneCaptureState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MicrophoneCaptureError(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CameraCaptureState(
                        ABI::Windows::Media::Capture::AppBroadcastCameraCaptureState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CameraCaptureError(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StreamState(
                        ABI::Windows::Media::Capture::AppBroadcastStreamState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PlugInState(
                        ABI::Windows::Media::Capture::AppBroadcastPlugInState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_OAuthRequestUri(
                        ABI::Windows::Foundation::IUriRuntimeClass** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_OAuthCallbackUri(
                        ABI::Windows::Foundation::IUriRuntimeClass** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AuthenticationResult(
                        ABI::Windows::Security::Authentication::Web::IWebAuthenticationResult** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AuthenticationResult(
                        ABI::Windows::Security::Authentication::Web::IWebAuthenticationResult* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_SignInState(
                        ABI::Windows::Media::Capture::AppBroadcastSignInState value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_SignInState(
                        ABI::Windows::Media::Capture::AppBroadcastSignInState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TerminationReason(
                        ABI::Windows::Media::Capture::AppBroadcastTerminationReason* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TerminationReasonPlugInSpecific(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_ViewerCountChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs* value,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_ViewerCountChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_MicrophoneCaptureStateChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs* value,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_MicrophoneCaptureStateChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_CameraCaptureStateChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs* value,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_CameraCaptureStateChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_PlugInStateChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_PlugInStateChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_StreamStateChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_StreamStateChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_CaptureTargetClosed(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable* value,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_CaptureTargetClosed(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastState = _uuidof(IAppBroadcastState);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastStreamAudioFrame
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastStreamAudioFrame
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastStreamAudioFrame[] = L"Windows.Media.Capture.IAppBroadcastStreamAudioFrame";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("efab4ac8-21ba-453f-8bb7-5e938a2e9a74")
                IAppBroadcastStreamAudioFrame : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AudioHeader(
                        ABI::Windows::Media::Capture::IAppBroadcastStreamAudioHeader** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AudioBuffer(
                        ABI::Windows::Storage::Streams::IBuffer** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastStreamAudioFrame = _uuidof(IAppBroadcastStreamAudioFrame);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastStreamAudioHeader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastStreamAudioHeader
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastStreamAudioHeader[] = L"Windows.Media.Capture.IAppBroadcastStreamAudioHeader";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("bf21a570-6b78-4216-9f07-5aff5256f1b7")
                IAppBroadcastStreamAudioHeader : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AbsoluteTimestamp(
                        ABI::Windows::Foundation::DateTime* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RelativeTimestamp(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Duration(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_HasDiscontinuity(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_FrameId(
                        UINT64* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastStreamAudioHeader = _uuidof(IAppBroadcastStreamAudioHeader);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastStreamReader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastStreamReader
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastStreamReader[] = L"Windows.Media.Capture.IAppBroadcastStreamReader";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("b338bcf9-3364-4460-b5f1-3cc2796a8aa2")
                IAppBroadcastStreamReader : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AudioChannels(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AudioSampleRate(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AudioAacSequence(
                        ABI::Windows::Storage::Streams::IBuffer** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AudioBitrate(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE TryGetNextAudioFrame(
                        ABI::Windows::Media::Capture::IAppBroadcastStreamAudioFrame** frame
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoWidth(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoHeight(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoBitrate(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE TryGetNextVideoFrame(
                        ABI::Windows::Media::Capture::IAppBroadcastStreamVideoFrame** frame
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_AudioFrameArrived(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable* value,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_AudioFrameArrived(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_VideoFrameArrived(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable* value,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_VideoFrameArrived(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastStreamReader = _uuidof(IAppBroadcastStreamReader);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastStreamStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastStreamStateChangedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastStreamStateChangedEventArgs[] = L"Windows.Media.Capture.IAppBroadcastStreamStateChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("5108a733-d008-4a89-93be-58aed961374e")
                IAppBroadcastStreamStateChangedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_StreamState(
                        ABI::Windows::Media::Capture::AppBroadcastStreamState* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastStreamStateChangedEventArgs = _uuidof(IAppBroadcastStreamStateChangedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastStreamVideoFrame
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastStreamVideoFrame
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastStreamVideoFrame[] = L"Windows.Media.Capture.IAppBroadcastStreamVideoFrame";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("0f97cf2b-c9e4-4e88-8194-d814cbd585d8")
                IAppBroadcastStreamVideoFrame : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_VideoHeader(
                        ABI::Windows::Media::Capture::IAppBroadcastStreamVideoHeader** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoBuffer(
                        ABI::Windows::Storage::Streams::IBuffer** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastStreamVideoFrame = _uuidof(IAppBroadcastStreamVideoFrame);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastStreamVideoHeader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastStreamVideoHeader
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastStreamVideoHeader[] = L"Windows.Media.Capture.IAppBroadcastStreamVideoHeader";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("0b9ebece-7e32-432d-8ca2-36bf10b9f462")
                IAppBroadcastStreamVideoHeader : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AbsoluteTimestamp(
                        ABI::Windows::Foundation::DateTime* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RelativeTimestamp(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Duration(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsKeyFrame(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_HasDiscontinuity(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_FrameId(
                        UINT64* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastStreamVideoHeader = _uuidof(IAppBroadcastStreamVideoHeader);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastTriggerDetails
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastTriggerDetails
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastTriggerDetails[] = L"Windows.Media.Capture.IAppBroadcastTriggerDetails";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("deebab35-ec5e-4d8f-b1c0-5da6e8c75638")
                IAppBroadcastTriggerDetails : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_BackgroundService(
                        ABI::Windows::Media::Capture::IAppBroadcastBackgroundService** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastTriggerDetails = _uuidof(IAppBroadcastTriggerDetails);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastViewerCountChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastViewerCountChangedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastViewerCountChangedEventArgs[] = L"Windows.Media.Capture.IAppBroadcastViewerCountChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("e6e11825-5401-4ade-8bd2-c14ecee6807d")
                IAppBroadcastViewerCountChangedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_ViewerCount(
                        UINT32* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppBroadcastViewerCountChangedEventArgs = _uuidof(IAppBroadcastViewerCountChangedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCapture[] = L"Windows.Media.Capture.IAppCapture";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("9749d453-a29a-45ed-8f29-22d09942cff7")
                IAppCapture : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_IsCapturingAudio(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsCapturingVideo(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_CapturingChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_CapturingChanged(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCapture = _uuidof(IAppCapture);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureAlternateShortcutKeys
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureAlternateShortcutKeys
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureAlternateShortcutKeys[] = L"Windows.Media.Capture.IAppCaptureAlternateShortcutKeys";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("19e8e0ef-236c-40f9-b38f-9b7dd65d1ccc")
                IAppCaptureAlternateShortcutKeys : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE put_ToggleGameBarKey(
                        ABI::Windows::System::VirtualKey value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ToggleGameBarKey(
                        ABI::Windows::System::VirtualKey* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ToggleGameBarKeyModifiers(
                        ABI::Windows::System::VirtualKeyModifiers value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ToggleGameBarKeyModifiers(
                        ABI::Windows::System::VirtualKeyModifiers* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_SaveHistoricalVideoKey(
                        ABI::Windows::System::VirtualKey value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_SaveHistoricalVideoKey(
                        ABI::Windows::System::VirtualKey* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_SaveHistoricalVideoKeyModifiers(
                        ABI::Windows::System::VirtualKeyModifiers value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_SaveHistoricalVideoKeyModifiers(
                        ABI::Windows::System::VirtualKeyModifiers* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ToggleRecordingKey(
                        ABI::Windows::System::VirtualKey value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ToggleRecordingKey(
                        ABI::Windows::System::VirtualKey* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ToggleRecordingKeyModifiers(
                        ABI::Windows::System::VirtualKeyModifiers value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ToggleRecordingKeyModifiers(
                        ABI::Windows::System::VirtualKeyModifiers* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TakeScreenshotKey(
                        ABI::Windows::System::VirtualKey value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TakeScreenshotKey(
                        ABI::Windows::System::VirtualKey* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_TakeScreenshotKeyModifiers(
                        ABI::Windows::System::VirtualKeyModifiers value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TakeScreenshotKeyModifiers(
                        ABI::Windows::System::VirtualKeyModifiers* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ToggleRecordingIndicatorKey(
                        ABI::Windows::System::VirtualKey value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ToggleRecordingIndicatorKey(
                        ABI::Windows::System::VirtualKey* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ToggleRecordingIndicatorKeyModifiers(
                        ABI::Windows::System::VirtualKeyModifiers value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ToggleRecordingIndicatorKeyModifiers(
                        ABI::Windows::System::VirtualKeyModifiers* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureAlternateShortcutKeys = _uuidof(IAppCaptureAlternateShortcutKeys);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureAlternateShortcutKeys2
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureAlternateShortcutKeys
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureAlternateShortcutKeys2[] = L"Windows.Media.Capture.IAppCaptureAlternateShortcutKeys2";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("c3669090-dd17-47f0-95e5-ce42286cf338")
                IAppCaptureAlternateShortcutKeys2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE put_ToggleMicrophoneCaptureKey(
                        ABI::Windows::System::VirtualKey value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ToggleMicrophoneCaptureKey(
                        ABI::Windows::System::VirtualKey* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ToggleMicrophoneCaptureKeyModifiers(
                        ABI::Windows::System::VirtualKeyModifiers value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ToggleMicrophoneCaptureKeyModifiers(
                        ABI::Windows::System::VirtualKeyModifiers* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureAlternateShortcutKeys2 = _uuidof(IAppCaptureAlternateShortcutKeys2);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureAlternateShortcutKeys3
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureAlternateShortcutKeys
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureAlternateShortcutKeys3[] = L"Windows.Media.Capture.IAppCaptureAlternateShortcutKeys3";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("7b81448c-418e-469c-a49a-45b597c826b6")
                IAppCaptureAlternateShortcutKeys3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE put_ToggleCameraCaptureKey(
                        ABI::Windows::System::VirtualKey value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ToggleCameraCaptureKey(
                        ABI::Windows::System::VirtualKey* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ToggleCameraCaptureKeyModifiers(
                        ABI::Windows::System::VirtualKeyModifiers value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ToggleCameraCaptureKeyModifiers(
                        ABI::Windows::System::VirtualKeyModifiers* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ToggleBroadcastKey(
                        ABI::Windows::System::VirtualKey value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ToggleBroadcastKey(
                        ABI::Windows::System::VirtualKey* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ToggleBroadcastKeyModifiers(
                        ABI::Windows::System::VirtualKeyModifiers value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ToggleBroadcastKeyModifiers(
                        ABI::Windows::System::VirtualKeyModifiers* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureAlternateShortcutKeys3 = _uuidof(IAppCaptureAlternateShortcutKeys3);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureDurationGeneratedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureDurationGeneratedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureDurationGeneratedEventArgs[] = L"Windows.Media.Capture.IAppCaptureDurationGeneratedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("c1f5563b-ffa1-44c9-975f-27fbeb553b35")
                IAppCaptureDurationGeneratedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Duration(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureDurationGeneratedEventArgs = _uuidof(IAppCaptureDurationGeneratedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureFileGeneratedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureFileGeneratedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureFileGeneratedEventArgs[] = L"Windows.Media.Capture.IAppCaptureFileGeneratedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("4189fbf4-465e-45bf-907f-165b3fb23758")
                IAppCaptureFileGeneratedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_File(
                        ABI::Windows::Storage::IStorageFile** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureFileGeneratedEventArgs = _uuidof(IAppCaptureFileGeneratedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureManagerStatics
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureManager
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureManagerStatics[] = L"Windows.Media.Capture.IAppCaptureManagerStatics";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("7d9e3ea7-6282-4735-8d4e-aa45f90f6723")
                IAppCaptureManagerStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE GetCurrentSettings(
                        ABI::Windows::Media::Capture::IAppCaptureSettings** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ApplySettings(
                        ABI::Windows::Media::Capture::IAppCaptureSettings* appCaptureSettings
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureManagerStatics = _uuidof(IAppCaptureManagerStatics);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureMetadataWriter
 *
 * Introduced to Windows.Media.Capture.AppCaptureMetadataContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureMetadataWriter
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureMetadataWriter[] = L"Windows.Media.Capture.IAppCaptureMetadataWriter";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("e0ce4877-9aaf-46b4-ad31-6a60b441c780")
                IAppCaptureMetadataWriter : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE AddStringEvent(
                        HSTRING name,
                        HSTRING value,
                        ABI::Windows::Media::Capture::AppCaptureMetadataPriority priority
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE AddInt32Event(
                        HSTRING name,
                        INT32 value,
                        ABI::Windows::Media::Capture::AppCaptureMetadataPriority priority
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE AddDoubleEvent(
                        HSTRING name,
                        DOUBLE value,
                        ABI::Windows::Media::Capture::AppCaptureMetadataPriority priority
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StartStringState(
                        HSTRING name,
                        HSTRING value,
                        ABI::Windows::Media::Capture::AppCaptureMetadataPriority priority
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StartInt32State(
                        HSTRING name,
                        INT32 value,
                        ABI::Windows::Media::Capture::AppCaptureMetadataPriority priority
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StartDoubleState(
                        HSTRING name,
                        DOUBLE value,
                        ABI::Windows::Media::Capture::AppCaptureMetadataPriority priority
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StopState(
                        HSTRING name
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StopAllStates(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RemainingStorageBytesAvailable(
                        UINT64* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_MetadataPurged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_MetadataPurged(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureMetadataWriter = _uuidof(IAppCaptureMetadataWriter);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureMicrophoneCaptureStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureMicrophoneCaptureStateChangedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureMicrophoneCaptureStateChangedEventArgs[] = L"Windows.Media.Capture.IAppCaptureMicrophoneCaptureStateChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("324d249e-45bc-4c35-bc35-e469fc7a69e0")
                IAppCaptureMicrophoneCaptureStateChangedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_State(
                        ABI::Windows::Media::Capture::AppCaptureMicrophoneCaptureState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ErrorCode(
                        UINT32* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureMicrophoneCaptureStateChangedEventArgs = _uuidof(IAppCaptureMicrophoneCaptureStateChangedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureRecordOperation
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureRecordOperation
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureRecordOperation[] = L"Windows.Media.Capture.IAppCaptureRecordOperation";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("c66020a9-1538-495c-9bbb-2ba870ec5861")
                IAppCaptureRecordOperation : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE StopRecording(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_State(
                        ABI::Windows::Media::Capture::AppCaptureRecordingState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ErrorCode(
                        __FIReference_1_UINT32** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Duration(
                        __FIReference_1_Windows__CFoundation__CTimeSpan** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_File(
                        ABI::Windows::Storage::IStorageFile** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsFileTruncated(
                        __FIReference_1_boolean** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_StateChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs* value,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_StateChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_DurationGenerated(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs* value,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_DurationGenerated(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_FileGenerated(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs* value,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_FileGenerated(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureRecordOperation = _uuidof(IAppCaptureRecordOperation);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureRecordingStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureRecordingStateChangedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureRecordingStateChangedEventArgs[] = L"Windows.Media.Capture.IAppCaptureRecordingStateChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("24fc8712-e305-490d-b415-6b1c9049736b")
                IAppCaptureRecordingStateChangedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_State(
                        ABI::Windows::Media::Capture::AppCaptureRecordingState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ErrorCode(
                        UINT32* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureRecordingStateChangedEventArgs = _uuidof(IAppCaptureRecordingStateChangedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureServices
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureServices
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureServices[] = L"Windows.Media.Capture.IAppCaptureServices";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("44fec0b5-34f5-4f18-ae8c-b9123abbfc0d")
                IAppCaptureServices : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Record(
                        ABI::Windows::Media::Capture::IAppCaptureRecordOperation** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE RecordTimeSpan(
                        ABI::Windows::Foundation::DateTime startTime,
                        ABI::Windows::Foundation::TimeSpan duration,
                        ABI::Windows::Media::Capture::IAppCaptureRecordOperation** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CanCapture(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_State(
                        ABI::Windows::Media::Capture::IAppCaptureState** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureServices = _uuidof(IAppCaptureServices);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureSettings
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureSettings
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureSettings[] = L"Windows.Media.Capture.IAppCaptureSettings";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("14683a86-8807-48d3-883a-970ee4532a39")
                IAppCaptureSettings : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE put_AppCaptureDestinationFolder(
                        ABI::Windows::Storage::IStorageFolder* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AppCaptureDestinationFolder(
                        ABI::Windows::Storage::IStorageFolder** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AudioEncodingBitrate(
                        UINT32 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AudioEncodingBitrate(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsAudioCaptureEnabled(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsAudioCaptureEnabled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CustomVideoEncodingBitrate(
                        UINT32 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CustomVideoEncodingBitrate(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CustomVideoEncodingHeight(
                        UINT32 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CustomVideoEncodingHeight(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CustomVideoEncodingWidth(
                        UINT32 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CustomVideoEncodingWidth(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_HistoricalBufferLength(
                        UINT32 value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_HistoricalBufferLength(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_HistoricalBufferLengthUnit(
                        ABI::Windows::Media::Capture::AppCaptureHistoricalBufferLengthUnit value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_HistoricalBufferLengthUnit(
                        ABI::Windows::Media::Capture::AppCaptureHistoricalBufferLengthUnit* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsHistoricalCaptureEnabled(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsHistoricalCaptureEnabled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsHistoricalCaptureOnBatteryAllowed(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsHistoricalCaptureOnBatteryAllowed(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsHistoricalCaptureOnWirelessDisplayAllowed(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsHistoricalCaptureOnWirelessDisplayAllowed(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MaximumRecordLength(
                        ABI::Windows::Foundation::TimeSpan value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MaximumRecordLength(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ScreenshotDestinationFolder(
                        ABI::Windows::Storage::IStorageFolder* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ScreenshotDestinationFolder(
                        ABI::Windows::Storage::IStorageFolder** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_VideoEncodingBitrateMode(
                        ABI::Windows::Media::Capture::AppCaptureVideoEncodingBitrateMode value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoEncodingBitrateMode(
                        ABI::Windows::Media::Capture::AppCaptureVideoEncodingBitrateMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_VideoEncodingResolutionMode(
                        ABI::Windows::Media::Capture::AppCaptureVideoEncodingResolutionMode value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoEncodingResolutionMode(
                        ABI::Windows::Media::Capture::AppCaptureVideoEncodingResolutionMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsAppCaptureEnabled(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsAppCaptureEnabled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsCpuConstrained(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsDisabledByPolicy(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsMemoryConstrained(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_HasHardwareEncoder(
                        boolean* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureSettings = _uuidof(IAppCaptureSettings);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureSettings2
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureSettings
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureSettings2[] = L"Windows.Media.Capture.IAppCaptureSettings2";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("fcb8cee7-e26b-476f-9b1a-ec342d2a8fde")
                IAppCaptureSettings2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_IsGpuConstrained(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AlternateShortcutKeys(
                        ABI::Windows::Media::Capture::IAppCaptureAlternateShortcutKeys** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureSettings2 = _uuidof(IAppCaptureSettings2);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureSettings3
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureSettings
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureSettings3[] = L"Windows.Media.Capture.IAppCaptureSettings3";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("a93502fe-88c2-42d6-aaaa-40feffd75aec")
                IAppCaptureSettings3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE put_IsMicrophoneCaptureEnabled(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsMicrophoneCaptureEnabled(
                        boolean* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureSettings3 = _uuidof(IAppCaptureSettings3);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureSettings4
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureSettings
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureSettings4[] = L"Windows.Media.Capture.IAppCaptureSettings4";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("07c2774c-1a81-482f-a244-049d95f25b0b")
                IAppCaptureSettings4 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE put_IsMicrophoneCaptureEnabledByDefault(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsMicrophoneCaptureEnabledByDefault(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_SystemAudioGain(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_SystemAudioGain(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MicrophoneGain(
                        DOUBLE value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MicrophoneGain(
                        DOUBLE* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_VideoEncodingFrameRateMode(
                        ABI::Windows::Media::Capture::AppCaptureVideoEncodingFrameRateMode value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoEncodingFrameRateMode(
                        ABI::Windows::Media::Capture::AppCaptureVideoEncodingFrameRateMode* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureSettings4 = _uuidof(IAppCaptureSettings4);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureSettings5
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureSettings
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureSettings5[] = L"Windows.Media.Capture.IAppCaptureSettings5";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("18894522-b0e8-4ba0-8f13-3eaa5fa4013b")
                IAppCaptureSettings5 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE put_IsEchoCancellationEnabled(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsEchoCancellationEnabled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_IsCursorImageCaptureEnabled(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsCursorImageCaptureEnabled(
                        boolean* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureSettings5 = _uuidof(IAppCaptureSettings5);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureState
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureState
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureState[] = L"Windows.Media.Capture.IAppCaptureState";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("73134372-d4eb-44ce-9538-465f506ac4ea")
                IAppCaptureState : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_IsTargetRunning(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsHistoricalCaptureEnabled(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ShouldCaptureMicrophone(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_ShouldCaptureMicrophone(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE RestartMicrophoneCapture(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MicrophoneCaptureState(
                        ABI::Windows::Media::Capture::AppCaptureMicrophoneCaptureState* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MicrophoneCaptureError(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_MicrophoneCaptureStateChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs* value,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_MicrophoneCaptureStateChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_CaptureTargetClosed(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable* value,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_CaptureTargetClosed(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureState = _uuidof(IAppCaptureState);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureStatics[] = L"Windows.Media.Capture.IAppCaptureStatics";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("f922dd6c-0a7e-4e74-8b20-9c1f902d08a1")
                IAppCaptureStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE GetForCurrentView(
                        ABI::Windows::Media::Capture::IAppCapture** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureStatics = _uuidof(IAppCaptureStatics);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureStatics2[] = L"Windows.Media.Capture.IAppCaptureStatics2";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("b2d881d4-836c-4da4-afd7-facc041e1cf3")
                IAppCaptureStatics2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE SetAllowedAsync(
                        boolean allowed,
                        ABI::Windows::Foundation::IAsyncAction** operation
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IAppCaptureStatics2 = _uuidof(IAppCaptureStatics2);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.Media.Capture.ICameraCaptureUI
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CameraCaptureUI
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICameraCaptureUI[] = L"Windows.Media.Capture.ICameraCaptureUI";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("48587540-6f93-4bb4-b8f3-e89e48948c91")
                ICameraCaptureUI : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_PhotoSettings(
                        ABI::Windows::Media::Capture::ICameraCaptureUIPhotoCaptureSettings** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoSettings(
                        ABI::Windows::Media::Capture::ICameraCaptureUIVideoCaptureSettings** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CaptureFileAsync(
                        ABI::Windows::Media::Capture::CameraCaptureUIMode mode,
                        __FIAsyncOperation_1_Windows__CStorage__CStorageFile** asyncInfo
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICameraCaptureUI = _uuidof(ICameraCaptureUI);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICameraCaptureUIPhotoCaptureSettings[] = L"Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettings";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("b9f5be97-3472-46a8-8a9e-04ce42ccc97d")
                ICameraCaptureUIPhotoCaptureSettings : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Format(
                        ABI::Windows::Media::Capture::CameraCaptureUIPhotoFormat* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Format(
                        ABI::Windows::Media::Capture::CameraCaptureUIPhotoFormat value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MaxResolution(
                        ABI::Windows::Media::Capture::CameraCaptureUIMaxPhotoResolution* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MaxResolution(
                        ABI::Windows::Media::Capture::CameraCaptureUIMaxPhotoResolution value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CroppedSizeInPixels(
                        ABI::Windows::Foundation::Size* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CroppedSizeInPixels(
                        ABI::Windows::Foundation::Size value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CroppedAspectRatio(
                        ABI::Windows::Foundation::Size* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_CroppedAspectRatio(
                        ABI::Windows::Foundation::Size value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AllowCropping(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AllowCropping(
                        boolean value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICameraCaptureUIPhotoCaptureSettings = _uuidof(ICameraCaptureUIPhotoCaptureSettings);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICameraCaptureUIVideoCaptureSettings[] = L"Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettings";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("64e92d1f-a28d-425a-b84f-e568335ff24e")
                ICameraCaptureUIVideoCaptureSettings : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Format(
                        ABI::Windows::Media::Capture::CameraCaptureUIVideoFormat* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_Format(
                        ABI::Windows::Media::Capture::CameraCaptureUIVideoFormat value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MaxResolution(
                        ABI::Windows::Media::Capture::CameraCaptureUIMaxVideoResolution* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MaxResolution(
                        ABI::Windows::Media::Capture::CameraCaptureUIMaxVideoResolution value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MaxDurationInSeconds(
                        FLOAT* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MaxDurationInSeconds(
                        FLOAT value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AllowTrimming(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AllowTrimming(
                        boolean value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICameraCaptureUIVideoCaptureSettings = _uuidof(ICameraCaptureUIVideoCaptureSettings);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ICameraOptionsUIStatics
 *
 * Introduced to Windows.Media.Capture.CameraCaptureUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CameraOptionsUI
 *
 */
#if WINDOWS_MEDIA_CAPTURE_CAMERACAPTUREUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICameraOptionsUIStatics[] = L"Windows.Media.Capture.ICameraOptionsUIStatics";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("3b0d5e34-3906-4b7d-946c-7bde844499ae")
                ICameraOptionsUIStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE Show(
                        ABI::Windows::Media::Capture::IMediaCapture* mediaCapture
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICameraOptionsUIStatics = _uuidof(ICameraOptionsUIStatics);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_CAMERACAPTUREUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ICapturedFrame
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CapturedFrame
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Windows.Storage.Streams.IRandomAccessStreamWithContentType
 *     Windows.Storage.Streams.IRandomAccessStream
 *     Windows.Foundation.IClosable
 *     Windows.Storage.Streams.IInputStream
 *     Windows.Storage.Streams.IOutputStream
 *     Windows.Storage.Streams.IContentTypeProvider
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICapturedFrame[] = L"Windows.Media.Capture.ICapturedFrame";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("1dd2de1f-571b-44d8-8e80-a08a1578766e")
                ICapturedFrame : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Width(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Height(
                        UINT32* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICapturedFrame = _uuidof(ICapturedFrame);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrame;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ICapturedFrame2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CapturedFrame
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICapturedFrame2[] = L"Windows.Media.Capture.ICapturedFrame2";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("543fa6d1-bd78-4866-adda-24314bc65dea")
                ICapturedFrame2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_ControlValues(
                        ABI::Windows::Media::Capture::ICapturedFrameControlValues** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_BitmapProperties(
                        __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICapturedFrame2 = _uuidof(ICapturedFrame2);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.Media.Capture.ICapturedFrameControlValues
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CapturedFrameControlValues
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICapturedFrameControlValues[] = L"Windows.Media.Capture.ICapturedFrameControlValues";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("90c65b7f-4e0d-4ca4-882d-7a144fed0a90")
                ICapturedFrameControlValues : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Exposure(
                        __FIReference_1_Windows__CFoundation__CTimeSpan** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ExposureCompensation(
                        __FIReference_1_float** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsoSpeed(
                        __FIReference_1_UINT32** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Focus(
                        __FIReference_1_UINT32** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_SceneMode(
                        __FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Flashed(
                        __FIReference_1_boolean** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_FlashPowerPercent(
                        __FIReference_1_float** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_WhiteBalance(
                        __FIReference_1_UINT32** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ZoomFactor(
                        __FIReference_1_float** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICapturedFrameControlValues = _uuidof(ICapturedFrameControlValues);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ICapturedFrameControlValues2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CapturedFrameControlValues
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICapturedFrameControlValues2[] = L"Windows.Media.Capture.ICapturedFrameControlValues2";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("500b2b88-06d2-4aa7-a7db-d37af73321d8")
                ICapturedFrameControlValues2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_FocusState(
                        __FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsoDigitalGain(
                        __FIReference_1_double** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_IsoAnalogGain(
                        __FIReference_1_double** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_SensorFrameRate(
                        ABI::Windows::Media::MediaProperties::IMediaRatio** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_WhiteBalanceGain(
                        __FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICapturedFrameControlValues2 = _uuidof(ICapturedFrameControlValues2);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ICapturedFrameWithSoftwareBitmap
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CapturedFrame
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICapturedFrameWithSoftwareBitmap[] = L"Windows.Media.Capture.ICapturedFrameWithSoftwareBitmap";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("b58e8b6e-8503-49b5-9e86-897d26a3ff3d")
                ICapturedFrameWithSoftwareBitmap : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_SoftwareBitmap(
                        ABI::Windows::Graphics::Imaging::ISoftwareBitmap** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICapturedFrameWithSoftwareBitmap = _uuidof(ICapturedFrameWithSoftwareBitmap);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ICapturedPhoto
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CapturedPhoto
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICapturedPhoto[] = L"Windows.Media.Capture.ICapturedPhoto";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("b0ce7e5a-cfcc-4d6c-8ad1-0869208aca16")
                ICapturedPhoto : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Frame(
                        ABI::Windows::Media::Capture::ICapturedFrame** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Thumbnail(
                        ABI::Windows::Media::Capture::ICapturedFrame** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ICapturedPhoto = _uuidof(ICapturedPhoto);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IGameBarServices
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.GameBarServices
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IGameBarServices[] = L"Windows.Media.Capture.IGameBarServices";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("2dbead57-50a6-499e-8c6c-d330a7311796")
                IGameBarServices : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_TargetCapturePolicy(
                        ABI::Windows::Media::Capture::GameBarTargetCapturePolicy* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE EnableCapture(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE DisableCapture(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TargetInfo(
                        ABI::Windows::Media::Capture::IGameBarServicesTargetInfo** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_SessionId(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AppBroadcastServices(
                        ABI::Windows::Media::Capture::IAppBroadcastServices** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AppCaptureServices(
                        ABI::Windows::Media::Capture::IAppCaptureServices** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_CommandReceived(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs* value,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_CommandReceived(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IGameBarServices = _uuidof(IGameBarServices);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIGameBarServices;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IGameBarServicesCommandEventArgs
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.GameBarServicesCommandEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IGameBarServicesCommandEventArgs[] = L"Windows.Media.Capture.IGameBarServicesCommandEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("a74226b2-f176-4fcf-8fbb-cf698b2eb8e0")
                IGameBarServicesCommandEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Command(
                        ABI::Windows::Media::Capture::GameBarCommand* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Origin(
                        ABI::Windows::Media::Capture::GameBarCommandOrigin* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IGameBarServicesCommandEventArgs = _uuidof(IGameBarServicesCommandEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IGameBarServicesManager
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.GameBarServicesManager
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IGameBarServicesManager[] = L"Windows.Media.Capture.IGameBarServicesManager";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("3a4b9cfa-7f8b-4c60-9dbb-0bcd262dffc6")
                IGameBarServicesManager : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE add_GameBarServicesCreated(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs* value,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_GameBarServicesCreated(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IGameBarServicesManager = _uuidof(IGameBarServicesManager);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IGameBarServicesManagerGameBarServicesCreatedEventArgs
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.GameBarServicesManagerGameBarServicesCreatedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IGameBarServicesManagerGameBarServicesCreatedEventArgs[] = L"Windows.Media.Capture.IGameBarServicesManagerGameBarServicesCreatedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("ededbd9c-143e-49a3-a5ea-0b1995c8d46e")
                IGameBarServicesManagerGameBarServicesCreatedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_GameBarServices(
                        ABI::Windows::Media::Capture::IGameBarServices** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IGameBarServicesManagerGameBarServicesCreatedEventArgs = _uuidof(IGameBarServicesManagerGameBarServicesCreatedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IGameBarServicesManagerStatics
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.GameBarServicesManager
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IGameBarServicesManagerStatics[] = L"Windows.Media.Capture.IGameBarServicesManagerStatics";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("34c1b616-ff25-4792-98f2-d3753f15ac13")
                IGameBarServicesManagerStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE GetDefault(
                        ABI::Windows::Media::Capture::IGameBarServicesManager** ppInstance
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IGameBarServicesManagerStatics = _uuidof(IGameBarServicesManagerStatics);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IGameBarServicesTargetInfo
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.GameBarServicesTargetInfo
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IGameBarServicesTargetInfo[] = L"Windows.Media.Capture.IGameBarServicesTargetInfo";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("b4202f92-1611-4e05-b6ef-dfd737ae33b0")
                IGameBarServicesTargetInfo : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_DisplayName(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AppId(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_TitleId(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_DisplayMode(
                        ABI::Windows::Media::Capture::GameBarServicesDisplayMode* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IGameBarServicesTargetInfo = _uuidof(IGameBarServicesTargetInfo);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ILowLagMediaRecording
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.LowLagMediaRecording
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ILowLagMediaRecording[] = L"Windows.Media.Capture.ILowLagMediaRecording";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("41c8baf7-ff3f-49f0-a477-f195e3ce5108")
                ILowLagMediaRecording : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE StartAsync(
                        ABI::Windows::Foundation::IAsyncAction** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StopAsync(
                        ABI::Windows::Foundation::IAsyncAction** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE FinishAsync(
                        ABI::Windows::Foundation::IAsyncAction** operation
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ILowLagMediaRecording = _uuidof(ILowLagMediaRecording);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ILowLagMediaRecording2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.LowLagMediaRecording
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ILowLagMediaRecording2[] = L"Windows.Media.Capture.ILowLagMediaRecording2";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("6369c758-5644-41e2-97af-8ef56a25e225")
                ILowLagMediaRecording2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE PauseAsync(
                        ABI::Windows::Media::Devices::MediaCapturePauseBehavior behavior,
                        ABI::Windows::Foundation::IAsyncAction** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ResumeAsync(
                        ABI::Windows::Foundation::IAsyncAction** operation
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ILowLagMediaRecording2 = _uuidof(ILowLagMediaRecording2);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ILowLagMediaRecording3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.LowLagMediaRecording
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ILowLagMediaRecording3[] = L"Windows.Media.Capture.ILowLagMediaRecording3";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("5c33ab12-48f7-47da-b41e-90880a5fe0ec")
                ILowLagMediaRecording3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE PauseWithResultAsync(
                        ABI::Windows::Media::Devices::MediaCapturePauseBehavior behavior,
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StopWithResultAsync(
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult** operation
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ILowLagMediaRecording3 = _uuidof(ILowLagMediaRecording3);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.Media.Capture.ILowLagPhotoCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.LowLagPhotoCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ILowLagPhotoCapture[] = L"Windows.Media.Capture.ILowLagPhotoCapture";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("a37251b7-6b44-473d-8f24-f703d6c0ec44")
                ILowLagPhotoCapture : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CaptureAsync(
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE FinishAsync(
                        ABI::Windows::Foundation::IAsyncAction** operation
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ILowLagPhotoCapture = _uuidof(ILowLagPhotoCapture);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ILowLagPhotoSequenceCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.LowLagPhotoSequenceCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ILowLagPhotoSequenceCapture[] = L"Windows.Media.Capture.ILowLagPhotoSequenceCapture";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("7cc346bb-b9a9-4c91-8ffa-287e9c668669")
                ILowLagPhotoSequenceCapture : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE StartAsync(
                        ABI::Windows::Foundation::IAsyncAction** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StopAsync(
                        ABI::Windows::Foundation::IAsyncAction** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE FinishAsync(
                        ABI::Windows::Foundation::IAsyncAction** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_PhotoCaptured(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_PhotoCaptured(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_ILowLagPhotoSequenceCapture = _uuidof(ILowLagPhotoSequenceCapture);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture[] = L"Windows.Media.Capture.IMediaCapture";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("c61afbb4-fb10-4a34-ac18-ca80d9c8e7ee")
                IMediaCapture : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE InitializeAsync(
                        ABI::Windows::Foundation::IAsyncAction** asyncInfo
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE InitializeWithSettingsAsync(
                        ABI::Windows::Media::Capture::IMediaCaptureInitializationSettings* mediaCaptureInitializationSettings,
                        ABI::Windows::Foundation::IAsyncAction** asyncInfo
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StartRecordToStorageFileAsync(
                        ABI::Windows::Media::MediaProperties::IMediaEncodingProfile* encodingProfile,
                        ABI::Windows::Storage::IStorageFile* file,
                        ABI::Windows::Foundation::IAsyncAction** asyncInfo
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StartRecordToStreamAsync(
                        ABI::Windows::Media::MediaProperties::IMediaEncodingProfile* encodingProfile,
                        ABI::Windows::Storage::Streams::IRandomAccessStream* stream,
                        ABI::Windows::Foundation::IAsyncAction** asyncInfo
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StartRecordToCustomSinkAsync(
                        ABI::Windows::Media::MediaProperties::IMediaEncodingProfile* encodingProfile,
                        ABI::Windows::Media::IMediaExtension* customMediaSink,
                        ABI::Windows::Foundation::IAsyncAction** asyncInfo
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StartRecordToCustomSinkIdAsync(
                        ABI::Windows::Media::MediaProperties::IMediaEncodingProfile* encodingProfile,
                        HSTRING customSinkActivationId,
                        ABI::Windows::Foundation::Collections::IPropertySet* customSinkSettings,
                        ABI::Windows::Foundation::IAsyncAction** asyncInfo
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StopRecordAsync(
                        ABI::Windows::Foundation::IAsyncAction** asyncInfo
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CapturePhotoToStorageFileAsync(
                        ABI::Windows::Media::MediaProperties::IImageEncodingProperties* type,
                        ABI::Windows::Storage::IStorageFile* file,
                        ABI::Windows::Foundation::IAsyncAction** asyncInfo
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CapturePhotoToStreamAsync(
                        ABI::Windows::Media::MediaProperties::IImageEncodingProperties* type,
                        ABI::Windows::Storage::Streams::IRandomAccessStream* stream,
                        ABI::Windows::Foundation::IAsyncAction** asyncInfo
                        ) = 0;
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                    DEPRECATED("AddEffectAsync might not be available in future versions of Windows. Starting with Windows Threshold, use AddAudioEffectAsync and AddVideoEffectAsync instead")
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                    virtual HRESULT STDMETHODCALLTYPE AddEffectAsync(
                        ABI::Windows::Media::Capture::MediaStreamType mediaStreamType,
                        HSTRING effectActivationID,
                        ABI::Windows::Foundation::Collections::IPropertySet* effectSettings,
                        ABI::Windows::Foundation::IAsyncAction** asyncInfo
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ClearEffectsAsync(
                        ABI::Windows::Media::Capture::MediaStreamType mediaStreamType,
                        ABI::Windows::Foundation::IAsyncAction** asyncInfo
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetEncoderProperty(
                        ABI::Windows::Media::Capture::MediaStreamType mediaStreamType,
                        GUID propertyId,
                        IInspectable* propertyValue
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetEncoderProperty(
                        ABI::Windows::Media::Capture::MediaStreamType mediaStreamType,
                        GUID propertyId,
                        IInspectable** propertyValue
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_Failed(
                        ABI::Windows::Media::Capture::IMediaCaptureFailedEventHandler* errorEventHandler,
                        EventRegistrationToken* eventCookie
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_Failed(
                        EventRegistrationToken eventCookie
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_RecordLimitationExceeded(
                        ABI::Windows::Media::Capture::IRecordLimitationExceededEventHandler* recordLimitationExceededEventHandler,
                        EventRegistrationToken* eventCookie
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_RecordLimitationExceeded(
                        EventRegistrationToken eventCookie
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MediaCaptureSettings(
                        ABI::Windows::Media::Capture::IMediaCaptureSettings** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AudioDeviceController(
                        ABI::Windows::Media::Devices::IAudioDeviceController** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoDeviceController(
                        ABI::Windows::Media::Devices::IVideoDeviceController** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetPreviewMirroring(
                        boolean value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetPreviewMirroring(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetPreviewRotation(
                        ABI::Windows::Media::Capture::VideoRotation value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetPreviewRotation(
                        ABI::Windows::Media::Capture::VideoRotation* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetRecordRotation(
                        ABI::Windows::Media::Capture::VideoRotation value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetRecordRotation(
                        ABI::Windows::Media::Capture::VideoRotation* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCapture = _uuidof(IMediaCapture);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCapture2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture2[] = L"Windows.Media.Capture.IMediaCapture2";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("9cc68260-7da1-4043-b652-21b8878daff9")
                IMediaCapture2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE PrepareLowLagRecordToStorageFileAsync(
                        ABI::Windows::Media::MediaProperties::IMediaEncodingProfile* encodingProfile,
                        ABI::Windows::Storage::IStorageFile* file,
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE PrepareLowLagRecordToStreamAsync(
                        ABI::Windows::Media::MediaProperties::IMediaEncodingProfile* encodingProfile,
                        ABI::Windows::Storage::Streams::IRandomAccessStream* stream,
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE PrepareLowLagRecordToCustomSinkAsync(
                        ABI::Windows::Media::MediaProperties::IMediaEncodingProfile* encodingProfile,
                        ABI::Windows::Media::IMediaExtension* customMediaSink,
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE PrepareLowLagRecordToCustomSinkIdAsync(
                        ABI::Windows::Media::MediaProperties::IMediaEncodingProfile* encodingProfile,
                        HSTRING customSinkActivationId,
                        ABI::Windows::Foundation::Collections::IPropertySet* customSinkSettings,
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE PrepareLowLagPhotoCaptureAsync(
                        ABI::Windows::Media::MediaProperties::IImageEncodingProperties* type,
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE PrepareLowLagPhotoSequenceCaptureAsync(
                        ABI::Windows::Media::MediaProperties::IImageEncodingProperties* type,
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE SetEncodingPropertiesAsync(
                        ABI::Windows::Media::Capture::MediaStreamType mediaStreamType,
                        ABI::Windows::Media::MediaProperties::IMediaEncodingProperties* mediaEncodingProperties,
                        __FIMap_2_GUID_IInspectable* encoderProperties,
                        ABI::Windows::Foundation::IAsyncAction** operation
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCapture2 = _uuidof(IMediaCapture2);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCapture3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture3[] = L"Windows.Media.Capture.IMediaCapture3";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("d4136f30-1564-466e-bc0a-af94e02ab016")
                IMediaCapture3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE PrepareVariablePhotoSequenceCaptureAsync(
                        ABI::Windows::Media::MediaProperties::IImageEncodingProperties* type,
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_FocusChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_FocusChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_PhotoConfirmationCaptured(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_PhotoConfirmationCaptured(
                        EventRegistrationToken token
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCapture3 = _uuidof(IMediaCapture3);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCapture4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture4[] = L"Windows.Media.Capture.IMediaCapture4";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("bacd6fd6-fb08-4947-aea2-ce14eff0ce13")
                IMediaCapture4 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE AddAudioEffectAsync(
                        ABI::Windows::Media::Effects::IAudioEffectDefinition* definition,
                        __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension** op
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE AddVideoEffectAsync(
                        ABI::Windows::Media::Effects::IVideoEffectDefinition* definition,
                        ABI::Windows::Media::Capture::MediaStreamType mediaStreamType,
                        __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension** op
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE PauseRecordAsync(
                        ABI::Windows::Media::Devices::MediaCapturePauseBehavior behavior,
                        ABI::Windows::Foundation::IAsyncAction** asyncInfo
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE ResumeRecordAsync(
                        ABI::Windows::Foundation::IAsyncAction** asyncInfo
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_CameraStreamStateChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_CameraStreamStateChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CameraStreamState(
                        ABI::Windows::Media::Devices::CameraStreamState* streamState
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetPreviewFrameAsync(
                        __FIAsyncOperation_1_Windows__CMedia__CVideoFrame** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetPreviewFrameCopyAsync(
                        ABI::Windows::Media::IVideoFrame* destination,
                        __FIAsyncOperation_1_Windows__CMedia__CVideoFrame** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_ThermalStatusChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_ThermalStatusChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ThermalStatus(
                        ABI::Windows::Media::Capture::MediaCaptureThermalStatus* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE PrepareAdvancedPhotoCaptureAsync(
                        ABI::Windows::Media::MediaProperties::IImageEncodingProperties* encodingProperties,
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture** operation
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCapture4 = _uuidof(IMediaCapture4);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCapture5
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture5[] = L"Windows.Media.Capture.IMediaCapture5";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("da787c22-3a9b-4720-a71e-97900a316e5a")
                IMediaCapture5 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE RemoveEffectAsync(
                        ABI::Windows::Media::IMediaExtension* effect,
                        ABI::Windows::Foundation::IAsyncAction** asyncInfo
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE PauseRecordWithResultAsync(
                        ABI::Windows::Media::Devices::MediaCapturePauseBehavior behavior,
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StopRecordWithResultAsync(
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult** operation
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_FrameSources(
                        __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateFrameReaderAsync(
                        ABI::Windows::Media::Capture::Frames::IMediaFrameSource* inputSource,
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateFrameReaderWithSubtypeAsync(
                        ABI::Windows::Media::Capture::Frames::IMediaFrameSource* inputSource,
                        HSTRING outputSubtype,
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateFrameReaderWithSubtypeAndSizeAsync(
                        ABI::Windows::Media::Capture::Frames::IMediaFrameSource* inputSource,
                        HSTRING outputSubtype,
                        ABI::Windows::Graphics::Imaging::BitmapSize outputSize,
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCapture5 = _uuidof(IMediaCapture5);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.Media.Capture.IMediaCapture6
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture6[] = L"Windows.Media.Capture.IMediaCapture6";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("228948bd-4b20-4bb1-9fd6-a583212a1012")
                IMediaCapture6 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE add_CaptureDeviceExclusiveControlStatusChanged(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_CaptureDeviceExclusiveControlStatusChanged(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE CreateMultiSourceFrameReaderAsync(
                        __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* inputSources,
                        __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCapture6 = _uuidof(IMediaCapture6);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IMediaCapture7
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 10.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture7[] = L"Windows.Media.Capture.IMediaCapture7";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("9169f102-8888-541a-95bc-24e4d462542a")
                IMediaCapture7 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE CreateRelativePanelWatcher(
                        ABI::Windows::Media::Capture::StreamingCaptureMode captureMode,
                        ABI::Windows::UI::WindowManagement::IDisplayRegion* displayRegion,
                        ABI::Windows::Media::Capture::IMediaCaptureRelativePanelWatcher** result
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCapture7 = _uuidof(IMediaCapture7);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureDeviceExclusiveControlStatusChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureDeviceExclusiveControlStatusChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureDeviceExclusiveControlStatusChangedEventArgs[] = L"Windows.Media.Capture.IMediaCaptureDeviceExclusiveControlStatusChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("9d2f920d-a588-43c6-89d6-5ad322af006a")
                IMediaCaptureDeviceExclusiveControlStatusChangedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_DeviceId(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Status(
                        ABI::Windows::Media::Capture::MediaCaptureDeviceExclusiveControlStatus* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureDeviceExclusiveControlStatusChangedEventArgs = _uuidof(IMediaCaptureDeviceExclusiveControlStatusChangedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureFailedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureFailedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureFailedEventArgs[] = L"Windows.Media.Capture.IMediaCaptureFailedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("80fde3f4-54c4-42c0-8d19-cea1a87ca18b")
                IMediaCaptureFailedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Message(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Code(
                        UINT32* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureFailedEventArgs = _uuidof(IMediaCaptureFailedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureFocusChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureFocusChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureFocusChangedEventArgs[] = L"Windows.Media.Capture.IMediaCaptureFocusChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("81e1bc7f-2277-493e-abee-d3f44ff98c04")
                IMediaCaptureFocusChangedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_FocusState(
                        ABI::Windows::Media::Devices::MediaCaptureFocusState* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureFocusChangedEventArgs = _uuidof(IMediaCaptureFocusChangedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureInitializationSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureInitializationSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("9782ba70-ea65-4900-9356-8ca887726884")
                IMediaCaptureInitializationSettings : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE put_AudioDeviceId(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AudioDeviceId(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_VideoDeviceId(
                        HSTRING value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoDeviceId(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_StreamingCaptureMode(
                        ABI::Windows::Media::Capture::StreamingCaptureMode value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StreamingCaptureMode(
                        ABI::Windows::Media::Capture::StreamingCaptureMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_PhotoCaptureSource(
                        ABI::Windows::Media::Capture::PhotoCaptureSource value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PhotoCaptureSource(
                        ABI::Windows::Media::Capture::PhotoCaptureSource* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureInitializationSettings = _uuidof(IMediaCaptureInitializationSettings);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureInitializationSettings2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureInitializationSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings2[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings2";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("404e0626-c9dc-43e9-aee4-e6bf1b57b44c")
                IMediaCaptureInitializationSettings2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE put_MediaCategory(
                        ABI::Windows::Media::Capture::MediaCategory value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MediaCategory(
                        ABI::Windows::Media::Capture::MediaCategory* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AudioProcessing(
                        ABI::Windows::Media::AudioProcessing value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AudioProcessing(
                        ABI::Windows::Media::AudioProcessing* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureInitializationSettings2 = _uuidof(IMediaCaptureInitializationSettings2);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureInitializationSettings3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureInitializationSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings3[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings3";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("4160519d-be48-4730-8104-0cf6e9e97948")
                IMediaCaptureInitializationSettings3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE put_AudioSource(
                        ABI::Windows::Media::Core::IMediaSource* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AudioSource(
                        ABI::Windows::Media::Core::IMediaSource** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_VideoSource(
                        ABI::Windows::Media::Core::IMediaSource* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoSource(
                        ABI::Windows::Media::Core::IMediaSource** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureInitializationSettings3 = _uuidof(IMediaCaptureInitializationSettings3);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureInitializationSettings4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureInitializationSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings4[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings4";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("f502a537-4cb7-4d28-95ed-4f9f012e0518")
                IMediaCaptureInitializationSettings4 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_VideoProfile(
                        ABI::Windows::Media::Capture::IMediaCaptureVideoProfile** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_VideoProfile(
                        ABI::Windows::Media::Capture::IMediaCaptureVideoProfile* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PreviewMediaDescription(
                        ABI::Windows::Media::Capture::IMediaCaptureVideoProfileMediaDescription** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_PreviewMediaDescription(
                        ABI::Windows::Media::Capture::IMediaCaptureVideoProfileMediaDescription* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RecordMediaDescription(
                        ABI::Windows::Media::Capture::IMediaCaptureVideoProfileMediaDescription** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_RecordMediaDescription(
                        ABI::Windows::Media::Capture::IMediaCaptureVideoProfileMediaDescription* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PhotoMediaDescription(
                        ABI::Windows::Media::Capture::IMediaCaptureVideoProfileMediaDescription** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_PhotoMediaDescription(
                        ABI::Windows::Media::Capture::IMediaCaptureVideoProfileMediaDescription* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureInitializationSettings4 = _uuidof(IMediaCaptureInitializationSettings4);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureInitializationSettings5
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureInitializationSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings5[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings5";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("d5a2e3b8-2626-4e94-b7b3-5308a0f64b1a")
                IMediaCaptureInitializationSettings5 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_SourceGroup(
                        ABI::Windows::Media::Capture::Frames::IMediaFrameSourceGroup** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_SourceGroup(
                        ABI::Windows::Media::Capture::Frames::IMediaFrameSourceGroup* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_SharingMode(
                        ABI::Windows::Media::Capture::MediaCaptureSharingMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_SharingMode(
                        ABI::Windows::Media::Capture::MediaCaptureSharingMode value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MemoryPreference(
                        ABI::Windows::Media::Capture::MediaCaptureMemoryPreference* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_MemoryPreference(
                        ABI::Windows::Media::Capture::MediaCaptureMemoryPreference value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureInitializationSettings5 = _uuidof(IMediaCaptureInitializationSettings5);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureInitializationSettings6
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureInitializationSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings6[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings6";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("b2e26b47-3db1-4d33-ab63-0ffa09056585")
                IMediaCaptureInitializationSettings6 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AlwaysPlaySystemShutterSound(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_AlwaysPlaySystemShutterSound(
                        boolean value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureInitializationSettings6 = _uuidof(IMediaCaptureInitializationSettings6);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureInitializationSettings7
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 10.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureInitializationSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings7[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings7";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("41546967-f58a-5d82-9ef4-ed572fb5e34e")
                IMediaCaptureInitializationSettings7 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_DeviceUriPasswordCredential(
                        ABI::Windows::Security::Credentials::IPasswordCredential** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_DeviceUriPasswordCredential(
                        ABI::Windows::Security::Credentials::IPasswordCredential* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_DeviceUri(
                        ABI::Windows::Foundation::IUriRuntimeClass** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE put_DeviceUri(
                        ABI::Windows::Foundation::IUriRuntimeClass* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureInitializationSettings7 = _uuidof(IMediaCaptureInitializationSettings7);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

/*
 *
 * Interface Windows.Media.Capture.IMediaCapturePauseResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapturePauseResult
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapturePauseResult[] = L"Windows.Media.Capture.IMediaCapturePauseResult";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("aec47ca3-4477-4b04-a06f-2c1c5182fe9d")
                IMediaCapturePauseResult : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_LastFrame(
                        ABI::Windows::Media::IVideoFrame** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RecordDuration(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCapturePauseResult = _uuidof(IMediaCapturePauseResult);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureRelativePanelWatcher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 10.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureRelativePanelWatcher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureRelativePanelWatcher[] = L"Windows.Media.Capture.IMediaCaptureRelativePanelWatcher";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("7d896566-04be-5b89-b30e-bd34a9f12db0")
                IMediaCaptureRelativePanelWatcher : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_RelativePanel(
                        ABI::Windows::Devices::Enumeration::Panel* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE add_Changed(
                        __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable* handler,
                        EventRegistrationToken* token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE remove_Changed(
                        EventRegistrationToken token
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Start(void) = 0;
                    virtual HRESULT STDMETHODCALLTYPE Stop(void) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureRelativePanelWatcher = _uuidof(IMediaCaptureRelativePanelWatcher);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureSettings[] = L"Windows.Media.Capture.IMediaCaptureSettings";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("1d83aafe-6d45-4477-8dc4-ac5bc01c4091")
                IMediaCaptureSettings : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_AudioDeviceId(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoDeviceId(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_StreamingCaptureMode(
                        ABI::Windows::Media::Capture::StreamingCaptureMode* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PhotoCaptureSource(
                        ABI::Windows::Media::Capture::PhotoCaptureSource* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoDeviceCharacteristic(
                        ABI::Windows::Media::Capture::VideoDeviceCharacteristic* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureSettings = _uuidof(IMediaCaptureSettings);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureSettings2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureSettings2[] = L"Windows.Media.Capture.IMediaCaptureSettings2";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("6f9e7cfb-fa9f-4b13-9cbe-5ab94f1f3493")
                IMediaCaptureSettings2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_ConcurrentRecordAndPhotoSupported(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_ConcurrentRecordAndPhotoSequenceSupported(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CameraSoundRequiredForRegion(
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Horizontal35mmEquivalentFocalLength(
                        __FIReference_1_UINT32** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_PitchOffsetDegrees(
                        __FIReference_1_int** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Vertical35mmEquivalentFocalLength(
                        __FIReference_1_UINT32** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_MediaCategory(
                        ABI::Windows::Media::Capture::MediaCategory* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_AudioProcessing(
                        ABI::Windows::Media::AudioProcessing* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureSettings2 = _uuidof(IMediaCaptureSettings2);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureSettings3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureSettings3[] = L"Windows.Media.Capture.IMediaCaptureSettings3";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("303c67c2-8058-4b1b-b877-8c2ef3528440")
                IMediaCaptureSettings3 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Direct3D11Device(
                        ABI::Windows::Graphics::DirectX::Direct3D11::IDirect3DDevice** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureSettings3 = _uuidof(IMediaCaptureSettings3);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureStatics[] = L"Windows.Media.Capture.IMediaCaptureStatics";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("acef81ff-99ed-4645-965e-1925cfc63834")
                IMediaCaptureStatics : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE IsVideoProfileSupported(
                        HSTRING videoDeviceId,
                        boolean* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE FindAllVideoProfiles(
                        HSTRING videoDeviceId,
                        __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE FindConcurrentProfiles(
                        HSTRING videoDeviceId,
                        __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE FindKnownVideoProfiles(
                        HSTRING videoDeviceId,
                        ABI::Windows::Media::Capture::KnownVideoProfile name,
                        __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureStatics = _uuidof(IMediaCaptureStatics);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureStopResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureStopResult
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureStopResult[] = L"Windows.Media.Capture.IMediaCaptureStopResult";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("f9db6a2a-a092-4ad1-97d4-f201f9d082db")
                IMediaCaptureStopResult : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_LastFrame(
                        ABI::Windows::Media::IVideoFrame** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_RecordDuration(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureStopResult = _uuidof(IMediaCaptureStopResult);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureVideoPreview
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureVideoPreview[] = L"Windows.Media.Capture.IMediaCaptureVideoPreview";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("27727073-549e-447f-a20a-4f03c479d8c0")
                IMediaCaptureVideoPreview : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE StartPreviewAsync(
                        ABI::Windows::Foundation::IAsyncAction** asyncInfo
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StartPreviewToCustomSinkAsync(
                        ABI::Windows::Media::MediaProperties::IMediaEncodingProfile* encodingProfile,
                        ABI::Windows::Media::IMediaExtension* customMediaSink,
                        ABI::Windows::Foundation::IAsyncAction** asyncInfo
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StartPreviewToCustomSinkIdAsync(
                        ABI::Windows::Media::MediaProperties::IMediaEncodingProfile* encodingProfile,
                        HSTRING customSinkActivationId,
                        ABI::Windows::Foundation::Collections::IPropertySet* customSinkSettings,
                        ABI::Windows::Foundation::IAsyncAction** asyncInfo
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE StopPreviewAsync(
                        ABI::Windows::Foundation::IAsyncAction** asyncInfo
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureVideoPreview = _uuidof(IMediaCaptureVideoPreview);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureVideoProfile
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureVideoProfile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureVideoProfile[] = L"Windows.Media.Capture.IMediaCaptureVideoProfile";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("21a073bf-a3ee-4ecf-9ef6-50b0bc4e1305")
                IMediaCaptureVideoProfile : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Id(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_VideoDeviceId(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_SupportedPreviewMediaDescription(
                        __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_SupportedRecordMediaDescription(
                        __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_SupportedPhotoMediaDescription(
                        __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE GetConcurrency(
                        __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureVideoProfile = _uuidof(IMediaCaptureVideoProfile);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureVideoProfile2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureVideoProfile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureVideoProfile2[] = L"Windows.Media.Capture.IMediaCaptureVideoProfile2";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("97ddc95f-94ce-468f-9316-fc5bc2638f6b")
                IMediaCaptureVideoProfile2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_FrameSourceInfos(
                        __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Properties(
                        __FIMapView_2_GUID_IInspectable** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureVideoProfile2 = _uuidof(IMediaCaptureVideoProfile2);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureVideoProfileMediaDescription
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureVideoProfileMediaDescription
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureVideoProfileMediaDescription[] = L"Windows.Media.Capture.IMediaCaptureVideoProfileMediaDescription";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("8012afef-b691-49ff-83f2-c1e76eaaea1b")
                IMediaCaptureVideoProfileMediaDescription : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Width(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Height(
                        UINT32* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_FrameRate(
                        DOUBLE* value
                        ) = 0;
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
                    DEPRECATED("IsVariablePhotoSequenceSupported might not be available in the next major update following Windows 10, version 1709")
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
                    virtual HRESULT STDMETHODCALLTYPE get_IsVariablePhotoSequenceSupported(
                        boolean* value
                        ) = 0;
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
                    DEPRECATED("IsHdrVideoSupported might not be available in the next major update following Windows 10, version 1709")
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
                    virtual HRESULT STDMETHODCALLTYPE get_IsHdrVideoSupported(
                        boolean* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureVideoProfileMediaDescription = _uuidof(IMediaCaptureVideoProfileMediaDescription);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureVideoProfileMediaDescription2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureVideoProfileMediaDescription
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureVideoProfileMediaDescription2[] = L"Windows.Media.Capture.IMediaCaptureVideoProfileMediaDescription2";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("c6a6ef13-322d-413a-b85a-68a88e02f4e9")
                IMediaCaptureVideoProfileMediaDescription2 : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Subtype(
                        HSTRING* value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Properties(
                        __FIMapView_2_GUID_IInspectable** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IMediaCaptureVideoProfileMediaDescription2 = _uuidof(IMediaCaptureVideoProfileMediaDescription2);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.Media.Capture.IOptionalReferencePhotoCapturedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.OptionalReferencePhotoCapturedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IOptionalReferencePhotoCapturedEventArgs[] = L"Windows.Media.Capture.IOptionalReferencePhotoCapturedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("470f88b3-1e6d-4051-9c8b-f1d85af047b7")
                IOptionalReferencePhotoCapturedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Frame(
                        ABI::Windows::Media::Capture::ICapturedFrame** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Context(
                        IInspectable** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IOptionalReferencePhotoCapturedEventArgs = _uuidof(IOptionalReferencePhotoCapturedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IPhotoCapturedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.PhotoCapturedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IPhotoCapturedEventArgs[] = L"Windows.Media.Capture.IPhotoCapturedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("373bfbc1-984e-4ff0-bf85-1c00aabc5a45")
                IPhotoCapturedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Frame(
                        ABI::Windows::Media::Capture::ICapturedFrame** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_Thumbnail(
                        ABI::Windows::Media::Capture::ICapturedFrame** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CaptureTimeOffset(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IPhotoCapturedEventArgs = _uuidof(IPhotoCapturedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IPhotoConfirmationCapturedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.PhotoConfirmationCapturedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IPhotoConfirmationCapturedEventArgs[] = L"Windows.Media.Capture.IPhotoConfirmationCapturedEventArgs";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("ab473672-c28a-4827-8f8d-3636d3beb51e")
                IPhotoConfirmationCapturedEventArgs : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_Frame(
                        ABI::Windows::Media::Capture::ICapturedFrame** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_CaptureTimeOffset(
                        ABI::Windows::Foundation::TimeSpan* value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IPhotoConfirmationCapturedEventArgs = _uuidof(IPhotoConfirmationCapturedEventArgs);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IVideoStreamConfiguration
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.VideoStreamConfiguration
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IVideoStreamConfiguration[] = L"Windows.Media.Capture.IVideoStreamConfiguration";
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Capture {
                MIDL_INTERFACE("d8770a6f-4390-4b5e-ad3e-0f8af0963490")
                IVideoStreamConfiguration : public IInspectable
                {
                public:
                    virtual HRESULT STDMETHODCALLTYPE get_InputProperties(
                        ABI::Windows::Media::MediaProperties::IVideoEncodingProperties** value
                        ) = 0;
                    virtual HRESULT STDMETHODCALLTYPE get_OutputProperties(
                        ABI::Windows::Media::MediaProperties::IVideoEncodingProperties** value
                        ) = 0;
                };

                extern MIDL_CONST_ID IID& IID_IVideoStreamConfiguration = _uuidof(IVideoStreamConfiguration);
            } /* Capture */
        } /* Media */
    } /* Windows */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AdvancedCapturedPhoto
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAdvancedCapturedPhoto ** Default Interface **
 *    Windows.Media.Capture.IAdvancedCapturedPhoto2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AdvancedCapturedPhoto_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AdvancedCapturedPhoto_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AdvancedCapturedPhoto[] = L"Windows.Media.Capture.AdvancedCapturedPhoto";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AdvancedPhotoCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAdvancedPhotoCapture ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AdvancedPhotoCapture_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AdvancedPhotoCapture_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AdvancedPhotoCapture[] = L"Windows.Media.Capture.AdvancedPhotoCapture";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastBackgroundService
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastBackgroundService ** Default Interface **
 *    Windows.Media.Capture.IAppBroadcastBackgroundService2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastBackgroundService_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastBackgroundService_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastBackgroundService[] = L"Windows.Media.Capture.AppBroadcastBackgroundService";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastBackgroundServiceSignInInfo
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastBackgroundServiceSignInInfo ** Default Interface **
 *    Windows.Media.Capture.IAppBroadcastBackgroundServiceSignInInfo2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastBackgroundServiceSignInInfo_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastBackgroundServiceSignInInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastBackgroundServiceSignInInfo[] = L"Windows.Media.Capture.AppBroadcastBackgroundServiceSignInInfo";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastBackgroundServiceStreamInfo
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastBackgroundServiceStreamInfo ** Default Interface **
 *    Windows.Media.Capture.IAppBroadcastBackgroundServiceStreamInfo2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastBackgroundServiceStreamInfo_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastBackgroundServiceStreamInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastBackgroundServiceStreamInfo[] = L"Windows.Media.Capture.AppBroadcastBackgroundServiceStreamInfo";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastCameraCaptureStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastCameraCaptureStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastCameraCaptureStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastCameraCaptureStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastCameraCaptureStateChangedEventArgs[] = L"Windows.Media.Capture.AppBroadcastCameraCaptureStateChangedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastGlobalSettings
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastGlobalSettings ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastGlobalSettings_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastGlobalSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastGlobalSettings[] = L"Windows.Media.Capture.AppBroadcastGlobalSettings";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastHeartbeatRequestedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastHeartbeatRequestedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastHeartbeatRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastHeartbeatRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastHeartbeatRequestedEventArgs[] = L"Windows.Media.Capture.AppBroadcastHeartbeatRequestedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastManager
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Media.Capture.IAppBroadcastManagerStatics interface starting with version 1.0 of the Windows.Media.Capture.AppBroadcastContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastManager_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastManager[] = L"Windows.Media.Capture.AppBroadcastManager";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastMicrophoneCaptureStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastMicrophoneCaptureStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastMicrophoneCaptureStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastMicrophoneCaptureStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastMicrophoneCaptureStateChangedEventArgs[] = L"Windows.Media.Capture.AppBroadcastMicrophoneCaptureStateChangedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastPlugIn
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastPlugIn ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPlugIn_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPlugIn_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastPlugIn[] = L"Windows.Media.Capture.AppBroadcastPlugIn";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastPlugInManager
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Media.Capture.IAppBroadcastPlugInManagerStatics interface starting with version 1.0 of the Windows.Media.Capture.AppBroadcastContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastPlugInManager ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPlugInManager_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPlugInManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastPlugInManager[] = L"Windows.Media.Capture.AppBroadcastPlugInManager";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastPlugInStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastPlugInStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPlugInStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPlugInStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastPlugInStateChangedEventArgs[] = L"Windows.Media.Capture.AppBroadcastPlugInStateChangedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastPreview
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastPreview ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreview_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreview_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastPreview[] = L"Windows.Media.Capture.AppBroadcastPreview";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastPreviewStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastPreviewStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreviewStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreviewStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastPreviewStateChangedEventArgs[] = L"Windows.Media.Capture.AppBroadcastPreviewStateChangedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastPreviewStreamReader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastPreviewStreamReader ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreviewStreamReader_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreviewStreamReader_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastPreviewStreamReader[] = L"Windows.Media.Capture.AppBroadcastPreviewStreamReader";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastPreviewStreamVideoFrame
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastPreviewStreamVideoFrame ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreviewStreamVideoFrame_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreviewStreamVideoFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastPreviewStreamVideoFrame[] = L"Windows.Media.Capture.AppBroadcastPreviewStreamVideoFrame";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastPreviewStreamVideoHeader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastPreviewStreamVideoHeader ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreviewStreamVideoHeader_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreviewStreamVideoHeader_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastPreviewStreamVideoHeader[] = L"Windows.Media.Capture.AppBroadcastPreviewStreamVideoHeader";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastProviderSettings
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastProviderSettings ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastProviderSettings_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastProviderSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastProviderSettings[] = L"Windows.Media.Capture.AppBroadcastProviderSettings";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastServices
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastServices ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastServices_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastServices_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastServices[] = L"Windows.Media.Capture.AppBroadcastServices";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastSignInStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastSignInStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastSignInStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastSignInStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastSignInStateChangedEventArgs[] = L"Windows.Media.Capture.AppBroadcastSignInStateChangedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastState
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastState ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastState_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastState_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastState[] = L"Windows.Media.Capture.AppBroadcastState";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastStreamAudioFrame
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastStreamAudioFrame ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamAudioFrame_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamAudioFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastStreamAudioFrame[] = L"Windows.Media.Capture.AppBroadcastStreamAudioFrame";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastStreamAudioHeader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastStreamAudioHeader ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamAudioHeader_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamAudioHeader_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastStreamAudioHeader[] = L"Windows.Media.Capture.AppBroadcastStreamAudioHeader";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastStreamReader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastStreamReader ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamReader_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamReader_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastStreamReader[] = L"Windows.Media.Capture.AppBroadcastStreamReader";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastStreamStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastStreamStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastStreamStateChangedEventArgs[] = L"Windows.Media.Capture.AppBroadcastStreamStateChangedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastStreamVideoFrame
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastStreamVideoFrame ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamVideoFrame_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamVideoFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastStreamVideoFrame[] = L"Windows.Media.Capture.AppBroadcastStreamVideoFrame";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastStreamVideoHeader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastStreamVideoHeader ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamVideoHeader_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamVideoHeader_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastStreamVideoHeader[] = L"Windows.Media.Capture.AppBroadcastStreamVideoHeader";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastTriggerDetails
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastTriggerDetails ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastTriggerDetails_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastTriggerDetails_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastTriggerDetails[] = L"Windows.Media.Capture.AppBroadcastTriggerDetails";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastViewerCountChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastViewerCountChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastViewerCountChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastViewerCountChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastViewerCountChangedEventArgs[] = L"Windows.Media.Capture.AppBroadcastViewerCountChangedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Media.Capture.IAppCaptureStatics2 interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.Media.Capture.IAppCaptureStatics interface starting with version 2.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCapture ** Default Interface **
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCapture_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCapture_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCapture[] = L"Windows.Media.Capture.AppCapture";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.Media.Capture.AppCaptureAlternateShortcutKeys
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureAlternateShortcutKeys ** Default Interface **
 *    Windows.Media.Capture.IAppCaptureAlternateShortcutKeys2
 *    Windows.Media.Capture.IAppCaptureAlternateShortcutKeys3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureAlternateShortcutKeys_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureAlternateShortcutKeys_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureAlternateShortcutKeys[] = L"Windows.Media.Capture.AppCaptureAlternateShortcutKeys";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppCaptureDurationGeneratedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureDurationGeneratedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureDurationGeneratedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureDurationGeneratedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureDurationGeneratedEventArgs[] = L"Windows.Media.Capture.AppCaptureDurationGeneratedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.Media.Capture.AppCaptureFileGeneratedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureFileGeneratedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureFileGeneratedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureFileGeneratedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureFileGeneratedEventArgs[] = L"Windows.Media.Capture.AppCaptureFileGeneratedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.Media.Capture.AppCaptureManager
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Media.Capture.IAppCaptureManagerStatics interface starting with version 1.0 of the Windows.Media.Capture.AppCaptureContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureManager_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureManager[] = L"Windows.Media.Capture.AppCaptureManager";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppCaptureMetadataWriter
 *
 * Introduced to Windows.Media.Capture.AppCaptureMetadataContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Media.Capture.AppCaptureMetadataContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureMetadataWriter ** Default Interface **
 *    Windows.Foundation.IClosable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureMetadataWriter_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureMetadataWriter_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureMetadataWriter[] = L"Windows.Media.Capture.AppCaptureMetadataWriter";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppCaptureMicrophoneCaptureStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureMicrophoneCaptureStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureMicrophoneCaptureStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureMicrophoneCaptureStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureMicrophoneCaptureStateChangedEventArgs[] = L"Windows.Media.Capture.AppCaptureMicrophoneCaptureStateChangedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.Media.Capture.AppCaptureRecordOperation
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureRecordOperation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureRecordOperation_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureRecordOperation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureRecordOperation[] = L"Windows.Media.Capture.AppCaptureRecordOperation";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.Media.Capture.AppCaptureRecordingStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureRecordingStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureRecordingStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureRecordingStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureRecordingStateChangedEventArgs[] = L"Windows.Media.Capture.AppCaptureRecordingStateChangedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.Media.Capture.AppCaptureServices
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureServices ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureServices_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureServices_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureServices[] = L"Windows.Media.Capture.AppCaptureServices";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.Media.Capture.AppCaptureSettings
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureSettings ** Default Interface **
 *    Windows.Media.Capture.IAppCaptureSettings2
 *    Windows.Media.Capture.IAppCaptureSettings3
 *    Windows.Media.Capture.IAppCaptureSettings4
 *    Windows.Media.Capture.IAppCaptureSettings5
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureSettings_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureSettings[] = L"Windows.Media.Capture.AppCaptureSettings";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppCaptureState
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureState ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureState_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureState_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureState[] = L"Windows.Media.Capture.AppCaptureState";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.Media.Capture.CameraCaptureUI
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.ICameraCaptureUI ** Default Interface **
 *
 * Class Threading Model:  Single Threaded Apartment
 *
 * Class Marshaling Behavior:  None - Class cannot be marshaled
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_CameraCaptureUI_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_CameraCaptureUI_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_CameraCaptureUI[] = L"Windows.Media.Capture.CameraCaptureUI";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettings ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_CameraCaptureUIPhotoCaptureSettings_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_CameraCaptureUIPhotoCaptureSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_CameraCaptureUIPhotoCaptureSettings[] = L"Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettings ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_CameraCaptureUIVideoCaptureSettings_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_CameraCaptureUIVideoCaptureSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_CameraCaptureUIVideoCaptureSettings[] = L"Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.CameraOptionsUI
 *
 * Introduced to Windows.Media.Capture.CameraCaptureUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Media.Capture.ICameraOptionsUIStatics interface starting with version 1.0 of the Windows.Media.Capture.CameraCaptureUIContract API contract
 *
 * Class Threading Model:  Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_CAMERACAPTUREUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_CameraOptionsUI_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_CameraOptionsUI_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_CameraOptionsUI[] = L"Windows.Media.Capture.CameraOptionsUI";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_CAMERACAPTUREUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.CapturedFrame
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.ICapturedFrame ** Default Interface **
 *    Windows.Storage.Streams.IRandomAccessStreamWithContentType
 *    Windows.Storage.Streams.IContentTypeProvider
 *    Windows.Storage.Streams.IRandomAccessStream
 *    Windows.Storage.Streams.IOutputStream
 *    Windows.Foundation.IClosable
 *    Windows.Storage.Streams.IInputStream
 *    Windows.Media.Capture.ICapturedFrameWithSoftwareBitmap
 *    Windows.Media.Capture.ICapturedFrame2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_CapturedFrame_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_CapturedFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_CapturedFrame[] = L"Windows.Media.Capture.CapturedFrame";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.CapturedFrameControlValues
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.ICapturedFrameControlValues ** Default Interface **
 *    Windows.Media.Capture.ICapturedFrameControlValues2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_CapturedFrameControlValues_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_CapturedFrameControlValues_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_CapturedFrameControlValues[] = L"Windows.Media.Capture.CapturedFrameControlValues";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.CapturedPhoto
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.ICapturedPhoto ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_CapturedPhoto_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_CapturedPhoto_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_CapturedPhoto[] = L"Windows.Media.Capture.CapturedPhoto";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.GameBarServices
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IGameBarServices ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_GameBarServices_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_GameBarServices_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_GameBarServices[] = L"Windows.Media.Capture.GameBarServices";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.GameBarServicesCommandEventArgs
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IGameBarServicesCommandEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_GameBarServicesCommandEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_GameBarServicesCommandEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_GameBarServicesCommandEventArgs[] = L"Windows.Media.Capture.GameBarServicesCommandEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.GameBarServicesManager
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Media.Capture.IGameBarServicesManagerStatics interface starting with version 1.0 of the Windows.Media.Capture.GameBarContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IGameBarServicesManager ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_GameBarServicesManager_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_GameBarServicesManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_GameBarServicesManager[] = L"Windows.Media.Capture.GameBarServicesManager";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.GameBarServicesManagerGameBarServicesCreatedEventArgs
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IGameBarServicesManagerGameBarServicesCreatedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_GameBarServicesManagerGameBarServicesCreatedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_GameBarServicesManagerGameBarServicesCreatedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_GameBarServicesManagerGameBarServicesCreatedEventArgs[] = L"Windows.Media.Capture.GameBarServicesManagerGameBarServicesCreatedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.GameBarServicesTargetInfo
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IGameBarServicesTargetInfo ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_GameBarServicesTargetInfo_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_GameBarServicesTargetInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_GameBarServicesTargetInfo[] = L"Windows.Media.Capture.GameBarServicesTargetInfo";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.LowLagMediaRecording
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.ILowLagMediaRecording ** Default Interface **
 *    Windows.Media.Capture.ILowLagMediaRecording2
 *    Windows.Media.Capture.ILowLagMediaRecording3
 *
 * Class Threading Model:  Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_LowLagMediaRecording_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_LowLagMediaRecording_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_LowLagMediaRecording[] = L"Windows.Media.Capture.LowLagMediaRecording";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.LowLagPhotoCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.ILowLagPhotoCapture ** Default Interface **
 *
 * Class Threading Model:  Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_LowLagPhotoCapture_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_LowLagPhotoCapture_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_LowLagPhotoCapture[] = L"Windows.Media.Capture.LowLagPhotoCapture";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.LowLagPhotoSequenceCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.ILowLagPhotoSequenceCapture ** Default Interface **
 *
 * Class Threading Model:  Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_LowLagPhotoSequenceCapture_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_LowLagPhotoSequenceCapture_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_LowLagPhotoSequenceCapture[] = L"Windows.Media.Capture.LowLagPhotoSequenceCapture";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.MediaCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Media.Capture.IMediaCaptureStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCapture ** Default Interface **
 *    Windows.Media.Capture.IMediaCaptureVideoPreview
 *    Windows.Media.Capture.IMediaCapture2
 *    Windows.Foundation.IClosable
 *    Windows.Media.Capture.IMediaCapture3
 *    Windows.Media.Capture.IMediaCapture4
 *    Windows.Media.Capture.IMediaCapture5
 *    Windows.Media.Capture.IMediaCapture6
 *    Windows.Media.Capture.IMediaCapture7
 *
 * Class Threading Model:  Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCapture_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCapture_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCapture[] = L"Windows.Media.Capture.MediaCapture";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.MediaCaptureDeviceExclusiveControlStatusChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCaptureDeviceExclusiveControlStatusChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCaptureDeviceExclusiveControlStatusChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCaptureDeviceExclusiveControlStatusChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCaptureDeviceExclusiveControlStatusChangedEventArgs[] = L"Windows.Media.Capture.MediaCaptureDeviceExclusiveControlStatusChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.Media.Capture.MediaCaptureFailedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCaptureFailedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCaptureFailedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCaptureFailedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCaptureFailedEventArgs[] = L"Windows.Media.Capture.MediaCaptureFailedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.MediaCaptureFocusChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCaptureFocusChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCaptureFocusChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCaptureFocusChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCaptureFocusChangedEventArgs[] = L"Windows.Media.Capture.MediaCaptureFocusChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.MediaCaptureInitializationSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCaptureInitializationSettings ** Default Interface **
 *    Windows.Media.Capture.IMediaCaptureInitializationSettings2
 *    Windows.Media.Capture.IMediaCaptureInitializationSettings3
 *    Windows.Media.Capture.IMediaCaptureInitializationSettings4
 *    Windows.Media.Capture.IMediaCaptureInitializationSettings5
 *    Windows.Media.Capture.IMediaCaptureInitializationSettings6
 *    Windows.Media.Capture.IMediaCaptureInitializationSettings7
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCaptureInitializationSettings_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCaptureInitializationSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCaptureInitializationSettings[] = L"Windows.Media.Capture.MediaCaptureInitializationSettings";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.MediaCapturePauseResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCapturePauseResult ** Default Interface **
 *    Windows.Foundation.IClosable
 *
 * Class Threading Model:  Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCapturePauseResult_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCapturePauseResult_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCapturePauseResult[] = L"Windows.Media.Capture.MediaCapturePauseResult";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.Media.Capture.MediaCaptureRelativePanelWatcher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 10.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCaptureRelativePanelWatcher ** Default Interface **
 *    Windows.Foundation.IClosable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCaptureRelativePanelWatcher_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCaptureRelativePanelWatcher_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCaptureRelativePanelWatcher[] = L"Windows.Media.Capture.MediaCaptureRelativePanelWatcher";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

/*
 *
 * Class Windows.Media.Capture.MediaCaptureSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCaptureSettings ** Default Interface **
 *    Windows.Media.Capture.IMediaCaptureSettings2
 *    Windows.Media.Capture.IMediaCaptureSettings3
 *
 * Class Threading Model:  Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCaptureSettings_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCaptureSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCaptureSettings[] = L"Windows.Media.Capture.MediaCaptureSettings";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.MediaCaptureStopResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCaptureStopResult ** Default Interface **
 *    Windows.Foundation.IClosable
 *
 * Class Threading Model:  Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCaptureStopResult_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCaptureStopResult_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCaptureStopResult[] = L"Windows.Media.Capture.MediaCaptureStopResult";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.Media.Capture.MediaCaptureVideoProfile
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCaptureVideoProfile ** Default Interface **
 *    Windows.Media.Capture.IMediaCaptureVideoProfile2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCaptureVideoProfile_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCaptureVideoProfile_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCaptureVideoProfile[] = L"Windows.Media.Capture.MediaCaptureVideoProfile";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.MediaCaptureVideoProfileMediaDescription
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCaptureVideoProfileMediaDescription ** Default Interface **
 *    Windows.Media.Capture.IMediaCaptureVideoProfileMediaDescription2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCaptureVideoProfileMediaDescription_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCaptureVideoProfileMediaDescription_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCaptureVideoProfileMediaDescription[] = L"Windows.Media.Capture.MediaCaptureVideoProfileMediaDescription";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.OptionalReferencePhotoCapturedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IOptionalReferencePhotoCapturedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_OptionalReferencePhotoCapturedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_OptionalReferencePhotoCapturedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_OptionalReferencePhotoCapturedEventArgs[] = L"Windows.Media.Capture.OptionalReferencePhotoCapturedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.PhotoCapturedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IPhotoCapturedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_PhotoCapturedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_PhotoCapturedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_PhotoCapturedEventArgs[] = L"Windows.Media.Capture.PhotoCapturedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.PhotoConfirmationCapturedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IPhotoConfirmationCapturedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_PhotoConfirmationCapturedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_PhotoConfirmationCapturedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_PhotoConfirmationCapturedEventArgs[] = L"Windows.Media.Capture.PhotoConfirmationCapturedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.VideoStreamConfiguration
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IVideoStreamConfiguration ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_VideoStreamConfiguration_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_VideoStreamConfiguration_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_VideoStreamConfiguration[] = L"Windows.Media.Capture.VideoStreamConfiguration";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#else // !defined(__cplusplus)
/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2 __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2 __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2 __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2 __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCapture __x_ABI_CWindows_CMedia_CCapture_CIAppCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2 __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3 __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2 __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3 __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4 __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5 __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2 __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2 __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2 __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2 __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3 __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2 __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3 __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4 __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5 __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6 __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7 __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2 __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __FIAsyncOperationCompletedHandler_1_UINT32 __FIAsyncOperationCompletedHandler_1_UINT32;

#if !defined(____FIAsyncOperation_1_UINT32_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_UINT32_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_UINT32 __FIAsyncOperation_1_UINT32;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_UINT32;

typedef struct __FIAsyncOperation_1_UINT32Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_UINT32* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_UINT32* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_UINT32* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_UINT32* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_UINT32* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_UINT32* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_UINT32* This,
        __FIAsyncOperationCompletedHandler_1_UINT32* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_UINT32* This,
        __FIAsyncOperationCompletedHandler_1_UINT32** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_UINT32* This,
        UINT32* result);

    END_INTERFACE
} __FIAsyncOperation_1_UINT32Vtbl;

interface __FIAsyncOperation_1_UINT32
{
    CONST_VTBL struct __FIAsyncOperation_1_UINT32Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_UINT32_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_UINT32_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_UINT32_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_UINT32_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_UINT32_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_UINT32_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_UINT32_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_UINT32_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_UINT32_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_UINT32_INTERFACE_DEFINED__

#if !defined(____FIAsyncOperationCompletedHandler_1_UINT32_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_UINT32_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_UINT32 __FIAsyncOperationCompletedHandler_1_UINT32;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_UINT32;

typedef struct __FIAsyncOperationCompletedHandler_1_UINT32Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_UINT32* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_UINT32* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_UINT32* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_UINT32* This,
        __FIAsyncOperation_1_UINT32* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_UINT32Vtbl;

interface __FIAsyncOperationCompletedHandler_1_UINT32
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_UINT32Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_UINT32_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_UINT32_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_UINT32_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_UINT32_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_UINT32_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto;

typedef struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhotoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhotoVtbl;

interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhotoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhotoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto* This,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhotoVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhotoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture;

typedef struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCaptureVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCaptureVtbl;

interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCaptureVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCaptureVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture* This,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCaptureVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCaptureVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto;

typedef struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhotoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhotoVtbl;

interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhotoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhotoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto* This,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhotoVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhotoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCapturedPhoto_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture __x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture_FWD_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture;

typedef struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCaptureVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CCore_CIVariablePhotoSequenceCapture** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCaptureVtbl;

interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCaptureVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCaptureVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* This,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCaptureVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCaptureVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader_FWD_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader;

typedef struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReaderVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameReader** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReaderVtbl;

interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReaderVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReaderVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader* This,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReaderVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReaderVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader_FWD_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader;

typedef struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMultiSourceMediaFrameReader** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderVtbl;

interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* This,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReaderVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording;

typedef struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecordingVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording* This,
        __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecordingVtbl;

interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecordingVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecordingVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording* This,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecordingVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecordingVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagMediaRecording_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture;

typedef struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCaptureVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCaptureVtbl;

interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCaptureVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCaptureVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture* This,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCaptureVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCaptureVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoCapture_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture;

typedef struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCaptureVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCaptureVtbl;

interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCaptureVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCaptureVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture* This,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCaptureVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCaptureVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult;

typedef struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResultVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResultVtbl;

interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResultVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResultVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult* This,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResultVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResultVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCapturePauseResult_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult;

typedef struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResultVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResultVtbl;

interface __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResultVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResultVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult* This,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResultVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResultVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCapture__CMediaCaptureStopResult_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef ____x_ABI_CWindows_CMedia_CIMediaExtension_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CIMediaExtension_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CIMediaExtension __x_ABI_CWindows_CMedia_CIMediaExtension;

#endif // ____x_ABI_CWindows_CMedia_CIMediaExtension_FWD_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1_Windows__CMedia__CIMediaExtension_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CMedia__CIMediaExtension_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CMedia__CIMediaExtension;

typedef struct __FIAsyncOperation_1_Windows__CMedia__CIMediaExtensionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CMedia__CIMediaExtension* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CMedia__CIMediaExtension* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CMedia__CIMediaExtension* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CMedia__CIMediaExtension* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CMedia__CIMediaExtension* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CMedia__CIMediaExtension* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CMedia__CIMediaExtension* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CMedia__CIMediaExtension* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CMedia__CIMediaExtension* This,
        __x_ABI_CWindows_CMedia_CIMediaExtension** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CMedia__CIMediaExtensionVtbl;

interface __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CMedia__CIMediaExtensionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CMedia__CIMediaExtension_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtensionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension* This,
        __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtensionVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtensionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CIMediaExtension_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CMedia_CIVideoFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CIVideoFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CIVideoFrame __x_ABI_CWindows_CMedia_CIVideoFrame;

#endif // ____x_ABI_CWindows_CMedia_CIVideoFrame_FWD_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1_Windows__CMedia__CVideoFrame_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CMedia__CVideoFrame_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CMedia__CVideoFrame __FIAsyncOperation_1_Windows__CMedia__CVideoFrame;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CMedia__CVideoFrame;

typedef struct __FIAsyncOperation_1_Windows__CMedia__CVideoFrameVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CMedia__CVideoFrame* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CMedia__CVideoFrame* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CMedia__CVideoFrame* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CMedia__CVideoFrame* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CMedia__CVideoFrame* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CMedia__CVideoFrame* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CMedia__CVideoFrame* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CMedia__CVideoFrame* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CMedia__CVideoFrame* This,
        __x_ABI_CWindows_CMedia_CIVideoFrame** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CMedia__CVideoFrameVtbl;

interface __FIAsyncOperation_1_Windows__CMedia__CVideoFrame
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CMedia__CVideoFrameVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CMedia__CVideoFrame_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CMedia__CVideoFrame_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CMedia__CVideoFrame_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CMedia__CVideoFrame_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CMedia__CVideoFrame_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CMedia__CVideoFrame_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CMedia__CVideoFrame_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CMedia__CVideoFrame_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CMedia__CVideoFrame_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CMedia__CVideoFrame_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrameVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame* This,
        __FIAsyncOperation_1_Windows__CMedia__CVideoFrame* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrameVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrameVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CVideoFrame_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CIStorageFile __x_ABI_CWindows_CStorage_CIStorageFile;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1_Windows__CStorage__CStorageFile_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CStorage__CStorageFile_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CStorage__CStorageFile __FIAsyncOperation_1_Windows__CStorage__CStorageFile;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CStorage__CStorageFile;

typedef struct __FIAsyncOperation_1_Windows__CStorage__CStorageFileVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperation_1_Windows__CStorage__CStorageFile* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperation_1_Windows__CStorage__CStorageFile* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperation_1_Windows__CStorage__CStorageFile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIAsyncOperation_1_Windows__CStorage__CStorageFile* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIAsyncOperation_1_Windows__CStorage__CStorageFile* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIAsyncOperation_1_Windows__CStorage__CStorageFile* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__FIAsyncOperation_1_Windows__CStorage__CStorageFile* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__FIAsyncOperation_1_Windows__CStorage__CStorageFile* This,
        __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__FIAsyncOperation_1_Windows__CStorage__CStorageFile* This,
        __x_ABI_CWindows_CStorage_CIStorageFile** result);

    END_INTERFACE
} __FIAsyncOperation_1_Windows__CStorage__CStorageFileVtbl;

interface __FIAsyncOperation_1_Windows__CStorage__CStorageFile
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CStorage__CStorageFileVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperation_1_Windows__CStorage__CStorageFile_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperation_1_Windows__CStorage__CStorageFile_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperation_1_Windows__CStorage__CStorageFile_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperation_1_Windows__CStorage__CStorageFile_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIAsyncOperation_1_Windows__CStorage__CStorageFile_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIAsyncOperation_1_Windows__CStorage__CStorageFile_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIAsyncOperation_1_Windows__CStorage__CStorageFile_put_Completed(This, handler) \
    ((This)->lpVtbl->put_Completed(This, handler))

#define __FIAsyncOperation_1_Windows__CStorage__CStorageFile_get_Completed(This, result) \
    ((This)->lpVtbl->get_Completed(This, result))

#define __FIAsyncOperation_1_Windows__CStorage__CStorageFile_GetResults(This, result) \
    ((This)->lpVtbl->GetResults(This, result))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperation_1_Windows__CStorage__CStorageFile_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFileVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile* This,
        __FIAsyncOperation_1_Windows__CStorage__CStorageFile* asyncInfo,
        AsyncStatus asyncStatus);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFileVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFileVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile_Invoke(This, asyncInfo, asyncStatus) \
    ((This)->lpVtbl->Invoke(This, asyncInfo, asyncStatus))

#endif /* COBJMACROS */

#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CStorage__CStorageFile_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if !defined(____FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__)
#define ____FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

typedef interface __FIKeyValuePair_2_GUID_IInspectable __FIKeyValuePair_2_GUID_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIKeyValuePair_2_GUID_IInspectable;

typedef struct __FIKeyValuePair_2_GUID_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIKeyValuePair_2_GUID_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIKeyValuePair_2_GUID_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIKeyValuePair_2_GUID_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIKeyValuePair_2_GUID_IInspectable* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIKeyValuePair_2_GUID_IInspectable* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIKeyValuePair_2_GUID_IInspectable* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Key)(__FIKeyValuePair_2_GUID_IInspectable* This,
        GUID* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIKeyValuePair_2_GUID_IInspectable* This,
        IInspectable** result);

    END_INTERFACE
} __FIKeyValuePair_2_GUID_IInspectableVtbl;

interface __FIKeyValuePair_2_GUID_IInspectable
{
    CONST_VTBL struct __FIKeyValuePair_2_GUID_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIKeyValuePair_2_GUID_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIKeyValuePair_2_GUID_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIKeyValuePair_2_GUID_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIKeyValuePair_2_GUID_IInspectable_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIKeyValuePair_2_GUID_IInspectable_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIKeyValuePair_2_GUID_IInspectable_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIKeyValuePair_2_GUID_IInspectable_get_Key(This, result) \
    ((This)->lpVtbl->get_Key(This, result))

#define __FIKeyValuePair_2_GUID_IInspectable_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

#if !defined(____FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__)
#define ____FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

typedef interface __FIIterator_1___FIKeyValuePair_2_GUID_IInspectable __FIIterator_1___FIKeyValuePair_2_GUID_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1___FIKeyValuePair_2_GUID_IInspectable;

typedef struct __FIIterator_1___FIKeyValuePair_2_GUID_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1___FIKeyValuePair_2_GUID_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1___FIKeyValuePair_2_GUID_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1___FIKeyValuePair_2_GUID_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1___FIKeyValuePair_2_GUID_IInspectable* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1___FIKeyValuePair_2_GUID_IInspectable* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1___FIKeyValuePair_2_GUID_IInspectable* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1___FIKeyValuePair_2_GUID_IInspectable* This,
        __FIKeyValuePair_2_GUID_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1___FIKeyValuePair_2_GUID_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1___FIKeyValuePair_2_GUID_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1___FIKeyValuePair_2_GUID_IInspectable* This,
        UINT32 itemsLength,
        __FIKeyValuePair_2_GUID_IInspectable** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1___FIKeyValuePair_2_GUID_IInspectableVtbl;

interface __FIIterator_1___FIKeyValuePair_2_GUID_IInspectable
{
    CONST_VTBL struct __FIIterator_1___FIKeyValuePair_2_GUID_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

#if !defined(____FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__)
#define ____FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

typedef interface __FIIterable_1___FIKeyValuePair_2_GUID_IInspectable __FIIterable_1___FIKeyValuePair_2_GUID_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1___FIKeyValuePair_2_GUID_IInspectable;

typedef struct __FIIterable_1___FIKeyValuePair_2_GUID_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1___FIKeyValuePair_2_GUID_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1___FIKeyValuePair_2_GUID_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1___FIKeyValuePair_2_GUID_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1___FIKeyValuePair_2_GUID_IInspectable* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1___FIKeyValuePair_2_GUID_IInspectable* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1___FIKeyValuePair_2_GUID_IInspectable* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1___FIKeyValuePair_2_GUID_IInspectable* This,
        __FIIterator_1___FIKeyValuePair_2_GUID_IInspectable** result);

    END_INTERFACE
} __FIIterable_1___FIKeyValuePair_2_GUID_IInspectableVtbl;

interface __FIIterable_1___FIKeyValuePair_2_GUID_IInspectable
{
    CONST_VTBL struct __FIIterable_1___FIKeyValuePair_2_GUID_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__)
#define ____FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__

typedef interface __FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource __FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource;

typedef struct __FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Key)(__FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource** result);

    END_INTERFACE
} __FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl;

interface __FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource
{
    CONST_VTBL struct __FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_get_Key(This, result) \
    ((This)->lpVtbl->get_Key(This, result))

#define __FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__)
#define ____FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__

typedef interface __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource;

typedef struct __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        __FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        UINT32 itemsLength,
        __FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl;

interface __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource
{
    CONST_VTBL struct __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__)
#define ____FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__

typedef interface __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource;

typedef struct __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource** result);

    END_INTERFACE
} __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl;

interface __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource
{
    CONST_VTBL struct __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn;

typedef struct __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugInVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugInVtbl;

interface __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn
{
    CONST_VTBL struct __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugInVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn __FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn;

typedef struct __FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugInVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        __FIIterator_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn** result);

    END_INTERFACE
} __FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugInVtbl;

interface __FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn
{
    CONST_VTBL struct __FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugInVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource;

typedef struct __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl;

interface __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource
{
    CONST_VTBL struct __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource;

typedef struct __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource** result);

    END_INTERFACE
} __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl;

interface __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource
{
    CONST_VTBL struct __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

typedef struct __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl;

interface __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo
{
    CONST_VTBL struct __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

typedef struct __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        __FIIterator_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo** result);

    END_INTERFACE
} __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl;

interface __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo
{
    CONST_VTBL struct __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile;

typedef struct __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl;

interface __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile
{
    CONST_VTBL struct __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile;

typedef struct __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile** result);

    END_INTERFACE
} __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl;

interface __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile
{
    CONST_VTBL struct __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

typedef struct __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl;

interface __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription
{
    CONST_VTBL struct __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

typedef struct __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        __FIIterator_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription** result);

    END_INTERFACE
} __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl;

interface __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription
{
    CONST_VTBL struct __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef interface __FIMapView_2_GUID_IInspectable __FIMapView_2_GUID_IInspectable;

#if !defined(____FIMapView_2_GUID_IInspectable_INTERFACE_DEFINED__)
#define ____FIMapView_2_GUID_IInspectable_INTERFACE_DEFINED__

typedef interface __FIMapView_2_GUID_IInspectable __FIMapView_2_GUID_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMapView_2_GUID_IInspectable;

typedef struct __FIMapView_2_GUID_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIMapView_2_GUID_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIMapView_2_GUID_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIMapView_2_GUID_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIMapView_2_GUID_IInspectable* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIMapView_2_GUID_IInspectable* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIMapView_2_GUID_IInspectable* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Lookup)(__FIMapView_2_GUID_IInspectable* This,
        GUID key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIMapView_2_GUID_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__FIMapView_2_GUID_IInspectable* This,
        GUID key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__FIMapView_2_GUID_IInspectable* This,
        __FIMapView_2_GUID_IInspectable** first,
        __FIMapView_2_GUID_IInspectable** second);

    END_INTERFACE
} __FIMapView_2_GUID_IInspectableVtbl;

interface __FIMapView_2_GUID_IInspectable
{
    CONST_VTBL struct __FIMapView_2_GUID_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIMapView_2_GUID_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIMapView_2_GUID_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIMapView_2_GUID_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIMapView_2_GUID_IInspectable_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIMapView_2_GUID_IInspectable_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIMapView_2_GUID_IInspectable_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIMapView_2_GUID_IInspectable_Lookup(This, key, result) \
    ((This)->lpVtbl->Lookup(This, key, result))

#define __FIMapView_2_GUID_IInspectable_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIMapView_2_GUID_IInspectable_HasKey(This, key, result) \
    ((This)->lpVtbl->HasKey(This, key, result))

#define __FIMapView_2_GUID_IInspectable_Split(This, first, second) \
    ((This)->lpVtbl->Split(This, first, second))

#endif /* COBJMACROS */

#endif // ____FIMapView_2_GUID_IInspectable_INTERFACE_DEFINED__

typedef interface __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__)
#define ____FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__

typedef interface __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource;

typedef struct __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Lookup)(__FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        HSTRING key,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* This,
        __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource** first,
        __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource** second);

    END_INTERFACE
} __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl;

interface __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource
{
    CONST_VTBL struct __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_Lookup(This, key, result) \
    ((This)->lpVtbl->Lookup(This, key, result))

#define __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_HasKey(This, key, result) \
    ((This)->lpVtbl->HasKey(This, key, result))

#define __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_Split(This, first, second) \
    ((This)->lpVtbl->Split(This, first, second))

#endif /* COBJMACROS */

#endif // ____FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn;

typedef struct __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugInVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugInVtbl;

interface __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn
{
    CONST_VTBL struct __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugInVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo;

typedef struct __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceInfo** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl;

interface __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo
{
    CONST_VTBL struct __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile;

typedef struct __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl;

interface __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile
{
    CONST_VTBL struct __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription;

typedef struct __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl;

interface __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription
{
    CONST_VTBL struct __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescriptionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if !defined(____FIReference_1_boolean_INTERFACE_DEFINED__)
#define ____FIReference_1_boolean_INTERFACE_DEFINED__

typedef interface __FIReference_1_boolean __FIReference_1_boolean;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_boolean;

typedef struct __FIReference_1_booleanVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_boolean* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_boolean* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_boolean* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_boolean* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_boolean* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_boolean* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_boolean* This,
        boolean* result);

    END_INTERFACE
} __FIReference_1_booleanVtbl;

interface __FIReference_1_boolean
{
    CONST_VTBL struct __FIReference_1_booleanVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_boolean_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_boolean_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_boolean_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_boolean_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_boolean_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_boolean_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_boolean_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_boolean_INTERFACE_DEFINED__

#if !defined(____FIReference_1_double_INTERFACE_DEFINED__)
#define ____FIReference_1_double_INTERFACE_DEFINED__

typedef interface __FIReference_1_double __FIReference_1_double;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_double;

typedef struct __FIReference_1_doubleVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_double* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_double* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_double* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_double* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_double* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_double* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_double* This,
        DOUBLE* result);

    END_INTERFACE
} __FIReference_1_doubleVtbl;

interface __FIReference_1_double
{
    CONST_VTBL struct __FIReference_1_doubleVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_double_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_double_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_double_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_double_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_double_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_double_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_double_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_double_INTERFACE_DEFINED__

#if !defined(____FIReference_1_int_INTERFACE_DEFINED__)
#define ____FIReference_1_int_INTERFACE_DEFINED__

typedef interface __FIReference_1_int __FIReference_1_int;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_int;

typedef struct __FIReference_1_intVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_int* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_int* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_int* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_int* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_int* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_int* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_int* This,
        INT32* result);

    END_INTERFACE
} __FIReference_1_intVtbl;

interface __FIReference_1_int
{
    CONST_VTBL struct __FIReference_1_intVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_int_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_int_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_int_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_int_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_int_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_int_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_int_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_int_INTERFACE_DEFINED__

#if !defined(____FIReference_1_float_INTERFACE_DEFINED__)
#define ____FIReference_1_float_INTERFACE_DEFINED__

typedef interface __FIReference_1_float __FIReference_1_float;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_float;

typedef struct __FIReference_1_floatVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_float* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_float* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_float* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_float* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_float* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_float* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_float* This,
        FLOAT* result);

    END_INTERFACE
} __FIReference_1_floatVtbl;

interface __FIReference_1_float
{
    CONST_VTBL struct __FIReference_1_floatVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_float_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_float_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_float_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_float_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_float_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_float_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_float_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_float_INTERFACE_DEFINED__

#if !defined(____FIReference_1_UINT32_INTERFACE_DEFINED__)
#define ____FIReference_1_UINT32_INTERFACE_DEFINED__

typedef interface __FIReference_1_UINT32 __FIReference_1_UINT32;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_UINT32;

typedef struct __FIReference_1_UINT32Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_UINT32* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_UINT32* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_UINT32* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_UINT32* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_UINT32* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_UINT32* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_UINT32* This,
        UINT32* result);

    END_INTERFACE
} __FIReference_1_UINT32Vtbl;

interface __FIReference_1_UINT32
{
    CONST_VTBL struct __FIReference_1_UINT32Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_UINT32_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_UINT32_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_UINT32_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_UINT32_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_UINT32_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_UINT32_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_UINT32_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_UINT32_INTERFACE_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000
#if !defined(____FIReference_1_Windows__CFoundation__CRect_INTERFACE_DEFINED__)
#define ____FIReference_1_Windows__CFoundation__CRect_INTERFACE_DEFINED__

typedef interface __FIReference_1_Windows__CFoundation__CRect __FIReference_1_Windows__CFoundation__CRect;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Windows__CFoundation__CRect;

typedef struct __FIReference_1_Windows__CFoundation__CRectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_Windows__CFoundation__CRect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_Windows__CFoundation__CRect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_Windows__CFoundation__CRect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_Windows__CFoundation__CRect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_Windows__CFoundation__CRect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_Windows__CFoundation__CRect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_Windows__CFoundation__CRect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* result);

    END_INTERFACE
} __FIReference_1_Windows__CFoundation__CRectVtbl;

interface __FIReference_1_Windows__CFoundation__CRect
{
    CONST_VTBL struct __FIReference_1_Windows__CFoundation__CRectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_Windows__CFoundation__CRect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_Windows__CFoundation__CRect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_Windows__CFoundation__CRect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_Windows__CFoundation__CRect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_Windows__CFoundation__CRect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_Windows__CFoundation__CRect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_Windows__CFoundation__CRect_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_Windows__CFoundation__CRect_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000
#if !defined(____FIReference_1_Windows__CFoundation__CTimeSpan_INTERFACE_DEFINED__)
#define ____FIReference_1_Windows__CFoundation__CTimeSpan_INTERFACE_DEFINED__

typedef interface __FIReference_1_Windows__CFoundation__CTimeSpan __FIReference_1_Windows__CFoundation__CTimeSpan;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Windows__CFoundation__CTimeSpan;

typedef struct __FIReference_1_Windows__CFoundation__CTimeSpanVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_Windows__CFoundation__CTimeSpan* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_Windows__CFoundation__CTimeSpan* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_Windows__CFoundation__CTimeSpan* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_Windows__CFoundation__CTimeSpan* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_Windows__CFoundation__CTimeSpan* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_Windows__CFoundation__CTimeSpan* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_Windows__CFoundation__CTimeSpan* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* result);

    END_INTERFACE
} __FIReference_1_Windows__CFoundation__CTimeSpanVtbl;

interface __FIReference_1_Windows__CFoundation__CTimeSpan
{
    CONST_VTBL struct __FIReference_1_Windows__CFoundation__CTimeSpanVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_Windows__CFoundation__CTimeSpan_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_Windows__CFoundation__CTimeSpan_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_Windows__CFoundation__CTimeSpan_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_Windows__CFoundation__CTimeSpan_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_Windows__CFoundation__CTimeSpan_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_Windows__CFoundation__CTimeSpan_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_Windows__CFoundation__CTimeSpan_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_Windows__CFoundation__CTimeSpan_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

typedef struct __x_ABI_CWindows_CMedia_CCapture_CWhiteBalanceGain __x_ABI_CWindows_CMedia_CCapture_CWhiteBalanceGain;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain_INTERFACE_DEFINED__)
#define ____FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain_INTERFACE_DEFINED__

typedef interface __FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain __FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain;

typedef struct __FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGainVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain* This,
        struct __x_ABI_CWindows_CMedia_CCapture_CWhiteBalanceGain* result);

    END_INTERFACE
} __FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGainVtbl;

interface __FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain
{
    CONST_VTBL struct __FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGainVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef enum __x_ABI_CWindows_CMedia_CDevices_CCaptureSceneMode __x_ABI_CWindows_CMedia_CDevices_CCaptureSceneMode;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode_INTERFACE_DEFINED__)
#define ____FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode_INTERFACE_DEFINED__

typedef interface __FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode __FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode;

typedef struct __FIReference_1_Windows__CMedia__CDevices__CCaptureSceneModeVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CCaptureSceneMode* result);

    END_INTERFACE
} __FIReference_1_Windows__CMedia__CDevices__CCaptureSceneModeVtbl;

interface __FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode
{
    CONST_VTBL struct __FIReference_1_Windows__CMedia__CDevices__CCaptureSceneModeVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef enum __x_ABI_CWindows_CMedia_CDevices_CMediaCaptureFocusState __x_ABI_CWindows_CMedia_CDevices_CMediaCaptureFocusState;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState_INTERFACE_DEFINED__)
#define ____FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState_INTERFACE_DEFINED__

typedef interface __FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState __FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState;

typedef struct __FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusStateVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CMediaCaptureFocusState* result);

    END_INTERFACE
} __FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusStateVtbl;

interface __FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState
{
    CONST_VTBL struct __FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusStateVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCapture* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#if WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000
#if !defined(____FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher* sender,
        IInspectable* args);

    END_INTERFACE
} __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

typedef enum __x_ABI_CWindows_CDevices_CEnumeration_CPanel __x_ABI_CWindows_CDevices_CEnumeration_CPanel;

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice;

#endif // ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CGraphics_CImaging_CBitmapAlphaMode __x_ABI_CWindows_CGraphics_CImaging_CBitmapAlphaMode;

typedef enum __x_ABI_CWindows_CGraphics_CImaging_CBitmapPixelFormat __x_ABI_CWindows_CGraphics_CImaging_CBitmapPixelFormat;

#ifndef ____x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue;

#endif // ____x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__)
#define ____FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__

typedef interface __FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue __FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue;

typedef struct __FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Key)(__FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue** result);

    END_INTERFACE
} __FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValueVtbl;

interface __FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue
{
    CONST_VTBL struct __FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_get_Key(This, result) \
    ((This)->lpVtbl->get_Key(This, result))

#define __FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__)
#define ____FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__

typedef interface __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue;

typedef struct __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        __FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        UINT32 itemsLength,
        __FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValueVtbl;

interface __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue
{
    CONST_VTBL struct __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__)
#define ____FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__

typedef interface __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue;

typedef struct __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        __FIIterator_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue** result);

    END_INTERFACE
} __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValueVtbl;

interface __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue
{
    CONST_VTBL struct __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1___FIKeyValuePair_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef interface __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue;

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__)
#define ____FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__

typedef interface __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue;

typedef struct __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Lookup)(__FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING key,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue** first,
        __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue** second);

    END_INTERFACE
} __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValueVtbl;

interface __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue
{
    CONST_VTBL struct __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_Lookup(This, key, result) \
    ((This)->lpVtbl->Lookup(This, key, result))

#define __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_HasKey(This, key, result) \
    ((This)->lpVtbl->HasKey(This, key, result))

#define __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_Split(This, first, second) \
    ((This)->lpVtbl->Split(This, first, second))

#endif /* COBJMACROS */

#endif // ____FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__)
#define ____FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__

typedef interface __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue;

typedef struct __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValueVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Lookup)(__FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING key,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        __FIMapView_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING key,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapTypedValue* value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue* This);

    END_INTERFACE
} __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValueVtbl;

interface __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue
{
    CONST_VTBL struct __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValueVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_Lookup(This, key, result) \
    ((This)->lpVtbl->Lookup(This, key, result))

#define __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_HasKey(This, key, result) \
    ((This)->lpVtbl->HasKey(This, key, result))

#define __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_Insert(This, key, value, result) \
    ((This)->lpVtbl->Insert(This, key, value, result))

#define __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_Remove(This, key) \
    ((This)->lpVtbl->Remove(This, key))

#define __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#endif /* COBJMACROS */

#endif // ____FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef struct __x_ABI_CWindows_CGraphics_CImaging_CBitmapSize __x_ABI_CWindows_CGraphics_CImaging_CBitmapSize;

#ifndef ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap;

#endif // ____x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CAudioProcessing __x_ABI_CWindows_CMedia_CAudioProcessing;

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaSource __x_ABI_CWindows_CMedia_CCore_CIMediaSource;

#endif // ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CDevices_CAdvancedPhotoMode __x_ABI_CWindows_CMedia_CDevices_CAdvancedPhotoMode;

#ifndef ____x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController __x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController;

#endif // ____x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CDevices_CCameraStreamState __x_ABI_CWindows_CMedia_CDevices_CCameraStreamState;

typedef enum __x_ABI_CWindows_CMedia_CDevices_CMediaCapturePauseBehavior __x_ABI_CWindows_CMedia_CDevices_CMediaCapturePauseBehavior;

#ifndef ____x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController __x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController;

#endif // ____x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition __x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition;

#endif // ____x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition __x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition;

#endif // ____x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile_FWD_DEFINED__

#if !defined(____FIMap_2_GUID_IInspectable_INTERFACE_DEFINED__)
#define ____FIMap_2_GUID_IInspectable_INTERFACE_DEFINED__

typedef interface __FIMap_2_GUID_IInspectable __FIMap_2_GUID_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMap_2_GUID_IInspectable;

typedef struct __FIMap_2_GUID_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIMap_2_GUID_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIMap_2_GUID_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIMap_2_GUID_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIMap_2_GUID_IInspectable* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIMap_2_GUID_IInspectable* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIMap_2_GUID_IInspectable* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Lookup)(__FIMap_2_GUID_IInspectable* This,
        GUID key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIMap_2_GUID_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__FIMap_2_GUID_IInspectable* This,
        GUID key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIMap_2_GUID_IInspectable* This,
        __FIMapView_2_GUID_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__FIMap_2_GUID_IInspectable* This,
        GUID key,
        IInspectable* value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__FIMap_2_GUID_IInspectable* This,
        GUID key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIMap_2_GUID_IInspectable* This);

    END_INTERFACE
} __FIMap_2_GUID_IInspectableVtbl;

interface __FIMap_2_GUID_IInspectable
{
    CONST_VTBL struct __FIMap_2_GUID_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIMap_2_GUID_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIMap_2_GUID_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIMap_2_GUID_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIMap_2_GUID_IInspectable_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIMap_2_GUID_IInspectable_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIMap_2_GUID_IInspectable_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIMap_2_GUID_IInspectable_Lookup(This, key, result) \
    ((This)->lpVtbl->Lookup(This, key, result))

#define __FIMap_2_GUID_IInspectable_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIMap_2_GUID_IInspectable_HasKey(This, key, result) \
    ((This)->lpVtbl->HasKey(This, key, result))

#define __FIMap_2_GUID_IInspectable_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIMap_2_GUID_IInspectable_Insert(This, key, value, result) \
    ((This)->lpVtbl->Insert(This, key, value, result))

#define __FIMap_2_GUID_IInspectable_Remove(This, key) \
    ((This)->lpVtbl->Remove(This, key))

#define __FIMap_2_GUID_IInspectable_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#endif /* COBJMACROS */

#endif // ____FIMap_2_GUID_IInspectable_INTERFACE_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties;

#endif // ____x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult __x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult;

#endif // ____x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential_FWD_DEFINED__
#define ____x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential;

#endif // ____x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CIStorageFolder __x_ABI_CWindows_CStorage_CIStorageFolder;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CStreams_CIBuffer __x_ABI_CWindows_CStorage_CStreams_CIBuffer;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider __x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIContentTypeProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CStreams_CIInputStream __x_ABI_CWindows_CStorage_CStreams_CIInputStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CStreams_CIOutputStream __x_ABI_CWindows_CStorage_CStreams_CIOutputStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CSystem_CVirtualKey __x_ABI_CWindows_CSystem_CVirtualKey;

typedef enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers __x_ABI_CWindows_CSystem_CVirtualKeyModifiers;

#ifndef ____x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion __x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion;

#endif // ____x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraCaptureState __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraCaptureState;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlaySize __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlaySize;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCaptureTargetType __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCaptureTargetType;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastExitBroadcastModeReason __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastExitBroadcastModeReason;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastMicrophoneCaptureState __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastMicrophoneCaptureState;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPreviewState __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPreviewState;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInResult __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInResult;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastStreamState __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastStreamState;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingBitrateMode __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingBitrateMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingResolutionMode __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingResolutionMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureHistoricalBufferLengthUnit __x_ABI_CWindows_CMedia_CCapture_CAppCaptureHistoricalBufferLengthUnit;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMicrophoneCaptureState __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMicrophoneCaptureState;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureRecordingState __x_ABI_CWindows_CMedia_CCapture_CAppCaptureRecordingState;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingBitrateMode __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingBitrateMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingFrameRateMode __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingFrameRateMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingResolutionMode __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingResolutionMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMode __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CGameBarCommandOrigin __x_ABI_CWindows_CMedia_CCapture_CGameBarCommandOrigin;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CGameBarServicesDisplayMode __x_ABI_CWindows_CMedia_CCapture_CGameBarServicesDisplayMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CGameBarTargetCapturePolicy __x_ABI_CWindows_CMedia_CCapture_CGameBarTargetCapturePolicy;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureDeviceExclusiveControlStatus __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureDeviceExclusiveControlStatus;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureThermalStatus __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureThermalStatus;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaCategory __x_ABI_CWindows_CMedia_CCapture_CMediaCategory;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic;

typedef enum __x_ABI_CWindows_CMedia_CCapture_CVideoRotation __x_ABI_CWindows_CMedia_CCapture_CVideoRotation;

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastCameraCaptureState
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraCaptureState
{
    AppBroadcastCameraCaptureState_Stopped = 0,
    AppBroadcastCameraCaptureState_Started = 1,
    AppBroadcastCameraCaptureState_Failed = 2,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastCameraOverlayLocation
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation
{
    AppBroadcastCameraOverlayLocation_TopLeft = 0,
    AppBroadcastCameraOverlayLocation_TopCenter = 1,
    AppBroadcastCameraOverlayLocation_TopRight = 2,
    AppBroadcastCameraOverlayLocation_MiddleLeft = 3,
    AppBroadcastCameraOverlayLocation_MiddleCenter = 4,
    AppBroadcastCameraOverlayLocation_MiddleRight = 5,
    AppBroadcastCameraOverlayLocation_BottomLeft = 6,
    AppBroadcastCameraOverlayLocation_BottomCenter = 7,
    AppBroadcastCameraOverlayLocation_BottomRight = 8,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastCameraOverlaySize
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlaySize
{
    AppBroadcastCameraOverlaySize_Small = 0,
    AppBroadcastCameraOverlaySize_Medium = 1,
    AppBroadcastCameraOverlaySize_Large = 2,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastCaptureTargetType
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCaptureTargetType
{
    AppBroadcastCaptureTargetType_AppView = 0,
    AppBroadcastCaptureTargetType_EntireDisplay = 1,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastExitBroadcastModeReason
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastExitBroadcastModeReason
{
    AppBroadcastExitBroadcastModeReason_NormalExit = 0,
    AppBroadcastExitBroadcastModeReason_UserCanceled = 1,
    AppBroadcastExitBroadcastModeReason_AuthorizationFail = 2,
    AppBroadcastExitBroadcastModeReason_ForegroundAppActivated = 3,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastMicrophoneCaptureState
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastMicrophoneCaptureState
{
    AppBroadcastMicrophoneCaptureState_Stopped = 0,
    AppBroadcastMicrophoneCaptureState_Started = 1,
    AppBroadcastMicrophoneCaptureState_Failed = 2,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastPlugInState
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState
{
    AppBroadcastPlugInState_Unknown = 0,
    AppBroadcastPlugInState_Initialized = 1,
    AppBroadcastPlugInState_MicrosoftSignInRequired = 2,
    AppBroadcastPlugInState_OAuthSignInRequired = 3,
    AppBroadcastPlugInState_ProviderSignInRequired = 4,
    AppBroadcastPlugInState_InBandwidthTest = 5,
    AppBroadcastPlugInState_ReadyToBroadcast = 6,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastPreviewState
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPreviewState
{
    AppBroadcastPreviewState_Started = 0,
    AppBroadcastPreviewState_Stopped = 1,
    AppBroadcastPreviewState_Failed = 2,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastSignInResult
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInResult
{
    AppBroadcastSignInResult_Success = 0,
    AppBroadcastSignInResult_AuthenticationFailed = 1,
    AppBroadcastSignInResult_Unauthorized = 2,
    AppBroadcastSignInResult_ServiceUnavailable = 3,
    AppBroadcastSignInResult_Unknown = 4,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastSignInState
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState
{
    AppBroadcastSignInState_NotSignedIn = 0,
    AppBroadcastSignInState_MicrosoftSignInInProgress = 1,
    AppBroadcastSignInState_MicrosoftSignInComplete = 2,
    AppBroadcastSignInState_OAuthSignInInProgress = 3,
    AppBroadcastSignInState_OAuthSignInComplete = 4,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastStreamState
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastStreamState
{
    AppBroadcastStreamState_Initializing = 0,
    AppBroadcastStreamState_StreamReady = 1,
    AppBroadcastStreamState_Started = 2,
    AppBroadcastStreamState_Paused = 3,
    AppBroadcastStreamState_Terminated = 4,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastTerminationReason
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason
{
    AppBroadcastTerminationReason_NormalTermination = 0,
    AppBroadcastTerminationReason_LostConnectionToService = 1,
    AppBroadcastTerminationReason_NoNetworkConnectivity = 2,
    AppBroadcastTerminationReason_ServiceAbort = 3,
    AppBroadcastTerminationReason_ServiceError = 4,
    AppBroadcastTerminationReason_ServiceUnavailable = 5,
    AppBroadcastTerminationReason_InternalError = 6,
    AppBroadcastTerminationReason_UnsupportedFormat = 7,
    AppBroadcastTerminationReason_BackgroundTaskTerminated = 8,
    AppBroadcastTerminationReason_BackgroundTaskUnresponsive = 9,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastVideoEncodingBitrateMode
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingBitrateMode
{
    AppBroadcastVideoEncodingBitrateMode_Custom = 0,
    AppBroadcastVideoEncodingBitrateMode_Auto = 1,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppBroadcastVideoEncodingResolutionMode
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingResolutionMode
{
    AppBroadcastVideoEncodingResolutionMode_Custom = 0,
    AppBroadcastVideoEncodingResolutionMode_Auto = 1,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppCaptureHistoricalBufferLengthUnit
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureHistoricalBufferLengthUnit
{
    AppCaptureHistoricalBufferLengthUnit_Megabytes = 0,
    AppCaptureHistoricalBufferLengthUnit_Seconds = 1,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppCaptureMetadataPriority
 *
 * Introduced to Windows.Media.Capture.AppCaptureMetadataContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority
{
    AppCaptureMetadataPriority_Informational = 0,
    AppCaptureMetadataPriority_Important = 1,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppCaptureMicrophoneCaptureState
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMicrophoneCaptureState
{
    AppCaptureMicrophoneCaptureState_Stopped = 0,
    AppCaptureMicrophoneCaptureState_Started = 1,
    AppCaptureMicrophoneCaptureState_Failed = 2,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Struct Windows.Media.Capture.AppCaptureRecordingState
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureRecordingState
{
    AppCaptureRecordingState_InProgress = 0,
    AppCaptureRecordingState_Completed = 1,
    AppCaptureRecordingState_Failed = 2,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Struct Windows.Media.Capture.AppCaptureVideoEncodingBitrateMode
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingBitrateMode
{
    AppCaptureVideoEncodingBitrateMode_Custom = 0,
    AppCaptureVideoEncodingBitrateMode_High = 1,
    AppCaptureVideoEncodingBitrateMode_Standard = 2,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.AppCaptureVideoEncodingFrameRateMode
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 3.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x30000
enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingFrameRateMode
{
    AppCaptureVideoEncodingFrameRateMode_Standard = 0,
    AppCaptureVideoEncodingFrameRateMode_High = 1,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.Media.Capture.AppCaptureVideoEncodingResolutionMode
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingResolutionMode
{
    AppCaptureVideoEncodingResolutionMode_Custom = 0,
    AppCaptureVideoEncodingResolutionMode_High = 1,
    AppCaptureVideoEncodingResolutionMode_Standard = 2,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.CameraCaptureUIMaxPhotoResolution
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution
{
    CameraCaptureUIMaxPhotoResolution_HighestAvailable = 0,
    CameraCaptureUIMaxPhotoResolution_VerySmallQvga = 1,
    CameraCaptureUIMaxPhotoResolution_SmallVga = 2,
    CameraCaptureUIMaxPhotoResolution_MediumXga = 3,
    CameraCaptureUIMaxPhotoResolution_Large3M = 4,
    CameraCaptureUIMaxPhotoResolution_VeryLarge5M = 5,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.CameraCaptureUIMaxVideoResolution
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution
{
    CameraCaptureUIMaxVideoResolution_HighestAvailable = 0,
    CameraCaptureUIMaxVideoResolution_LowDefinition = 1,
    CameraCaptureUIMaxVideoResolution_StandardDefinition = 2,
    CameraCaptureUIMaxVideoResolution_HighDefinition = 3,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.CameraCaptureUIMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMode
{
    CameraCaptureUIMode_PhotoOrVideo = 0,
    CameraCaptureUIMode_Photo = 1,
    CameraCaptureUIMode_Video = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.CameraCaptureUIPhotoFormat
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat
{
    CameraCaptureUIPhotoFormat_Jpeg = 0,
    CameraCaptureUIPhotoFormat_Png = 1,
    CameraCaptureUIPhotoFormat_JpegXR = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.CameraCaptureUIVideoFormat
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat
{
    CameraCaptureUIVideoFormat_Mp4 = 0,
    CameraCaptureUIVideoFormat_Wmv = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.ForegroundActivationArgument
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CForegroundActivationArgument
{
    ForegroundActivationArgument_SignInRequired = 0,
    ForegroundActivationArgument_MoreSettings = 1,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.GameBarCommand
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand
{
    GameBarCommand_OpenGameBar = 0,
    GameBarCommand_RecordHistoricalBuffer = 1,
    GameBarCommand_ToggleStartStopRecord = 2,
    GameBarCommand_StartRecord = 3,
    GameBarCommand_StopRecord = 4,
    GameBarCommand_TakeScreenshot = 5,
    GameBarCommand_StartBroadcast = 6,
    GameBarCommand_StopBroadcast = 7,
    GameBarCommand_PauseBroadcast = 8,
    GameBarCommand_ResumeBroadcast = 9,
    GameBarCommand_ToggleStartStopBroadcast = 10,
    GameBarCommand_ToggleMicrophoneCapture = 11,
    GameBarCommand_ToggleCameraCapture = 12,
    GameBarCommand_ToggleRecordingIndicator = 13,
};
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.GameBarCommandOrigin
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CGameBarCommandOrigin
{
    GameBarCommandOrigin_ShortcutKey = 0,
    GameBarCommandOrigin_Cortana = 1,
    GameBarCommandOrigin_AppCommand = 2,
};
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.GameBarServicesDisplayMode
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CGameBarServicesDisplayMode
{
    GameBarServicesDisplayMode_Windowed = 0,
    GameBarServicesDisplayMode_FullScreenExclusive = 1,
};
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.GameBarTargetCapturePolicy
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CGameBarTargetCapturePolicy
{
    GameBarTargetCapturePolicy_EnabledBySystem = 0,
    GameBarTargetCapturePolicy_EnabledByUser = 1,
    GameBarTargetCapturePolicy_NotEnabled = 2,
    GameBarTargetCapturePolicy_ProhibitedBySystem = 3,
    GameBarTargetCapturePolicy_ProhibitedByPublisher = 4,
};
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.KnownVideoProfile
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile
{
    KnownVideoProfile_VideoRecording = 0,
    KnownVideoProfile_HighQualityPhoto = 1,
    KnownVideoProfile_BalancedVideoAndPhoto = 2,
    KnownVideoProfile_VideoConferencing = 3,
    KnownVideoProfile_PhotoSequence = 4,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
    KnownVideoProfile_HighFrameRate = 5,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
    KnownVideoProfile_VariablePhotoSequence = 6,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
    KnownVideoProfile_HdrWithWcgVideo = 7,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
    KnownVideoProfile_HdrWithWcgPhoto = 8,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
    KnownVideoProfile_VideoHdr8 = 9,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.MediaCaptureDeviceExclusiveControlStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureDeviceExclusiveControlStatus
{
    MediaCaptureDeviceExclusiveControlStatus_ExclusiveControlAvailable = 0,
    MediaCaptureDeviceExclusiveControlStatus_SharedReadOnlyAvailable = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Struct Windows.Media.Capture.MediaCaptureMemoryPreference
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference
{
    MediaCaptureMemoryPreference_Auto = 0,
    MediaCaptureMemoryPreference_Cpu = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.Media.Capture.MediaCaptureSharingMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode
{
    MediaCaptureSharingMode_ExclusiveControl = 0,
    MediaCaptureSharingMode_SharedReadOnly = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Windows.Media.Capture.MediaCaptureThermalStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureThermalStatus
{
    MediaCaptureThermalStatus_Normal = 0,
    MediaCaptureThermalStatus_Overheated = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.MediaCategory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CMediaCategory
{
    MediaCategory_Other = 0,
    MediaCategory_Communications = 1,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    MediaCategory_Media = 2,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    MediaCategory_GameChat = 3,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    MediaCategory_Speech = 4,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.MediaStreamType
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType
{
    MediaStreamType_VideoPreview = 0,
    MediaStreamType_VideoRecord = 1,
    MediaStreamType_Audio = 2,
    MediaStreamType_Photo = 3,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.PhotoCaptureSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource
{
    PhotoCaptureSource_Auto = 0,
    PhotoCaptureSource_VideoPreview = 1,
    PhotoCaptureSource_Photo = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.PowerlineFrequency
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CPowerlineFrequency
{
    PowerlineFrequency_Disabled = 0,
    PowerlineFrequency_FiftyHertz = 1,
    PowerlineFrequency_SixtyHertz = 2,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
    PowerlineFrequency_Auto = 3,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.StreamingCaptureMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode
{
    StreamingCaptureMode_AudioAndVideo = 0,
    StreamingCaptureMode_Audio = 1,
    StreamingCaptureMode_Video = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.VideoDeviceCharacteristic
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic
{
    VideoDeviceCharacteristic_AllStreamsIndependent = 0,
    VideoDeviceCharacteristic_PreviewRecordStreamsIdentical = 1,
    VideoDeviceCharacteristic_PreviewPhotoStreamsIdentical = 2,
    VideoDeviceCharacteristic_RecordPhotoStreamsIdentical = 3,
    VideoDeviceCharacteristic_AllStreamsIdentical = 4,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.VideoRotation
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
enum __x_ABI_CWindows_CMedia_CCapture_CVideoRotation
{
    VideoRotation_None = 0,
    VideoRotation_Clockwise90Degrees = 1,
    VideoRotation_Clockwise180Degrees = 2,
    VideoRotation_Clockwise270Degrees = 3,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Windows.Media.Capture.WhiteBalanceGain
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
struct __x_ABI_CWindows_CMedia_CCapture_CWhiteBalanceGain
{
    DOUBLE R;
    DOUBLE G;
    DOUBLE B;
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.Media.Capture.MediaCaptureFailedEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandlerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* sender,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* errorEventArgs);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandlerVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandlerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_Invoke(This, sender, errorEventArgs) \
    ((This)->lpVtbl->Invoke(This, sender, errorEventArgs))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Delegate Windows.Media.Capture.RecordLimitationExceededEventHandler
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_INTERFACE_DEFINED__
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandlerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* sender);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandlerVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandlerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_Invoke(This, sender) \
    ((This)->lpVtbl->Invoke(This, sender))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAdvancedCapturedPhoto
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AdvancedCapturedPhoto
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAdvancedCapturedPhoto[] = L"Windows.Media.Capture.IAdvancedCapturedPhoto";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhotoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Frame)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_Mode)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CAdvancedPhotoMode* value);
    HRESULT (STDMETHODCALLTYPE* get_Context)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto* This,
        IInspectable** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhotoVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhotoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_get_Frame(This, value) \
    ((This)->lpVtbl->get_Frame(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_get_Mode(This, value) \
    ((This)->lpVtbl->get_Mode(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_get_Context(This, value) \
    ((This)->lpVtbl->get_Context(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAdvancedCapturedPhoto2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AdvancedCapturedPhoto
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAdvancedCapturedPhoto2[] = L"Windows.Media.Capture.IAdvancedCapturedPhoto2";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FrameBoundsRelativeToReferencePhoto)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2* This,
        __FIReference_1_Windows__CFoundation__CRect** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_get_FrameBoundsRelativeToReferencePhoto(This, value) \
    ((This)->lpVtbl->get_FrameBoundsRelativeToReferencePhoto(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedCapturedPhoto2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.Media.Capture.IAdvancedPhotoCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AdvancedPhotoCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAdvancedPhotoCapture[] = L"Windows.Media.Capture.IAdvancedPhotoCapture";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCaptureVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CaptureAsync)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto** operation);
    HRESULT (STDMETHODCALLTYPE* CaptureWithContextAsync)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        IInspectable* context,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedCapturedPhoto** operation);
    HRESULT (STDMETHODCALLTYPE* add_OptionalReferencePhotoCaptured)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_Windows__CMedia__CCapture__COptionalReferencePhotoCapturedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_OptionalReferencePhotoCaptured)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_AllPhotosCaptured)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAdvancedPhotoCapture_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AllPhotosCaptured)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* FinishAsync)(__x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCaptureVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCaptureVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_CaptureAsync(This, operation) \
    ((This)->lpVtbl->CaptureAsync(This, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_CaptureWithContextAsync(This, context, operation) \
    ((This)->lpVtbl->CaptureWithContextAsync(This, context, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_add_OptionalReferencePhotoCaptured(This, handler, token) \
    ((This)->lpVtbl->add_OptionalReferencePhotoCaptured(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_remove_OptionalReferencePhotoCaptured(This, token) \
    ((This)->lpVtbl->remove_OptionalReferencePhotoCaptured(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_add_AllPhotosCaptured(This, handler, token) \
    ((This)->lpVtbl->add_AllPhotosCaptured(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_remove_AllPhotosCaptured(This, token) \
    ((This)->lpVtbl->remove_AllPhotosCaptured(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_FinishAsync(This, operation) \
    ((This)->lpVtbl->FinishAsync(This, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAdvancedPhotoCapture_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastBackgroundService
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastBackgroundService
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastBackgroundService[] = L"Windows.Media.Capture.IAppBroadcastBackgroundService";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_PlugInState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState value);
    HRESULT (STDMETHODCALLTYPE* get_PlugInState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState* value);
    HRESULT (STDMETHODCALLTYPE* put_SignInInfo)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* value);
    HRESULT (STDMETHODCALLTYPE* get_SignInInfo)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo** value);
    HRESULT (STDMETHODCALLTYPE* put_StreamInfo)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* value);
    HRESULT (STDMETHODCALLTYPE* get_StreamInfo)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_AppId)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_BroadcastTitle)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ViewerCount)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ViewerCount)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* TerminateBroadcast)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason reason,
        UINT32 providerSpecificReason);
    HRESULT (STDMETHODCALLTYPE* add_HeartbeatRequested)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_Windows__CMedia__CCapture__CAppBroadcastHeartbeatRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_HeartbeatRequested)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_TitleId)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService* This,
        HSTRING* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_put_PlugInState(This, value) \
    ((This)->lpVtbl->put_PlugInState(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_get_PlugInState(This, value) \
    ((This)->lpVtbl->get_PlugInState(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_put_SignInInfo(This, value) \
    ((This)->lpVtbl->put_SignInInfo(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_get_SignInInfo(This, value) \
    ((This)->lpVtbl->get_SignInInfo(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_put_StreamInfo(This, value) \
    ((This)->lpVtbl->put_StreamInfo(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_get_StreamInfo(This, value) \
    ((This)->lpVtbl->get_StreamInfo(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_get_AppId(This, value) \
    ((This)->lpVtbl->get_AppId(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_get_BroadcastTitle(This, value) \
    ((This)->lpVtbl->get_BroadcastTitle(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_put_ViewerCount(This, value) \
    ((This)->lpVtbl->put_ViewerCount(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_get_ViewerCount(This, value) \
    ((This)->lpVtbl->get_ViewerCount(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_TerminateBroadcast(This, reason, providerSpecificReason) \
    ((This)->lpVtbl->TerminateBroadcast(This, reason, providerSpecificReason))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_add_HeartbeatRequested(This, handler, token) \
    ((This)->lpVtbl->add_HeartbeatRequested(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_remove_HeartbeatRequested(This, token) \
    ((This)->lpVtbl->remove_HeartbeatRequested(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_get_TitleId(This, value) \
    ((This)->lpVtbl->get_TitleId(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastBackgroundService2
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastBackgroundService
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastBackgroundService2[] = L"Windows.Media.Capture.IAppBroadcastBackgroundService2";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_BroadcastTitle)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_BroadcastLanguage)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_BroadcastLanguage)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_BroadcastChannel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_BroadcastChannel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* add_BroadcastTitleChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BroadcastTitleChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_BroadcastLanguageChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BroadcastLanguageChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_BroadcastChannelChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundService_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BroadcastChannelChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_put_BroadcastTitle(This, value) \
    ((This)->lpVtbl->put_BroadcastTitle(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_get_BroadcastLanguage(This, value) \
    ((This)->lpVtbl->get_BroadcastLanguage(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_put_BroadcastLanguage(This, value) \
    ((This)->lpVtbl->put_BroadcastLanguage(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_get_BroadcastChannel(This, value) \
    ((This)->lpVtbl->get_BroadcastChannel(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_put_BroadcastChannel(This, value) \
    ((This)->lpVtbl->put_BroadcastChannel(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_add_BroadcastTitleChanged(This, handler, token) \
    ((This)->lpVtbl->add_BroadcastTitleChanged(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_remove_BroadcastTitleChanged(This, token) \
    ((This)->lpVtbl->remove_BroadcastTitleChanged(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_add_BroadcastLanguageChanged(This, handler, token) \
    ((This)->lpVtbl->add_BroadcastLanguageChanged(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_remove_BroadcastLanguageChanged(This, token) \
    ((This)->lpVtbl->remove_BroadcastLanguageChanged(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_add_BroadcastChannelChanged(This, handler, token) \
    ((This)->lpVtbl->add_BroadcastChannelChanged(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_remove_BroadcastChannelChanged(This, token) \
    ((This)->lpVtbl->remove_BroadcastChannelChanged(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService2_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastBackgroundServiceSignInInfo
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastBackgroundServiceSignInInfo
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastBackgroundServiceSignInInfo[] = L"Windows.Media.Capture.IAppBroadcastBackgroundServiceSignInInfo";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SignInState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState* value);
    HRESULT (STDMETHODCALLTYPE* put_OAuthRequestUri)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_OAuthRequestUri)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_OAuthCallbackUri)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_OAuthCallbackUri)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_AuthenticationResult)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        __x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult** value);
    HRESULT (STDMETHODCALLTYPE* put_UserName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_UserName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* add_SignInStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_Windows__CMedia__CCapture__CAppBroadcastSignInStateChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SignInStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfoVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_get_SignInState(This, value) \
    ((This)->lpVtbl->get_SignInState(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_put_OAuthRequestUri(This, value) \
    ((This)->lpVtbl->put_OAuthRequestUri(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_get_OAuthRequestUri(This, value) \
    ((This)->lpVtbl->get_OAuthRequestUri(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_put_OAuthCallbackUri(This, value) \
    ((This)->lpVtbl->put_OAuthCallbackUri(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_get_OAuthCallbackUri(This, value) \
    ((This)->lpVtbl->get_OAuthCallbackUri(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_get_AuthenticationResult(This, value) \
    ((This)->lpVtbl->get_AuthenticationResult(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_put_UserName(This, value) \
    ((This)->lpVtbl->put_UserName(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_get_UserName(This, value) \
    ((This)->lpVtbl->get_UserName(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_add_SignInStateChanged(This, handler, token) \
    ((This)->lpVtbl->add_SignInStateChanged(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_remove_SignInStateChanged(This, token) \
    ((This)->lpVtbl->remove_SignInStateChanged(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastBackgroundServiceSignInInfo2
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastBackgroundServiceSignInInfo
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastBackgroundServiceSignInInfo2[] = L"Windows.Media.Capture.IAppBroadcastBackgroundServiceSignInInfo2";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_UserNameChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceSignInInfo_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_UserNameChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_add_UserNameChanged(This, handler, token) \
    ((This)->lpVtbl->add_UserNameChanged(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_remove_UserNameChanged(This, token) \
    ((This)->lpVtbl->remove_UserNameChanged(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceSignInInfo2_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastBackgroundServiceStreamInfo
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastBackgroundServiceStreamInfo
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastBackgroundServiceStreamInfo[] = L"Windows.Media.Capture.IAppBroadcastBackgroundServiceStreamInfo";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_StreamState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastStreamState* value);
    HRESULT (STDMETHODCALLTYPE* put_DesiredVideoEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        UINT64 value);
    HRESULT (STDMETHODCALLTYPE* get_DesiredVideoEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* put_BandwidthTestBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        UINT64 value);
    HRESULT (STDMETHODCALLTYPE* get_BandwidthTestBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* put_AudioCodec)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_AudioCodec)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_BroadcastStreamReader)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader** value);
    HRESULT (STDMETHODCALLTYPE* add_StreamStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StreamStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_VideoEncodingResolutionChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_VideoEncodingResolutionChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_VideoEncodingBitrateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastBackgroundServiceStreamInfo_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_VideoEncodingBitrateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfoVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_get_StreamState(This, value) \
    ((This)->lpVtbl->get_StreamState(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_put_DesiredVideoEncodingBitrate(This, value) \
    ((This)->lpVtbl->put_DesiredVideoEncodingBitrate(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_get_DesiredVideoEncodingBitrate(This, value) \
    ((This)->lpVtbl->get_DesiredVideoEncodingBitrate(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_put_BandwidthTestBitrate(This, value) \
    ((This)->lpVtbl->put_BandwidthTestBitrate(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_get_BandwidthTestBitrate(This, value) \
    ((This)->lpVtbl->get_BandwidthTestBitrate(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_put_AudioCodec(This, value) \
    ((This)->lpVtbl->put_AudioCodec(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_get_AudioCodec(This, value) \
    ((This)->lpVtbl->get_AudioCodec(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_get_BroadcastStreamReader(This, value) \
    ((This)->lpVtbl->get_BroadcastStreamReader(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_add_StreamStateChanged(This, handler, token) \
    ((This)->lpVtbl->add_StreamStateChanged(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_remove_StreamStateChanged(This, token) \
    ((This)->lpVtbl->remove_StreamStateChanged(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_add_VideoEncodingResolutionChanged(This, handler, token) \
    ((This)->lpVtbl->add_VideoEncodingResolutionChanged(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_remove_VideoEncodingResolutionChanged(This, token) \
    ((This)->lpVtbl->remove_VideoEncodingResolutionChanged(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_add_VideoEncodingBitrateChanged(This, handler, token) \
    ((This)->lpVtbl->add_VideoEncodingBitrateChanged(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_remove_VideoEncodingBitrateChanged(This, token) \
    ((This)->lpVtbl->remove_VideoEncodingBitrateChanged(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastBackgroundServiceStreamInfo2
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastBackgroundServiceStreamInfo
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastBackgroundServiceStreamInfo2[] = L"Windows.Media.Capture.IAppBroadcastBackgroundServiceStreamInfo2";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ReportProblemWithStream)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2* This);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_ReportProblemWithStream(This) \
    ((This)->lpVtbl->ReportProblemWithStream(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundServiceStreamInfo2_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastCameraCaptureStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastCameraCaptureStateChangedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastCameraCaptureStateChangedEventArgs[] = L"Windows.Media.Capture.IAppBroadcastCameraCaptureStateChangedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraCaptureState* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs* This,
        UINT32* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_get_State(This, value) \
    ((This)->lpVtbl->get_State(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_get_ErrorCode(This, value) \
    ((This)->lpVtbl->get_ErrorCode(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastCameraCaptureStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastGlobalSettings
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastGlobalSettings
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastGlobalSettings[] = L"Windows.Media.Capture.IAppBroadcastGlobalSettings";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettingsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsBroadcastEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsDisabledByPolicy)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsGpuConstrained)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_HasHardwareEncoder)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsAudioCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsAudioCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsMicrophoneCaptureEnabledByDefault)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsMicrophoneCaptureEnabledByDefault)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsEchoCancellationEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsEchoCancellationEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SystemAudioGain)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_SystemAudioGain)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MicrophoneGain)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MicrophoneGain)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCameraCaptureEnabledByDefault)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsCameraCaptureEnabledByDefault)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedCameraId)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedCameraId)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_CameraOverlayLocation)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation value);
    HRESULT (STDMETHODCALLTYPE* get_CameraOverlayLocation)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlayLocation* value);
    HRESULT (STDMETHODCALLTYPE* put_CameraOverlaySize)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlaySize value);
    HRESULT (STDMETHODCALLTYPE* get_CameraOverlaySize)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraOverlaySize* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCursorImageCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsCursorImageCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* This,
        boolean* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettingsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettingsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_get_IsBroadcastEnabled(This, value) \
    ((This)->lpVtbl->get_IsBroadcastEnabled(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_get_IsDisabledByPolicy(This, value) \
    ((This)->lpVtbl->get_IsDisabledByPolicy(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_get_IsGpuConstrained(This, value) \
    ((This)->lpVtbl->get_IsGpuConstrained(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_get_HasHardwareEncoder(This, value) \
    ((This)->lpVtbl->get_HasHardwareEncoder(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_put_IsAudioCaptureEnabled(This, value) \
    ((This)->lpVtbl->put_IsAudioCaptureEnabled(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_get_IsAudioCaptureEnabled(This, value) \
    ((This)->lpVtbl->get_IsAudioCaptureEnabled(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_put_IsMicrophoneCaptureEnabledByDefault(This, value) \
    ((This)->lpVtbl->put_IsMicrophoneCaptureEnabledByDefault(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_get_IsMicrophoneCaptureEnabledByDefault(This, value) \
    ((This)->lpVtbl->get_IsMicrophoneCaptureEnabledByDefault(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_put_IsEchoCancellationEnabled(This, value) \
    ((This)->lpVtbl->put_IsEchoCancellationEnabled(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_get_IsEchoCancellationEnabled(This, value) \
    ((This)->lpVtbl->get_IsEchoCancellationEnabled(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_put_SystemAudioGain(This, value) \
    ((This)->lpVtbl->put_SystemAudioGain(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_get_SystemAudioGain(This, value) \
    ((This)->lpVtbl->get_SystemAudioGain(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_put_MicrophoneGain(This, value) \
    ((This)->lpVtbl->put_MicrophoneGain(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_get_MicrophoneGain(This, value) \
    ((This)->lpVtbl->get_MicrophoneGain(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_put_IsCameraCaptureEnabledByDefault(This, value) \
    ((This)->lpVtbl->put_IsCameraCaptureEnabledByDefault(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_get_IsCameraCaptureEnabledByDefault(This, value) \
    ((This)->lpVtbl->get_IsCameraCaptureEnabledByDefault(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_put_SelectedCameraId(This, value) \
    ((This)->lpVtbl->put_SelectedCameraId(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_get_SelectedCameraId(This, value) \
    ((This)->lpVtbl->get_SelectedCameraId(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_put_CameraOverlayLocation(This, value) \
    ((This)->lpVtbl->put_CameraOverlayLocation(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_get_CameraOverlayLocation(This, value) \
    ((This)->lpVtbl->get_CameraOverlayLocation(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_put_CameraOverlaySize(This, value) \
    ((This)->lpVtbl->put_CameraOverlaySize(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_get_CameraOverlaySize(This, value) \
    ((This)->lpVtbl->get_CameraOverlaySize(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_put_IsCursorImageCaptureEnabled(This, value) \
    ((This)->lpVtbl->put_IsCursorImageCaptureEnabled(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_get_IsCursorImageCaptureEnabled(This, value) \
    ((This)->lpVtbl->get_IsCursorImageCaptureEnabled(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastHeartbeatRequestedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastHeartbeatRequestedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastHeartbeatRequestedEventArgs[] = L"Windows.Media.Capture.IAppBroadcastHeartbeatRequestedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs* This,
        boolean* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_put_Handled(This, value) \
    ((This)->lpVtbl->put_Handled(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_get_Handled(This, value) \
    ((This)->lpVtbl->get_Handled(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastHeartbeatRequestedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastManagerStatics
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastManager
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastManagerStatics[] = L"Windows.Media.Capture.IAppBroadcastManagerStatics";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetGlobalSettings)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings** value);
    HRESULT (STDMETHODCALLTYPE* ApplyGlobalSettings)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastGlobalSettings* value);
    HRESULT (STDMETHODCALLTYPE* GetProviderSettings)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings** value);
    HRESULT (STDMETHODCALLTYPE* ApplyProviderSettings)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStaticsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_GetGlobalSettings(This, value) \
    ((This)->lpVtbl->GetGlobalSettings(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_ApplyGlobalSettings(This, value) \
    ((This)->lpVtbl->ApplyGlobalSettings(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_GetProviderSettings(This, value) \
    ((This)->lpVtbl->GetProviderSettings(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_ApplyProviderSettings(This, value) \
    ((This)->lpVtbl->ApplyProviderSettings(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastManagerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastMicrophoneCaptureStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastMicrophoneCaptureStateChangedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastMicrophoneCaptureStateChangedEventArgs[] = L"Windows.Media.Capture.IAppBroadcastMicrophoneCaptureStateChangedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastMicrophoneCaptureState* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs* This,
        UINT32* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_get_State(This, value) \
    ((This)->lpVtbl->get_State(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_get_ErrorCode(This, value) \
    ((This)->lpVtbl->get_ErrorCode(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastPlugIn
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastPlugIn
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastPlugIn[] = L"Windows.Media.Capture.IAppBroadcastPlugIn";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AppId)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ProviderSettings)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings** value);
    HRESULT (STDMETHODCALLTYPE* get_Logo)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* This,
        HSTRING* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_get_AppId(This, value) \
    ((This)->lpVtbl->get_AppId(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_get_ProviderSettings(This, value) \
    ((This)->lpVtbl->get_ProviderSettings(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_get_Logo(This, value) \
    ((This)->lpVtbl->get_Logo(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_get_DisplayName(This, value) \
    ((This)->lpVtbl->get_DisplayName(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastPlugInManager
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastPlugInManager
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastPlugInManager[] = L"Windows.Media.Capture.IAppBroadcastPlugInManager";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsBroadcastProviderAvailable)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_PlugInList)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This,
        __FIVectorView_1_Windows__CMedia__CCapture__CAppBroadcastPlugIn** value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultPlugIn)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn** value);
    HRESULT (STDMETHODCALLTYPE* put_DefaultPlugIn)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_get_IsBroadcastProviderAvailable(This, value) \
    ((This)->lpVtbl->get_IsBroadcastProviderAvailable(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_get_PlugInList(This, value) \
    ((This)->lpVtbl->get_PlugInList(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_get_DefaultPlugIn(This, value) \
    ((This)->lpVtbl->get_DefaultPlugIn(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_put_DefaultPlugIn(This, value) \
    ((This)->lpVtbl->put_DefaultPlugIn(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastPlugInManagerStatics
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastPlugInManager
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastPlugInManagerStatics[] = L"Windows.Media.Capture.IAppBroadcastPlugInManagerStatics";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager** ppInstance);
    HRESULT (STDMETHODCALLTYPE* GetForUser)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManager** ppInstance);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStaticsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_GetDefault(This, ppInstance) \
    ((This)->lpVtbl->GetDefault(This, ppInstance))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_GetForUser(This, user, ppInstance) \
    ((This)->lpVtbl->GetForUser(This, user, ppInstance))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInManagerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastPlugInStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastPlugInStateChangedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastPlugInStateChangedEventArgs[] = L"Windows.Media.Capture.IAppBroadcastPlugInStateChangedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PlugInState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_get_PlugInState(This, value) \
    ((This)->lpVtbl->get_PlugInState(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugInStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastPreview
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastPreview
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastPreview[] = L"Windows.Media.Capture.IAppBroadcastPreview";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* StopPreview)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This);
    HRESULT (STDMETHODCALLTYPE* get_PreviewState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPreviewState* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This,
        __FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* add_PreviewStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreview_Windows__CMedia__CCapture__CAppBroadcastPreviewStateChangedEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PreviewStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_PreviewStreamReader)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_StopPreview(This) \
    ((This)->lpVtbl->StopPreview(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_get_PreviewState(This, value) \
    ((This)->lpVtbl->get_PreviewState(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_get_ErrorCode(This, value) \
    ((This)->lpVtbl->get_ErrorCode(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_add_PreviewStateChanged(This, value, token) \
    ((This)->lpVtbl->add_PreviewStateChanged(This, value, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_remove_PreviewStateChanged(This, token) \
    ((This)->lpVtbl->remove_PreviewStateChanged(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_get_PreviewStreamReader(This, value) \
    ((This)->lpVtbl->get_PreviewStreamReader(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastPreviewStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastPreviewStateChangedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastPreviewStateChangedEventArgs[] = L"Windows.Media.Capture.IAppBroadcastPreviewStateChangedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PreviewState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPreviewState* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs* This,
        UINT32* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_get_PreviewState(This, value) \
    ((This)->lpVtbl->get_PreviewState(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_get_ErrorCode(This, value) \
    ((This)->lpVtbl->get_ErrorCode(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastPreviewStreamReader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastPreviewStreamReader
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastPreviewStreamReader[] = L"Windows.Media.Capture.IAppBroadcastPreviewStreamReader";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReaderVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_VideoWidth)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoHeight)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoStride)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoBitmapPixelFormat)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        enum __x_ABI_CWindows_CGraphics_CImaging_CBitmapPixelFormat* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoBitmapAlphaMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        enum __x_ABI_CWindows_CGraphics_CImaging_CBitmapAlphaMode* value);
    HRESULT (STDMETHODCALLTYPE* TryGetNextVideoFrame)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame** frame);
    HRESULT (STDMETHODCALLTYPE* add_VideoFrameArrived)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastPreviewStreamReader_IInspectable* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_VideoFrameArrived)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReaderVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReaderVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_get_VideoWidth(This, value) \
    ((This)->lpVtbl->get_VideoWidth(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_get_VideoHeight(This, value) \
    ((This)->lpVtbl->get_VideoHeight(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_get_VideoStride(This, value) \
    ((This)->lpVtbl->get_VideoStride(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_get_VideoBitmapPixelFormat(This, value) \
    ((This)->lpVtbl->get_VideoBitmapPixelFormat(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_get_VideoBitmapAlphaMode(This, value) \
    ((This)->lpVtbl->get_VideoBitmapAlphaMode(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_TryGetNextVideoFrame(This, frame) \
    ((This)->lpVtbl->TryGetNextVideoFrame(This, frame))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_add_VideoFrameArrived(This, value, token) \
    ((This)->lpVtbl->add_VideoFrameArrived(This, value, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_remove_VideoFrameArrived(This, token) \
    ((This)->lpVtbl->remove_VideoFrameArrived(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamReader_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastPreviewStreamVideoFrame
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastPreviewStreamVideoFrame
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastPreviewStreamVideoFrame[] = L"Windows.Media.Capture.IAppBroadcastPreviewStreamVideoFrame";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrameVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_VideoHeader)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader** value);
    HRESULT (STDMETHODCALLTYPE* get_VideoBuffer)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrameVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrameVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_get_VideoHeader(This, value) \
    ((This)->lpVtbl->get_VideoHeader(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_get_VideoBuffer(This, value) \
    ((This)->lpVtbl->get_VideoBuffer(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoFrame_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastPreviewStreamVideoHeader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastPreviewStreamVideoHeader
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastPreviewStreamVideoHeader[] = L"Windows.Media.Capture.IAppBroadcastPreviewStreamVideoHeader";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeaderVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AbsoluteTimestamp)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_RelativeTimestamp)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_FrameId)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader* This,
        UINT64* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeaderVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeaderVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_get_AbsoluteTimestamp(This, value) \
    ((This)->lpVtbl->get_AbsoluteTimestamp(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_get_RelativeTimestamp(This, value) \
    ((This)->lpVtbl->get_RelativeTimestamp(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_get_Duration(This, value) \
    ((This)->lpVtbl->get_Duration(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_get_FrameId(This, value) \
    ((This)->lpVtbl->get_FrameId(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreviewStreamVideoHeader_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastProviderSettings
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastProviderSettings
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastProviderSettings[] = L"Windows.Media.Capture.IAppBroadcastProviderSettings";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettingsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_DefaultBroadcastTitle)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultBroadcastTitle)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_AudioEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_AudioEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CustomVideoEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_CustomVideoEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CustomVideoEncodingHeight)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_CustomVideoEncodingHeight)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CustomVideoEncodingWidth)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_CustomVideoEncodingWidth)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_VideoEncodingBitrateMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingBitrateMode value);
    HRESULT (STDMETHODCALLTYPE* get_VideoEncodingBitrateMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingBitrateMode* value);
    HRESULT (STDMETHODCALLTYPE* put_VideoEncodingResolutionMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingResolutionMode value);
    HRESULT (STDMETHODCALLTYPE* get_VideoEncodingResolutionMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastVideoEncodingResolutionMode* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettingsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettingsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_put_DefaultBroadcastTitle(This, value) \
    ((This)->lpVtbl->put_DefaultBroadcastTitle(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_get_DefaultBroadcastTitle(This, value) \
    ((This)->lpVtbl->get_DefaultBroadcastTitle(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_put_AudioEncodingBitrate(This, value) \
    ((This)->lpVtbl->put_AudioEncodingBitrate(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_get_AudioEncodingBitrate(This, value) \
    ((This)->lpVtbl->get_AudioEncodingBitrate(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_put_CustomVideoEncodingBitrate(This, value) \
    ((This)->lpVtbl->put_CustomVideoEncodingBitrate(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_get_CustomVideoEncodingBitrate(This, value) \
    ((This)->lpVtbl->get_CustomVideoEncodingBitrate(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_put_CustomVideoEncodingHeight(This, value) \
    ((This)->lpVtbl->put_CustomVideoEncodingHeight(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_get_CustomVideoEncodingHeight(This, value) \
    ((This)->lpVtbl->get_CustomVideoEncodingHeight(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_put_CustomVideoEncodingWidth(This, value) \
    ((This)->lpVtbl->put_CustomVideoEncodingWidth(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_get_CustomVideoEncodingWidth(This, value) \
    ((This)->lpVtbl->get_CustomVideoEncodingWidth(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_put_VideoEncodingBitrateMode(This, value) \
    ((This)->lpVtbl->put_VideoEncodingBitrateMode(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_get_VideoEncodingBitrateMode(This, value) \
    ((This)->lpVtbl->get_VideoEncodingBitrateMode(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_put_VideoEncodingResolutionMode(This, value) \
    ((This)->lpVtbl->put_VideoEncodingResolutionMode(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_get_VideoEncodingResolutionMode(This, value) \
    ((This)->lpVtbl->get_VideoEncodingResolutionMode(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastProviderSettings_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastServices
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastServices
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastServices[] = L"Windows.Media.Capture.IAppBroadcastServices";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServicesVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CaptureTargetType)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCaptureTargetType* value);
    HRESULT (STDMETHODCALLTYPE* put_CaptureTargetType)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCaptureTargetType value);
    HRESULT (STDMETHODCALLTYPE* get_BroadcastTitle)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_BroadcastTitle)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_BroadcastLanguage)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_BroadcastLanguage)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_UserName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_CanCapture)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* EnterBroadcastModeAsync)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPlugIn* plugIn,
        __FIAsyncOperation_1_UINT32** operation);
    HRESULT (STDMETHODCALLTYPE* ExitBroadcastMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastExitBroadcastModeReason reason);
    HRESULT (STDMETHODCALLTYPE* StartBroadcast)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This);
    HRESULT (STDMETHODCALLTYPE* PauseBroadcast)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This);
    HRESULT (STDMETHODCALLTYPE* ResumeBroadcast)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This);
    HRESULT (STDMETHODCALLTYPE* StartPreview)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        struct __x_ABI_CWindows_CFoundation_CSize desiredSize,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastPreview** preview);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServicesVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServicesVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_get_CaptureTargetType(This, value) \
    ((This)->lpVtbl->get_CaptureTargetType(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_put_CaptureTargetType(This, value) \
    ((This)->lpVtbl->put_CaptureTargetType(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_get_BroadcastTitle(This, value) \
    ((This)->lpVtbl->get_BroadcastTitle(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_put_BroadcastTitle(This, value) \
    ((This)->lpVtbl->put_BroadcastTitle(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_get_BroadcastLanguage(This, value) \
    ((This)->lpVtbl->get_BroadcastLanguage(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_put_BroadcastLanguage(This, value) \
    ((This)->lpVtbl->put_BroadcastLanguage(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_get_UserName(This, value) \
    ((This)->lpVtbl->get_UserName(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_get_CanCapture(This, value) \
    ((This)->lpVtbl->get_CanCapture(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_EnterBroadcastModeAsync(This, plugIn, operation) \
    ((This)->lpVtbl->EnterBroadcastModeAsync(This, plugIn, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_ExitBroadcastMode(This, reason) \
    ((This)->lpVtbl->ExitBroadcastMode(This, reason))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_StartBroadcast(This) \
    ((This)->lpVtbl->StartBroadcast(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_PauseBroadcast(This) \
    ((This)->lpVtbl->PauseBroadcast(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_ResumeBroadcast(This) \
    ((This)->lpVtbl->ResumeBroadcast(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_StartPreview(This, desiredSize, preview) \
    ((This)->lpVtbl->StartPreview(This, desiredSize, preview))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_get_State(This, value) \
    ((This)->lpVtbl->get_State(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastSignInStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastSignInStateChangedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastSignInStateChangedEventArgs[] = L"Windows.Media.Capture.IAppBroadcastSignInStateChangedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SignInState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState* value);
    HRESULT (STDMETHODCALLTYPE* get_Result)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInResult* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_get_SignInState(This, value) \
    ((This)->lpVtbl->get_SignInState(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_get_Result(This, value) \
    ((This)->lpVtbl->get_Result(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastSignInStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastState
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastState
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastState[] = L"Windows.Media.Capture.IAppBroadcastState";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStateVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsCaptureTargetRunning)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ViewerCount)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ShouldCaptureMicrophone)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShouldCaptureMicrophone)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* RestartMicrophoneCapture)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This);
    HRESULT (STDMETHODCALLTYPE* get_ShouldCaptureCamera)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShouldCaptureCamera)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* RestartCameraCapture)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This);
    HRESULT (STDMETHODCALLTYPE* get_EncodedVideoSize)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_MicrophoneCaptureState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastMicrophoneCaptureState* value);
    HRESULT (STDMETHODCALLTYPE* get_MicrophoneCaptureError)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_CameraCaptureState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastCameraCaptureState* value);
    HRESULT (STDMETHODCALLTYPE* get_CameraCaptureError)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_StreamState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastStreamState* value);
    HRESULT (STDMETHODCALLTYPE* get_PlugInState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastPlugInState* value);
    HRESULT (STDMETHODCALLTYPE* get_OAuthRequestUri)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_OAuthCallbackUri)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_AuthenticationResult)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult** value);
    HRESULT (STDMETHODCALLTYPE* put_AuthenticationResult)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __x_ABI_CWindows_CSecurity_CAuthentication_CWeb_CIWebAuthenticationResult* value);
    HRESULT (STDMETHODCALLTYPE* put_SignInState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState value);
    HRESULT (STDMETHODCALLTYPE* get_SignInState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastSignInState* value);
    HRESULT (STDMETHODCALLTYPE* get_TerminationReason)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastTerminationReason* value);
    HRESULT (STDMETHODCALLTYPE* get_TerminationReasonPlugInSpecific)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* add_ViewerCountChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastViewerCountChangedEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ViewerCountChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_MicrophoneCaptureStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastMicrophoneCaptureStateChangedEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_MicrophoneCaptureStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_CameraCaptureStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastCameraCaptureStateChangedEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CameraCaptureStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PlugInStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastPlugInStateChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PlugInStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_StreamStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_Windows__CMedia__CCapture__CAppBroadcastStreamStateChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StreamStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_CaptureTargetClosed)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastState_IInspectable* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CaptureTargetClosed)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStateVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStateVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_get_IsCaptureTargetRunning(This, value) \
    ((This)->lpVtbl->get_IsCaptureTargetRunning(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_get_ViewerCount(This, value) \
    ((This)->lpVtbl->get_ViewerCount(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_get_ShouldCaptureMicrophone(This, value) \
    ((This)->lpVtbl->get_ShouldCaptureMicrophone(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_put_ShouldCaptureMicrophone(This, value) \
    ((This)->lpVtbl->put_ShouldCaptureMicrophone(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_RestartMicrophoneCapture(This) \
    ((This)->lpVtbl->RestartMicrophoneCapture(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_get_ShouldCaptureCamera(This, value) \
    ((This)->lpVtbl->get_ShouldCaptureCamera(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_put_ShouldCaptureCamera(This, value) \
    ((This)->lpVtbl->put_ShouldCaptureCamera(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_RestartCameraCapture(This) \
    ((This)->lpVtbl->RestartCameraCapture(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_get_EncodedVideoSize(This, value) \
    ((This)->lpVtbl->get_EncodedVideoSize(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_get_MicrophoneCaptureState(This, value) \
    ((This)->lpVtbl->get_MicrophoneCaptureState(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_get_MicrophoneCaptureError(This, value) \
    ((This)->lpVtbl->get_MicrophoneCaptureError(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_get_CameraCaptureState(This, value) \
    ((This)->lpVtbl->get_CameraCaptureState(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_get_CameraCaptureError(This, value) \
    ((This)->lpVtbl->get_CameraCaptureError(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_get_StreamState(This, value) \
    ((This)->lpVtbl->get_StreamState(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_get_PlugInState(This, value) \
    ((This)->lpVtbl->get_PlugInState(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_get_OAuthRequestUri(This, value) \
    ((This)->lpVtbl->get_OAuthRequestUri(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_get_OAuthCallbackUri(This, value) \
    ((This)->lpVtbl->get_OAuthCallbackUri(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_get_AuthenticationResult(This, value) \
    ((This)->lpVtbl->get_AuthenticationResult(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_put_AuthenticationResult(This, value) \
    ((This)->lpVtbl->put_AuthenticationResult(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_put_SignInState(This, value) \
    ((This)->lpVtbl->put_SignInState(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_get_SignInState(This, value) \
    ((This)->lpVtbl->get_SignInState(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_get_TerminationReason(This, value) \
    ((This)->lpVtbl->get_TerminationReason(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_get_TerminationReasonPlugInSpecific(This, value) \
    ((This)->lpVtbl->get_TerminationReasonPlugInSpecific(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_add_ViewerCountChanged(This, value, token) \
    ((This)->lpVtbl->add_ViewerCountChanged(This, value, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_remove_ViewerCountChanged(This, token) \
    ((This)->lpVtbl->remove_ViewerCountChanged(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_add_MicrophoneCaptureStateChanged(This, value, token) \
    ((This)->lpVtbl->add_MicrophoneCaptureStateChanged(This, value, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_remove_MicrophoneCaptureStateChanged(This, token) \
    ((This)->lpVtbl->remove_MicrophoneCaptureStateChanged(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_add_CameraCaptureStateChanged(This, value, token) \
    ((This)->lpVtbl->add_CameraCaptureStateChanged(This, value, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_remove_CameraCaptureStateChanged(This, token) \
    ((This)->lpVtbl->remove_CameraCaptureStateChanged(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_add_PlugInStateChanged(This, handler, token) \
    ((This)->lpVtbl->add_PlugInStateChanged(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_remove_PlugInStateChanged(This, token) \
    ((This)->lpVtbl->remove_PlugInStateChanged(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_add_StreamStateChanged(This, handler, token) \
    ((This)->lpVtbl->add_StreamStateChanged(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_remove_StreamStateChanged(This, token) \
    ((This)->lpVtbl->remove_StreamStateChanged(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_add_CaptureTargetClosed(This, value, token) \
    ((This)->lpVtbl->add_CaptureTargetClosed(This, value, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_remove_CaptureTargetClosed(This, token) \
    ((This)->lpVtbl->remove_CaptureTargetClosed(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastState_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastStreamAudioFrame
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastStreamAudioFrame
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastStreamAudioFrame[] = L"Windows.Media.Capture.IAppBroadcastStreamAudioFrame";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrameVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AudioHeader)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader** value);
    HRESULT (STDMETHODCALLTYPE* get_AudioBuffer)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrameVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrameVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_get_AudioHeader(This, value) \
    ((This)->lpVtbl->get_AudioHeader(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_get_AudioBuffer(This, value) \
    ((This)->lpVtbl->get_AudioBuffer(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastStreamAudioHeader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastStreamAudioHeader
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastStreamAudioHeader[] = L"Windows.Media.Capture.IAppBroadcastStreamAudioHeader";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeaderVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AbsoluteTimestamp)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_RelativeTimestamp)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_HasDiscontinuity)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_FrameId)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader* This,
        UINT64* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeaderVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeaderVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_get_AbsoluteTimestamp(This, value) \
    ((This)->lpVtbl->get_AbsoluteTimestamp(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_get_RelativeTimestamp(This, value) \
    ((This)->lpVtbl->get_RelativeTimestamp(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_get_Duration(This, value) \
    ((This)->lpVtbl->get_Duration(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_get_HasDiscontinuity(This, value) \
    ((This)->lpVtbl->get_HasDiscontinuity(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_get_FrameId(This, value) \
    ((This)->lpVtbl->get_FrameId(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioHeader_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastStreamReader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastStreamReader
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastStreamReader[] = L"Windows.Media.Capture.IAppBroadcastStreamReader";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReaderVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AudioChannels)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_AudioSampleRate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_AudioAacSequence)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);
    HRESULT (STDMETHODCALLTYPE* get_AudioBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* TryGetNextAudioFrame)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamAudioFrame** frame);
    HRESULT (STDMETHODCALLTYPE* get_VideoWidth)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoHeight)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* TryGetNextVideoFrame)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame** frame);
    HRESULT (STDMETHODCALLTYPE* add_AudioFrameArrived)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AudioFrameArrived)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_VideoFrameArrived)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppBroadcastStreamReader_IInspectable* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_VideoFrameArrived)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReaderVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReaderVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_get_AudioChannels(This, value) \
    ((This)->lpVtbl->get_AudioChannels(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_get_AudioSampleRate(This, value) \
    ((This)->lpVtbl->get_AudioSampleRate(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_get_AudioAacSequence(This, value) \
    ((This)->lpVtbl->get_AudioAacSequence(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_get_AudioBitrate(This, value) \
    ((This)->lpVtbl->get_AudioBitrate(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_TryGetNextAudioFrame(This, frame) \
    ((This)->lpVtbl->TryGetNextAudioFrame(This, frame))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_get_VideoWidth(This, value) \
    ((This)->lpVtbl->get_VideoWidth(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_get_VideoHeight(This, value) \
    ((This)->lpVtbl->get_VideoHeight(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_get_VideoBitrate(This, value) \
    ((This)->lpVtbl->get_VideoBitrate(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_TryGetNextVideoFrame(This, frame) \
    ((This)->lpVtbl->TryGetNextVideoFrame(This, frame))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_add_AudioFrameArrived(This, value, token) \
    ((This)->lpVtbl->add_AudioFrameArrived(This, value, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_remove_AudioFrameArrived(This, token) \
    ((This)->lpVtbl->remove_AudioFrameArrived(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_add_VideoFrameArrived(This, value, token) \
    ((This)->lpVtbl->add_VideoFrameArrived(This, value, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_remove_VideoFrameArrived(This, token) \
    ((This)->lpVtbl->remove_VideoFrameArrived(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamReader_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastStreamStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastStreamStateChangedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastStreamStateChangedEventArgs[] = L"Windows.Media.Capture.IAppBroadcastStreamStateChangedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_StreamState)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppBroadcastStreamState* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_get_StreamState(This, value) \
    ((This)->lpVtbl->get_StreamState(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastStreamVideoFrame
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastStreamVideoFrame
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastStreamVideoFrame[] = L"Windows.Media.Capture.IAppBroadcastStreamVideoFrame";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrameVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_VideoHeader)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader** value);
    HRESULT (STDMETHODCALLTYPE* get_VideoBuffer)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrameVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrameVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_get_VideoHeader(This, value) \
    ((This)->lpVtbl->get_VideoHeader(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_get_VideoBuffer(This, value) \
    ((This)->lpVtbl->get_VideoBuffer(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoFrame_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastStreamVideoHeader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastStreamVideoHeader
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastStreamVideoHeader[] = L"Windows.Media.Capture.IAppBroadcastStreamVideoHeader";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeaderVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AbsoluteTimestamp)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_RelativeTimestamp)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_IsKeyFrame)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_HasDiscontinuity)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_FrameId)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader* This,
        UINT64* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeaderVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeaderVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_get_AbsoluteTimestamp(This, value) \
    ((This)->lpVtbl->get_AbsoluteTimestamp(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_get_RelativeTimestamp(This, value) \
    ((This)->lpVtbl->get_RelativeTimestamp(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_get_Duration(This, value) \
    ((This)->lpVtbl->get_Duration(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_get_IsKeyFrame(This, value) \
    ((This)->lpVtbl->get_IsKeyFrame(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_get_HasDiscontinuity(This, value) \
    ((This)->lpVtbl->get_HasDiscontinuity(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_get_FrameId(This, value) \
    ((This)->lpVtbl->get_FrameId(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastStreamVideoHeader_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastTriggerDetails
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastTriggerDetails
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastTriggerDetails[] = L"Windows.Media.Capture.IAppBroadcastTriggerDetails";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetailsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundService)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastBackgroundService** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetailsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetailsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_get_BackgroundService(This, value) \
    ((This)->lpVtbl->get_BackgroundService(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastTriggerDetails_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppBroadcastViewerCountChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppBroadcastViewerCountChangedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppBroadcastViewerCountChangedEventArgs[] = L"Windows.Media.Capture.IAppBroadcastViewerCountChangedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ViewerCount)(__x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs* This,
        UINT32* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_get_ViewerCount(This, value) \
    ((This)->lpVtbl->get_ViewerCount(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastViewerCountChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCapture[] = L"Windows.Media.Capture.IAppCapture";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsCapturingAudio)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCapturingVideo)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_CapturingChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCapture_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CapturingChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppCapture* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCapture
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCapture_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCapture_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCapture_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCapture_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCapture_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCapture_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCapture_get_IsCapturingAudio(This, value) \
    ((This)->lpVtbl->get_IsCapturingAudio(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCapture_get_IsCapturingVideo(This, value) \
    ((This)->lpVtbl->get_IsCapturingVideo(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCapture_add_CapturingChanged(This, handler, token) \
    ((This)->lpVtbl->add_CapturingChanged(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCapture_remove_CapturingChanged(This, token) \
    ((This)->lpVtbl->remove_CapturingChanged(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCapture_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureAlternateShortcutKeys
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureAlternateShortcutKeys
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureAlternateShortcutKeys[] = L"Windows.Media.Capture.IAppCaptureAlternateShortcutKeys";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeysVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_ToggleGameBarKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleGameBarKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey* value);
    HRESULT (STDMETHODCALLTYPE* put_ToggleGameBarKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleGameBarKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);
    HRESULT (STDMETHODCALLTYPE* put_SaveHistoricalVideoKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey value);
    HRESULT (STDMETHODCALLTYPE* get_SaveHistoricalVideoKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey* value);
    HRESULT (STDMETHODCALLTYPE* put_SaveHistoricalVideoKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers value);
    HRESULT (STDMETHODCALLTYPE* get_SaveHistoricalVideoKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);
    HRESULT (STDMETHODCALLTYPE* put_ToggleRecordingKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleRecordingKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey* value);
    HRESULT (STDMETHODCALLTYPE* put_ToggleRecordingKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleRecordingKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);
    HRESULT (STDMETHODCALLTYPE* put_TakeScreenshotKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey value);
    HRESULT (STDMETHODCALLTYPE* get_TakeScreenshotKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey* value);
    HRESULT (STDMETHODCALLTYPE* put_TakeScreenshotKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers value);
    HRESULT (STDMETHODCALLTYPE* get_TakeScreenshotKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);
    HRESULT (STDMETHODCALLTYPE* put_ToggleRecordingIndicatorKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleRecordingIndicatorKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey* value);
    HRESULT (STDMETHODCALLTYPE* put_ToggleRecordingIndicatorKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleRecordingIndicatorKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeysVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeysVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_put_ToggleGameBarKey(This, value) \
    ((This)->lpVtbl->put_ToggleGameBarKey(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_get_ToggleGameBarKey(This, value) \
    ((This)->lpVtbl->get_ToggleGameBarKey(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_put_ToggleGameBarKeyModifiers(This, value) \
    ((This)->lpVtbl->put_ToggleGameBarKeyModifiers(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_get_ToggleGameBarKeyModifiers(This, value) \
    ((This)->lpVtbl->get_ToggleGameBarKeyModifiers(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_put_SaveHistoricalVideoKey(This, value) \
    ((This)->lpVtbl->put_SaveHistoricalVideoKey(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_get_SaveHistoricalVideoKey(This, value) \
    ((This)->lpVtbl->get_SaveHistoricalVideoKey(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_put_SaveHistoricalVideoKeyModifiers(This, value) \
    ((This)->lpVtbl->put_SaveHistoricalVideoKeyModifiers(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_get_SaveHistoricalVideoKeyModifiers(This, value) \
    ((This)->lpVtbl->get_SaveHistoricalVideoKeyModifiers(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_put_ToggleRecordingKey(This, value) \
    ((This)->lpVtbl->put_ToggleRecordingKey(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_get_ToggleRecordingKey(This, value) \
    ((This)->lpVtbl->get_ToggleRecordingKey(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_put_ToggleRecordingKeyModifiers(This, value) \
    ((This)->lpVtbl->put_ToggleRecordingKeyModifiers(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_get_ToggleRecordingKeyModifiers(This, value) \
    ((This)->lpVtbl->get_ToggleRecordingKeyModifiers(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_put_TakeScreenshotKey(This, value) \
    ((This)->lpVtbl->put_TakeScreenshotKey(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_get_TakeScreenshotKey(This, value) \
    ((This)->lpVtbl->get_TakeScreenshotKey(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_put_TakeScreenshotKeyModifiers(This, value) \
    ((This)->lpVtbl->put_TakeScreenshotKeyModifiers(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_get_TakeScreenshotKeyModifiers(This, value) \
    ((This)->lpVtbl->get_TakeScreenshotKeyModifiers(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_put_ToggleRecordingIndicatorKey(This, value) \
    ((This)->lpVtbl->put_ToggleRecordingIndicatorKey(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_get_ToggleRecordingIndicatorKey(This, value) \
    ((This)->lpVtbl->get_ToggleRecordingIndicatorKey(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_put_ToggleRecordingIndicatorKeyModifiers(This, value) \
    ((This)->lpVtbl->put_ToggleRecordingIndicatorKeyModifiers(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_get_ToggleRecordingIndicatorKeyModifiers(This, value) \
    ((This)->lpVtbl->get_ToggleRecordingIndicatorKeyModifiers(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureAlternateShortcutKeys2
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureAlternateShortcutKeys
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureAlternateShortcutKeys2[] = L"Windows.Media.Capture.IAppCaptureAlternateShortcutKeys2";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_ToggleMicrophoneCaptureKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleMicrophoneCaptureKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey* value);
    HRESULT (STDMETHODCALLTYPE* put_ToggleMicrophoneCaptureKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleMicrophoneCaptureKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_put_ToggleMicrophoneCaptureKey(This, value) \
    ((This)->lpVtbl->put_ToggleMicrophoneCaptureKey(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_get_ToggleMicrophoneCaptureKey(This, value) \
    ((This)->lpVtbl->get_ToggleMicrophoneCaptureKey(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_put_ToggleMicrophoneCaptureKeyModifiers(This, value) \
    ((This)->lpVtbl->put_ToggleMicrophoneCaptureKeyModifiers(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_get_ToggleMicrophoneCaptureKeyModifiers(This, value) \
    ((This)->lpVtbl->get_ToggleMicrophoneCaptureKeyModifiers(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys2_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureAlternateShortcutKeys3
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureAlternateShortcutKeys
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureAlternateShortcutKeys3[] = L"Windows.Media.Capture.IAppCaptureAlternateShortcutKeys3";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_ToggleCameraCaptureKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleCameraCaptureKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey* value);
    HRESULT (STDMETHODCALLTYPE* put_ToggleCameraCaptureKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleCameraCaptureKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);
    HRESULT (STDMETHODCALLTYPE* put_ToggleBroadcastKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleBroadcastKey)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey* value);
    HRESULT (STDMETHODCALLTYPE* put_ToggleBroadcastKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers value);
    HRESULT (STDMETHODCALLTYPE* get_ToggleBroadcastKeyModifiers)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_put_ToggleCameraCaptureKey(This, value) \
    ((This)->lpVtbl->put_ToggleCameraCaptureKey(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_get_ToggleCameraCaptureKey(This, value) \
    ((This)->lpVtbl->get_ToggleCameraCaptureKey(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_put_ToggleCameraCaptureKeyModifiers(This, value) \
    ((This)->lpVtbl->put_ToggleCameraCaptureKeyModifiers(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_get_ToggleCameraCaptureKeyModifiers(This, value) \
    ((This)->lpVtbl->get_ToggleCameraCaptureKeyModifiers(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_put_ToggleBroadcastKey(This, value) \
    ((This)->lpVtbl->put_ToggleBroadcastKey(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_get_ToggleBroadcastKey(This, value) \
    ((This)->lpVtbl->get_ToggleBroadcastKey(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_put_ToggleBroadcastKeyModifiers(This, value) \
    ((This)->lpVtbl->put_ToggleBroadcastKeyModifiers(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_get_ToggleBroadcastKeyModifiers(This, value) \
    ((This)->lpVtbl->get_ToggleBroadcastKeyModifiers(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys3_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureDurationGeneratedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureDurationGeneratedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureDurationGeneratedEventArgs[] = L"Windows.Media.Capture.IAppCaptureDurationGeneratedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_get_Duration(This, value) \
    ((This)->lpVtbl->get_Duration(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureDurationGeneratedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureFileGeneratedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureFileGeneratedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureFileGeneratedEventArgs[] = L"Windows.Media.Capture.IAppCaptureFileGeneratedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_File)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs* This,
        __x_ABI_CWindows_CStorage_CIStorageFile** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_get_File(This, value) \
    ((This)->lpVtbl->get_File(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureFileGeneratedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureManagerStatics
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureManager
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureManagerStatics[] = L"Windows.Media.Capture.IAppCaptureManagerStatics";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetCurrentSettings)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings** value);
    HRESULT (STDMETHODCALLTYPE* ApplySettings)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* appCaptureSettings);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStaticsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_GetCurrentSettings(This, value) \
    ((This)->lpVtbl->GetCurrentSettings(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_ApplySettings(This, appCaptureSettings) \
    ((This)->lpVtbl->ApplySettings(This, appCaptureSettings))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureManagerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureMetadataWriter
 *
 * Introduced to Windows.Media.Capture.AppCaptureMetadataContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureMetadataWriter
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureMetadataWriter[] = L"Windows.Media.Capture.IAppCaptureMetadataWriter";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriterVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* AddStringEvent)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        HSTRING name,
        HSTRING value,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority priority);
    HRESULT (STDMETHODCALLTYPE* AddInt32Event)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        HSTRING name,
        INT32 value,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority priority);
    HRESULT (STDMETHODCALLTYPE* AddDoubleEvent)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        HSTRING name,
        DOUBLE value,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority priority);
    HRESULT (STDMETHODCALLTYPE* StartStringState)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        HSTRING name,
        HSTRING value,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority priority);
    HRESULT (STDMETHODCALLTYPE* StartInt32State)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        HSTRING name,
        INT32 value,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority priority);
    HRESULT (STDMETHODCALLTYPE* StartDoubleState)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        HSTRING name,
        DOUBLE value,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMetadataPriority priority);
    HRESULT (STDMETHODCALLTYPE* StopState)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        HSTRING name);
    HRESULT (STDMETHODCALLTYPE* StopAllStates)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This);
    HRESULT (STDMETHODCALLTYPE* get_RemainingStorageBytesAvailable)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* add_MetadataPurged)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureMetadataWriter_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_MetadataPurged)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriterVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriterVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_AddStringEvent(This, name, value, priority) \
    ((This)->lpVtbl->AddStringEvent(This, name, value, priority))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_AddInt32Event(This, name, value, priority) \
    ((This)->lpVtbl->AddInt32Event(This, name, value, priority))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_AddDoubleEvent(This, name, value, priority) \
    ((This)->lpVtbl->AddDoubleEvent(This, name, value, priority))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_StartStringState(This, name, value, priority) \
    ((This)->lpVtbl->StartStringState(This, name, value, priority))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_StartInt32State(This, name, value, priority) \
    ((This)->lpVtbl->StartInt32State(This, name, value, priority))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_StartDoubleState(This, name, value, priority) \
    ((This)->lpVtbl->StartDoubleState(This, name, value, priority))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_StopState(This, name) \
    ((This)->lpVtbl->StopState(This, name))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_StopAllStates(This) \
    ((This)->lpVtbl->StopAllStates(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_get_RemainingStorageBytesAvailable(This, value) \
    ((This)->lpVtbl->get_RemainingStorageBytesAvailable(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_add_MetadataPurged(This, handler, token) \
    ((This)->lpVtbl->add_MetadataPurged(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_remove_MetadataPurged(This, token) \
    ((This)->lpVtbl->remove_MetadataPurged(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMetadataWriter_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureMicrophoneCaptureStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureMicrophoneCaptureStateChangedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureMicrophoneCaptureStateChangedEventArgs[] = L"Windows.Media.Capture.IAppCaptureMicrophoneCaptureStateChangedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMicrophoneCaptureState* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs* This,
        UINT32* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_get_State(This, value) \
    ((This)->lpVtbl->get_State(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_get_ErrorCode(This, value) \
    ((This)->lpVtbl->get_ErrorCode(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureMicrophoneCaptureStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureRecordOperation
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureRecordOperation
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureRecordOperation[] = L"Windows.Media.Capture.IAppCaptureRecordOperation";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* StopRecording)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureRecordingState* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        __FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        __FIReference_1_Windows__CFoundation__CTimeSpan** value);
    HRESULT (STDMETHODCALLTYPE* get_File)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        __x_ABI_CWindows_CStorage_CIStorageFile** value);
    HRESULT (STDMETHODCALLTYPE* get_IsFileTruncated)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        __FIReference_1_boolean** value);
    HRESULT (STDMETHODCALLTYPE* add_StateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureRecordingStateChangedEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DurationGenerated)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureDurationGeneratedEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DurationGenerated)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FileGenerated)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureRecordOperation_Windows__CMedia__CCapture__CAppCaptureFileGeneratedEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FileGenerated)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperationVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_StopRecording(This) \
    ((This)->lpVtbl->StopRecording(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_get_State(This, value) \
    ((This)->lpVtbl->get_State(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_get_ErrorCode(This, value) \
    ((This)->lpVtbl->get_ErrorCode(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_get_Duration(This, value) \
    ((This)->lpVtbl->get_Duration(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_get_File(This, value) \
    ((This)->lpVtbl->get_File(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_get_IsFileTruncated(This, value) \
    ((This)->lpVtbl->get_IsFileTruncated(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_add_StateChanged(This, value, token) \
    ((This)->lpVtbl->add_StateChanged(This, value, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_remove_StateChanged(This, token) \
    ((This)->lpVtbl->remove_StateChanged(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_add_DurationGenerated(This, value, token) \
    ((This)->lpVtbl->add_DurationGenerated(This, value, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_remove_DurationGenerated(This, token) \
    ((This)->lpVtbl->remove_DurationGenerated(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_add_FileGenerated(This, value, token) \
    ((This)->lpVtbl->add_FileGenerated(This, value, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_remove_FileGenerated(This, token) \
    ((This)->lpVtbl->remove_FileGenerated(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureRecordingStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureRecordingStateChangedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureRecordingStateChangedEventArgs[] = L"Windows.Media.Capture.IAppCaptureRecordingStateChangedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureRecordingState* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs* This,
        UINT32* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_get_State(This, value) \
    ((This)->lpVtbl->get_State(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_get_ErrorCode(This, value) \
    ((This)->lpVtbl->get_ErrorCode(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordingStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureServices
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureServices
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureServices[] = L"Windows.Media.Capture.IAppCaptureServices";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServicesVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Record)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation** operation);
    HRESULT (STDMETHODCALLTYPE* RecordTimeSpan)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime startTime,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan duration,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureRecordOperation** operation);
    HRESULT (STDMETHODCALLTYPE* get_CanCapture)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServicesVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServicesVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_Record(This, operation) \
    ((This)->lpVtbl->Record(This, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_RecordTimeSpan(This, startTime, duration, operation) \
    ((This)->lpVtbl->RecordTimeSpan(This, startTime, duration, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_get_CanCapture(This, value) \
    ((This)->lpVtbl->get_CanCapture(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_get_State(This, value) \
    ((This)->lpVtbl->get_State(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureSettings
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureSettings
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureSettings[] = L"Windows.Media.Capture.IAppCaptureSettings";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettingsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_AppCaptureDestinationFolder)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* value);
    HRESULT (STDMETHODCALLTYPE* get_AppCaptureDestinationFolder)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* put_AudioEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_AudioEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_IsAudioCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsAudioCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CustomVideoEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_CustomVideoEncodingBitrate)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CustomVideoEncodingHeight)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_CustomVideoEncodingHeight)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CustomVideoEncodingWidth)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_CustomVideoEncodingWidth)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_HistoricalBufferLength)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_HistoricalBufferLength)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_HistoricalBufferLengthUnit)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureHistoricalBufferLengthUnit value);
    HRESULT (STDMETHODCALLTYPE* get_HistoricalBufferLengthUnit)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureHistoricalBufferLengthUnit* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHistoricalCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsHistoricalCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHistoricalCaptureOnBatteryAllowed)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsHistoricalCaptureOnBatteryAllowed)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHistoricalCaptureOnWirelessDisplayAllowed)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsHistoricalCaptureOnWirelessDisplayAllowed)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_MaximumRecordLength)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_MaximumRecordLength)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_ScreenshotDestinationFolder)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* value);
    HRESULT (STDMETHODCALLTYPE* get_ScreenshotDestinationFolder)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* put_VideoEncodingBitrateMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingBitrateMode value);
    HRESULT (STDMETHODCALLTYPE* get_VideoEncodingBitrateMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingBitrateMode* value);
    HRESULT (STDMETHODCALLTYPE* put_VideoEncodingResolutionMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingResolutionMode value);
    HRESULT (STDMETHODCALLTYPE* get_VideoEncodingResolutionMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingResolutionMode* value);
    HRESULT (STDMETHODCALLTYPE* put_IsAppCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsAppCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCpuConstrained)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsDisabledByPolicy)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsMemoryConstrained)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_HasHardwareEncoder)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings* This,
        boolean* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettingsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettingsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_put_AppCaptureDestinationFolder(This, value) \
    ((This)->lpVtbl->put_AppCaptureDestinationFolder(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_AppCaptureDestinationFolder(This, value) \
    ((This)->lpVtbl->get_AppCaptureDestinationFolder(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_put_AudioEncodingBitrate(This, value) \
    ((This)->lpVtbl->put_AudioEncodingBitrate(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_AudioEncodingBitrate(This, value) \
    ((This)->lpVtbl->get_AudioEncodingBitrate(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_put_IsAudioCaptureEnabled(This, value) \
    ((This)->lpVtbl->put_IsAudioCaptureEnabled(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_IsAudioCaptureEnabled(This, value) \
    ((This)->lpVtbl->get_IsAudioCaptureEnabled(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_put_CustomVideoEncodingBitrate(This, value) \
    ((This)->lpVtbl->put_CustomVideoEncodingBitrate(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_CustomVideoEncodingBitrate(This, value) \
    ((This)->lpVtbl->get_CustomVideoEncodingBitrate(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_put_CustomVideoEncodingHeight(This, value) \
    ((This)->lpVtbl->put_CustomVideoEncodingHeight(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_CustomVideoEncodingHeight(This, value) \
    ((This)->lpVtbl->get_CustomVideoEncodingHeight(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_put_CustomVideoEncodingWidth(This, value) \
    ((This)->lpVtbl->put_CustomVideoEncodingWidth(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_CustomVideoEncodingWidth(This, value) \
    ((This)->lpVtbl->get_CustomVideoEncodingWidth(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_put_HistoricalBufferLength(This, value) \
    ((This)->lpVtbl->put_HistoricalBufferLength(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_HistoricalBufferLength(This, value) \
    ((This)->lpVtbl->get_HistoricalBufferLength(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_put_HistoricalBufferLengthUnit(This, value) \
    ((This)->lpVtbl->put_HistoricalBufferLengthUnit(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_HistoricalBufferLengthUnit(This, value) \
    ((This)->lpVtbl->get_HistoricalBufferLengthUnit(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_put_IsHistoricalCaptureEnabled(This, value) \
    ((This)->lpVtbl->put_IsHistoricalCaptureEnabled(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_IsHistoricalCaptureEnabled(This, value) \
    ((This)->lpVtbl->get_IsHistoricalCaptureEnabled(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_put_IsHistoricalCaptureOnBatteryAllowed(This, value) \
    ((This)->lpVtbl->put_IsHistoricalCaptureOnBatteryAllowed(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_IsHistoricalCaptureOnBatteryAllowed(This, value) \
    ((This)->lpVtbl->get_IsHistoricalCaptureOnBatteryAllowed(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_put_IsHistoricalCaptureOnWirelessDisplayAllowed(This, value) \
    ((This)->lpVtbl->put_IsHistoricalCaptureOnWirelessDisplayAllowed(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_IsHistoricalCaptureOnWirelessDisplayAllowed(This, value) \
    ((This)->lpVtbl->get_IsHistoricalCaptureOnWirelessDisplayAllowed(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_put_MaximumRecordLength(This, value) \
    ((This)->lpVtbl->put_MaximumRecordLength(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_MaximumRecordLength(This, value) \
    ((This)->lpVtbl->get_MaximumRecordLength(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_put_ScreenshotDestinationFolder(This, value) \
    ((This)->lpVtbl->put_ScreenshotDestinationFolder(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_ScreenshotDestinationFolder(This, value) \
    ((This)->lpVtbl->get_ScreenshotDestinationFolder(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_put_VideoEncodingBitrateMode(This, value) \
    ((This)->lpVtbl->put_VideoEncodingBitrateMode(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_VideoEncodingBitrateMode(This, value) \
    ((This)->lpVtbl->get_VideoEncodingBitrateMode(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_put_VideoEncodingResolutionMode(This, value) \
    ((This)->lpVtbl->put_VideoEncodingResolutionMode(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_VideoEncodingResolutionMode(This, value) \
    ((This)->lpVtbl->get_VideoEncodingResolutionMode(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_put_IsAppCaptureEnabled(This, value) \
    ((This)->lpVtbl->put_IsAppCaptureEnabled(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_IsAppCaptureEnabled(This, value) \
    ((This)->lpVtbl->get_IsAppCaptureEnabled(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_IsCpuConstrained(This, value) \
    ((This)->lpVtbl->get_IsCpuConstrained(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_IsDisabledByPolicy(This, value) \
    ((This)->lpVtbl->get_IsDisabledByPolicy(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_IsMemoryConstrained(This, value) \
    ((This)->lpVtbl->get_IsMemoryConstrained(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_get_HasHardwareEncoder(This, value) \
    ((This)->lpVtbl->get_HasHardwareEncoder(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureSettings2
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureSettings
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureSettings2[] = L"Windows.Media.Capture.IAppCaptureSettings2";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsGpuConstrained)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_AlternateShortcutKeys)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureAlternateShortcutKeys** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_get_IsGpuConstrained(This, value) \
    ((This)->lpVtbl->get_IsGpuConstrained(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_get_AlternateShortcutKeys(This, value) \
    ((This)->lpVtbl->get_AlternateShortcutKeys(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings2_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureSettings3
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureSettings
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureSettings3[] = L"Windows.Media.Capture.IAppCaptureSettings3";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_IsMicrophoneCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsMicrophoneCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3* This,
        boolean* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_put_IsMicrophoneCaptureEnabled(This, value) \
    ((This)->lpVtbl->put_IsMicrophoneCaptureEnabled(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_get_IsMicrophoneCaptureEnabled(This, value) \
    ((This)->lpVtbl->get_IsMicrophoneCaptureEnabled(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings3_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureSettings4
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureSettings
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureSettings4[] = L"Windows.Media.Capture.IAppCaptureSettings4";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_IsMicrophoneCaptureEnabledByDefault)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsMicrophoneCaptureEnabledByDefault)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SystemAudioGain)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_SystemAudioGain)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MicrophoneGain)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MicrophoneGain)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_VideoEncodingFrameRateMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingFrameRateMode value);
    HRESULT (STDMETHODCALLTYPE* get_VideoEncodingFrameRateMode)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureVideoEncodingFrameRateMode* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_put_IsMicrophoneCaptureEnabledByDefault(This, value) \
    ((This)->lpVtbl->put_IsMicrophoneCaptureEnabledByDefault(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_get_IsMicrophoneCaptureEnabledByDefault(This, value) \
    ((This)->lpVtbl->get_IsMicrophoneCaptureEnabledByDefault(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_put_SystemAudioGain(This, value) \
    ((This)->lpVtbl->put_SystemAudioGain(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_get_SystemAudioGain(This, value) \
    ((This)->lpVtbl->get_SystemAudioGain(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_put_MicrophoneGain(This, value) \
    ((This)->lpVtbl->put_MicrophoneGain(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_get_MicrophoneGain(This, value) \
    ((This)->lpVtbl->get_MicrophoneGain(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_put_VideoEncodingFrameRateMode(This, value) \
    ((This)->lpVtbl->put_VideoEncodingFrameRateMode(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_get_VideoEncodingFrameRateMode(This, value) \
    ((This)->lpVtbl->get_VideoEncodingFrameRateMode(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings4_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureSettings5
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureSettings
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureSettings5[] = L"Windows.Media.Capture.IAppCaptureSettings5";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_IsEchoCancellationEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsEchoCancellationEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCursorImageCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsCursorImageCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5* This,
        boolean* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_put_IsEchoCancellationEnabled(This, value) \
    ((This)->lpVtbl->put_IsEchoCancellationEnabled(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_get_IsEchoCancellationEnabled(This, value) \
    ((This)->lpVtbl->get_IsEchoCancellationEnabled(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_put_IsCursorImageCaptureEnabled(This, value) \
    ((This)->lpVtbl->put_IsCursorImageCaptureEnabled(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_get_IsCursorImageCaptureEnabled(This, value) \
    ((This)->lpVtbl->get_IsCursorImageCaptureEnabled(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureSettings5_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureState
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCaptureState
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureState[] = L"Windows.Media.Capture.IAppCaptureState";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStateVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsTargetRunning)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsHistoricalCaptureEnabled)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ShouldCaptureMicrophone)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShouldCaptureMicrophone)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* RestartMicrophoneCapture)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This);
    HRESULT (STDMETHODCALLTYPE* get_MicrophoneCaptureState)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CAppCaptureMicrophoneCaptureState* value);
    HRESULT (STDMETHODCALLTYPE* get_MicrophoneCaptureError)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* add_MicrophoneCaptureStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_Windows__CMedia__CCapture__CAppCaptureMicrophoneCaptureStateChangedEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_MicrophoneCaptureStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_CaptureTargetClosed)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CAppCaptureState_IInspectable* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CaptureTargetClosed)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStateVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStateVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_get_IsTargetRunning(This, value) \
    ((This)->lpVtbl->get_IsTargetRunning(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_get_IsHistoricalCaptureEnabled(This, value) \
    ((This)->lpVtbl->get_IsHistoricalCaptureEnabled(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_get_ShouldCaptureMicrophone(This, value) \
    ((This)->lpVtbl->get_ShouldCaptureMicrophone(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_put_ShouldCaptureMicrophone(This, value) \
    ((This)->lpVtbl->put_ShouldCaptureMicrophone(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_RestartMicrophoneCapture(This) \
    ((This)->lpVtbl->RestartMicrophoneCapture(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_get_MicrophoneCaptureState(This, value) \
    ((This)->lpVtbl->get_MicrophoneCaptureState(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_get_MicrophoneCaptureError(This, value) \
    ((This)->lpVtbl->get_MicrophoneCaptureError(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_add_MicrophoneCaptureStateChanged(This, value, token) \
    ((This)->lpVtbl->add_MicrophoneCaptureStateChanged(This, value, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_remove_MicrophoneCaptureStateChanged(This, token) \
    ((This)->lpVtbl->remove_MicrophoneCaptureStateChanged(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_add_CaptureTargetClosed(This, value, token) \
    ((This)->lpVtbl->add_CaptureTargetClosed(This, value, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_remove_CaptureTargetClosed(This, token) \
    ((This)->lpVtbl->remove_CaptureTargetClosed(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureState_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureStatics[] = L"Windows.Media.Capture.IAppCaptureStatics";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetForCurrentView)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCapture** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStaticsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_GetForCurrentView(This, value) \
    ((This)->lpVtbl->GetForCurrentView(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Interface Windows.Media.Capture.IAppCaptureStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.AppCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IAppCaptureStatics2[] = L"Windows.Media.Capture.IAppCaptureStatics2";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SetAllowedAsync)(__x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2* This,
        boolean allowed,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_SetAllowedAsync(This, allowed, operation) \
    ((This)->lpVtbl->SetAllowedAsync(This, allowed, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIAppCaptureStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

/*
 *
 * Interface Windows.Media.Capture.ICameraCaptureUI
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CameraCaptureUI
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICameraCaptureUI[] = L"Windows.Media.Capture.ICameraCaptureUI";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PhotoSettings)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
        __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings** value);
    HRESULT (STDMETHODCALLTYPE* get_VideoSettings)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
        __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings** value);
    HRESULT (STDMETHODCALLTYPE* CaptureFileAsync)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMode mode,
        __FIAsyncOperation_1_Windows__CStorage__CStorageFile** asyncInfo);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_get_PhotoSettings(This, value) \
    ((This)->lpVtbl->get_PhotoSettings(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_get_VideoSettings(This, value) \
    ((This)->lpVtbl->get_VideoSettings(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_CaptureFileAsync(This, mode, asyncInfo) \
    ((This)->lpVtbl->CaptureFileAsync(This, mode, asyncInfo))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUI_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICameraCaptureUIPhotoCaptureSettings[] = L"Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettings";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettingsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Format)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat* value);
    HRESULT (STDMETHODCALLTYPE* put_Format)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIPhotoFormat value);
    HRESULT (STDMETHODCALLTYPE* get_MaxResolution)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxResolution)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxPhotoResolution value);
    HRESULT (STDMETHODCALLTYPE* get_CroppedSizeInPixels)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* put_CroppedSizeInPixels)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        struct __x_ABI_CWindows_CFoundation_CSize value);
    HRESULT (STDMETHODCALLTYPE* get_CroppedAspectRatio)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* put_CroppedAspectRatio)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        struct __x_ABI_CWindows_CFoundation_CSize value);
    HRESULT (STDMETHODCALLTYPE* get_AllowCropping)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowCropping)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings* This,
        boolean value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettingsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettingsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_get_Format(This, value) \
    ((This)->lpVtbl->get_Format(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_put_Format(This, value) \
    ((This)->lpVtbl->put_Format(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_get_MaxResolution(This, value) \
    ((This)->lpVtbl->get_MaxResolution(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_put_MaxResolution(This, value) \
    ((This)->lpVtbl->put_MaxResolution(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_get_CroppedSizeInPixels(This, value) \
    ((This)->lpVtbl->get_CroppedSizeInPixels(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_put_CroppedSizeInPixels(This, value) \
    ((This)->lpVtbl->put_CroppedSizeInPixels(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_get_CroppedAspectRatio(This, value) \
    ((This)->lpVtbl->get_CroppedAspectRatio(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_put_CroppedAspectRatio(This, value) \
    ((This)->lpVtbl->put_CroppedAspectRatio(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_get_AllowCropping(This, value) \
    ((This)->lpVtbl->get_AllowCropping(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_put_AllowCropping(This, value) \
    ((This)->lpVtbl->put_AllowCropping(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIPhotoCaptureSettings_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICameraCaptureUIVideoCaptureSettings[] = L"Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettings";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettingsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Format)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat* value);
    HRESULT (STDMETHODCALLTYPE* put_Format)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIVideoFormat value);
    HRESULT (STDMETHODCALLTYPE* get_MaxResolution)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxResolution)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CCameraCaptureUIMaxVideoResolution value);
    HRESULT (STDMETHODCALLTYPE* get_MaxDurationInSeconds)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxDurationInSeconds)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_AllowTrimming)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowTrimming)(__x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings* This,
        boolean value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettingsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettingsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_get_Format(This, value) \
    ((This)->lpVtbl->get_Format(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_put_Format(This, value) \
    ((This)->lpVtbl->put_Format(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_get_MaxResolution(This, value) \
    ((This)->lpVtbl->get_MaxResolution(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_put_MaxResolution(This, value) \
    ((This)->lpVtbl->put_MaxResolution(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_get_MaxDurationInSeconds(This, value) \
    ((This)->lpVtbl->get_MaxDurationInSeconds(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_put_MaxDurationInSeconds(This, value) \
    ((This)->lpVtbl->put_MaxDurationInSeconds(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_get_AllowTrimming(This, value) \
    ((This)->lpVtbl->get_AllowTrimming(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_put_AllowTrimming(This, value) \
    ((This)->lpVtbl->put_AllowTrimming(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraCaptureUIVideoCaptureSettings_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ICameraOptionsUIStatics
 *
 * Introduced to Windows.Media.Capture.CameraCaptureUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CameraOptionsUI
 *
 */
#if WINDOWS_MEDIA_CAPTURE_CAMERACAPTUREUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICameraOptionsUIStatics[] = L"Windows.Media.Capture.ICameraOptionsUIStatics";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Show)(__x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* mediaCapture);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStaticsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_Show(This, mediaCapture) \
    ((This)->lpVtbl->Show(This, mediaCapture))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICameraOptionsUIStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_CAMERACAPTUREUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ICapturedFrame
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CapturedFrame
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Windows.Storage.Streams.IRandomAccessStreamWithContentType
 *     Windows.Storage.Streams.IRandomAccessStream
 *     Windows.Foundation.IClosable
 *     Windows.Storage.Streams.IInputStream
 *     Windows.Storage.Streams.IOutputStream
 *     Windows.Storage.Streams.IContentTypeProvider
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICapturedFrame[] = L"Windows.Media.Capture.ICapturedFrame";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Width)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame* This,
        UINT32* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_get_Width(This, value) \
    ((This)->lpVtbl->get_Width(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_get_Height(This, value) \
    ((This)->lpVtbl->get_Height(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrame;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ICapturedFrame2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CapturedFrame
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICapturedFrame2[] = L"Windows.Media.Capture.ICapturedFrame2";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ControlValues)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues** value);
    HRESULT (STDMETHODCALLTYPE* get_BitmapProperties)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2* This,
        __FIMap_2_HSTRING_Windows__CGraphics__CImaging__CBitmapTypedValue** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_get_ControlValues(This, value) \
    ((This)->lpVtbl->get_ControlValues(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_get_BitmapProperties(This, value) \
    ((This)->lpVtbl->get_BitmapProperties(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrame2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.Media.Capture.ICapturedFrameControlValues
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CapturedFrameControlValues
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICapturedFrameControlValues[] = L"Windows.Media.Capture.ICapturedFrameControlValues";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValuesVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Exposure)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __FIReference_1_Windows__CFoundation__CTimeSpan** value);
    HRESULT (STDMETHODCALLTYPE* get_ExposureCompensation)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __FIReference_1_float** value);
    HRESULT (STDMETHODCALLTYPE* get_IsoSpeed)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_Focus)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_SceneMode)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __FIReference_1_Windows__CMedia__CDevices__CCaptureSceneMode** value);
    HRESULT (STDMETHODCALLTYPE* get_Flashed)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __FIReference_1_boolean** value);
    HRESULT (STDMETHODCALLTYPE* get_FlashPowerPercent)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __FIReference_1_float** value);
    HRESULT (STDMETHODCALLTYPE* get_WhiteBalance)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomFactor)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues* This,
        __FIReference_1_float** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValuesVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValuesVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_get_Exposure(This, value) \
    ((This)->lpVtbl->get_Exposure(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_get_ExposureCompensation(This, value) \
    ((This)->lpVtbl->get_ExposureCompensation(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_get_IsoSpeed(This, value) \
    ((This)->lpVtbl->get_IsoSpeed(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_get_Focus(This, value) \
    ((This)->lpVtbl->get_Focus(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_get_SceneMode(This, value) \
    ((This)->lpVtbl->get_SceneMode(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_get_Flashed(This, value) \
    ((This)->lpVtbl->get_Flashed(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_get_FlashPowerPercent(This, value) \
    ((This)->lpVtbl->get_FlashPowerPercent(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_get_WhiteBalance(This, value) \
    ((This)->lpVtbl->get_WhiteBalance(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_get_ZoomFactor(This, value) \
    ((This)->lpVtbl->get_ZoomFactor(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ICapturedFrameControlValues2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CapturedFrameControlValues
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICapturedFrameControlValues2[] = L"Windows.Media.Capture.ICapturedFrameControlValues2";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FocusState)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        __FIReference_1_Windows__CMedia__CDevices__CMediaCaptureFocusState** value);
    HRESULT (STDMETHODCALLTYPE* get_IsoDigitalGain)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        __FIReference_1_double** value);
    HRESULT (STDMETHODCALLTYPE* get_IsoAnalogGain)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        __FIReference_1_double** value);
    HRESULT (STDMETHODCALLTYPE* get_SensorFrameRate)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaRatio** value);
    HRESULT (STDMETHODCALLTYPE* get_WhiteBalanceGain)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2* This,
        __FIReference_1_Windows__CMedia__CCapture__CWhiteBalanceGain** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_get_FocusState(This, value) \
    ((This)->lpVtbl->get_FocusState(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_get_IsoDigitalGain(This, value) \
    ((This)->lpVtbl->get_IsoDigitalGain(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_get_IsoAnalogGain(This, value) \
    ((This)->lpVtbl->get_IsoAnalogGain(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_get_SensorFrameRate(This, value) \
    ((This)->lpVtbl->get_SensorFrameRate(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_get_WhiteBalanceGain(This, value) \
    ((This)->lpVtbl->get_WhiteBalanceGain(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ICapturedFrameWithSoftwareBitmap
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CapturedFrame
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICapturedFrameWithSoftwareBitmap[] = L"Windows.Media.Capture.ICapturedFrameWithSoftwareBitmap";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmapVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SoftwareBitmap)(__x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap* This,
        __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmapVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmapVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_get_SoftwareBitmap(This, value) \
    ((This)->lpVtbl->get_SoftwareBitmap(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedFrameWithSoftwareBitmap_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ICapturedPhoto
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.CapturedPhoto
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ICapturedPhoto[] = L"Windows.Media.Capture.ICapturedPhoto";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CICapturedPhotoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Frame)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_Thumbnail)(__x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CICapturedPhotoVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CICapturedPhotoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_get_Frame(This, value) \
    ((This)->lpVtbl->get_Frame(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_get_Thumbnail(This, value) \
    ((This)->lpVtbl->get_Thumbnail(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CICapturedPhoto_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IGameBarServices
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.GameBarServices
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IGameBarServices[] = L"Windows.Media.Capture.IGameBarServices";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TargetCapturePolicy)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CGameBarTargetCapturePolicy* value);
    HRESULT (STDMETHODCALLTYPE* EnableCapture)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This);
    HRESULT (STDMETHODCALLTYPE* DisableCapture)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This);
    HRESULT (STDMETHODCALLTYPE* get_TargetInfo)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
        __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_SessionId)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AppBroadcastServices)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppBroadcastServices** value);
    HRESULT (STDMETHODCALLTYPE* get_AppCaptureServices)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
        __x_ABI_CWindows_CMedia_CCapture_CIAppCaptureServices** value);
    HRESULT (STDMETHODCALLTYPE* add_CommandReceived)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServices_Windows__CMedia__CCapture__CGameBarServicesCommandEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CommandReceived)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServices* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_get_TargetCapturePolicy(This, value) \
    ((This)->lpVtbl->get_TargetCapturePolicy(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_EnableCapture(This) \
    ((This)->lpVtbl->EnableCapture(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_DisableCapture(This) \
    ((This)->lpVtbl->DisableCapture(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_get_TargetInfo(This, value) \
    ((This)->lpVtbl->get_TargetInfo(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_get_SessionId(This, value) \
    ((This)->lpVtbl->get_SessionId(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_get_AppBroadcastServices(This, value) \
    ((This)->lpVtbl->get_AppBroadcastServices(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_get_AppCaptureServices(This, value) \
    ((This)->lpVtbl->get_AppCaptureServices(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_add_CommandReceived(This, value, token) \
    ((This)->lpVtbl->add_CommandReceived(This, value, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_remove_CommandReceived(This, token) \
    ((This)->lpVtbl->remove_CommandReceived(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIGameBarServices;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServices_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IGameBarServicesCommandEventArgs
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.GameBarServicesCommandEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IGameBarServicesCommandEventArgs[] = L"Windows.Media.Capture.IGameBarServicesCommandEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Command)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CGameBarCommand* value);
    HRESULT (STDMETHODCALLTYPE* get_Origin)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CGameBarCommandOrigin* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_get_Command(This, value) \
    ((This)->lpVtbl->get_Command(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_get_Origin(This, value) \
    ((This)->lpVtbl->get_Origin(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesCommandEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IGameBarServicesManager
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.GameBarServicesManager
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IGameBarServicesManager[] = L"Windows.Media.Capture.IGameBarServicesManager";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_GameBarServicesCreated)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CGameBarServicesManager_Windows__CMedia__CCapture__CGameBarServicesManagerGameBarServicesCreatedEventArgs* value,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_GameBarServicesCreated)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_add_GameBarServicesCreated(This, value, token) \
    ((This)->lpVtbl->add_GameBarServicesCreated(This, value, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_remove_GameBarServicesCreated(This, token) \
    ((This)->lpVtbl->remove_GameBarServicesCreated(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IGameBarServicesManagerGameBarServicesCreatedEventArgs
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.GameBarServicesManagerGameBarServicesCreatedEventArgs
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IGameBarServicesManagerGameBarServicesCreatedEventArgs[] = L"Windows.Media.Capture.IGameBarServicesManagerGameBarServicesCreatedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_GameBarServices)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CIGameBarServices** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_get_GameBarServices(This, value) \
    ((This)->lpVtbl->get_GameBarServices(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerGameBarServicesCreatedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IGameBarServicesManagerStatics
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.GameBarServicesManager
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IGameBarServicesManagerStatics[] = L"Windows.Media.Capture.IGameBarServicesManagerStatics";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics* This,
        __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManager** ppInstance);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStaticsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_GetDefault(This, ppInstance) \
    ((This)->lpVtbl->GetDefault(This, ppInstance))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesManagerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IGameBarServicesTargetInfo
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.GameBarServicesTargetInfo
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IGameBarServicesTargetInfo[] = L"Windows.Media.Capture.IGameBarServicesTargetInfo";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AppId)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_TitleId)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayMode)(__x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CGameBarServicesDisplayMode* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfoVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_get_DisplayName(This, value) \
    ((This)->lpVtbl->get_DisplayName(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_get_AppId(This, value) \
    ((This)->lpVtbl->get_AppId(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_get_TitleId(This, value) \
    ((This)->lpVtbl->get_TitleId(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_get_DisplayMode(This, value) \
    ((This)->lpVtbl->get_DisplayMode(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIGameBarServicesTargetInfo_INTERFACE_DEFINED__) */
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ILowLagMediaRecording
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.LowLagMediaRecording
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ILowLagMediaRecording[] = L"Windows.Media.Capture.ILowLagMediaRecording";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecordingVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* StartAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* StopAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* FinishAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecordingVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecordingVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_StartAsync(This, operation) \
    ((This)->lpVtbl->StartAsync(This, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_StopAsync(This, operation) \
    ((This)->lpVtbl->StopAsync(This, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_FinishAsync(This, operation) \
    ((This)->lpVtbl->FinishAsync(This, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ILowLagMediaRecording2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.LowLagMediaRecording
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ILowLagMediaRecording2[] = L"Windows.Media.Capture.ILowLagMediaRecording2";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* PauseAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CMediaCapturePauseBehavior behavior,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* ResumeAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_PauseAsync(This, behavior, operation) \
    ((This)->lpVtbl->PauseAsync(This, behavior, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_ResumeAsync(This, operation) \
    ((This)->lpVtbl->ResumeAsync(This, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ILowLagMediaRecording3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.LowLagMediaRecording
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ILowLagMediaRecording3[] = L"Windows.Media.Capture.ILowLagMediaRecording3";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* PauseWithResultAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CMediaCapturePauseBehavior behavior,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult** operation);
    HRESULT (STDMETHODCALLTYPE* StopWithResultAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3* This,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult** operation);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_PauseWithResultAsync(This, behavior, operation) \
    ((This)->lpVtbl->PauseWithResultAsync(This, behavior, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_StopWithResultAsync(This, operation) \
    ((This)->lpVtbl->StopWithResultAsync(This, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagMediaRecording3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.Media.Capture.ILowLagPhotoCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.LowLagPhotoCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ILowLagPhotoCapture[] = L"Windows.Media.Capture.ILowLagPhotoCapture";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCaptureVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CaptureAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CCapturedPhoto** operation);
    HRESULT (STDMETHODCALLTYPE* FinishAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCaptureVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCaptureVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_CaptureAsync(This, operation) \
    ((This)->lpVtbl->CaptureAsync(This, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_FinishAsync(This, operation) \
    ((This)->lpVtbl->FinishAsync(This, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoCapture_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.ILowLagPhotoSequenceCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.LowLagPhotoSequenceCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_ILowLagPhotoSequenceCapture[] = L"Windows.Media.Capture.ILowLagPhotoSequenceCapture";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCaptureVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* StartAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* StopAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* FinishAsync)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* add_PhotoCaptured)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture_Windows__CMedia__CCapture__CPhotoCapturedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PhotoCaptured)(__x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCaptureVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCaptureVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_StartAsync(This, operation) \
    ((This)->lpVtbl->StartAsync(This, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_StopAsync(This, operation) \
    ((This)->lpVtbl->StopAsync(This, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_FinishAsync(This, operation) \
    ((This)->lpVtbl->FinishAsync(This, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_add_PhotoCaptured(This, handler, token) \
    ((This)->lpVtbl->add_PhotoCaptured(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_remove_PhotoCaptured(This, token) \
    ((This)->lpVtbl->remove_PhotoCaptured(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CILowLagPhotoSequenceCapture_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture[] = L"Windows.Media.Capture.IMediaCapture";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* InitializeAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* InitializeWithSettingsAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* mediaCaptureInitializationSettings,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StartRecordToStorageFileAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StartRecordToStreamAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StartRecordToCustomSinkAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CMedia_CIMediaExtension* customMediaSink,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StartRecordToCustomSinkIdAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        HSTRING customSinkActivationId,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* customSinkSettings,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StopRecordAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* CapturePhotoToStorageFileAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* type,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* CapturePhotoToStreamAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* type,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    DEPRECATED("AddEffectAsync might not be available in future versions of Windows. Starting with Windows Threshold, use AddAudioEffectAsync and AddVideoEffectAsync instead")
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    HRESULT (STDMETHODCALLTYPE* AddEffectAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType mediaStreamType,
        HSTRING effectActivationID,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* effectSettings,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* ClearEffectsAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType mediaStreamType,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* SetEncoderProperty)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType mediaStreamType,
        GUID propertyId,
        IInspectable* propertyValue);
    HRESULT (STDMETHODCALLTYPE* GetEncoderProperty)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType mediaStreamType,
        GUID propertyId,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* add_Failed)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventHandler* errorEventHandler,
        EventRegistrationToken* eventCookie);
    HRESULT (STDMETHODCALLTYPE* remove_Failed)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        EventRegistrationToken eventCookie);
    HRESULT (STDMETHODCALLTYPE* add_RecordLimitationExceeded)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CIRecordLimitationExceededEventHandler* recordLimitationExceededEventHandler,
        EventRegistrationToken* eventCookie);
    HRESULT (STDMETHODCALLTYPE* remove_RecordLimitationExceeded)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        EventRegistrationToken eventCookie);
    HRESULT (STDMETHODCALLTYPE* get_MediaCaptureSettings)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings** value);
    HRESULT (STDMETHODCALLTYPE* get_AudioDeviceController)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CDevices_CIAudioDeviceController** value);
    HRESULT (STDMETHODCALLTYPE* get_VideoDeviceController)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        __x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController** value);
    HRESULT (STDMETHODCALLTYPE* SetPreviewMirroring)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* GetPreviewMirroring)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* SetPreviewRotation)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CVideoRotation value);
    HRESULT (STDMETHODCALLTYPE* GetPreviewRotation)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CVideoRotation* value);
    HRESULT (STDMETHODCALLTYPE* SetRecordRotation)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CVideoRotation value);
    HRESULT (STDMETHODCALLTYPE* GetRecordRotation)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CVideoRotation* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_InitializeAsync(This, asyncInfo) \
    ((This)->lpVtbl->InitializeAsync(This, asyncInfo))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_InitializeWithSettingsAsync(This, mediaCaptureInitializationSettings, asyncInfo) \
    ((This)->lpVtbl->InitializeWithSettingsAsync(This, mediaCaptureInitializationSettings, asyncInfo))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_StartRecordToStorageFileAsync(This, encodingProfile, file, asyncInfo) \
    ((This)->lpVtbl->StartRecordToStorageFileAsync(This, encodingProfile, file, asyncInfo))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_StartRecordToStreamAsync(This, encodingProfile, stream, asyncInfo) \
    ((This)->lpVtbl->StartRecordToStreamAsync(This, encodingProfile, stream, asyncInfo))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_StartRecordToCustomSinkAsync(This, encodingProfile, customMediaSink, asyncInfo) \
    ((This)->lpVtbl->StartRecordToCustomSinkAsync(This, encodingProfile, customMediaSink, asyncInfo))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_StartRecordToCustomSinkIdAsync(This, encodingProfile, customSinkActivationId, customSinkSettings, asyncInfo) \
    ((This)->lpVtbl->StartRecordToCustomSinkIdAsync(This, encodingProfile, customSinkActivationId, customSinkSettings, asyncInfo))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_StopRecordAsync(This, asyncInfo) \
    ((This)->lpVtbl->StopRecordAsync(This, asyncInfo))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_CapturePhotoToStorageFileAsync(This, type, file, asyncInfo) \
    ((This)->lpVtbl->CapturePhotoToStorageFileAsync(This, type, file, asyncInfo))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_CapturePhotoToStreamAsync(This, type, stream, asyncInfo) \
    ((This)->lpVtbl->CapturePhotoToStreamAsync(This, type, stream, asyncInfo))

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    DEPRECATED("AddEffectAsync might not be available in future versions of Windows. Starting with Windows Threshold, use AddAudioEffectAsync and AddVideoEffectAsync instead")
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_AddEffectAsync(This, mediaStreamType, effectActivationID, effectSettings, asyncInfo) \
    ((This)->lpVtbl->AddEffectAsync(This, mediaStreamType, effectActivationID, effectSettings, asyncInfo))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_ClearEffectsAsync(This, mediaStreamType, asyncInfo) \
    ((This)->lpVtbl->ClearEffectsAsync(This, mediaStreamType, asyncInfo))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_SetEncoderProperty(This, mediaStreamType, propertyId, propertyValue) \
    ((This)->lpVtbl->SetEncoderProperty(This, mediaStreamType, propertyId, propertyValue))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_GetEncoderProperty(This, mediaStreamType, propertyId, propertyValue) \
    ((This)->lpVtbl->GetEncoderProperty(This, mediaStreamType, propertyId, propertyValue))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_add_Failed(This, errorEventHandler, eventCookie) \
    ((This)->lpVtbl->add_Failed(This, errorEventHandler, eventCookie))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_remove_Failed(This, eventCookie) \
    ((This)->lpVtbl->remove_Failed(This, eventCookie))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_add_RecordLimitationExceeded(This, recordLimitationExceededEventHandler, eventCookie) \
    ((This)->lpVtbl->add_RecordLimitationExceeded(This, recordLimitationExceededEventHandler, eventCookie))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_remove_RecordLimitationExceeded(This, eventCookie) \
    ((This)->lpVtbl->remove_RecordLimitationExceeded(This, eventCookie))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_get_MediaCaptureSettings(This, value) \
    ((This)->lpVtbl->get_MediaCaptureSettings(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_get_AudioDeviceController(This, value) \
    ((This)->lpVtbl->get_AudioDeviceController(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_get_VideoDeviceController(This, value) \
    ((This)->lpVtbl->get_VideoDeviceController(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_SetPreviewMirroring(This, value) \
    ((This)->lpVtbl->SetPreviewMirroring(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_GetPreviewMirroring(This, value) \
    ((This)->lpVtbl->GetPreviewMirroring(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_SetPreviewRotation(This, value) \
    ((This)->lpVtbl->SetPreviewRotation(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_GetPreviewRotation(This, value) \
    ((This)->lpVtbl->GetPreviewRotation(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_SetRecordRotation(This, value) \
    ((This)->lpVtbl->SetRecordRotation(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_GetRecordRotation(This, value) \
    ((This)->lpVtbl->GetRecordRotation(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCapture2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture2[] = L"Windows.Media.Capture.IMediaCapture2";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* PrepareLowLagRecordToStorageFileAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording** operation);
    HRESULT (STDMETHODCALLTYPE* PrepareLowLagRecordToStreamAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording** operation);
    HRESULT (STDMETHODCALLTYPE* PrepareLowLagRecordToCustomSinkAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CMedia_CIMediaExtension* customMediaSink,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording** operation);
    HRESULT (STDMETHODCALLTYPE* PrepareLowLagRecordToCustomSinkIdAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        HSTRING customSinkActivationId,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* customSinkSettings,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagMediaRecording** operation);
    HRESULT (STDMETHODCALLTYPE* PrepareLowLagPhotoCaptureAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* type,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoCapture** operation);
    HRESULT (STDMETHODCALLTYPE* PrepareLowLagPhotoSequenceCaptureAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* type,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CLowLagPhotoSequenceCapture** operation);
    HRESULT (STDMETHODCALLTYPE* SetEncodingPropertiesAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType mediaStreamType,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProperties* mediaEncodingProperties,
        __FIMap_2_GUID_IInspectable* encoderProperties,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_PrepareLowLagRecordToStorageFileAsync(This, encodingProfile, file, operation) \
    ((This)->lpVtbl->PrepareLowLagRecordToStorageFileAsync(This, encodingProfile, file, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_PrepareLowLagRecordToStreamAsync(This, encodingProfile, stream, operation) \
    ((This)->lpVtbl->PrepareLowLagRecordToStreamAsync(This, encodingProfile, stream, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_PrepareLowLagRecordToCustomSinkAsync(This, encodingProfile, customMediaSink, operation) \
    ((This)->lpVtbl->PrepareLowLagRecordToCustomSinkAsync(This, encodingProfile, customMediaSink, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_PrepareLowLagRecordToCustomSinkIdAsync(This, encodingProfile, customSinkActivationId, customSinkSettings, operation) \
    ((This)->lpVtbl->PrepareLowLagRecordToCustomSinkIdAsync(This, encodingProfile, customSinkActivationId, customSinkSettings, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_PrepareLowLagPhotoCaptureAsync(This, type, operation) \
    ((This)->lpVtbl->PrepareLowLagPhotoCaptureAsync(This, type, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_PrepareLowLagPhotoSequenceCaptureAsync(This, type, operation) \
    ((This)->lpVtbl->PrepareLowLagPhotoSequenceCaptureAsync(This, type, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_SetEncodingPropertiesAsync(This, mediaStreamType, mediaEncodingProperties, encoderProperties, operation) \
    ((This)->lpVtbl->SetEncodingPropertiesAsync(This, mediaStreamType, mediaEncodingProperties, encoderProperties, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCapture3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture3[] = L"Windows.Media.Capture.IMediaCapture3";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* PrepareVariablePhotoSequenceCaptureAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* type,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CCore__CVariablePhotoSequenceCapture** operation);
    HRESULT (STDMETHODCALLTYPE* add_FocusChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureFocusChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FocusChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PhotoConfirmationCaptured)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CPhotoConfirmationCapturedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PhotoConfirmationCaptured)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_PrepareVariablePhotoSequenceCaptureAsync(This, type, operation) \
    ((This)->lpVtbl->PrepareVariablePhotoSequenceCaptureAsync(This, type, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_add_FocusChanged(This, handler, token) \
    ((This)->lpVtbl->add_FocusChanged(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_remove_FocusChanged(This, token) \
    ((This)->lpVtbl->remove_FocusChanged(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_add_PhotoConfirmationCaptured(This, handler, token) \
    ((This)->lpVtbl->add_PhotoConfirmationCaptured(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_remove_PhotoConfirmationCaptured(This, token) \
    ((This)->lpVtbl->remove_PhotoConfirmationCaptured(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCapture4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture4[] = L"Windows.Media.Capture.IMediaCapture4";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* AddAudioEffectAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition* definition,
        __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension** op);
    HRESULT (STDMETHODCALLTYPE* AddVideoEffectAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_CWindows_CMedia_CEffects_CIVideoEffectDefinition* definition,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaStreamType mediaStreamType,
        __FIAsyncOperation_1_Windows__CMedia__CIMediaExtension** op);
    HRESULT (STDMETHODCALLTYPE* PauseRecordAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CMediaCapturePauseBehavior behavior,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* ResumeRecordAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* add_CameraStreamStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CameraStreamStateChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_CameraStreamState)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CCameraStreamState* streamState);
    HRESULT (STDMETHODCALLTYPE* GetPreviewFrameAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __FIAsyncOperation_1_Windows__CMedia__CVideoFrame** operation);
    HRESULT (STDMETHODCALLTYPE* GetPreviewFrameCopyAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_CWindows_CMedia_CIVideoFrame* destination,
        __FIAsyncOperation_1_Windows__CMedia__CVideoFrame** operation);
    HRESULT (STDMETHODCALLTYPE* add_ThermalStatusChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ThermalStatusChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_ThermalStatus)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureThermalStatus* value);
    HRESULT (STDMETHODCALLTYPE* PrepareAdvancedPhotoCaptureAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIImageEncodingProperties* encodingProperties,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CAdvancedPhotoCapture** operation);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_AddAudioEffectAsync(This, definition, op) \
    ((This)->lpVtbl->AddAudioEffectAsync(This, definition, op))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_AddVideoEffectAsync(This, definition, mediaStreamType, op) \
    ((This)->lpVtbl->AddVideoEffectAsync(This, definition, mediaStreamType, op))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_PauseRecordAsync(This, behavior, asyncInfo) \
    ((This)->lpVtbl->PauseRecordAsync(This, behavior, asyncInfo))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_ResumeRecordAsync(This, asyncInfo) \
    ((This)->lpVtbl->ResumeRecordAsync(This, asyncInfo))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_add_CameraStreamStateChanged(This, handler, token) \
    ((This)->lpVtbl->add_CameraStreamStateChanged(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_remove_CameraStreamStateChanged(This, token) \
    ((This)->lpVtbl->remove_CameraStreamStateChanged(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_get_CameraStreamState(This, streamState) \
    ((This)->lpVtbl->get_CameraStreamState(This, streamState))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_GetPreviewFrameAsync(This, operation) \
    ((This)->lpVtbl->GetPreviewFrameAsync(This, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_GetPreviewFrameCopyAsync(This, destination, operation) \
    ((This)->lpVtbl->GetPreviewFrameCopyAsync(This, destination, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_add_ThermalStatusChanged(This, handler, token) \
    ((This)->lpVtbl->add_ThermalStatusChanged(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_remove_ThermalStatusChanged(This, token) \
    ((This)->lpVtbl->remove_ThermalStatusChanged(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_get_ThermalStatus(This, value) \
    ((This)->lpVtbl->get_ThermalStatus(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_PrepareAdvancedPhotoCaptureAsync(This, encodingProperties, operation) \
    ((This)->lpVtbl->PrepareAdvancedPhotoCaptureAsync(This, encodingProperties, operation))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCapture5
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture5[] = L"Windows.Media.Capture.IMediaCapture5";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* RemoveEffectAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        __x_ABI_CWindows_CMedia_CIMediaExtension* effect,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* PauseRecordWithResultAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CMediaCapturePauseBehavior behavior,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCapturePauseResult** operation);
    HRESULT (STDMETHODCALLTYPE* StopRecordWithResultAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CMediaCaptureStopResult** operation);
    HRESULT (STDMETHODCALLTYPE* get_FrameSources)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        __FIMapView_2_HSTRING_Windows__CMedia__CCapture__CFrames__CMediaFrameSource** value);
    HRESULT (STDMETHODCALLTYPE* CreateFrameReaderAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* inputSource,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader** value);
    HRESULT (STDMETHODCALLTYPE* CreateFrameReaderWithSubtypeAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* inputSource,
        HSTRING outputSubtype,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader** value);
    HRESULT (STDMETHODCALLTYPE* CreateFrameReaderWithSubtypeAndSizeAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSource* inputSource,
        HSTRING outputSubtype,
        struct __x_ABI_CWindows_CGraphics_CImaging_CBitmapSize outputSize,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMediaFrameReader** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_RemoveEffectAsync(This, effect, asyncInfo) \
    ((This)->lpVtbl->RemoveEffectAsync(This, effect, asyncInfo))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_PauseRecordWithResultAsync(This, behavior, operation) \
    ((This)->lpVtbl->PauseRecordWithResultAsync(This, behavior, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_StopRecordWithResultAsync(This, operation) \
    ((This)->lpVtbl->StopRecordWithResultAsync(This, operation))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_get_FrameSources(This, value) \
    ((This)->lpVtbl->get_FrameSources(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_CreateFrameReaderAsync(This, inputSource, value) \
    ((This)->lpVtbl->CreateFrameReaderAsync(This, inputSource, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_CreateFrameReaderWithSubtypeAsync(This, inputSource, outputSubtype, value) \
    ((This)->lpVtbl->CreateFrameReaderWithSubtypeAsync(This, inputSource, outputSubtype, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_CreateFrameReaderWithSubtypeAndSizeAsync(This, inputSource, outputSubtype, outputSize, value) \
    ((This)->lpVtbl->CreateFrameReaderWithSubtypeAndSizeAsync(This, inputSource, outputSubtype, outputSize, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture5_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.Media.Capture.IMediaCapture6
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture6[] = L"Windows.Media.Capture.IMediaCapture6";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_CaptureDeviceExclusiveControlStatusChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCapture_Windows__CMedia__CCapture__CMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CaptureDeviceExclusiveControlStatusChanged)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* CreateMultiSourceFrameReaderAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6* This,
        __FIIterable_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSource* inputSources,
        __FIAsyncOperation_1_Windows__CMedia__CCapture__CFrames__CMultiSourceMediaFrameReader** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_add_CaptureDeviceExclusiveControlStatusChanged(This, handler, token) \
    ((This)->lpVtbl->add_CaptureDeviceExclusiveControlStatusChanged(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_remove_CaptureDeviceExclusiveControlStatusChanged(This, token) \
    ((This)->lpVtbl->remove_CaptureDeviceExclusiveControlStatusChanged(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_CreateMultiSourceFrameReaderAsync(This, inputSources, value) \
    ((This)->lpVtbl->CreateMultiSourceFrameReaderAsync(This, inputSources, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture6_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IMediaCapture7
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 10.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapture7[] = L"Windows.Media.Capture.IMediaCapture7";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateRelativePanelWatcher)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode captureMode,
        __x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion* displayRegion,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher** result);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_CreateRelativePanelWatcher(This, captureMode, displayRegion, result) \
    ((This)->lpVtbl->CreateRelativePanelWatcher(This, captureMode, displayRegion, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture7_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureDeviceExclusiveControlStatusChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureDeviceExclusiveControlStatusChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureDeviceExclusiveControlStatusChangedEventArgs[] = L"Windows.Media.Capture.IMediaCaptureDeviceExclusiveControlStatusChangedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureDeviceExclusiveControlStatus* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_get_DeviceId(This, value) \
    ((This)->lpVtbl->get_DeviceId(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_get_Status(This, value) \
    ((This)->lpVtbl->get_Status(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureDeviceExclusiveControlStatusChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureFailedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureFailedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureFailedEventArgs[] = L"Windows.Media.Capture.IMediaCaptureFailedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Code)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs* This,
        UINT32* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_get_Message(This, value) \
    ((This)->lpVtbl->get_Message(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_get_Code(This, value) \
    ((This)->lpVtbl->get_Code(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFailedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureFocusChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureFocusChangedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureFocusChangedEventArgs[] = L"Windows.Media.Capture.IMediaCaptureFocusChangedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FocusState)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CDevices_CMediaCaptureFocusState* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_get_FocusState(This, value) \
    ((This)->lpVtbl->get_FocusState(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureFocusChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureInitializationSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureInitializationSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettingsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_AudioDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_AudioDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_VideoDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_VideoDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_StreamingCaptureMode)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode value);
    HRESULT (STDMETHODCALLTYPE* get_StreamingCaptureMode)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode* value);
    HRESULT (STDMETHODCALLTYPE* put_PhotoCaptureSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource value);
    HRESULT (STDMETHODCALLTYPE* get_PhotoCaptureSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettingsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettingsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_put_AudioDeviceId(This, value) \
    ((This)->lpVtbl->put_AudioDeviceId(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_get_AudioDeviceId(This, value) \
    ((This)->lpVtbl->get_AudioDeviceId(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_put_VideoDeviceId(This, value) \
    ((This)->lpVtbl->put_VideoDeviceId(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_get_VideoDeviceId(This, value) \
    ((This)->lpVtbl->get_VideoDeviceId(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_put_StreamingCaptureMode(This, value) \
    ((This)->lpVtbl->put_StreamingCaptureMode(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_get_StreamingCaptureMode(This, value) \
    ((This)->lpVtbl->get_StreamingCaptureMode(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_put_PhotoCaptureSource(This, value) \
    ((This)->lpVtbl->put_PhotoCaptureSource(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_get_PhotoCaptureSource(This, value) \
    ((This)->lpVtbl->get_PhotoCaptureSource(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureInitializationSettings2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureInitializationSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings2[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings2";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_MediaCategory)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCategory value);
    HRESULT (STDMETHODCALLTYPE* get_MediaCategory)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCategory* value);
    HRESULT (STDMETHODCALLTYPE* put_AudioProcessing)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
        enum __x_ABI_CWindows_CMedia_CAudioProcessing value);
    HRESULT (STDMETHODCALLTYPE* get_AudioProcessing)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2* This,
        enum __x_ABI_CWindows_CMedia_CAudioProcessing* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_put_MediaCategory(This, value) \
    ((This)->lpVtbl->put_MediaCategory(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_get_MediaCategory(This, value) \
    ((This)->lpVtbl->get_MediaCategory(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_put_AudioProcessing(This, value) \
    ((This)->lpVtbl->put_AudioProcessing(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_get_AudioProcessing(This, value) \
    ((This)->lpVtbl->get_AudioProcessing(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureInitializationSettings3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureInitializationSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings3[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings3";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_AudioSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource* value);
    HRESULT (STDMETHODCALLTYPE* get_AudioSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource** value);
    HRESULT (STDMETHODCALLTYPE* put_VideoSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_put_AudioSource(This, value) \
    ((This)->lpVtbl->put_AudioSource(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_get_AudioSource(This, value) \
    ((This)->lpVtbl->get_AudioSource(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_put_VideoSource(This, value) \
    ((This)->lpVtbl->put_VideoSource(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_get_VideoSource(This, value) \
    ((This)->lpVtbl->get_VideoSource(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureInitializationSettings4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureInitializationSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings4[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings4";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_VideoProfile)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile** value);
    HRESULT (STDMETHODCALLTYPE* put_VideoProfile)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* value);
    HRESULT (STDMETHODCALLTYPE* get_PreviewMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** value);
    HRESULT (STDMETHODCALLTYPE* put_PreviewMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* value);
    HRESULT (STDMETHODCALLTYPE* get_RecordMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** value);
    HRESULT (STDMETHODCALLTYPE* put_RecordMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* value);
    HRESULT (STDMETHODCALLTYPE* get_PhotoMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription** value);
    HRESULT (STDMETHODCALLTYPE* put_PhotoMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_get_VideoProfile(This, value) \
    ((This)->lpVtbl->get_VideoProfile(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_put_VideoProfile(This, value) \
    ((This)->lpVtbl->put_VideoProfile(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_get_PreviewMediaDescription(This, value) \
    ((This)->lpVtbl->get_PreviewMediaDescription(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_put_PreviewMediaDescription(This, value) \
    ((This)->lpVtbl->put_PreviewMediaDescription(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_get_RecordMediaDescription(This, value) \
    ((This)->lpVtbl->get_RecordMediaDescription(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_put_RecordMediaDescription(This, value) \
    ((This)->lpVtbl->put_RecordMediaDescription(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_get_PhotoMediaDescription(This, value) \
    ((This)->lpVtbl->get_PhotoMediaDescription(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_put_PhotoMediaDescription(This, value) \
    ((This)->lpVtbl->put_PhotoMediaDescription(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureInitializationSettings5
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureInitializationSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings5[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings5";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SourceGroup)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup** value);
    HRESULT (STDMETHODCALLTYPE* put_SourceGroup)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        __x_ABI_CWindows_CMedia_CCapture_CFrames_CIMediaFrameSourceGroup* value);
    HRESULT (STDMETHODCALLTYPE* get_SharingMode)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode* value);
    HRESULT (STDMETHODCALLTYPE* put_SharingMode)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureSharingMode value);
    HRESULT (STDMETHODCALLTYPE* get_MemoryPreference)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference* value);
    HRESULT (STDMETHODCALLTYPE* put_MemoryPreference)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCaptureMemoryPreference value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_get_SourceGroup(This, value) \
    ((This)->lpVtbl->get_SourceGroup(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_put_SourceGroup(This, value) \
    ((This)->lpVtbl->put_SourceGroup(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_get_SharingMode(This, value) \
    ((This)->lpVtbl->get_SharingMode(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_put_SharingMode(This, value) \
    ((This)->lpVtbl->put_SharingMode(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_get_MemoryPreference(This, value) \
    ((This)->lpVtbl->get_MemoryPreference(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_put_MemoryPreference(This, value) \
    ((This)->lpVtbl->put_MemoryPreference(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings5_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureInitializationSettings6
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureInitializationSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings6[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings6";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AlwaysPlaySystemShutterSound)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AlwaysPlaySystemShutterSound)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6* This,
        boolean value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_get_AlwaysPlaySystemShutterSound(This, value) \
    ((This)->lpVtbl->get_AlwaysPlaySystemShutterSound(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_put_AlwaysPlaySystemShutterSound(This, value) \
    ((This)->lpVtbl->put_AlwaysPlaySystemShutterSound(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings6_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureInitializationSettings7
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 10.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureInitializationSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureInitializationSettings7[] = L"Windows.Media.Capture.IMediaCaptureInitializationSettings7";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DeviceUriPasswordCredential)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7* This,
        __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential** value);
    HRESULT (STDMETHODCALLTYPE* put_DeviceUriPasswordCredential)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7* This,
        __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential* value);
    HRESULT (STDMETHODCALLTYPE* get_DeviceUri)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_DeviceUri)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_get_DeviceUriPasswordCredential(This, value) \
    ((This)->lpVtbl->get_DeviceUriPasswordCredential(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_put_DeviceUriPasswordCredential(This, value) \
    ((This)->lpVtbl->put_DeviceUriPasswordCredential(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_get_DeviceUri(This, value) \
    ((This)->lpVtbl->get_DeviceUri(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_put_DeviceUri(This, value) \
    ((This)->lpVtbl->put_DeviceUri(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureInitializationSettings7_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

/*
 *
 * Interface Windows.Media.Capture.IMediaCapturePauseResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapturePauseResult
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCapturePauseResult[] = L"Windows.Media.Capture.IMediaCapturePauseResult";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResultVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LastFrame)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This,
        __x_ABI_CWindows_CMedia_CIVideoFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_RecordDuration)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResultVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResultVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_get_LastFrame(This, value) \
    ((This)->lpVtbl->get_LastFrame(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_get_RecordDuration(This, value) \
    ((This)->lpVtbl->get_RecordDuration(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCapturePauseResult_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureRelativePanelWatcher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 10.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureRelativePanelWatcher
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureRelativePanelWatcher[] = L"Windows.Media.Capture.IMediaCaptureRelativePanelWatcher";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcherVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_RelativePanel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher* This,
        enum __x_ABI_CWindows_CDevices_CEnumeration_CPanel* value);
    HRESULT (STDMETHODCALLTYPE* add_Changed)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher* This,
        __FITypedEventHandler_2_Windows__CMedia__CCapture__CMediaCaptureRelativePanelWatcher_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Changed)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Start)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher* This);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcherVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcherVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_get_RelativePanel(This, value) \
    ((This)->lpVtbl->get_RelativePanel(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_add_Changed(This, handler, token) \
    ((This)->lpVtbl->add_Changed(This, handler, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_remove_Changed(This, token) \
    ((This)->lpVtbl->remove_Changed(This, token))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_Start(This) \
    ((This)->lpVtbl->Start(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_Stop(This) \
    ((This)->lpVtbl->Stop(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureRelativePanelWatcher_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureSettings[] = L"Windows.Media.Capture.IMediaCaptureSettings";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettingsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AudioDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_StreamingCaptureMode)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CStreamingCaptureMode* value);
    HRESULT (STDMETHODCALLTYPE* get_PhotoCaptureSource)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CPhotoCaptureSource* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoDeviceCharacteristic)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CVideoDeviceCharacteristic* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettingsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettingsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_get_AudioDeviceId(This, value) \
    ((This)->lpVtbl->get_AudioDeviceId(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_get_VideoDeviceId(This, value) \
    ((This)->lpVtbl->get_VideoDeviceId(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_get_StreamingCaptureMode(This, value) \
    ((This)->lpVtbl->get_StreamingCaptureMode(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_get_PhotoCaptureSource(This, value) \
    ((This)->lpVtbl->get_PhotoCaptureSource(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_get_VideoDeviceCharacteristic(This, value) \
    ((This)->lpVtbl->get_VideoDeviceCharacteristic(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureSettings2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureSettings2[] = L"Windows.Media.Capture.IMediaCaptureSettings2";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ConcurrentRecordAndPhotoSupported)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ConcurrentRecordAndPhotoSequenceSupported)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CameraSoundRequiredForRegion)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Horizontal35mmEquivalentFocalLength)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        __FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_PitchOffsetDegrees)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        __FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* get_Vertical35mmEquivalentFocalLength)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        __FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_MediaCategory)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        enum __x_ABI_CWindows_CMedia_CCapture_CMediaCategory* value);
    HRESULT (STDMETHODCALLTYPE* get_AudioProcessing)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2* This,
        enum __x_ABI_CWindows_CMedia_CAudioProcessing* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_get_ConcurrentRecordAndPhotoSupported(This, value) \
    ((This)->lpVtbl->get_ConcurrentRecordAndPhotoSupported(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_get_ConcurrentRecordAndPhotoSequenceSupported(This, value) \
    ((This)->lpVtbl->get_ConcurrentRecordAndPhotoSequenceSupported(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_get_CameraSoundRequiredForRegion(This, value) \
    ((This)->lpVtbl->get_CameraSoundRequiredForRegion(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_get_Horizontal35mmEquivalentFocalLength(This, value) \
    ((This)->lpVtbl->get_Horizontal35mmEquivalentFocalLength(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_get_PitchOffsetDegrees(This, value) \
    ((This)->lpVtbl->get_PitchOffsetDegrees(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_get_Vertical35mmEquivalentFocalLength(This, value) \
    ((This)->lpVtbl->get_Vertical35mmEquivalentFocalLength(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_get_MediaCategory(This, value) \
    ((This)->lpVtbl->get_MediaCategory(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_get_AudioProcessing(This, value) \
    ((This)->lpVtbl->get_AudioProcessing(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureSettings3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureSettings
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureSettings3[] = L"Windows.Media.Capture.IMediaCaptureSettings3";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Direct3D11Device)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3* This,
        __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_get_Direct3D11Device(This, value) \
    ((This)->lpVtbl->get_Direct3D11Device(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureSettings3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureStatics[] = L"Windows.Media.Capture.IMediaCaptureStatics";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* IsVideoProfileSupported)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
        HSTRING videoDeviceId,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* FindAllVideoProfiles)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
        HSTRING videoDeviceId,
        __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile** value);
    HRESULT (STDMETHODCALLTYPE* FindConcurrentProfiles)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
        HSTRING videoDeviceId,
        __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile** value);
    HRESULT (STDMETHODCALLTYPE* FindKnownVideoProfiles)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics* This,
        HSTRING videoDeviceId,
        enum __x_ABI_CWindows_CMedia_CCapture_CKnownVideoProfile name,
        __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStaticsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_IsVideoProfileSupported(This, videoDeviceId, value) \
    ((This)->lpVtbl->IsVideoProfileSupported(This, videoDeviceId, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_FindAllVideoProfiles(This, videoDeviceId, value) \
    ((This)->lpVtbl->FindAllVideoProfiles(This, videoDeviceId, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_FindConcurrentProfiles(This, videoDeviceId, value) \
    ((This)->lpVtbl->FindConcurrentProfiles(This, videoDeviceId, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_FindKnownVideoProfiles(This, videoDeviceId, name, value) \
    ((This)->lpVtbl->FindKnownVideoProfiles(This, videoDeviceId, name, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureStopResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureStopResult
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureStopResult[] = L"Windows.Media.Capture.IMediaCaptureStopResult";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResultVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LastFrame)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This,
        __x_ABI_CWindows_CMedia_CIVideoFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_RecordDuration)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResultVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResultVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_get_LastFrame(This, value) \
    ((This)->lpVtbl->get_LastFrame(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_get_RecordDuration(This, value) \
    ((This)->lpVtbl->get_RecordDuration(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureStopResult_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureVideoPreview
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCapture
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureVideoPreview[] = L"Windows.Media.Capture.IMediaCaptureVideoPreview";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreviewVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* StartPreviewAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StartPreviewToCustomSinkAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        __x_ABI_CWindows_CMedia_CIMediaExtension* customMediaSink,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StartPreviewToCustomSinkIdAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIMediaEncodingProfile* encodingProfile,
        HSTRING customSinkActivationId,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* customSinkSettings,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* StopPreviewAsync)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreviewVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreviewVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_StartPreviewAsync(This, asyncInfo) \
    ((This)->lpVtbl->StartPreviewAsync(This, asyncInfo))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_StartPreviewToCustomSinkAsync(This, encodingProfile, customMediaSink, asyncInfo) \
    ((This)->lpVtbl->StartPreviewToCustomSinkAsync(This, encodingProfile, customMediaSink, asyncInfo))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_StartPreviewToCustomSinkIdAsync(This, encodingProfile, customSinkActivationId, customSinkSettings, asyncInfo) \
    ((This)->lpVtbl->StartPreviewToCustomSinkIdAsync(This, encodingProfile, customSinkActivationId, customSinkSettings, asyncInfo))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_StopPreviewAsync(This, asyncInfo) \
    ((This)->lpVtbl->StopPreviewAsync(This, asyncInfo))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoPreview_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureVideoProfile
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureVideoProfile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureVideoProfile[] = L"Windows.Media.Capture.IMediaCaptureVideoProfile";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_VideoDeviceId)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedPreviewMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription** value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedRecordMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription** value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedPhotoMediaDescription)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfileMediaDescription** value);
    HRESULT (STDMETHODCALLTYPE* GetConcurrency)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile* This,
        __FIVectorView_1_Windows__CMedia__CCapture__CMediaCaptureVideoProfile** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_get_Id(This, value) \
    ((This)->lpVtbl->get_Id(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_get_VideoDeviceId(This, value) \
    ((This)->lpVtbl->get_VideoDeviceId(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_get_SupportedPreviewMediaDescription(This, value) \
    ((This)->lpVtbl->get_SupportedPreviewMediaDescription(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_get_SupportedRecordMediaDescription(This, value) \
    ((This)->lpVtbl->get_SupportedRecordMediaDescription(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_get_SupportedPhotoMediaDescription(This, value) \
    ((This)->lpVtbl->get_SupportedPhotoMediaDescription(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_GetConcurrency(This, value) \
    ((This)->lpVtbl->GetConcurrency(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureVideoProfile2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureVideoProfile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureVideoProfile2[] = L"Windows.Media.Capture.IMediaCaptureVideoProfile2";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FrameSourceInfos)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This,
        __FIVectorView_1_Windows__CMedia__CCapture__CFrames__CMediaFrameSourceInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2* This,
        __FIMapView_2_GUID_IInspectable** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_get_FrameSourceInfos(This, value) \
    ((This)->lpVtbl->get_FrameSourceInfos(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_get_Properties(This, value) \
    ((This)->lpVtbl->get_Properties(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfile2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureVideoProfileMediaDescription
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureVideoProfileMediaDescription
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureVideoProfileMediaDescription[] = L"Windows.Media.Capture.IMediaCaptureVideoProfileMediaDescription";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescriptionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Width)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_FrameRate)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        DOUBLE* value);
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
    DEPRECATED("IsVariablePhotoSequenceSupported might not be available in the next major update following Windows 10, version 1709")
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
    HRESULT (STDMETHODCALLTYPE* get_IsVariablePhotoSequenceSupported)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        boolean* value);
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
    DEPRECATED("IsHdrVideoSupported might not be available in the next major update following Windows 10, version 1709")
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
    HRESULT (STDMETHODCALLTYPE* get_IsHdrVideoSupported)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription* This,
        boolean* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescriptionVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescriptionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_get_Width(This, value) \
    ((This)->lpVtbl->get_Width(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_get_Height(This, value) \
    ((This)->lpVtbl->get_Height(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_get_FrameRate(This, value) \
    ((This)->lpVtbl->get_FrameRate(This, value))

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
    DEPRECATED("IsVariablePhotoSequenceSupported might not be available in the next major update following Windows 10, version 1709")
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_get_IsVariablePhotoSequenceSupported(This, value) \
    ((This)->lpVtbl->get_IsVariablePhotoSequenceSupported(This, value))

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
    DEPRECATED("IsHdrVideoSupported might not be available in the next major update following Windows 10, version 1709")
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_get_IsHdrVideoSupported(This, value) \
    ((This)->lpVtbl->get_IsHdrVideoSupported(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IMediaCaptureVideoProfileMediaDescription2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.MediaCaptureVideoProfileMediaDescription
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IMediaCaptureVideoProfileMediaDescription2[] = L"Windows.Media.Capture.IMediaCaptureVideoProfileMediaDescription2";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Subtype)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2* This,
        __FIMapView_2_GUID_IInspectable** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2Vtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_get_Subtype(This, value) \
    ((This)->lpVtbl->get_Subtype(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_get_Properties(This, value) \
    ((This)->lpVtbl->get_Properties(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIMediaCaptureVideoProfileMediaDescription2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000

/*
 *
 * Interface Windows.Media.Capture.IOptionalReferencePhotoCapturedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.OptionalReferencePhotoCapturedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IOptionalReferencePhotoCapturedEventArgs[] = L"Windows.Media.Capture.IOptionalReferencePhotoCapturedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Frame)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_Context)(__x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs* This,
        IInspectable** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_get_Frame(This, value) \
    ((This)->lpVtbl->get_Frame(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_get_Context(This, value) \
    ((This)->lpVtbl->get_Context(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIOptionalReferencePhotoCapturedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IPhotoCapturedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.PhotoCapturedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IPhotoCapturedEventArgs[] = L"Windows.Media.Capture.IPhotoCapturedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Frame)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_Thumbnail)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_CaptureTimeOffset)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_get_Frame(This, value) \
    ((This)->lpVtbl->get_Frame(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_get_Thumbnail(This, value) \
    ((This)->lpVtbl->get_Thumbnail(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_get_CaptureTimeOffset(This, value) \
    ((This)->lpVtbl->get_CaptureTimeOffset(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIPhotoCapturedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IPhotoConfirmationCapturedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.PhotoConfirmationCapturedEventArgs
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IPhotoConfirmationCapturedEventArgs[] = L"Windows.Media.Capture.IPhotoConfirmationCapturedEventArgs";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Frame)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This,
        __x_ABI_CWindows_CMedia_CCapture_CICapturedFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_CaptureTimeOffset)(__x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgsVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_get_Frame(This, value) \
    ((This)->lpVtbl->get_Frame(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_get_CaptureTimeOffset(This, value) \
    ((This)->lpVtbl->get_CaptureTimeOffset(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIPhotoConfirmationCapturedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.Media.Capture.IVideoStreamConfiguration
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.Media.Capture.VideoStreamConfiguration
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Capture_IVideoStreamConfiguration[] = L"Windows.Media.Capture.IVideoStreamConfiguration";
typedef struct __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfigurationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_InputProperties)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties** value);
    HRESULT (STDMETHODCALLTYPE* get_OutputProperties)(__x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration* This,
        __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties** value);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfigurationVtbl;

interface __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration
{
    CONST_VTBL struct __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfigurationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_get_InputProperties(This, value) \
    ((This)->lpVtbl->get_InputProperties(This, value))

#define __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_get_OutputProperties(This, value) \
    ((This)->lpVtbl->get_OutputProperties(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration;
#endif /* !defined(____x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AdvancedCapturedPhoto
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAdvancedCapturedPhoto ** Default Interface **
 *    Windows.Media.Capture.IAdvancedCapturedPhoto2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AdvancedCapturedPhoto_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AdvancedCapturedPhoto_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AdvancedCapturedPhoto[] = L"Windows.Media.Capture.AdvancedCapturedPhoto";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AdvancedPhotoCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAdvancedPhotoCapture ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AdvancedPhotoCapture_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AdvancedPhotoCapture_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AdvancedPhotoCapture[] = L"Windows.Media.Capture.AdvancedPhotoCapture";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastBackgroundService
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastBackgroundService ** Default Interface **
 *    Windows.Media.Capture.IAppBroadcastBackgroundService2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastBackgroundService_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastBackgroundService_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastBackgroundService[] = L"Windows.Media.Capture.AppBroadcastBackgroundService";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastBackgroundServiceSignInInfo
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastBackgroundServiceSignInInfo ** Default Interface **
 *    Windows.Media.Capture.IAppBroadcastBackgroundServiceSignInInfo2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastBackgroundServiceSignInInfo_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastBackgroundServiceSignInInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastBackgroundServiceSignInInfo[] = L"Windows.Media.Capture.AppBroadcastBackgroundServiceSignInInfo";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastBackgroundServiceStreamInfo
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastBackgroundServiceStreamInfo ** Default Interface **
 *    Windows.Media.Capture.IAppBroadcastBackgroundServiceStreamInfo2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastBackgroundServiceStreamInfo_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastBackgroundServiceStreamInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastBackgroundServiceStreamInfo[] = L"Windows.Media.Capture.AppBroadcastBackgroundServiceStreamInfo";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastCameraCaptureStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastCameraCaptureStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastCameraCaptureStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastCameraCaptureStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastCameraCaptureStateChangedEventArgs[] = L"Windows.Media.Capture.AppBroadcastCameraCaptureStateChangedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastGlobalSettings
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastGlobalSettings ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastGlobalSettings_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastGlobalSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastGlobalSettings[] = L"Windows.Media.Capture.AppBroadcastGlobalSettings";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastHeartbeatRequestedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastHeartbeatRequestedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastHeartbeatRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastHeartbeatRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastHeartbeatRequestedEventArgs[] = L"Windows.Media.Capture.AppBroadcastHeartbeatRequestedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastManager
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Media.Capture.IAppBroadcastManagerStatics interface starting with version 1.0 of the Windows.Media.Capture.AppBroadcastContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastManager_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastManager[] = L"Windows.Media.Capture.AppBroadcastManager";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastMicrophoneCaptureStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastMicrophoneCaptureStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastMicrophoneCaptureStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastMicrophoneCaptureStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastMicrophoneCaptureStateChangedEventArgs[] = L"Windows.Media.Capture.AppBroadcastMicrophoneCaptureStateChangedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastPlugIn
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastPlugIn ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPlugIn_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPlugIn_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastPlugIn[] = L"Windows.Media.Capture.AppBroadcastPlugIn";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastPlugInManager
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Media.Capture.IAppBroadcastPlugInManagerStatics interface starting with version 1.0 of the Windows.Media.Capture.AppBroadcastContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastPlugInManager ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPlugInManager_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPlugInManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastPlugInManager[] = L"Windows.Media.Capture.AppBroadcastPlugInManager";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastPlugInStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastPlugInStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPlugInStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPlugInStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastPlugInStateChangedEventArgs[] = L"Windows.Media.Capture.AppBroadcastPlugInStateChangedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastPreview
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastPreview ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreview_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreview_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastPreview[] = L"Windows.Media.Capture.AppBroadcastPreview";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastPreviewStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastPreviewStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreviewStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreviewStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastPreviewStateChangedEventArgs[] = L"Windows.Media.Capture.AppBroadcastPreviewStateChangedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastPreviewStreamReader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastPreviewStreamReader ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreviewStreamReader_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreviewStreamReader_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastPreviewStreamReader[] = L"Windows.Media.Capture.AppBroadcastPreviewStreamReader";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastPreviewStreamVideoFrame
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastPreviewStreamVideoFrame ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreviewStreamVideoFrame_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreviewStreamVideoFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastPreviewStreamVideoFrame[] = L"Windows.Media.Capture.AppBroadcastPreviewStreamVideoFrame";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastPreviewStreamVideoHeader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastPreviewStreamVideoHeader ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreviewStreamVideoHeader_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastPreviewStreamVideoHeader_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastPreviewStreamVideoHeader[] = L"Windows.Media.Capture.AppBroadcastPreviewStreamVideoHeader";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastProviderSettings
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastProviderSettings ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastProviderSettings_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastProviderSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastProviderSettings[] = L"Windows.Media.Capture.AppBroadcastProviderSettings";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastServices
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastServices ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastServices_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastServices_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastServices[] = L"Windows.Media.Capture.AppBroadcastServices";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastSignInStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastSignInStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastSignInStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastSignInStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastSignInStateChangedEventArgs[] = L"Windows.Media.Capture.AppBroadcastSignInStateChangedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastState
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastState ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastState_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastState_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastState[] = L"Windows.Media.Capture.AppBroadcastState";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastStreamAudioFrame
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastStreamAudioFrame ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamAudioFrame_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamAudioFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastStreamAudioFrame[] = L"Windows.Media.Capture.AppBroadcastStreamAudioFrame";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastStreamAudioHeader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastStreamAudioHeader ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamAudioHeader_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamAudioHeader_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastStreamAudioHeader[] = L"Windows.Media.Capture.AppBroadcastStreamAudioHeader";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastStreamReader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastStreamReader ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamReader_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamReader_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastStreamReader[] = L"Windows.Media.Capture.AppBroadcastStreamReader";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastStreamStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastStreamStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastStreamStateChangedEventArgs[] = L"Windows.Media.Capture.AppBroadcastStreamStateChangedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastStreamVideoFrame
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastStreamVideoFrame ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamVideoFrame_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamVideoFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastStreamVideoFrame[] = L"Windows.Media.Capture.AppBroadcastStreamVideoFrame";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastStreamVideoHeader
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastStreamVideoHeader ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamVideoHeader_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastStreamVideoHeader_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastStreamVideoHeader[] = L"Windows.Media.Capture.AppBroadcastStreamVideoHeader";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastTriggerDetails
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastTriggerDetails ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastTriggerDetails_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastTriggerDetails_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastTriggerDetails[] = L"Windows.Media.Capture.AppBroadcastTriggerDetails";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppBroadcastViewerCountChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppBroadcastContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppBroadcastViewerCountChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppBroadcastViewerCountChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppBroadcastViewerCountChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppBroadcastViewerCountChangedEventArgs[] = L"Windows.Media.Capture.AppBroadcastViewerCountChangedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Media.Capture.IAppCaptureStatics2 interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.Media.Capture.IAppCaptureStatics interface starting with version 2.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCapture ** Default Interface **
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCapture_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCapture_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCapture[] = L"Windows.Media.Capture.AppCapture";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

/*
 *
 * Class Windows.Media.Capture.AppCaptureAlternateShortcutKeys
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureAlternateShortcutKeys ** Default Interface **
 *    Windows.Media.Capture.IAppCaptureAlternateShortcutKeys2
 *    Windows.Media.Capture.IAppCaptureAlternateShortcutKeys3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureAlternateShortcutKeys_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureAlternateShortcutKeys_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureAlternateShortcutKeys[] = L"Windows.Media.Capture.AppCaptureAlternateShortcutKeys";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppCaptureDurationGeneratedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureDurationGeneratedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureDurationGeneratedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureDurationGeneratedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureDurationGeneratedEventArgs[] = L"Windows.Media.Capture.AppCaptureDurationGeneratedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.Media.Capture.AppCaptureFileGeneratedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureFileGeneratedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureFileGeneratedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureFileGeneratedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureFileGeneratedEventArgs[] = L"Windows.Media.Capture.AppCaptureFileGeneratedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.Media.Capture.AppCaptureManager
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Media.Capture.IAppCaptureManagerStatics interface starting with version 1.0 of the Windows.Media.Capture.AppCaptureContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureManager_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureManager[] = L"Windows.Media.Capture.AppCaptureManager";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppCaptureMetadataWriter
 *
 * Introduced to Windows.Media.Capture.AppCaptureMetadataContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Media.Capture.AppCaptureMetadataContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureMetadataWriter ** Default Interface **
 *    Windows.Foundation.IClosable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureMetadataWriter_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureMetadataWriter_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureMetadataWriter[] = L"Windows.Media.Capture.AppCaptureMetadataWriter";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppCaptureMicrophoneCaptureStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureMicrophoneCaptureStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureMicrophoneCaptureStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureMicrophoneCaptureStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureMicrophoneCaptureStateChangedEventArgs[] = L"Windows.Media.Capture.AppCaptureMicrophoneCaptureStateChangedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.Media.Capture.AppCaptureRecordOperation
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureRecordOperation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureRecordOperation_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureRecordOperation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureRecordOperation[] = L"Windows.Media.Capture.AppCaptureRecordOperation";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.Media.Capture.AppCaptureRecordingStateChangedEventArgs
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureRecordingStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureRecordingStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureRecordingStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureRecordingStateChangedEventArgs[] = L"Windows.Media.Capture.AppCaptureRecordingStateChangedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.Media.Capture.AppCaptureServices
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureServices ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureServices_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureServices_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureServices[] = L"Windows.Media.Capture.AppCaptureServices";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.Media.Capture.AppCaptureSettings
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureSettings ** Default Interface **
 *    Windows.Media.Capture.IAppCaptureSettings2
 *    Windows.Media.Capture.IAppCaptureSettings3
 *    Windows.Media.Capture.IAppCaptureSettings4
 *    Windows.Media.Capture.IAppCaptureSettings5
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureSettings_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureSettings[] = L"Windows.Media.Capture.AppCaptureSettings";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.AppCaptureState
 *
 * Introduced to Windows.Media.Capture.AppCaptureContract in version 4.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IAppCaptureState ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_Media_Capture_AppCaptureState_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_AppCaptureState_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_AppCaptureState[] = L"Windows.Media.Capture.AppCaptureState";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.Media.Capture.CameraCaptureUI
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.ICameraCaptureUI ** Default Interface **
 *
 * Class Threading Model:  Single Threaded Apartment
 *
 * Class Marshaling Behavior:  None - Class cannot be marshaled
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_CameraCaptureUI_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_CameraCaptureUI_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_CameraCaptureUI[] = L"Windows.Media.Capture.CameraCaptureUI";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettings ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_CameraCaptureUIPhotoCaptureSettings_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_CameraCaptureUIPhotoCaptureSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_CameraCaptureUIPhotoCaptureSettings[] = L"Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettings ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_CameraCaptureUIVideoCaptureSettings_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_CameraCaptureUIVideoCaptureSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_CameraCaptureUIVideoCaptureSettings[] = L"Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.CameraOptionsUI
 *
 * Introduced to Windows.Media.Capture.CameraCaptureUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Media.Capture.ICameraOptionsUIStatics interface starting with version 1.0 of the Windows.Media.Capture.CameraCaptureUIContract API contract
 *
 * Class Threading Model:  Multi Threaded Apartment
 *
 */
#if WINDOWS_MEDIA_CAPTURE_CAMERACAPTUREUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_CameraOptionsUI_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_CameraOptionsUI_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_CameraOptionsUI[] = L"Windows.Media.Capture.CameraOptionsUI";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_CAMERACAPTUREUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.CapturedFrame
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.ICapturedFrame ** Default Interface **
 *    Windows.Storage.Streams.IRandomAccessStreamWithContentType
 *    Windows.Storage.Streams.IContentTypeProvider
 *    Windows.Storage.Streams.IRandomAccessStream
 *    Windows.Storage.Streams.IOutputStream
 *    Windows.Foundation.IClosable
 *    Windows.Storage.Streams.IInputStream
 *    Windows.Media.Capture.ICapturedFrameWithSoftwareBitmap
 *    Windows.Media.Capture.ICapturedFrame2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_CapturedFrame_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_CapturedFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_CapturedFrame[] = L"Windows.Media.Capture.CapturedFrame";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.CapturedFrameControlValues
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.ICapturedFrameControlValues ** Default Interface **
 *    Windows.Media.Capture.ICapturedFrameControlValues2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_CapturedFrameControlValues_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_CapturedFrameControlValues_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_CapturedFrameControlValues[] = L"Windows.Media.Capture.CapturedFrameControlValues";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.CapturedPhoto
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.ICapturedPhoto ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_CapturedPhoto_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_CapturedPhoto_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_CapturedPhoto[] = L"Windows.Media.Capture.CapturedPhoto";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.GameBarServices
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IGameBarServices ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_GameBarServices_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_GameBarServices_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_GameBarServices[] = L"Windows.Media.Capture.GameBarServices";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.GameBarServicesCommandEventArgs
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IGameBarServicesCommandEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_GameBarServicesCommandEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_GameBarServicesCommandEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_GameBarServicesCommandEventArgs[] = L"Windows.Media.Capture.GameBarServicesCommandEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.GameBarServicesManager
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Media.Capture.IGameBarServicesManagerStatics interface starting with version 1.0 of the Windows.Media.Capture.GameBarContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IGameBarServicesManager ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_GameBarServicesManager_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_GameBarServicesManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_GameBarServicesManager[] = L"Windows.Media.Capture.GameBarServicesManager";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.GameBarServicesManagerGameBarServicesCreatedEventArgs
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IGameBarServicesManagerGameBarServicesCreatedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_GameBarServicesManagerGameBarServicesCreatedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_GameBarServicesManagerGameBarServicesCreatedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_GameBarServicesManagerGameBarServicesCreatedEventArgs[] = L"Windows.Media.Capture.GameBarServicesManagerGameBarServicesCreatedEventArgs";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.GameBarServicesTargetInfo
 *
 * Introduced to Windows.Media.Capture.GameBarContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IGameBarServicesTargetInfo ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_GameBarServicesTargetInfo_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_GameBarServicesTargetInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_GameBarServicesTargetInfo[] = L"Windows.Media.Capture.GameBarServicesTargetInfo";
#endif
#endif // WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.LowLagMediaRecording
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.ILowLagMediaRecording ** Default Interface **
 *    Windows.Media.Capture.ILowLagMediaRecording2
 *    Windows.Media.Capture.ILowLagMediaRecording3
 *
 * Class Threading Model:  Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_LowLagMediaRecording_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_LowLagMediaRecording_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_LowLagMediaRecording[] = L"Windows.Media.Capture.LowLagMediaRecording";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.LowLagPhotoCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.ILowLagPhotoCapture ** Default Interface **
 *
 * Class Threading Model:  Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_LowLagPhotoCapture_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_LowLagPhotoCapture_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_LowLagPhotoCapture[] = L"Windows.Media.Capture.LowLagPhotoCapture";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.LowLagPhotoSequenceCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.ILowLagPhotoSequenceCapture ** Default Interface **
 *
 * Class Threading Model:  Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_LowLagPhotoSequenceCapture_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_LowLagPhotoSequenceCapture_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_LowLagPhotoSequenceCapture[] = L"Windows.Media.Capture.LowLagPhotoSequenceCapture";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.MediaCapture
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.Media.Capture.IMediaCaptureStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCapture ** Default Interface **
 *    Windows.Media.Capture.IMediaCaptureVideoPreview
 *    Windows.Media.Capture.IMediaCapture2
 *    Windows.Foundation.IClosable
 *    Windows.Media.Capture.IMediaCapture3
 *    Windows.Media.Capture.IMediaCapture4
 *    Windows.Media.Capture.IMediaCapture5
 *    Windows.Media.Capture.IMediaCapture6
 *    Windows.Media.Capture.IMediaCapture7
 *
 * Class Threading Model:  Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCapture_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCapture_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCapture[] = L"Windows.Media.Capture.MediaCapture";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.MediaCaptureDeviceExclusiveControlStatusChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCaptureDeviceExclusiveControlStatusChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCaptureDeviceExclusiveControlStatusChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCaptureDeviceExclusiveControlStatusChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCaptureDeviceExclusiveControlStatusChangedEventArgs[] = L"Windows.Media.Capture.MediaCaptureDeviceExclusiveControlStatusChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Class Windows.Media.Capture.MediaCaptureFailedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCaptureFailedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCaptureFailedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCaptureFailedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCaptureFailedEventArgs[] = L"Windows.Media.Capture.MediaCaptureFailedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.MediaCaptureFocusChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCaptureFocusChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCaptureFocusChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCaptureFocusChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCaptureFocusChangedEventArgs[] = L"Windows.Media.Capture.MediaCaptureFocusChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.MediaCaptureInitializationSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCaptureInitializationSettings ** Default Interface **
 *    Windows.Media.Capture.IMediaCaptureInitializationSettings2
 *    Windows.Media.Capture.IMediaCaptureInitializationSettings3
 *    Windows.Media.Capture.IMediaCaptureInitializationSettings4
 *    Windows.Media.Capture.IMediaCaptureInitializationSettings5
 *    Windows.Media.Capture.IMediaCaptureInitializationSettings6
 *    Windows.Media.Capture.IMediaCaptureInitializationSettings7
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCaptureInitializationSettings_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCaptureInitializationSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCaptureInitializationSettings[] = L"Windows.Media.Capture.MediaCaptureInitializationSettings";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.MediaCapturePauseResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCapturePauseResult ** Default Interface **
 *    Windows.Foundation.IClosable
 *
 * Class Threading Model:  Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCapturePauseResult_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCapturePauseResult_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCapturePauseResult[] = L"Windows.Media.Capture.MediaCapturePauseResult";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.Media.Capture.MediaCaptureRelativePanelWatcher
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 10.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCaptureRelativePanelWatcher ** Default Interface **
 *    Windows.Foundation.IClosable
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCaptureRelativePanelWatcher_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCaptureRelativePanelWatcher_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCaptureRelativePanelWatcher[] = L"Windows.Media.Capture.MediaCaptureRelativePanelWatcher";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0xa0000

/*
 *
 * Class Windows.Media.Capture.MediaCaptureSettings
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCaptureSettings ** Default Interface **
 *    Windows.Media.Capture.IMediaCaptureSettings2
 *    Windows.Media.Capture.IMediaCaptureSettings3
 *
 * Class Threading Model:  Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCaptureSettings_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCaptureSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCaptureSettings[] = L"Windows.Media.Capture.MediaCaptureSettings";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.MediaCaptureStopResult
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCaptureStopResult ** Default Interface **
 *    Windows.Foundation.IClosable
 *
 * Class Threading Model:  Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Standard - Class marshals using the standard marshaler
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCaptureStopResult_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCaptureStopResult_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCaptureStopResult[] = L"Windows.Media.Capture.MediaCaptureStopResult";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Windows.Media.Capture.MediaCaptureVideoProfile
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCaptureVideoProfile ** Default Interface **
 *    Windows.Media.Capture.IMediaCaptureVideoProfile2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCaptureVideoProfile_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCaptureVideoProfile_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCaptureVideoProfile[] = L"Windows.Media.Capture.MediaCaptureVideoProfile";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.MediaCaptureVideoProfileMediaDescription
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IMediaCaptureVideoProfileMediaDescription ** Default Interface **
 *    Windows.Media.Capture.IMediaCaptureVideoProfileMediaDescription2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_MediaCaptureVideoProfileMediaDescription_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_MediaCaptureVideoProfileMediaDescription_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_MediaCaptureVideoProfileMediaDescription[] = L"Windows.Media.Capture.MediaCaptureVideoProfileMediaDescription";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.OptionalReferencePhotoCapturedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IOptionalReferencePhotoCapturedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_OptionalReferencePhotoCapturedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_OptionalReferencePhotoCapturedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_OptionalReferencePhotoCapturedEventArgs[] = L"Windows.Media.Capture.OptionalReferencePhotoCapturedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.PhotoCapturedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IPhotoCapturedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_PhotoCapturedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_PhotoCapturedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_PhotoCapturedEventArgs[] = L"Windows.Media.Capture.PhotoCapturedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.PhotoConfirmationCapturedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IPhotoConfirmationCapturedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_PhotoConfirmationCapturedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_PhotoConfirmationCapturedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_PhotoConfirmationCapturedEventArgs[] = L"Windows.Media.Capture.PhotoConfirmationCapturedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Windows.Media.Capture.VideoStreamConfiguration
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Windows.Media.Capture.IVideoStreamConfiguration ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Windows_Media_Capture_VideoStreamConfiguration_DEFINED
#define RUNTIMECLASS_Windows_Media_Capture_VideoStreamConfiguration_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Capture_VideoStreamConfiguration[] = L"Windows.Media.Capture.VideoStreamConfiguration";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#endif // defined(__cplusplus)
#pragma pop_macro("MIDL_CONST_ID")
// Restore the original value of the 'DEPRECATED' macro
#pragma pop_macro("DEPRECATED")

#ifdef __clang__
#pragma clang diagnostic pop // deprecated-declarations
#else
#pragma warning(pop)
#endif
#endif // __windows2Emedia2Ecapture_p_h__

#endif // __windows2Emedia2Ecapture_h__
